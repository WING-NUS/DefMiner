(ROOT
  (S
    (NP
      (NP (DT The) (NNP Albedo))
      (PP (IN of)
        (NP (DT an) (NN object))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN extent))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT which)))
          (S
            (NP (PRP it))
            (ADVP (RB diffusely))
            (VP (VBZ reflects)
              (NP (NN light))
              (PP (IN from)
                (NP (DT the) (NN sun))))))))
    (. .)))

det(Albedo-2, The-1)
nsubj(extent-8, Albedo-2)
det(object-5, an-4)
prep_of(Albedo-2, object-5)
cop(extent-8, is-6)
det(extent-8, the-7)
root(ROOT-0, extent-8)
rel(reflects-13, which-10)
nsubj(reflects-13, it-11)
advmod(reflects-13, diffusely-12)
rcmod(extent-8, reflects-13)
dobj(reflects-13, light-14)
det(sun-17, the-16)
prep_from(reflects-13, sun-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Animalia))
    (VP
      (VP (VBZ is)
        (NP (DT an) (NN alphabet) (NN book)))
      (CC and)
      (VP (VBZ contains)
        (NP
          (NP (JJ twenty-six) (NNS illustrations))
          (, ,)
          (NP
            (NP (CD one))
            (PP (IN for)
              (NP
                (NP (DT each) (NN letter))
                (PP (IN of)
                  (NP (DT the) (NN alphabet)))))))))
    (. .)))

nsubj(book-5, Animalia-1)
nsubj(contains-7, Animalia-1)
cop(book-5, is-2)
det(book-5, an-3)
nn(book-5, alphabet-4)
root(ROOT-0, book-5)
conj_and(book-5, contains-7)
amod(illustrations-9, twenty-six-8)
dobj(contains-7, illustrations-9)
appos(illustrations-9, one-11)
det(letter-14, each-13)
prep_for(one-11, letter-14)
det(alphabet-17, the-16)
prep_of(letter-14, alphabet-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP American) (NNP Standard) (NNP Code))
      (PP (IN for)
        (NP
          (NP (NNP Information) (NNP Interchange))
          (PRN (-LRB- -LRB-)
            (NP (NNP ASCII))
            (-RRB- -RRB-)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN character))
        (VP (VBG encoding)
          (PP (VBN based)
            (PP (IN on)
              (NP (DT the) (JJ English) (NN alphabet)))))))
    (. .)))

nn(Code-3, American-1)
nn(Code-3, Standard-2)
nsubj(character-12, Code-3)
nn(Interchange-6, Information-5)
prep_for(Code-3, Interchange-6)
abbrev(Interchange-6, ASCII-8)
cop(character-12, is-10)
det(character-12, a-11)
root(ROOT-0, character-12)
partmod(character-12, encoding-13)
prepc_based_on(encoding-13, on-15)
det(alphabet-18, the-16)
amod(alphabet-18, English-17)
pobj(encoding-13, alphabet-18)

(ROOT
  (S
    (NP (NNP Animation))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ rapid) (NN display))
        (PP (IN of)
          (NP
            (NP (DT a) (NN sequence))
            (PP (IN of)
              (NP
                (NP
                  (NP (NNS images))
                  (PP (IN of)
                    (NP (CD 2-D))))
                (CC or)
                (NP
                  (NP (JJ 3-D) (NN artwork)
                    (CC or)
                    (NN model) (NNS positions))
                  (PP (IN in)
                    (NP (NN order))))))))
        (S
          (VP (TO to)
            (VP (VB create)
              (NP
                (NP (DT an) (NN illusion))
                (PP (IN of)
                  (NP (NN movement)))))))))
    (. .)))

nsubj(display-5, Animation-1)
cop(display-5, is-2)
det(display-5, the-3)
amod(display-5, rapid-4)
root(ROOT-0, display-5)
det(sequence-8, a-7)
prep_of(display-5, sequence-8)
prep_of(sequence-8, images-10)
prep_of(images-10, 2-D-12)
amod(artwork-15, 3-D-14)
prep_of(sequence-8, artwork-15)
conj_or(images-10, artwork-15)
nn(positions-18, model-17)
conj_or(images-10, positions-18)
conj_or(artwork-15, positions-18)
prep_in(artwork-15, order-20)
aux(create-22, to-21)
infmod(display-5, create-22)
det(illusion-24, an-23)
dobj(create-22, illusion-24)
prep_of(illusion-24, movement-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (DT an) (NNP Appeal))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN process))
        (PP (IN for)
          (S
            (VP (VBG requesting)
              (NP (DT a) (JJ formal) (NN change))
              (PP (TO to)
                (NP (DT an) (JJ official) (NN decision))))))))
    (. .)))

prep_in(process-8, law-2)
det(Appeal-5, an-4)
nsubj(process-8, Appeal-5)
cop(process-8, is-6)
det(process-8, a-7)
root(ROOT-0, process-8)
prepc_for(process-8, requesting-10)
det(change-13, a-11)
amod(change-13, formal-12)
dobj(requesting-10, change-13)
det(decision-17, an-15)
amod(decision-17, official-16)
prep_to(requesting-10, decision-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ common) (NN law)))
    (, ,)
    (NP (DT an) (NNP Answer))
    (VP (VBZ is)
      (NP (DT the) (JJ first) (NN pleading))
      (PP (IN by)
        (NP
          (NP (DT a) (NN defendant))
          (, ,)
          (VP
            (ADVP (RB usually))
            (VBN filed)
            (CC and)
            (VBN served)
            (PP (IN upon)
              (NP (DT the) (NN plaintiff)))
            (PP (IN within)
              (NP (DT a) (JJ certain) (JJ strict) (NN time) (NN limit))))))
      (SBAR (IN after)
        (S
          (NP
            (NP (DT a) (JJ civil) (NN complaint))
            (CC or)
            (NP (JJ criminal) (NN information)
              (CC or)
              (NN indictment)))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN served)
                (PP (IN upon)
                  (NP (DT the) (NN defendant)))))))))
    (. .)))

det(law-4, the-2)
amod(law-4, common-3)
prep_in(pleading-11, law-4)
det(Answer-7, an-6)
nsubj(pleading-11, Answer-7)
cop(pleading-11, is-8)
det(pleading-11, the-9)
amod(pleading-11, first-10)
root(ROOT-0, pleading-11)
det(defendant-14, a-13)
prep_by(pleading-11, defendant-14)
advmod(filed-17, usually-16)
partmod(defendant-14, filed-17)
partmod(defendant-14, served-19)
conj_and(filed-17, served-19)
det(plaintiff-22, the-21)
prep_upon(filed-17, plaintiff-22)
det(limit-28, a-24)
amod(limit-28, certain-25)
amod(limit-28, strict-26)
nn(limit-28, time-27)
prep_within(filed-17, limit-28)
mark(served-40, after-29)
det(complaint-32, a-30)
amod(complaint-32, civil-31)
nsubjpass(served-40, complaint-32)
amod(information-35, criminal-34)
conj_or(complaint-32, information-35)
nsubjpass(served-40, information-35)
conj_or(complaint-32, indictment-37)
conj_or(information-35, indictment-37)
aux(served-40, has-38)
auxpass(served-40, been-39)
advcl(pleading-11, served-40)
det(defendant-43, the-42)
prep_upon(served-40, defendant-43)

(ROOT
  (S
    (NP (DT An) (NNPS Abacus))
    (, ,)
    (S
      (VP
        (ADVP (RB also))
        (VBG called)
        (NP (DT a) (VBG counting) (NN frame))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ calculating) (NN tool))
        (VP (VBN used)
          (ADVP (RB primarily))
          (PP (IN by)
            (NP (NNPS Asians)))
          (PP (IN for)
            (S
              (VP (VBG performing)
                (NP (NN arithmetic) (NNS processes))))))))
    (. .)))

det(Abacus-2, An-1)
nsubj(tool-13, Abacus-2)
advmod(called-5, also-4)
dep(tool-13, called-5)
det(frame-8, a-6)
amod(frame-8, counting-7)
dobj(called-5, frame-8)
cop(tool-13, is-10)
det(tool-13, a-11)
amod(tool-13, calculating-12)
root(ROOT-0, tool-13)
partmod(tool-13, used-14)
advmod(used-14, primarily-15)
agent(used-14, Asians-17)
prepc_for(used-14, performing-19)
nn(processes-21, arithmetic-20)
dobj(performing-19, processes-21)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Acid))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB often))
          (VBN represented)
          (PP (IN by)
            (NP (DT the) (JJ generic) (NN formula) (NN HA))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (ADVP (RB traditionally))
      (VP (VBN considered)
        (NP (DT any) (JJ chemical) (NN compound))
        (SBAR (IN that)
          (S (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (VP (VBN dissolved)
                  (PP (IN in)
                    (NP (NN water))))))
            (, ,)
            (VP (VBZ gives)
              (NP (DT a) (NN solution))
              (PP (IN with)
                (NP (DT a) (NN hydrogen) (NN ion) (NN activity)))
              (ADVP (JJR greater) (IN than))
              (PP (IN in)
                (NP (JJ pure) (NN water))))))))
    (. .)))

det(Acid-2, An-1)
nsubjpass(considered-14, Acid-2)
advmod(represented-5, often-4)
dep(Acid-2, represented-5)
det(HA-10, the-7)
amod(HA-10, generic-8)
nn(HA-10, formula-9)
prep_by(represented-5, HA-10)
auxpass(considered-14, is-12)
advmod(considered-14, traditionally-13)
root(ROOT-0, considered-14)
det(compound-17, any-15)
amod(compound-17, chemical-16)
dobj(considered-14, compound-17)
complm(gives-25, that-18)
advmod(dissolved-21, when-20)
advcl(gives-25, dissolved-21)
prep_in(dissolved-21, water-23)
ccomp(considered-14, gives-25)
det(solution-27, a-26)
dobj(gives-25, solution-27)
det(activity-32, a-29)
nn(activity-32, hydrogen-30)
nn(activity-32, ion-31)
prep_with(gives-25, activity-32)
dep(than-34, greater-33)
advmod(gives-25, than-34)
amod(water-37, pure-36)
prep_in(gives-25, water-37)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Alphabet))
    (VP (VBZ is)
      (NP (DT a) (JJ standardized))
      (PP (IN of)
        (NP (NNS letters)))
      (: -)
      (NP
        (NP (JJ basic) (VBN written) (NNS symbols))
        (: -)
        (SBAR
          (WHNP
            (NP (DT each))
            (WHPP (IN of)
              (WHNP (WDT which))))
          (S
            (ADVP (RB roughly))
            (VP (VBZ represents)
              (NP
                (NP (DT a) (NN phoneme))
                (PP (IN of)
                  (NP (DT a) (JJ spoken) (NN language))))
              (, ,)
              (SBAR
                (SBAR
                  (ADVP (RB either))
                  (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ exists)
                      (ADVP (RB now)))))
                (CC or)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (PP (IN in)
                        (NP (DT the) (NN past))))))))))))
    (. .)))

det(Alphabet-2, An-1)
nsubj(standardized-5, Alphabet-2)
cop(standardized-5, is-3)
det(standardized-5, a-4)
root(ROOT-0, standardized-5)
prep_of(standardized-5, letters-7)
amod(symbols-11, basic-9)
amod(symbols-11, written-10)
attr(standardized-5, symbols-11)
nsubj(represents-17, each-13)
prep_of(each-13, which-15)
advmod(represents-17, roughly-16)
rcmod(symbols-11, represents-17)
det(phoneme-19, a-18)
dobj(represents-17, phoneme-19)
det(language-23, a-21)
amod(language-23, spoken-22)
prep_of(phoneme-19, language-23)
advmod(exists-28, either-25)
dep(exists-28, as-26)
nsubj(exists-28, it-27)
dep(represents-17, exists-28)
advmod(exists-28, now-29)
mark(was-33, as-31)
nsubj(was-33, it-32)
dep(represents-17, was-33)
conj_or(exists-28, was-33)
det(past-36, the-35)
prep_in(was-33, past-36)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN Aardvark))
        (PRN (-LRB- -LRB-)
          (NP (NNP Orycteropus) (NN afer))
          (-RRB- -RRB-)))
      (PRN (-LRB- -LRB-)
        (NP (CD '') (NN Digging) (NN foot))
        ('' '') (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ medium-sized) (, ,) (JJ burrowing) (, ,) (JJ nocturnal))
          (NN mammal) (NN native))
        (PP (TO to)
          (NP (NNP Africa)))))
    (. .)))

det(Aardvark-2, The-1)
nsubj(native-21, Aardvark-2)
nn(afer-5, Orycteropus-4)
appos(Aardvark-2, afer-5)
nn(foot-10, Digging-9)
dep(Aardvark-2, foot-10)
cop(native-21, is-13)
det(native-21, a-14)
amod(nocturnal-19, medium-sized-15)
amod(nocturnal-19, burrowing-17)
amod(native-21, nocturnal-19)
nn(native-21, mammal-20)
root(ROOT-0, native-21)
prep_to(native-21, Africa-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Aardwolf))
      (PRN (-LRB- -LRB-)
        (NP (NNP Proteles) (NNS cristatus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (, ,) (JJ insectivorous) (JJ hyena-like) (NN mammal))
        (, ,)
        (NP
          (NP (NN native))
          (PP (TO to)
            (NP (NNP Eastern))))
        (CC and)
        (NP (NNP Southern) (NNP Africa))))
    (. .)))

det(Aardwolf-2, The-1)
nsubj(mammal-13, Aardwolf-2)
nn(cristatus-5, Proteles-4)
appos(Aardwolf-2, cristatus-5)
cop(mammal-13, is-7)
det(mammal-13, a-8)
amod(mammal-13, small-9)
amod(mammal-13, insectivorous-11)
amod(mammal-13, hyena-like-12)
root(ROOT-0, mammal-13)
conj_and(mammal-13, native-15)
prep_to(native-15, Eastern-17)
nn(Africa-20, Southern-19)
conj_and(mammal-13, Africa-20)

(ROOT
  (S
    (NP (DT An) (NN Adventure))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN activity))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ comprises)
              (NP
                (ADJP (JJ risky) (, ,) (JJ dangerous)
                  (CC and)
                  (JJ uncertain))
                (NNS experiences)))))))
    (. .)))

det(Adventure-2, An-1)
nsubj(activity-5, Adventure-2)
cop(activity-5, is-3)
det(activity-5, an-4)
root(ROOT-0, activity-5)
nsubj(comprises-7, activity-5)
rcmod(activity-5, comprises-7)
amod(experiences-13, risky-8)
conj_and(risky-8, dangerous-10)
amod(experiences-13, dangerous-10)
conj_and(risky-8, uncertain-12)
amod(experiences-13, uncertain-12)
dobj(comprises-7, experiences-13)

(ROOT
  (S
    (NP (DT An) (NNP Android))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN robot))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB resemble)
                (NP
                  (NP (DT a) (NN human))
                  (, ,)
                  (ADJP (RB usually) (DT both)))
                (PP (IN in)
                  (NP (NN appearance)
                    (CC and)
                    (NN behavior)))))))))
    (. .)))

det(Android-2, An-1)
nsubj(robot-5, Android-2)
cop(robot-5, is-3)
det(robot-5, a-4)
root(ROOT-0, robot-5)
xsubj(human-10, robot-5)
partmod(robot-5, designed-6)
aux(human-10, to-7)
cop(human-10, resemble-8)
det(human-10, a-9)
xcomp(designed-6, human-10)
advmod(both-13, usually-12)
amod(human-10, both-13)
prep_in(human-10, appearance-15)
prep_in(human-10, behavior-17)
conj_and(appearance-15, behavior-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Actinopterygii))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT the) (NN plural) (NN form))
          (PP (IN of)
            (NP (NNP Actinopterygius))))
        (-RRB- -RRB-)))
    (VP (VBP comprise)
      (NP
        (NP (DT the) (NN class))
        (PP (IN of)
          (NP (DT the) (JJ ray-finned) (NNS fishes)))))
    (. .)))

det(Actinopterygii-2, The-1)
nsubj(comprise-10, Actinopterygii-2)
det(form-6, the-4)
nn(form-6, plural-5)
dep(Actinopterygii-2, form-6)
prep_of(form-6, Actinopterygius-8)
root(ROOT-0, comprise-10)
det(class-12, the-11)
dobj(comprise-10, class-12)
det(fishes-16, the-14)
amod(fishes-16, ray-finned-15)
prep_of(class-12, fishes-16)

(ROOT
  (S
    (ADVP (RB Traditionally))
    (NP (DT the) (NN term) (NN Art))
    (VP (VBD was)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP
                  (NP (DT any) (NN skill)
                    (CC or)
                    (NN mastery))
                  (, ,)
                  (NP
                    (NP (DT a) (NN concept))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBN altered)
                          (PP (IN during)
                            (NP
                              (NP (DT the) (JJ Romantic) (NN period))
                              (, ,)
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (NN art))
                                  (VP (VBD came)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (VP (VBN seen)
                                            (PP (IN as) ('' '')
                                              (NP
                                                (NP (DT a) (JJ special) (NN faculty))
                                                (PP (IN of)
                                                  (NP (DT the) (JJ human) (NN mind)))))
                                            (S
                                              (VP (TO to)
                                                (VP (VB be)
                                                  (VP (VBN classified)
                                                    (PP (IN with)
                                                      (NP (NN religion)
                                                        (CC and)
                                                        (NN science)))))))))))))))))))))))))))
    ('' '') (. .)))

advmod(used-6, Traditionally-1)
det(Art-4, the-2)
nn(Art-4, term-3)
nsubjpass(used-6, Art-4)
xsubj(refer-8, Art-4)
auxpass(used-6, was-5)
root(ROOT-0, used-6)
aux(refer-8, to-7)
xcomp(used-6, refer-8)
det(skill-11, any-10)
prep_to(refer-8, skill-11)
prep_to(refer-8, mastery-13)
conj_or(skill-11, mastery-13)
det(concept-16, a-15)
appos(skill-11, concept-16)
nsubj(altered-18, concept-16)
rcmod(concept-16, altered-18)
det(period-22, the-20)
amod(period-22, Romantic-21)
prep_during(altered-18, period-22)
tmod(came-26, period-22)
advmod(came-26, when-24)
nsubj(came-26, art-25)
xsubj(seen-29, art-25)
dep(period-22, came-26)
aux(seen-29, to-27)
auxpass(seen-29, be-28)
xcomp(came-26, seen-29)
det(faculty-34, a-32)
amod(faculty-34, special-33)
prep_as(seen-29, faculty-34)
det(mind-38, the-36)
amod(mind-38, human-37)
prep_of(faculty-34, mind-38)
aux(classified-41, to-39)
auxpass(classified-41, be-40)
xcomp(seen-29, classified-41)
prep_with(classified-41, religion-43)
prep_with(classified-41, science-45)
conj_and(religion-43, science-45)

(ROOT
  (S
    (NP
      (NP (DT An) (NN Actor) (, ,) (NN actress) (, ,) (NN player)
        (CC or)
        (NN rarely) (NN thespian))
      (PRN (-LRB- -LRB-)
        (S
          (VP (VB see)
            (ADVP (RB terminology))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ acts)
                (PP (IN in)
                  (NP (DT a) (JJ dramatic) (NN production))))))
          (CC and)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ works)
                (ADJP (JJ <PRT>)
                  (PP (IN in)
                    (S
                      (VP (VBG </PRT>)
                        (NP
                          (NP (NN film) (, ,) (NN television) (, ,) (NN theater) (, ,)
                            (CC or)
                            (NN radio))
                          (PP (IN in)
                            (NP (DT that) (NN capacity))))))))))))))
    (. .)))

det(thespian-9, An-1)
nn(thespian-9, Actor-2)
conj_or(Actor-2, actress-4)
nn(thespian-9, actress-4)
conj_or(Actor-2, player-6)
nn(thespian-9, player-6)
conj_or(Actor-2, rarely-8)
nn(thespian-9, rarely-8)
nsubj(person-16, thespian-9)
dep(thespian-9, see-11)
advmod(see-11, terminology-12)
cop(person-16, is-14)
det(person-16, a-15)
root(ROOT-0, person-16)
nsubj(acts-18, person-16)
nsubj(works-25, person-16)
rcmod(person-16, acts-18)
det(production-22, a-20)
amod(production-22, dramatic-21)
prep_in(acts-18, production-22)
rcmod(person-16, works-25)
conj_and(acts-18, works-25)
acomp(works-25, <PRT>-26)
prepc_in(<PRT>-26, </PRT>-28)
dobj(</PRT>-28, film-29)
dobj(</PRT>-28, television-31)
conj_or(film-29, television-31)
dobj(</PRT>-28, theater-33)
conj_or(film-29, theater-33)
dobj(</PRT>-28, radio-36)
conj_or(film-29, radio-36)
det(capacity-39, that-38)
prep_in(film-29, capacity-39)

(ROOT
  (S
    (NP (DT An) (NN Abortion))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN removal)
          (CC or)
          (NN expulsion))
        (PP (IN of)
          (NP
            (NP (DT an) (NN embryo)
              (CC or)
              (NN fetus))
            (PP (IN from)
              (NP (DT the) (NN uterus)))))
        (, ,)
        (VP
          (VP (VBG resulting)
            (PRT (RP in)))
          (CC or)
          (VP (VBN caused)
            (PP (IN by)
              (NP (PRP$ its) (NN death)))))))
    (. .)))

det(Abortion-2, An-1)
nsubj(removal-5, Abortion-2)
cop(removal-5, is-3)
det(removal-5, the-4)
root(ROOT-0, removal-5)
conj_or(removal-5, expulsion-7)
det(embryo-10, an-9)
prep_of(removal-5, embryo-10)
prep_of(removal-5, fetus-12)
conj_or(embryo-10, fetus-12)
det(uterus-15, the-14)
prep_from(embryo-10, uterus-15)
dep(removal-5, resulting-17)
prt(resulting-17, in-18)
dep(removal-5, caused-20)
conj_or(resulting-17, caused-20)
poss(death-23, its-22)
prep_by(caused-20, death-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (DT an) (NNP Abstract))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ brief) (NN statement))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contains)
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ important))
                  (NNS points))
                (PP
                  (PP (IN of)
                    (NP (DT a) (JJ long) (JJ legal) (NN document)))
                  (CC or)
                  (PP (IN of)
                    (NP (JJ several) (VBN related) (JJ legal) (NNS papers))))))))))
    (. .)))

prep_in(statement-9, law-2)
det(Abstract-5, an-4)
nsubj(statement-9, Abstract-5)
cop(statement-9, is-6)
det(statement-9, a-7)
amod(statement-9, brief-8)
root(ROOT-0, statement-9)
nsubj(contains-11, statement-9)
rcmod(statement-9, contains-11)
det(points-15, the-12)
advmod(important-14, most-13)
amod(points-15, important-14)
dobj(contains-11, points-15)
det(document-20, a-17)
amod(document-20, long-18)
amod(document-20, legal-19)
prep_of(points-15, document-20)
amod(papers-26, several-23)
amod(papers-26, related-24)
amod(papers-26, legal-25)
prep_of(points-15, papers-26)
conj_or(document-20, papers-26)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN Ampere))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NN practice))
            (VP
              (ADVP (RB often))
              (VBN shortened)
              (PP (TO to)
                (NP (NN amp))))))
        (, ,))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP A)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP (JJ electric) (NN current))))
        (, ,)
        (CC or)
        (NP
          (NP (NN amount))
          (PP (IN of)
            (NP
              (NP (JJ electric) (NN charge))
              (PP (IN per)
                (NP (NN second))))))))
    (. .)))

det(Ampere-2, The-1)
nsubj(unit-18, Ampere-2)
prep_in(Ampere-2, practice-5)
advmod(shortened-7, often-6)
partmod(practice-5, shortened-7)
prep_to(shortened-7, amp-9)
dep(Ampere-2, symbol-12)
dep(symbol-12, A-14)
cop(unit-18, is-16)
det(unit-18, a-17)
root(ROOT-0, unit-18)
amod(current-21, electric-20)
prep_of(unit-18, current-21)
conj_or(unit-18, amount-24)
amod(charge-27, electric-26)
prep_of(amount-24, charge-27)
prep_per(charge-27, second-29)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS mathematics))
        (, ,)
        (NP (NN computing))
        (, ,)
        (NP (NNS linguistics))
        (CC and)
        (NP (JJ related) (NNS disciplines))))
    (, ,)
    (NP (DT an) (NNP Algorithm))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sequence))
        (PP (IN of)
          (NP
            (NP (NNS instructions))
            (, ,)
            (VP
              (ADVP (RB often))
              (VBN used)
              (PP (IN for)
                (NP (NN calculation)
                  (CC and)
                  (NN data) (NN processing))))))))
    (. .)))

prep_in(sequence-15, mathematics-2)
conj_and(mathematics-2, computing-4)
prep_in(sequence-15, computing-4)
conj_and(mathematics-2, linguistics-6)
prep_in(sequence-15, linguistics-6)
amod(disciplines-9, related-8)
conj_and(mathematics-2, disciplines-9)
prep_in(sequence-15, disciplines-9)
det(Algorithm-12, an-11)
nsubj(sequence-15, Algorithm-12)
cop(sequence-15, is-13)
det(sequence-15, a-14)
root(ROOT-0, sequence-15)
prep_of(sequence-15, instructions-17)
advmod(used-20, often-19)
partmod(instructions-17, used-20)
nn(processing-25, calculation-22)
conj_and(calculation-22, data-24)
nn(processing-25, data-24)
prep_for(used-20, processing-25)

(ROOT
  (S
    (NP
      (ADJP (JJ Mouthwash)
        (CC or)
        (NN mouth))
      (NN rinse))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN product))
        (VP (VBN used)
          (PP (IN for)
            (NP (JJ oral) (NN hygiene))))))
    (. .)))

amod(rinse-4, Mouthwash-1)
conj_or(Mouthwash-1, mouth-3)
amod(rinse-4, mouth-3)
nsubj(product-7, rinse-4)
cop(product-7, is-5)
det(product-7, a-6)
root(ROOT-0, product-7)
partmod(product-7, used-8)
amod(hygiene-11, oral-10)
prep_for(used-8, hygiene-11)

(ROOT
  (S
    (NP (DT The) (NNPS Apiales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP (VBG flowering) (NNS plants)))))
    (. .)))

det(Apiales-2, The-1)
nsubj(order-5, Apiales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)

(ROOT
  (S
    (NP (DT The) (NNPS Asterales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (NNS dicotyledonous))
            (VP (VBG flowering)
              (NP
                (NP (NNS plants))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBP include)
                      (NP
                        (NP (DT the) (JJ composite) (NN family) (NN Asteraceae))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (NNS sunflowers))
                            (, ,)
                            (NP (NNS daisies))
                            (, ,)
                            (NP (FW thistles) (FW etc.)))
                          (-RRB- -RRB-))
                        (CC and)
                        (NP (PRP$ its) (JJ related) (NNS families))))))))))))
    (. .)))

det(Asterales-2, The-1)
nsubj(order-5, Asterales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
prep_of(order-5, dicotyledonous-7)
partmod(dicotyledonous-7, flowering-8)
dobj(flowering-8, plants-9)
nsubj(include-11, plants-9)
rcmod(plants-9, include-11)
det(Asteraceae-15, the-12)
amod(Asteraceae-15, composite-13)
nn(Asteraceae-15, family-14)
dobj(include-11, Asteraceae-15)
dep(Asteraceae-15, sunflowers-17)
appos(sunflowers-17, daisies-19)
nn(etc.-22, thistles-21)
appos(sunflowers-17, etc.-22)
poss(families-27, its-25)
amod(families-27, related-26)
dobj(include-11, families-27)
conj_and(Asteraceae-15, families-27)

(ROOT
  (S
    (NP (DT An) (NNP Affidavit))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ formal) (VBN sworn) (NN statement))
        (PP (IN of)
          (NP
            (NP
              (NP (NN fact))
              (, ,)
              (VP
                (VP (VBN signed)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (NN declarant))
                      (PRN (-LRB- -LRB-)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ is)
                              (VP (VBN called)
                                (NP (DT the) (NN affiant)
                                  (CC or)
                                  (NN deponent))))))
                        (-RRB- -RRB-)))))
                (CC and)
                (VP (VBN witnessed)
                  (PRN (-LRB- -LRB-)
                    (PP (IN as)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN veracity))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN affiant) (POS 's))
                              (NN signature))))))
                    (-RRB- -RRB-)))
                (PP (IN by)
                  (NP
                    (NP (DT a) (NN taker))
                    (PP (IN of)
                      (NP (NNS oaths))))))
              (, ,))
            (PP (JJ such) (IN as)
              (NP (DT a) (JJ notary) (NN public)))))))
    (. .)))

det(Affidavit-2, An-1)
nsubj(statement-7, Affidavit-2)
cop(statement-7, is-3)
det(statement-7, a-4)
amod(statement-7, formal-5)
amod(statement-7, sworn-6)
root(ROOT-0, statement-7)
prep_of(statement-7, fact-9)
dep(fact-9, signed-11)
det(declarant-14, the-13)
prep_by(signed-11, declarant-14)
nsubjpass(called-18, who-16)
auxpass(called-18, is-17)
dep(declarant-14, called-18)
det(affiant-20, the-19)
dobj(called-18, affiant-20)
dobj(called-18, deponent-22)
conj_or(affiant-20, deponent-22)
dep(fact-9, witnessed-25)
conj_and(signed-11, witnessed-25)
prepc_as_to(witnessed-25, to-28)
det(veracity-30, the-29)
pobj(witnessed-25, veracity-30)
det(affiant-33, the-32)
poss(signature-35, affiant-33)
prep_of(veracity-30, signature-35)
det(taker-39, a-38)
prep_by(signed-11, taker-39)
prep_of(taker-39, oaths-41)
det(public-47, a-45)
amod(public-47, notary-46)
prep_such_as(fact-9, public-47)

(ROOT
  (S
    (NP
      (NP (NNP AUDI) (NNP AG))
      (, ,)
      (VP
        (ADVP (RB commonly))
        (VBN known)
        (PP (IN as)
          (NP (NNP Audi))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ premium) (NN luxury) (JJ German) (NN automobile) (NN manufacturer))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ produces)
              (SBAR
                (S
                  (NP (NNP Audi))
                  (VP (VBD branded)
                    (NP (NNS cars))
                    (, ,)
                    (PP (IN with)
                      (NP (NN headquarters)))
                    (PP (IN in)
                      (NP (NNP Ingolstadt) (, ,) (NNP Bavaria)))))))))))
    (. .)))

nn(AG-2, AUDI-1)
nsubj(manufacturer-15, AG-2)
advmod(known-5, commonly-4)
partmod(AG-2, known-5)
prep_as(known-5, Audi-7)
cop(manufacturer-15, is-9)
det(manufacturer-15, a-10)
amod(manufacturer-15, premium-11)
nn(manufacturer-15, luxury-12)
amod(manufacturer-15, German-13)
nn(manufacturer-15, automobile-14)
root(ROOT-0, manufacturer-15)
nsubj(produces-17, manufacturer-15)
rcmod(manufacturer-15, produces-17)
nsubj(branded-19, Audi-18)
ccomp(produces-17, branded-19)
dobj(branded-19, cars-20)
prep_with(branded-19, headquarters-23)
nn(Bavaria-27, Ingolstadt-25)
prep_in(branded-19, Bavaria-27)

(ROOT
  (S
    (NP (DT An) (NNP Aircraft))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vehicle))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB fly)
                      (PP
                        (PP (IN through)
                          (NP
                            (NP (DT the) (NN Earth) (POS 's))
                            (NN atmosphere)))
                        (CC or)
                        (PP (IN through)
                          (NP (DT any) (JJ other) (NN atmosphere)))))))))))))
    (. .)))

det(Aircraft-2, An-1)
nsubj(vehicle-5, Aircraft-2)
cop(vehicle-5, is-3)
det(vehicle-5, a-4)
root(ROOT-0, vehicle-5)
nsubj(able-8, vehicle-5)
cop(able-8, is-7)
rcmod(vehicle-5, able-8)
aux(fly-10, to-9)
xcomp(able-8, fly-10)
det(Earth-13, the-12)
poss(atmosphere-15, Earth-13)
prep_through(fly-10, atmosphere-15)
det(atmosphere-20, any-18)
amod(atmosphere-20, other-19)
prep_through(fly-10, atmosphere-20)
conj_or(atmosphere-15, atmosphere-20)

(ROOT
  (S
    (S
      (NP (DT An) (NNP Abjad))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN type))
          (PP (IN of)
            (S
              (VP (VBG writing)
                (NP
                  (NP (NN system))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (DT each) (NN symbol))
                      (VP (VBZ stands)
                        (PP (IN for)
                          (NP (DT a) (NN consonant)))))))))))))
    (: ;)
    (S
      (NP (DT the) (NN reader))
      (VP (MD must)
        (VP (VB supply)
          (NP (DT the) (JJ appropriate) (NN vowel)))))
    (. .)))

det(Abjad-2, An-1)
nsubj(type-5, Abjad-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
prepc_of(type-5, writing-7)
dobj(writing-7, system-8)
rel(stands-13, which-10)
det(symbol-12, each-11)
nsubj(stands-13, symbol-12)
rcmod(system-8, stands-13)
det(consonant-16, a-15)
prep_for(stands-13, consonant-16)
det(reader-19, the-18)
nsubj(supply-21, reader-19)
aux(supply-21, must-20)
parataxis(type-5, supply-21)
det(vowel-24, the-22)
amod(vowel-24, appropriate-23)
dobj(supply-21, vowel-24)

(ROOT
  (S
    (NP (DT An) (NNP Abugida))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ segmental) (NN writing) (NN system))
        (SBAR
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (VP (VBN based)
                  (PP (IN on)
                    (NP (NNS consonants)))))))
          (CC but)
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which) (NN vowel)))
            (S
              (NP (NN notation))
              (VP (VBZ is)
                (ADJP (JJ obligatory))))))))
    (. .)))

det(Abugida-2, An-1)
nsubj(system-7, Abugida-2)
cop(system-7, is-3)
det(system-7, a-4)
amod(system-7, segmental-5)
nn(system-7, writing-6)
root(ROOT-0, system-7)
nsubjpass(based-10, system-7)
det(vowel-16, system-7)
auxpass(based-10, is-9)
rcmod(system-7, based-10)
prep_on(based-10, consonants-12)
dep(obligatory-19, in-14)
pobj(in-14, vowel-16)
nsubj(obligatory-19, notation-17)
cop(obligatory-19, is-18)
rcmod(system-7, obligatory-19)
conj_but(based-10, obligatory-19)

(ROOT
  (SINV
    (S
      (NP (DT An) (NNP Allegiance))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN duty))
          (PP (IN of)
            (NP (NN fidelity))))))
    (VP (VBD said)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN owed)
              (PP (IN by)
                (NP
                  (NP (DT a) (NN subject))
                  (CC or)
                  (NP (DT a) (NN citizen))))
              (PP (TO to)
                (NP (PRP$ his) (NN \/))))))))
    (NP
      (NP (PRP$ her) (NN state))
      (CC or)
      (NP (JJ sovereign)))
    (. .)))

det(Allegiance-2, An-1)
nsubj(duty-5, Allegiance-2)
cop(duty-5, is-3)
det(duty-5, a-4)
dep(said-8, duty-5)
prep_of(duty-5, fidelity-7)
root(ROOT-0, said-8)
aux(owed-11, to-9)
auxpass(owed-11, be-10)
xcomp(said-8, owed-11)
det(subject-14, a-13)
agent(owed-11, subject-14)
det(citizen-17, a-16)
agent(owed-11, citizen-17)
conj_or(subject-14, citizen-17)
poss(\/-20, his-19)
prep_to(owed-11, \/-20)
poss(state-22, her-21)
nsubj(said-8, state-22)
nsubj(said-8, sovereign-24)
conj_or(state-22, sovereign-24)

(ROOT
  (S
    (NP
      (NP (NNP Argon))
      (PRN (-LRB- -LRB-)
        (NP (NNP Ã))
        (: --)
        (NP
          (NP (NNP Â) (NNP √) (NNP Ã) (NNP ≈))
          (NP (NNP ÂŒrgÃ) (NNP ≈) (NNP Â) (NNP ‚) (NNP n)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ chemical) (NN element))
        (VP (VBN designated)
          (PP (IN by)
            (NP (DT the) (NN symbol) (NN Ar))))))
    (. .)))

nsubj(element-18, Argon-1)
dep(Argon-1, Ã-3)
nn(≈-8, Â-5)
nn(≈-8, √-6)
nn(≈-8, Ã-7)
dep(Ã-3, ≈-8)
nn(n-13, ÂŒrgÃ-9)
nn(n-13, ≈-10)
nn(n-13, Â-11)
nn(n-13, ‚-12)
dep(≈-8, n-13)
cop(element-18, is-15)
det(element-18, a-16)
amod(element-18, chemical-17)
root(ROOT-0, element-18)
partmod(element-18, designated-19)
det(Ar-23, the-21)
nn(Ar-23, symbol-22)
agent(designated-19, Ar-23)

(ROOT
  (S
    (NP (DT The) (NNP Atom))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN unit))
        (PP (IN of)
          (NP
            (NP (JJ ordinary) (NN matter))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (NNS gases) (, ,) (NNS liquids)
                      (CC and)
                      (NNS solids))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP comprise)
                          (NP
                            (NP (DT the) (JJ macroscopic) (NN world))
                            (SBAR
                              (WHPP (IN in)
                                (WHNP (WDT which)))
                              (S
                                (NP (PRP we))
                                (VP (VBP live))))))))))))))))
    (. .)))

det(Atom-2, The-1)
nsubj(unit-5, Atom-2)
cop(unit-5, is-3)
det(unit-5, the-4)
root(ROOT-0, unit-5)
amod(matter-8, ordinary-7)
prep_of(unit-5, matter-8)
nsubj(gases-13, matter-8)
cop(gases-13, is-11)
det(gases-13, the-12)
rcmod(matter-8, gases-13)
nsubj(comprise-19, gases-13)
rcmod(matter-8, liquids-15)
conj_and(gases-13, liquids-15)
nsubj(comprise-19, liquids-15)
rcmod(matter-8, solids-17)
conj_and(gases-13, solids-17)
nsubj(comprise-19, solids-17)
rcmod(gases-13, comprise-19)
det(world-22, the-20)
amod(world-22, macroscopic-21)
dobj(comprise-19, world-22)
rel(live-26, which-24)
nsubj(live-26, we-25)
rcmod(world-22, live-26)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Archipelago))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Ã) (NNP ≈))
          (NP (NNP ÂŒrkÃ) (NNP ≈) (NNP Â˙Ã)))
        (: --)
        (S
          (NP (NNP Â) (NNP √))
          (VP (VBP pÃ)
            (NP
              (NP (NNP ≈) (NNP Â˝lÃ) (NNP ≈) (NNP Â˙goÃ))
              (: ...)
              (NP (NNP Â))
              (: ...))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN chain))
        (PP (IN of)
          (NP (NNS islands)))))
    (. .)))

det(Archipelago-2, An-1)
nsubj(chain-23, Archipelago-2)
nn(≈-5, Ã-4)
dep(pÃ-12, ≈-5)
nn(Â˙Ã-8, ÂŒrkÃ-6)
nn(Â˙Ã-8, ≈-7)
dep(≈-5, Â˙Ã-8)
nn(√-11, Â-10)
nsubj(pÃ-12, √-11)
dep(Archipelago-2, pÃ-12)
nn(Â˙goÃ-16, ≈-13)
nn(Â˙goÃ-16, Â˝lÃ-14)
nn(Â˙goÃ-16, ≈-15)
dobj(pÃ-12, Â˙goÃ-16)
dep(Â˙goÃ-16, Â-18)
cop(chain-23, is-21)
det(chain-23, a-22)
root(ROOT-0, chain-23)
prep_of(chain-23, islands-25)

(ROOT
  (S
    (NP (DT An) (NN Author))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP
          (ADVP (DT both))
          (IN as) ('' '')
          (NP
            (NP (DT the) (NN person))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBZ originates))
                  (CC or)
                  (VP (VBZ gives)
                    (NP
                      (NP
                        (NP (NN existence))
                        (PP (TO to)
                          (NP (NN anything)))
                        ('' ''))
                      (CC and)
                      (ADVP (RB as) ('' ''))
                      (NP
                        (NP (CD one))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ sets)
                              (ADVP (RB forth)))))))
                    (NP
                      (NP (JJ written) (NNS statements))
                      ('' '')
                      (PP (IN in)
                        (NP (DT the) (NNP Oxford) (NNP English) (NNP Dictionary))))))))))))
    (. .)))

det(Author-2, An-1)
nsubjpass(defined-4, Author-2)
auxpass(defined-4, is-3)
root(ROOT-0, defined-4)
advmod(defined-4, both-5)
det(person-9, the-8)
prep_as(defined-4, person-9)
nsubj(originates-11, person-9)
nsubj(gives-13, person-9)
rcmod(person-9, originates-11)
rcmod(person-9, gives-13)
conj_or(originates-11, gives-13)
iobj(gives-13, existence-14)
prep_to(existence-14, anything-16)
iobj(gives-13, as-19)
advmod(existence-14, as-19)
conj_and(existence-14, as-19)
iobj(gives-13, one-21)
conj_and(existence-14, one-21)
nsubj(sets-23, one-21)
rcmod(one-21, sets-23)
advmod(sets-23, forth-24)
amod(statements-26, written-25)
dobj(gives-13, statements-26)
det(Dictionary-32, the-29)
nn(Dictionary-32, Oxford-30)
nn(Dictionary-32, English-31)
prep_in(statements-26, Dictionary-32)

(ROOT
  (S
    (NP
      (NP (NN Anxiety))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (S
            (ADJP (JJ solicitude))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ psychological)
            (CC and)
            (JJ physiological))
          (NN state))
        (VP (VBN characterized)
          (PP (IN by)
            (UCP
              (ADJP (JJ cognitive))
              (, ,)
              (ADJP (JJ somatic))
              (, ,)
              (ADJP (JJ emotional))
              (, ,)
              (CC and)
              (NP (JJ behavioral) (NNS components)))))))
    (. .)))

nsubj(state-12, Anxiety-1)
advmod(called-4, also-3)
dep(Anxiety-1, called-4)
acomp(called-4, solicitude-5)
cop(state-12, is-7)
det(state-12, a-8)
amod(state-12, psychological-9)
conj_and(psychological-9, physiological-11)
amod(state-12, physiological-11)
root(ROOT-0, state-12)
partmod(state-12, characterized-13)
agent(characterized-13, cognitive-15)
agent(characterized-13, somatic-17)
conj_and(cognitive-15, somatic-17)
agent(characterized-13, emotional-19)
conj_and(cognitive-15, emotional-19)
amod(components-23, behavioral-22)
agent(characterized-13, components-23)
conj_and(cognitive-15, components-23)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ medical) (NN terminology)))
    (, ,)
    (NP (NNP Addiction))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN state))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (NN body))
            (VP
              (VP (VBZ relies)
                (PP (IN on)
                  (NP
                    (NP (DT a) (NN substance))
                    (PP (IN for)
                      (NP (JJ normal) (NN functioning))))))
              (CC and)
              (VP (VBZ develops)
                (NP (JJ physical) (NN dependence))))))))
    (. .)))

amod(terminology-3, medical-2)
prep_in(state-8, terminology-3)
nsubj(state-8, Addiction-5)
cop(state-8, is-6)
det(state-8, a-7)
root(ROOT-0, state-8)
rel(relies-13, which-10)
det(body-12, the-11)
nsubj(relies-13, body-12)
nsubj(develops-21, body-12)
rcmod(state-8, relies-13)
det(substance-16, a-15)
prep_on(relies-13, substance-16)
amod(functioning-19, normal-18)
prep_for(substance-16, functioning-19)
rcmod(state-8, develops-21)
conj_and(relies-13, develops-21)
amod(dependence-23, physical-22)
dobj(develops-21, dependence-23)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ traditional) (NN logic)))
    (, ,)
    (NP (DT an) (NNP Axiom)
      (CC or)
      (NNP postulate))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN proposition))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (RB not)
              (VP
                (VP (VBN proved)
                  (CC or)
                  (VBN demonstrated))
                (CC but)
                (VP (VBN considered)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP
                          (ADJP (DT either)
                            (ADJP (JJ self-evident))
                            (, ,)
                            (CC or)
                            (ADJP (JJ subject) (TO to) (JJ necessary)))
                          (NN decision))))))))))))
    (. .)))

amod(logic-3, traditional-2)
prep_in(proposition-11, logic-3)
det(Axiom-6, an-5)
nsubj(proposition-11, Axiom-6)
conj_or(Axiom-6, postulate-8)
nsubj(proposition-11, postulate-8)
cop(proposition-11, is-9)
det(proposition-11, a-10)
root(ROOT-0, proposition-11)
nsubjpass(proved-15, proposition-11)
nsubjpass(demonstrated-17, proposition-11)
nsubjpass(considered-19, proposition-11)
auxpass(proved-15, is-13)
neg(proved-15, not-14)
rcmod(proposition-11, proved-15)
rcmod(proposition-11, demonstrated-17)
conj_or(proved-15, demonstrated-17)
rcmod(proposition-11, considered-19)
conj_but(proved-15, considered-19)
aux(decision-29, to-20)
cop(decision-29, be-21)
preconj(self-evident-23, either-22)
amod(decision-29, self-evident-23)
amod(necessary-28, subject-26)
dep(necessary-28, to-27)
conj_or(self-evident-23, necessary-28)
amod(decision-29, necessary-28)
xcomp(considered-19, decision-29)

(ROOT
  (S
    (NP (NNP Alpha))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ Phoenician) (NN name))
        (PP (IN for)
          (NP (NN ox)))))
    (. .)))

nsubj(name-5, Alpha-1)
cop(name-5, is-2)
det(name-5, the-3)
amod(name-5, Phoenician-4)
root(ROOT-0, name-5)
prep_for(name-5, ox-7)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN family) (NN Asteraceae))
        (CC or)
        (NP (NNP Compositae)))
      (PRN (-LRB- -LRB-)
        (VP (VBN known)
          (PP (IN as)
            (NP
              (NP (DT the) (NN aster))
              (, ,)
              (NP (NN daisy))
              (, ,)
              (CC or)
              (NP (NN sunflower) (NN family)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS largest) (NN family))
        (PP (IN of)
          (NP (VBG flowering) (NNS plants)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NNS terms))
            (PP (IN of)
              (NP
                (NP (NN number))
                (PP (IN of)
                  (NP (NNS species)))))))))
    (. .)))

det(Asteraceae-3, The-1)
nn(Asteraceae-3, family-2)
nsubj(family-21, Asteraceae-3)
conj_or(Asteraceae-3, Compositae-5)
nsubj(family-21, Compositae-5)
dep(Asteraceae-3, known-7)
det(aster-10, the-9)
prep_as(known-7, aster-10)
prep_as(known-7, daisy-12)
conj_or(aster-10, daisy-12)
nn(family-16, sunflower-15)
prep_as(known-7, family-16)
conj_or(aster-10, family-16)
cop(family-21, is-18)
det(family-21, the-19)
amod(family-21, largest-20)
root(ROOT-0, family-21)
amod(plants-24, flowering-23)
prep_of(family-21, plants-24)
prep_in(family-21, terms-27)
prep_of(terms-27, number-29)
prep_of(number-29, species-31)

(ROOT
  (S
    (NP (DT The) (NNP Apiaceae)
      (CC or)
      (NNP Umbelliferae))
    (PRN (-LRB- -LRB-)
      (S
        (NP (DT both) (NNS names))
        (VP (VBP are)
          (VP (VBN allowed)
            (PP (IN by)
              (NP (DT the) (NNP ICBN))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP
            (NP
              (ADJP (RB usually) (JJ aromatic))
              (NNS plants))
            (PP (IN with)
              (NP (JJ hollow) (NNS stems)))
            (, ,)
            (VP
              (ADVP (RB commonly))
              (VBN known)
              (PP (IN as)
                (NP (NNS umbellifers))))))))
    (. .)))

det(Apiaceae-2, The-1)
nsubj(family-16, Apiaceae-2)
conj_or(Apiaceae-2, Umbelliferae-4)
nsubj(family-16, Umbelliferae-4)
det(names-7, both-6)
nsubjpass(allowed-9, names-7)
auxpass(allowed-9, are-8)
parataxis(family-16, allowed-9)
det(ICBN-12, the-11)
agent(allowed-9, ICBN-12)
cop(family-16, is-14)
det(family-16, a-15)
root(ROOT-0, family-16)
advmod(aromatic-19, usually-18)
amod(plants-20, aromatic-19)
prep_of(family-16, plants-20)
amod(stems-23, hollow-22)
prep_with(plants-20, stems-23)
advmod(known-26, commonly-25)
partmod(plants-20, known-26)
prep_as(known-26, umbellifers-28)

(ROOT
  (S
    (NP (DT An) (NN Axon)
      (CC or)
      (NN nerve) (NN fiber))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long) (, ,) (NN slender) (NN projection))
        (PP (IN of)
          (NP (DT a) (NN nerve) (NN cell)))
        (, ,)
        (CC or)
        (NP
          (NP (NN neuron))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ conducts)
                (NP (JJ electrical) (NNS impulses))
                (PRT (RP away))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN neuron) (POS 's))
                    (NN cell) (NN body)
                    (CC or)
                    (NN soma)))))))))
    (. .)))

det(fiber-5, An-1)
nn(fiber-5, Axon-2)
conj_or(Axon-2, nerve-4)
nn(fiber-5, nerve-4)
nsubj(projection-11, fiber-5)
cop(projection-11, is-6)
det(projection-11, a-7)
amod(projection-11, long-8)
dep(projection-11, slender-10)
root(ROOT-0, projection-11)
det(cell-15, a-13)
nn(cell-15, nerve-14)
prep_of(projection-11, cell-15)
conj_or(projection-11, neuron-18)
nsubj(conducts-21, neuron-18)
rcmod(neuron-18, conducts-21)
amod(impulses-23, electrical-22)
dobj(conducts-21, impulses-23)
det(neuron-27, the-26)
poss(body-30, neuron-27)
nn(body-30, cell-29)
prep_away_from(conducts-21, body-30)
prep_away_from(conducts-21, soma-32)
conj_or(body-30, soma-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNP Bible)))
    (, ,)
    (NP
      (NP (NNP Aaron))
      (, ,)
      (CC or)
      (NP
        (NP (NNP Aaron) (DT the) (NNP Levite))
        (PRN (-LRB- -LRB-)
          (S
            (NP (NNP Ã˜Â) (NNP ∆) (NNP Ã˜Â) (NNP ‰) (NNP Ã˜Â))
            (VP (VBZ ¨)
              (NP
                (NP (NNP ÃˆÂ) (POS '))
                (NNP Ã˜Â) (NNP Ã˜Â) (NNP ‰) (NNP Ã˜Â˛Ã˜Â) (NN Ã˜Â˙))))
          (-RRB- -RRB-)))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN brother))
        (PP (IN of)
          (NP (NNP Moses)))))
    (. .)))

det(Bible-3, the-2)
prep_in(brother-29, Bible-3)
nsubj(brother-29, Aaron-5)
nn(Levite-10, Aaron-8)
det(Levite-10, the-9)
conj_or(Aaron-5, Levite-10)
nsubj(brother-29, Levite-10)
nn(Ã˜Â-16, Ã˜Â-12)
nn(Ã˜Â-16, ∆-13)
nn(Ã˜Â-16, Ã˜Â-14)
nn(Ã˜Â-16, ‰-15)
nsubj(¨-17, Ã˜Â-16)
dep(Levite-10, ¨-17)
poss(Ã˜Â˙-24, ÃˆÂ-18)
nn(Ã˜Â˙-24, Ã˜Â-20)
nn(Ã˜Â˙-24, Ã˜Â-21)
nn(Ã˜Â˙-24, ‰-22)
nn(Ã˜Â˙-24, Ã˜Â˛Ã˜Â-23)
dobj(¨-17, Ã˜Â˙-24)
cop(brother-29, was-27)
det(brother-29, the-28)
root(ROOT-0, brother-29)
prep_of(brother-29, Moses-31)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT an) (NN Alcohol))
    (VP (VBZ is)
      (NP
        (NP (DT any) (JJ organic) (NN compound))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP
              (NP (DT a) (JJ hydroxyl) (NN group))
              (PRN (-LRB- -LRB-)
                (NP (NNP -) (NNP OH))
                (-RRB- -RRB-)))
            (VP (VBZ is)
              (ADJP (VBN bound)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN carbon) (NN atom))
                    (PP (IN of)
                      (NP (DT an)
                        (ADJP (JJ alkyl)
                          (CC or)
                          (JJ substituted))
                        (JJ alkyl) (NN group)))))))))))
    (. .)))

prep_in(compound-9, chemistry-2)
det(Alcohol-5, an-4)
nsubj(compound-9, Alcohol-5)
cop(compound-9, is-6)
det(compound-9, any-7)
amod(compound-9, organic-8)
root(ROOT-0, compound-9)
rel(bound-20, which-11)
det(group-14, a-12)
amod(group-14, hydroxyl-13)
nsubjpass(bound-20, group-14)
abbrev(group-14, OH-17)
auxpass(bound-20, is-19)
rcmod(compound-9, bound-20)
det(atom-24, a-22)
nn(atom-24, carbon-23)
prep_to(bound-20, atom-24)
det(group-31, an-26)
amod(group-31, alkyl-27)
conj_or(alkyl-27, substituted-29)
amod(group-31, substituted-29)
amod(group-31, alkyl-30)
prep_of(atom-24, group-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Abwehr))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ German) (NN intelligence) (NN organization))
        (PP (IN from)
          (NP
            (QP (CD 1921) (TO to) (CD 1944))))))
    (. .)))

det(Abwehr-2, The-1)
nsubj(organization-7, Abwehr-2)
cop(organization-7, was-3)
det(organization-7, a-4)
amod(organization-7, German-5)
nn(organization-7, intelligence-6)
root(ROOT-0, organization-7)
number(1944-11, 1921-9)
dep(1944-11, to-10)
prep_from(organization-7, 1944-11)

(ROOT
  (S
    (NP (DT An) (NN Amateur))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN person))
          (VP (VBN attached)
            (PP (TO to)
              (NP
                (NP (DT a) (JJ particular) (NN pursuit))
                (, ,)
                (NP (NN study))
                (, ,)
                (CC or)
                (NP (NN science))))
            (, ,)
            (PP (IN without)
              (NP (JJ formal) (NN training)
                (CC or)
                (NN pay)))))))
    (. .)))

det(Amateur-2, An-1)
nsubj(refers-3, Amateur-2)
root(ROOT-0, refers-3)
det(person-6, a-5)
prep_to(refers-3, person-6)
partmod(person-6, attached-7)
det(pursuit-11, a-9)
amod(pursuit-11, particular-10)
prep_to(attached-7, pursuit-11)
prep_to(attached-7, study-13)
conj_or(pursuit-11, study-13)
prep_to(attached-7, science-16)
conj_or(pursuit-11, science-16)
amod(training-20, formal-19)
prep_without(attached-7, training-20)
prep_without(attached-7, pay-22)
conj_or(training-20, pay-22)

(ROOT
  (NP
    (NP
      (NP (DT The) (NNP Almond))
      (-LRB- -LRB-)
      (NP
        (NP (`` `) (NNP Prunus) (NNS dulcis) ('' '))
        (, ,)
        (NP (NN syn))))
    (. .)))

det(Almond-2, The-1)
root(ROOT-0, Almond-2)
nn(dulcis-6, Prunus-5)
dep(Almond-2, dulcis-6)
appos(dulcis-6, syn-9)

(ROOT
  (S
    (NP (NNS Prunus))
    (VP (VBZ amygdalus)
      (NP (NNP Batsch)))
    (. .)))

nsubj(amygdalus-2, Prunus-1)
root(ROOT-0, amygdalus-2)
dobj(amygdalus-2, Batsch-3)

(ROOT
  (S
    (FRAG (, ,)
      (NP (NNP Amygdalus) (NNP communis) (NNP L.)))
    (, ,)
    (NP (NNP Amygdalus))
    (VP (VBZ dulcis)
      (NP (NNP Mill)))
    (. .) (-RRB- -RRB-)))

nn(L.-4, Amygdalus-2)
nn(L.-4, communis-3)
dep(dulcis-7, L.-4)
nsubj(dulcis-7, Amygdalus-6)
root(ROOT-0, dulcis-7)
dobj(dulcis-7, Mill-8)

(ROOT
  (S
    (S
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN species))
          (PP (IN of)
            (NP
              (NP (NNP Prunus))
              (VP (VBG belonging)
                (PP (TO to)
                  (NP
                    (NP (DT the) (JJ subfamily) (NN Prunoideae))
                    (PP (IN of)
                      (NP (DT the) (NN family) (NN Rosaceae)))))))))))
    (: ;)
    (S
      (PP (IN within)
        (NP (NNP Prunus)))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ classified))
        (PP (IN in)
          (NP (DT the) (JJ subgenus) (NNS Amygdalus)))
        (, ,)
        (ADJP (JJ distinguished)
          (PP (IN from)
            (NP (DT the) (JJ other) (NN subgenera))))
        (PP (IN by)
          (NP (DT the) (JJ corrugated) (NN seed) (NN shell)))))
    (. .)))

cop(species-3, is-1)
det(species-3, a-2)
root(ROOT-0, species-3)
prep_of(species-3, Prunus-5)
partmod(Prunus-5, belonging-6)
det(Prunoideae-10, the-8)
amod(Prunoideae-10, subfamily-9)
prep_to(belonging-6, Prunoideae-10)
det(Rosaceae-14, the-12)
nn(Rosaceae-14, family-13)
prep_of(Prunoideae-10, Rosaceae-14)
prep_within(classified-21, Prunus-17)
nsubj(classified-21, it-19)
cop(classified-21, is-20)
parataxis(species-3, classified-21)
det(Amygdalus-25, the-23)
amod(Amygdalus-25, subgenus-24)
prep_in(classified-21, Amygdalus-25)
acomp(classified-21, distinguished-27)
det(subgenera-31, the-29)
amod(subgenera-31, other-30)
prep_from(distinguished-27, subgenera-31)
det(shell-36, the-33)
amod(shell-36, corrugated-34)
nn(shell-36, seed-35)
prep_by(classified-21, shell-36)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Abbot))
    (, ,)
    (S
      (VP (VBG meaning)
        (NP (NN father))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN title))
        (PP (VBN given)
          (PP (TO to)
            (NP
              (NP (DT the) (NN head))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN monastery))
                  (PP (IN in)
                    (NP (JJ various) (NNS traditions)))))
              (, ,)
              (PP (VBG including)
                (NP (NNP Christianity)
                  (CC and)
                  (NNP Buddhism))))))))
    (. .)))

det(Abbot-3, The-1)
nn(Abbot-3, word-2)
nsubj(title-10, Abbot-3)
partmod(title-10, meaning-5)
dobj(meaning-5, father-6)
cop(title-10, is-8)
det(title-10, a-9)
root(ROOT-0, title-10)
prep(title-10, given-11)
pcomp(given-11, to-12)
det(head-14, the-13)
prep_to(given-11, head-14)
det(monastery-17, a-16)
prep_of(head-14, monastery-17)
amod(traditions-20, various-19)
prep_in(monastery-17, traditions-20)
prep_including(head-14, Christianity-23)
prep_including(head-14, Buddhism-25)
conj_and(Christianity-23, Buddhism-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT an) (NNP Automorphism))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN isomorphism))
        (PP (IN from)
          (NP
            (NP (DT a) (JJ mathematical) (NN object))
            (PP (TO to)
              (NP (PRP itself)))))))
    (. .)))

prep_in(isomorphism-8, mathematics-2)
det(Automorphism-5, an-4)
nsubj(isomorphism-8, Automorphism-5)
cop(isomorphism-8, is-6)
det(isomorphism-8, an-7)
root(ROOT-0, isomorphism-8)
det(object-12, a-10)
amod(object-12, mathematical-11)
prep_from(isomorphism-8, object-12)
prep_to(object-12, itself-14)

(ROOT
  (S
    (NP (DT The) (NNP Accordion))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ hand-held) (JJ bellows-driven) (JJ free-reed) (NN aerophone) (NN family))
            (, ,)
            (VP
              (ADVP (RB sometimes))
              (VBN referred)
              (PP (TO to)
                (NP (RB as) (DT a) (NN squeezebox))))))))
    (. .)))

det(Accordion-2, The-1)
nsubj(instrument-6, Accordion-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(family-13, the-8)
amod(family-13, hand-held-9)
amod(family-13, bellows-driven-10)
amod(family-13, free-reed-11)
nn(family-13, aerophone-12)
prep_of(instrument-6, family-13)
advmod(referred-16, sometimes-15)
partmod(family-13, referred-16)
advmod(squeezebox-20, as-18)
det(squeezebox-20, a-19)
prep_to(referred-16, squeezebox-20)

(ROOT
  (S
    (NP (DT An) (NNP Architect))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (CC or)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (VP (VBN involved)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN planning) (, ,) (NN design) (, ,)
                      (CC and)
                      (NN oversight))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN building) (POS 's))
                        (NN construction)))))))))))
    (. .)))

det(Architect-2, An-1)
nsubj(person-5, Architect-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
nsubjpass(involved-9, who-7)
auxpass(involved-9, is-8)
conj_or(person-5, involved-9)
rcmod(person-5, involved-9)
det(planning-12, the-11)
prep_in(involved-9, planning-12)
prep_in(involved-9, design-14)
conj_and(planning-12, design-14)
prep_in(involved-9, oversight-17)
conj_and(planning-12, oversight-17)
det(building-20, a-19)
poss(construction-22, building-20)
prep_of(planning-12, construction-22)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Abbreviation))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Latin) (NNS brevis) ('' ''))
            (ADVP (RB short) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ shortened) (NN form))
        (PP (IN of)
          (NP (DT a) (NN word)
            (CC or)
            (NN phrase)))))
    (. .)))

det(Abbreviation-2, An-1)
nsubj(form-14, Abbreviation-2)
dep(Abbreviation-2, from-4)
amod(brevis-6, Latin-5)
pobj(from-4, brevis-6)
advmod(brevis-6, short-8)
cop(form-14, is-11)
det(form-14, a-12)
amod(form-14, shortened-13)
root(ROOT-0, form-14)
det(word-17, a-16)
prep_of(form-14, word-17)
prep_of(form-14, phrase-19)
conj_or(word-17, phrase-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Alloy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ solid) (NN solution)
          (CC or)
          (NNS homogeneous) (NN mixture))
        (PP (IN of)
          (NP
            (NP
              (QP (CD two)
                (CC or)
                (JJR more))
              (NNS elements))
            (, ,)
            (SBAR
              (WHNP
                (WHNP
                  (QP (IN at) (JJS least) (CD one)))
                (WHPP (IN of)
                  (WHNP (WDT which))))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT a) (NN metal))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP itself))
                        (VP (VBZ has)
                          (NP (JJ metallic) (NNS properties)))))))))))))
    (. .)))

det(Alloy-2, An-1)
nsubj(solution-6, Alloy-2)
cop(solution-6, is-3)
det(solution-6, a-4)
amod(solution-6, solid-5)
root(ROOT-0, solution-6)
nn(mixture-9, homogeneous-8)
conj_or(solution-6, mixture-9)
num(elements-14, two-11)
conj_or(two-11, more-13)
quantmod(two-11, more-13)
num(elements-14, more-13)
prep_of(solution-6, elements-14)
prep_of(one-18, elements-14)
quantmod(one-18, at-16)
mwe(at-16, least-17)
pobj(at-16, least-17)
nsubj(metal-23, one-18)
cop(metal-23, is-21)
det(metal-23, a-22)
rcmod(elements-14, metal-23)
dobj(has-27, metal-23)
rel(has-27, which-25)
nsubj(has-27, itself-26)
rcmod(metal-23, has-27)
amod(properties-29, metallic-28)
dobj(has-27, properties-29)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geometry)
        (CC and)
        (NN trigonometry)))
    (, ,)
    (NP
      (NP (DT an) (NN Angle))
      (PRN (-LRB- -LRB-)
        (PP (IN in)
          (NP (JJ full) (, ,) (NN plane) (NN angle)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN figure))
        (VP (VBN formed)
          (PP (IN by)
            (NP
              (NP (CD two) (NNS rays))
              (VP (VBG sharing)
                (NP
                  (NP (DT a) (JJ common) (NN endpoint))
                  (, ,)
                  (VP (VBN called)
                    (NP
                      (NP (DT the) (NN vertex))
                      (PP (IN of)
                        (NP (DT the) (NN angle) (NN harv))))))))))))
    (. .)))

prep_in(figure-17, geometry-2)
conj_and(geometry-2, trigonometry-4)
prep_in(figure-17, trigonometry-4)
det(Angle-7, an-6)
nsubj(figure-17, Angle-7)
dep(Angle-7, in-9)
amod(angle-13, full-10)
dep(angle-13, plane-12)
pobj(in-9, angle-13)
cop(figure-17, is-15)
det(figure-17, the-16)
root(ROOT-0, figure-17)
partmod(figure-17, formed-18)
num(rays-21, two-20)
agent(formed-18, rays-21)
partmod(rays-21, sharing-22)
det(endpoint-25, a-23)
amod(endpoint-25, common-24)
dobj(sharing-22, endpoint-25)
partmod(endpoint-25, called-27)
det(vertex-29, the-28)
dobj(called-27, vertex-29)
det(harv-33, the-31)
nn(harv-33, angle-32)
prep_of(vertex-29, harv-33)

(ROOT
  (S
    (NP (DT An) (NNP Applet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN software) (NN component))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ runs)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN context))
                  (PP (IN of)
                    (NP (DT another) (NN program)))))
              (, ,)
              (PP (IN for)
                (NP
                  (NP (NN example))
                  (NP (DT a) (NN web) (NN browser)))))))))
    (. .)))

det(Applet-2, An-1)
nsubj(component-6, Applet-2)
cop(component-6, is-3)
det(component-6, a-4)
nn(component-6, software-5)
root(ROOT-0, component-6)
nsubj(runs-8, component-6)
rcmod(component-6, runs-8)
det(context-11, the-10)
prep_in(runs-8, context-11)
det(program-14, another-13)
prep_of(context-11, program-14)
prep_for(runs-8, example-17)
det(browser-20, a-18)
nn(browser-20, web-19)
dep(example-17, browser-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ 19th) (NN century)))
    (NP (DT the) (NN term) (NN Anglicanism))
    (VP (VBD was)
      (VP (VBN coined)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT the) (JJ common) (JJ religious) (NN tradition))
                (PP (IN of)
                  (NP (DT these) (NNS churches)))))))))
    (. .)))

det(century-4, the-2)
amod(century-4, 19th-3)
prep_in(coined-9, century-4)
det(Anglicanism-7, the-5)
nn(Anglicanism-7, term-6)
nsubjpass(coined-9, Anglicanism-7)
xsubj(describe-11, Anglicanism-7)
auxpass(coined-9, was-8)
root(ROOT-0, coined-9)
aux(describe-11, to-10)
xcomp(coined-9, describe-11)
det(tradition-15, the-12)
amod(tradition-15, common-13)
amod(tradition-15, religious-14)
dobj(describe-11, tradition-15)
det(churches-18, these-17)
prep_of(tradition-15, churches-18)

(ROOT
  (S
    (NP (DT The) (NNP Archaea))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN group))
        (PP (IN of)
          (NP (JJ single-celled) (NNS microorganisms)))))
    (. .)))

det(Archaea-2, The-1)
nsubj(group-5, Archaea-2)
cop(group-5, are-3)
det(group-5, a-4)
root(ROOT-0, group-5)
amod(microorganisms-8, single-celled-7)
prep_of(group-5, microorganisms-8)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ Judeo-Christian) (NN theology)))
    (, ,)
    (NP (DT the) (NN term) (NN Apocrypha))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT any) (NN collection))
          (PP (IN of)
            (NP (JJ scriptural) (NNS texts)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ falls)
                (PP (IN outside)
                  (NP (DT the) (NN canon)))))))))
    (. .)))

amod(theology-3, Judeo-Christian-2)
prep_in(refers-8, theology-3)
det(Apocrypha-7, the-5)
nn(Apocrypha-7, term-6)
nsubj(refers-8, Apocrypha-7)
root(ROOT-0, refers-8)
det(collection-11, any-10)
prep_to(refers-8, collection-11)
nsubj(falls-16, collection-11)
amod(texts-14, scriptural-13)
prep_of(collection-11, texts-14)
rcmod(collection-11, falls-16)
det(canon-19, the-18)
prep_outside(falls-16, canon-19)

(ROOT
  (NP
    (NP (DT An) (NNPS Abbess))
    (PRN (-LRB- -LRB-)
      (NP (NNP Latin) (NNP abbatissa))
      (, ,)
      (NP (NN fem)))
    (. .)))

det(Abbess-2, An-1)
root(ROOT-0, Abbess-2)
nn(abbatissa-5, Latin-4)
dep(Abbess-2, abbatissa-5)
dep(abbatissa-5, fem-7)

(ROOT
  (S
    (S
      (NP
        (NP (NN form))
        (PP (IN of)
          (NP (NNS abbas)))))
    (, ,)
    (NP (NN abbot))
    (-RRB- -RRB-)
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ female) (NN superior))
          (, ,)
          (CC or)
          (NP (NNP Mother) (NNP Superior))
          (, ,))
        (PP (IN of)
          (NP
            (NP (DT an) (NN abbey))
            (PP (IN of)
              (NP (NNS nuns)))))))
    (. .)))

ccomp(superior-10, form-1)
prep_of(form-1, abbas-3)
nsubj(superior-10, abbot-5)
cop(superior-10, is-7)
det(superior-10, the-8)
amod(superior-10, female-9)
root(ROOT-0, superior-10)
nn(Superior-14, Mother-13)
conj_or(superior-10, Superior-14)
det(abbey-18, an-17)
prep_of(superior-10, abbey-18)
prep_of(abbey-18, nuns-20)

(ROOT
  (S
    (NP
      (NP (DT An) (NN Abbey))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (NNP Latin) (NNP abbatia))
            (, ,)
            (VP (VBN derived)
              (PP (IN from)
                (NP
                  (NP (NNP Syriac) (NNP abba))
                  (, ,) ('' '')
                  (NP (NN father) ('' '')))))))
        (-RRB- -RRB-)))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ Christian) (NN monastery)
          (CC or)
          (NN convent))
        (, ,)
        (PP (IN under)
          (NP
            (NP (DT the) (NN government))
            (PP (IN of)
              (NP (DT an) (NNP Abbot)
                (CC or)
                (DT an) (NNPS Abbess)))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ serves)
                  (PP (IN as)
                    (NP
                      (NP (DT the) (JJ spiritual) (NN father)
                        (CC or)
                        (NN mother))
                      (PP (IN of)
                        (NP (DT the) (NN community))))))))))))
    (. .)))

det(Abbey-2, An-1)
nsubj(monastery-21, Abbey-2)
dep(Abbey-2, from-4)
nn(abbatia-6, Latin-5)
pobj(from-4, abbatia-6)
partmod(abbatia-6, derived-8)
nn(abba-11, Syriac-10)
prep_from(derived-8, abba-11)
dep(abba-11, father-14)
cop(monastery-21, is-18)
det(monastery-21, a-19)
amod(monastery-21, Christian-20)
root(ROOT-0, monastery-21)
conj_or(monastery-21, convent-23)
det(government-27, the-26)
prep_under(monastery-21, government-27)
nsubj(serves-36, government-27)
det(Abbess-33, an-29)
nn(Abbess-33, Abbot-30)
conj_or(Abbot-30, an-32)
nn(Abbess-33, an-32)
prep_of(government-27, Abbess-33)
rcmod(government-27, serves-36)
det(father-40, the-38)
amod(father-40, spiritual-39)
prep_as(serves-36, father-40)
prep_as(serves-36, mother-42)
conj_or(father-40, mother-42)
det(community-45, the-44)
prep_of(father-40, community-45)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN particle) (NNS physics))
        (CC and)
        (NP (NN quantum) (NN chemistry))))
    (, ,)
    (NP (NNP Antimatter))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN extension))
        (PP (IN of)
          (NP
            (NP (DT the) (NN concept))
            (PP (IN of)
              (NP (DT the) (NN antiparticle)
                (S
                  (VP (TO to)
                    (VP (NN matter) (, ,)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (NN antimatter))
                          (VP (VBZ is)
                            (VP (VBN composed)
                              (PP (IN of)
                                (NP
                                  (NP (NNS antiparticles))
                                  (PP (IN in)
                                    (NP (DT the) (JJ same) (NN way)))))
                              (SBAR (IN that)
                                (S
                                  (NP (JJ normal) (NN matter))
                                  (VP (VBZ is)
                                    (VP (VBN composed)
                                      (PP (IN of)
                                        (NP (NNS particles))))))))))))))))))))
    (. .)))

nn(physics-3, particle-2)
prep_in(extension-11, physics-3)
nn(chemistry-6, quantum-5)
conj_and(physics-3, chemistry-6)
prep_in(extension-11, chemistry-6)
nsubj(extension-11, Antimatter-8)
cop(extension-11, is-9)
det(extension-11, the-10)
root(ROOT-0, extension-11)
det(concept-14, the-13)
prep_of(extension-11, concept-14)
det(antiparticle-17, the-16)
prep_of(concept-14, antiparticle-17)
aux(matter-19, to-18)
infmod(antiparticle-17, matter-19)
advmod(composed-24, where-21)
nsubjpass(composed-24, antimatter-22)
auxpass(composed-24, is-23)
advcl(matter-19, composed-24)
prep_of(composed-24, antiparticles-26)
det(way-30, the-28)
amod(way-30, same-29)
prep_in(antiparticles-26, way-30)
complm(composed-35, that-31)
amod(matter-33, normal-32)
nsubjpass(composed-35, matter-33)
auxpass(composed-35, is-34)
ccomp(composed-24, composed-35)
prep_of(composed-35, particles-37)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (NNP Associativity))
    (VP (VBZ is)
      (NP (DT a) (NN property))
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ binary) (NN operation))
          (VP (MD can)
            (VP (VB have))))))
    (. .)))

prep_in(property-7, mathematics-2)
nsubj(property-7, Associativity-4)
cop(property-7, is-5)
det(property-7, a-6)
root(ROOT-0, property-7)
complm(have-13, that-8)
det(operation-11, a-9)
amod(operation-11, binary-10)
nsubj(have-13, operation-11)
aux(have-13, can-12)
ccomp(property-7, have-13)

(ROOT
  (S
    (NP (DT The) (NN name) (NNS Apatosaurus))
    (VP (VBZ means)
      (SBAR
        (S
          (NP
            (NP (`` `) (JJ deceptive) (NN lizard) ('' '))
            (, ,)
            (NP
              (NP (NN so-given))
              (SBAR (IN because)
                (S
                  (NP (DT the) (NN chevron) (NNS bones))
                  (VP (VBD were)
                    (ADJP (JJ similar)
                      (PP (TO to)
                        (NP
                          (NP (DT those))
                          (PP (IN of)
                            (NP (DT a) (JJ prehistoric) (JJ marine) (NN lizard))))))))))
            (, ,))
          (VP (VBZ Mosasaurus)))))
    (. .)))

det(Apatosaurus-3, The-1)
nn(Apatosaurus-3, name-2)
nsubj(means-4, Apatosaurus-3)
root(ROOT-0, means-4)
amod(lizard-7, deceptive-6)
nsubj(Mosasaurus-25, lizard-7)
appos(lizard-7, so-given-10)
mark(similar-16, because-11)
det(bones-14, the-12)
nn(bones-14, chevron-13)
nsubj(similar-16, bones-14)
cop(similar-16, were-15)
dep(so-given-10, similar-16)
prep_to(similar-16, those-18)
det(lizard-23, a-20)
amod(lizard-23, prehistoric-21)
amod(lizard-23, marine-22)
prep_of(those-18, lizard-23)
ccomp(means-4, Mosasaurus-25)

(ROOT
  (S
    (NP (NNS Allosaurus))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ large) (JJ bipedal) (NN predator))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ large) (NN skull))
            (, ,)
            (VP (VBN equipped)
              (PP (IN with)
                (NP
                  (NP (NNS dozens))
                  (PP (IN of)
                    (NP (JJ large) (, ,) (JJ sharp) (NNS teeth))))))))))
    (. .)))

nsubj(predator-6, Allosaurus-1)
cop(predator-6, was-2)
det(predator-6, a-3)
amod(predator-6, large-4)
amod(predator-6, bipedal-5)
root(ROOT-0, predator-6)
det(skull-10, a-8)
amod(skull-10, large-9)
prep_with(predator-6, skull-10)
partmod(skull-10, equipped-12)
prep_with(equipped-12, dozens-14)
amod(teeth-19, large-16)
amod(teeth-19, sharp-18)
prep_of(dozens-14, teeth-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNPS Andes))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN world) (POS 's))
        (ADJP (JJS longest) (VBN exposed))
        (NN mountain) (NN range)))
    (. .)))

det(Andes-2, The-1)
nsubj(range-10, Andes-2)
cop(range-10, are-3)
det(world-5, the-4)
poss(range-10, world-5)
dep(exposed-8, longest-7)
amod(range-10, exposed-8)
nn(range-10, mountain-9)
root(ROOT-0, range-10)

(ROOT
  (S
    (NP (DT An) (NNP Anchor))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN object))
        (, ,)
        (VP
          (ADVP (RB often))
          (VBN made)
          (S
            (VP (VBG <PRT>)
              (PRT (RP out))
              (NP
                (NP (NNP </PRT>))
                (PP (IN of)
                  (NP (NN metal)))))))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN used)
                (S
                  (VP (TO to)
                    (VP (VB attach)
                      (NP (DT a) (NN ship))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN bottom))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (NN body))
                              (PP (IN of)
                                (NP (NN water)))))))
                      (PP (IN at)
                        (NP (DT a) (JJ specific) (NN point))))))))))))
    (. .)))

det(Anchor-2, An-1)
nsubj(object-5, Anchor-2)
cop(object-5, is-3)
det(object-5, an-4)
root(ROOT-0, object-5)
advmod(made-8, often-7)
partmod(object-5, made-8)
xcomp(made-8, <PRT>-9)
prt(<PRT>-9, out-10)
dobj(<PRT>-9, </PRT>-11)
prep_of(</PRT>-11, metal-13)
nsubjpass(used-17, that-15)
auxpass(used-17, is-16)
rcmod(object-5, used-17)
aux(attach-19, to-18)
xcomp(used-17, attach-19)
det(ship-21, a-20)
dobj(attach-19, ship-21)
det(bottom-24, the-23)
prep_to(attach-19, bottom-24)
det(body-27, a-26)
prep_of(bottom-24, body-27)
prep_of(body-27, water-29)
det(point-33, a-31)
amod(point-33, specific-32)
prep_at(attach-19, point-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (NN tyrannosaurid)))
    (, ,)
    (NP (NNP Albertosaurus))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (JJ bipedal) (NN predator))
          (PP (IN with)
            (NP (JJ tiny) (, ,) (JJ two-fingered) (NNS hands))))
        (CC and)
        (NP
          (NP (DT a) (JJ massive) (NN head))
          (PP (IN with)
            (NP
              (NP (NNS dozens))
              (PP (IN of)
                (NP (JJ large) (, ,) (JJ sharp) (NNS teeth))))))))
    (. .)))

det(tyrannosaurid-3, a-2)
prep_as(predator-9, tyrannosaurid-3)
nsubj(predator-9, Albertosaurus-5)
cop(predator-9, was-6)
det(predator-9, a-7)
amod(predator-9, bipedal-8)
root(ROOT-0, predator-9)
amod(hands-14, tiny-11)
amod(hands-14, two-fingered-13)
prep_with(predator-9, hands-14)
det(head-18, a-16)
amod(head-18, massive-17)
conj_and(predator-9, head-18)
prep_with(head-18, dozens-20)
amod(teeth-25, large-22)
amod(teeth-25, sharp-24)
prep_of(dozens-20, teeth-25)

(ROOT
  (S
    (NP
      (NP (NNP Ambrose))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP c.) (NNP 338)
            (CC &)
            (NNP amp))
          (: ;)
          (NP
            (NP
              (NP (NN amp))
              (: ;)
              (NP (NN ndash)))
            (: ;)
            (NP
              (NP
                (QP (CD <LST>) (CD 4))
                (NNS </LST>))
              (NP (NNP April) (CD 397)))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN bishop))
        (PP (IN of)
          (NP (NNP Milan)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD became)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the)
                      (ADJP (RBS most) (JJ influential))
                      (JJ ecclesiastical) (NNS figures))
                    (PP (IN of)
                      (NP (DT the) (JJ fourth) (NN century)))))))))))
    (. .)))

nsubj(bishop-20, Ambrose-1)
nn(338-4, c.-3)
dep(Ambrose-1, 338-4)
dep(Ambrose-1, amp-6)
conj_and(338-4, amp-6)
dep(338-4, amp-8)
dep(amp-8, ndash-10)
number(4-13, <LST>-12)
num(</LST>-14, 4-13)
dep(amp-8, </LST>-14)
dep(</LST>-14, April-15)
num(April-15, 397-16)
cop(bishop-20, was-18)
det(bishop-20, a-19)
root(ROOT-0, bishop-20)
nsubj(one-25, bishop-20)
prep_of(bishop-20, Milan-22)
cop(one-25, became-24)
rcmod(bishop-20, one-25)
det(figures-31, the-27)
advmod(influential-29, most-28)
amod(figures-31, influential-29)
amod(figures-31, ecclesiastical-30)
prep_of(one-25, figures-31)
det(century-35, the-33)
amod(century-35, fourth-34)
prep_of(figures-31, century-35)

(ROOT
  (S
    (NP (DT The) (NNP Alphorn)
      (CC or)
      (NNP alpenhorn))
    (VP (VBZ is)
      (NP (DT a) (NN brass) (NN instrument))
      (, ,)
      (S
        (VP
          (VP (VBG consisting)
            (PP (IN of)
              (NP
                (NP (DT a) (JJ natural) (JJ wooden) (NN horn))
                (PP (IN of)
                  (NP (JJ conical) (NNS bore))))))
          (, ,)
          (VP (VBG having)
            (NP
              (NP
                (NP (DT a) (JJ cup-shaped) (NN mouthpiece))
                (, ,)
                (VP (VBN used)
                  (PP (IN by)
                    (NP
                      (NP (NN mountain) (NNS dwellers))
                      (PP (IN in)
                        (NP (NNP Switzerland)))))))
              (CC and)
              (ADVP (RB elsewhere)))))))
    (. .)))

det(Alphorn-2, The-1)
nsubj(instrument-8, Alphorn-2)
conj_or(Alphorn-2, alpenhorn-4)
nsubj(instrument-8, alpenhorn-4)
cop(instrument-8, is-5)
det(instrument-8, a-6)
nn(instrument-8, brass-7)
root(ROOT-0, instrument-8)
dep(instrument-8, consisting-10)
det(horn-15, a-12)
amod(horn-15, natural-13)
amod(horn-15, wooden-14)
prep_of(consisting-10, horn-15)
amod(bore-18, conical-17)
prep_of(horn-15, bore-18)
dep(consisting-10, having-20)
det(mouthpiece-23, a-21)
amod(mouthpiece-23, cup-shaped-22)
dobj(having-20, mouthpiece-23)
partmod(mouthpiece-23, used-25)
nn(dwellers-28, mountain-27)
agent(used-25, dwellers-28)
prep_in(dwellers-28, Switzerland-30)
dobj(having-20, elsewhere-32)
advmod(mouthpiece-23, elsewhere-32)
conj_and(mouthpiece-23, elsewhere-32)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Army))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (NNP Latin) (NNP Armata) ('' '') (NN act))
            (PP (IN of)
              (NP (NNP arming)))
            ('' '')
            (PP (IN via)
              (NP (NNP Old) (NNP French) (NNP armÃ) (NNP ∞) (NNP Â) (NNP ©))
              (X (SYM e)))))
        (-RRB- -RRB-))
      (, ,)
      (PP (IN in)
        (NP (DT the) (JJS broadest) (NN sense)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ land-based) (JJ armed) (NNS forces))
        (PP (IN of)
          (NP (DT a) (NN nation)))))
    (. .)))

det(Army-2, An-1)
nsubj(forces-31, Army-2)
dep(Army-2, from-4)
nn(act-8, Latin-5)
nn(act-8, Armata-6)
pobj(from-4, act-8)
prep_of(act-8, arming-10)
nn(©-18, Old-13)
nn(©-18, French-14)
nn(©-18, armÃ-15)
nn(©-18, ∞-16)
nn(©-18, Â-17)
prep_via(act-8, ©-18)
dep(act-8, e-19)
det(sense-25, the-23)
amod(sense-25, broadest-24)
prep_in(Army-2, sense-25)
cop(forces-31, is-27)
det(forces-31, the-28)
amod(forces-31, land-based-29)
amod(forces-31, armed-30)
root(ROOT-0, forces-31)
det(nation-34, a-33)
prep_of(forces-31, nation-34)

(ROOT
  (S
    (NP (DT An) (NNP Apostle))
    (VP (VBZ is)
      (NP (DT a) (NN messenger)
        (CC and)
        (NN ambassador)))
    (. .)))

det(Apostle-2, An-1)
nsubj(messenger-5, Apostle-2)
cop(messenger-5, is-3)
det(messenger-5, a-4)
root(ROOT-0, messenger-5)
conj_and(messenger-5, ambassador-7)

(ROOT
  (S
    (NP (DT The) (NNP Dasyproctidae))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP (JJ large) (NNP South) (NNP American) (NNS rodents))))
      (, ,)
      (S
        (VP (VBG comprising)
          (NP (DT the) (NNS agoutis)
            (CC and)
            (NNS acouchis)))))
    (. .)))

det(Dasyproctidae-2, The-1)
nsubj(family-5, Dasyproctidae-2)
cop(family-5, are-3)
det(family-5, a-4)
root(ROOT-0, family-5)
amod(rodents-10, large-7)
nn(rodents-10, South-8)
nn(rodents-10, American-9)
prep_of(family-5, rodents-10)
partmod(family-5, comprising-12)
xcomp(family-5, comprising-12)
det(agoutis-14, the-13)
dobj(comprising-12, agoutis-14)
dobj(comprising-12, acouchis-16)
conj_and(agoutis-14, acouchis-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Aar))
      (PRN (-LRB- -LRB-)
        (NP (NNP German) (NNP Aare))
        (-RRB- -RRB-))
      (, ,)
      (NP
        (NP (DT a) (NN tributary))
        (PP (IN of)
          (NP (DT the) (NNP Rhine))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS longest) (NN river))
        (SBAR
          (WHNP (WDT that))
          (S (DT both)
            (VP
              (VP (VBZ rises))
              (CC and)
              (VP (VBZ ends)
                (ADVP (RB entirely))
                (PP (IN within)
                  (NP (NNP Switzerland)))))))))
    (. .)))

det(Aar-2, The-1)
nsubj(river-17, Aar-2)
nn(Aare-5, German-4)
appos(Aar-2, Aare-5)
det(tributary-9, a-8)
appos(Aar-2, tributary-9)
det(Rhine-12, the-11)
prep_of(tributary-9, Rhine-12)
cop(river-17, is-14)
det(river-17, the-15)
amod(river-17, longest-16)
root(ROOT-0, river-17)
nsubj(rises-20, river-17)
nsubj(ends-22, river-17)
dep(rises-20, both-19)
rcmod(river-17, rises-20)
rcmod(river-17, ends-22)
conj_and(rises-20, ends-22)
advmod(ends-22, entirely-23)
prep_within(ends-22, Switzerland-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Alamanni))
      (, ,)
      (NP (NNP Allemanni))
      (, ,)
      (CC or)
      (NP (NNP Alemanni)))
    (VP (VBD were)
      (ADVP (RB originally))
      (NP
        (NP (DT an) (NN alliance))
        (PP (IN of)
          (NP
            (NP (JJ west) (JJ Germanic) (NNS tribes))
            (VP (VBN located)
              (PP (IN around)
                (NP
                  (NP (DT the) (JJ upper) (NNP Main))
                  (, ,)
                  (NP
                    (NP (DT a) (NN river))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (CD one))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (JJS largest) (NNS tributaries))
                                (PP (IN of)
                                  (NP (DT the) (NNP Rhine))))))))))))))))
      (, ,)
      (PP (IN on)
        (NP
          (NP (NN land))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (NP
                  (NP (NN today) (NN part))
                  (PP (IN of)
                    (NP (NNP Germany))))))))))
    (. .)))

det(Alamanni-2, The-1)
nsubj(alliance-11, Alamanni-2)
conj_or(Alamanni-2, Allemanni-4)
nsubj(alliance-11, Allemanni-4)
conj_or(Alamanni-2, Alemanni-7)
nsubj(alliance-11, Alemanni-7)
cop(alliance-11, were-8)
advmod(alliance-11, originally-9)
det(alliance-11, an-10)
root(ROOT-0, alliance-11)
amod(tribes-15, west-13)
amod(tribes-15, Germanic-14)
prep_of(alliance-11, tribes-15)
partmod(tribes-15, located-16)
det(Main-20, the-18)
amod(Main-20, upper-19)
prep_around(located-16, Main-20)
det(river-23, a-22)
appos(Main-20, river-23)
nsubj(one-26, river-23)
cop(one-26, is-25)
rcmod(river-23, one-26)
det(tributaries-30, the-28)
amod(tributaries-30, largest-29)
prep_of(one-26, tributaries-30)
det(Rhine-33, the-32)
prep_of(tributaries-30, Rhine-33)
prep_on(alliance-11, land-36)
nsubj(part-40, land-36)
cop(part-40, is-38)
nn(part-40, today-39)
rcmod(land-36, part-40)
prep_of(part-40, Germany-42)

(ROOT
  (S
    (NP (DT The) (NNP Dodo))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fictional) (NN character))
        (VP (VBG appearing)
          (PP (IN in)
            (NP
              (NP (NNP Chapters) (CD 2)
                (CC and)
                (CD 3))
              (PP (IN of)
                (NP (DT the) (NN book)))))
          (NP
            (NP (NNP Alice) (POS 's))
            (NNS Adventures))
          (PP (IN in)
            (NP (NNP Wonderland)))
          (PP (IN by)
            (NP
              (NP (NNP Lewis) (NNP Carroll))
              (PRN (-LRB- -LRB-)
                (NP (NNP Charles) (NNP Lutwidge) (NNP Dodgson))
                (-RRB- -RRB-)))))))
    (. .)))

det(Dodo-2, The-1)
nsubj(character-6, Dodo-2)
cop(character-6, is-3)
det(character-6, a-4)
amod(character-6, fictional-5)
root(ROOT-0, character-6)
partmod(character-6, appearing-7)
prep_in(appearing-7, Chapters-9)
num(Chapters-9, 2-10)
prep_in(appearing-7, 3-12)
conj_and(Chapters-9, 3-12)
det(book-15, the-14)
prep_of(Chapters-9, book-15)
poss(Adventures-18, Alice-16)
dobj(appearing-7, Adventures-18)
prep_in(appearing-7, Wonderland-20)
nn(Carroll-23, Lewis-22)
agent(appearing-7, Carroll-23)
nn(Dodgson-27, Charles-25)
nn(Dodgson-27, Lutwidge-26)
appos(Carroll-23, Dodgson-27)

(ROOT
  (S
    (NP (DT The) (NNP Eaglet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN character))
        (VP (VBG appearing)
          (PP (IN in)
            (NP
              (NP (NNP Chapter) (CD 2)
                (CC and)
                (CD 3))
              (PP (IN of)
                (NP
                  (NP
                    (NP (NNP Alice) (POS 's))
                    (NNS Adventures))
                  (PP (IN in)
                    (NP (NNP Wonderland)))))))
          (PP (IN by)
            (NP
              (NP (NNP Lewis) (NNP Carroll))
              (, ,)
              (NP
                (NP (DT a) (NN reference))
                (PP (TO to)
                  (NP
                    (NP (NNP Edith) (NNP Liddell))
                    (, ,)
                    (NP
                      (NP (NNP Alice) (POS 's))
                      (NN sister))))))))))
    (. .)))

det(Eaglet-2, The-1)
nsubj(character-5, Eaglet-2)
cop(character-5, is-3)
det(character-5, a-4)
root(ROOT-0, character-5)
partmod(character-5, appearing-6)
prep_in(appearing-6, Chapter-8)
num(Chapter-8, 2-9)
prep_in(appearing-6, 3-11)
conj_and(Chapter-8, 3-11)
poss(Adventures-15, Alice-13)
prep_of(Chapter-8, Adventures-15)
prep_in(Adventures-15, Wonderland-17)
nn(Carroll-20, Lewis-19)
agent(appearing-6, Carroll-20)
det(reference-23, a-22)
appos(Carroll-20, reference-23)
nn(Liddell-26, Edith-25)
prep_to(reference-23, Liddell-26)
poss(sister-30, Alice-28)
appos(Liddell-26, sister-30)

(ROOT
  (S
    (NP (NNP Agate))
    (PRN (-LRB- -LRB-)
      (VP (`` ') (VB Ã)
        (NP (NNP ∞) (NNP ÂœgÃ) (NNP ≈) (NNP Â˙t)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ microcrystalline) (NN variety))
        (PP (IN of)
          (NP
            (NP
              (NP (NN quartz))
              (PRN (-LRB- -LRB-)
                (NP (NNP silica))
                (-RRB- -RRB-))
              (, ,))
            (ADJP (RB chiefly) (JJ chalcedony))
            (, ,)
            (VP (VBN characterised)
              (PP (IN by)
                (NP
                  (NP
                    (NP (PRP$ its) (NNS fineness))
                    (PP (IN of)
                      (NP (NN grain))))
                  (CC and)
                  (NP
                    (NP (NNS brightness))
                    (PP (IN of)
                      (NP (NN color)))))))))))
    (. .)))

nsubj(variety-13, Agate-1)
dep(variety-13, Ã-4)
nn(Â˙t-8, ∞-5)
nn(Â˙t-8, ÂœgÃ-6)
nn(Â˙t-8, ≈-7)
dobj(Ã-4, Â˙t-8)
cop(variety-13, is-10)
det(variety-13, a-11)
amod(variety-13, microcrystalline-12)
root(ROOT-0, variety-13)
prep_of(variety-13, quartz-15)
appos(quartz-15, silica-17)
advmod(chalcedony-21, chiefly-20)
amod(quartz-15, chalcedony-21)
partmod(quartz-15, characterised-23)
poss(fineness-26, its-25)
agent(characterised-23, fineness-26)
prep_of(fineness-26, grain-28)
agent(characterised-23, brightness-30)
conj_and(fineness-26, brightness-30)
prep_of(brightness-30, color-32)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN Book))
        (PP (IN of)
          (NP (NNP Samuel)))))
    (, ,)
    (NP
      (NP (NNP Abner))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Biblical) (NNP Hebrew))
          (PP (IN for) ('' '')
            (NP (NN father)))
          (PP (IN of)
            (NP (NN light) ('' ''))))
        (-RRB- -RRB-))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP
          (NP (JJ first) (NN cousin))
          (PP (TO to)
            (NP (NNP Saul))))
        (CC and)
        (NP
          (NP (NN commander-in-chief))
          (PP (IN of)
            (NP
              (NP (PRP$ his) (NN army))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (CD 1) (NNP Samuel) (CD 14:50))
                  (, ,)
                  (NP (CD 20:25)))
                (-RRB- -RRB-)))))))
    (. .)))

det(Book-3, the-2)
prep_in(cousin-21, Book-3)
prep_of(Book-3, Samuel-5)
nsubj(cousin-21, Abner-7)
nn(Hebrew-10, Biblical-9)
dep(Abner-7, Hebrew-10)
prep_for(Hebrew-10, father-13)
prep_of(Hebrew-10, light-15)
cop(cousin-21, is-19)
amod(cousin-21, first-20)
root(ROOT-0, cousin-21)
prep_to(cousin-21, Saul-23)
conj_and(cousin-21, commander-in-chief-25)
poss(army-28, his-27)
prep_of(commander-in-chief-25, army-28)
num(Samuel-31, 1-30)
dep(army-28, Samuel-31)
num(Samuel-31, 14:50-32)
appos(Samuel-31, 20:25-34)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Amaranth)
      (CC or)
      (NNP pigweed))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cosmopolitan) (NNS genus))
        (PP (IN of)
          (NP (NNS herbs)))))
    (. .)))

nsubj(genus-7, Amaranth-1)
conj_or(Amaranth-1, pigweed-3)
nsubj(genus-7, pigweed-3)
cop(genus-7, is-4)
det(genus-7, a-5)
nn(genus-7, cosmopolitan-6)
root(ROOT-0, genus-7)
prep_of(genus-7, herbs-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Agathon) (-LRB- -LRB-)
      (NP (NNP Ã) (`` ¡) (NNP ÂπÂ) (`` √) (NNP Ã) (`` ⁄) (NNP Â) (`` ``) (NNP Ã) (`` ⁄) (NNP Â) (`` ¬) (NNP Ã) (`` ⁄) (NNP Â) (`` ¸) (NNP Ã) (`` ∂) (NNP Â) (`` ≈) (NNP Ã) (`` ⁄) (NNP Â) ('' ∏))
      (-RRB- -RRB-))
    (ADVP (RB -LRB-))
    (VP (MD ca))
    (. .)))

nsubj(ca-29, Agathon-1)
nn(Â-25, Ã-3)
punct(Â-25, ¡-4)
nn(Â-25, ÂπÂ-5)
punct(Â-25, √-6)
nn(Â-25, Ã-7)
punct(Â-25, ⁄-8)
nn(Â-25, Â-9)
nn(Â-25, Ã-11)
punct(Â-25, ⁄-12)
nn(Â-25, Â-13)
punct(Â-25, ¬-14)
nn(Â-25, Ã-15)
punct(Â-25, ⁄-16)
nn(Â-25, Â-17)
punct(Â-25, ¸-18)
nn(Â-25, Ã-19)
punct(Â-25, ∂-20)
nn(Â-25, Â-21)
punct(Â-25, ≈-22)
nn(Â-25, Ã-23)
punct(Â-25, ⁄-24)
dep(Agathon-1, Â-25)
punct(Â-25, ∏-26)
root(ROOT-0, ca-29)

(ROOT
  (NP
    (NP (NNP 448)
      (CC &)
      (NNP amp))
    (: ;)
    (NP
      (NP (NN amp))
      (: ;)
      (S
        (NP
          (NP (NN ndash))
          (: ;)
          (NP (CD 400) (NN BC))
          (-RRB- -RRB-))
        (VP (VBD was)
          (NP
            (NP (DT an) (JJ Athenian) (JJ tragic) (NN poet))
            (CC and)
            (NP
              (NP (NN friend))
              (PP (IN of)
                (NP (NNP Euripides)
                  (CC and)
                  (NNP Plato))))))))
    (. .)))

root(ROOT-0, 448-1)
conj_and(448-1, amp-3)
dep(448-1, amp-5)
nsubj(poet-16, ndash-7)
num(BC-10, 400-9)
dep(ndash-7, BC-10)
cop(poet-16, was-12)
det(poet-16, an-13)
amod(poet-16, Athenian-14)
amod(poet-16, tragic-15)
dep(amp-5, poet-16)
dep(amp-5, friend-18)
conj_and(poet-16, friend-18)
prep_of(friend-18, Euripides-20)
prep_of(friend-18, Plato-22)
conj_and(Euripides-20, Plato-22)

(ROOT
  (S
    (NP
      (NP (NNP Ajax)
        (CC or)
        (NNP Aias))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ Greek))
          (: :)
          (NP (NNP Ã) (NNP ⁄) (NNP ÂŒÃ) (NNP ¡) (NNP ÂπÂ) (NNP ´) (NNP Ã) (NNP ⁄) (NNP Â) (NNP ±) (NNP Ã) (NNP ⁄) (NNP Â) (NNPS ≤)))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ mythological) (JJ Greek) (NN hero))
        (, ,)
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NNP Telamon)
              (CC and)
              (NNP Periboea))))
        (CC and)
        (NP
          (NP (NN king))
          (PP (IN of)
            (NP (NNP Salamis))))))
    (. .)))

nsubj(hero-26, Ajax-1)
conj_or(Ajax-1, Aias-3)
nsubj(hero-26, Aias-3)
dep(Ajax-1, Greek-5)
nn(≤-20, Ã-7)
nn(≤-20, ⁄-8)
nn(≤-20, ÂŒÃ-9)
nn(≤-20, ¡-10)
nn(≤-20, ÂπÂ-11)
nn(≤-20, ´-12)
nn(≤-20, Ã-13)
nn(≤-20, ⁄-14)
nn(≤-20, Â-15)
nn(≤-20, ±-16)
nn(≤-20, Ã-17)
nn(≤-20, ⁄-18)
nn(≤-20, Â-19)
dep(Greek-5, ≤-20)
cop(hero-26, was-22)
det(hero-26, a-23)
amod(hero-26, mythological-24)
amod(hero-26, Greek-25)
root(ROOT-0, hero-26)
det(son-29, the-28)
conj_and(hero-26, son-29)
prep_of(son-29, Telamon-31)
prep_of(son-29, Periboea-33)
conj_and(Telamon-31, Periboea-33)
conj_and(hero-26, king-35)
prep_of(king-35, Salamis-37)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP Alcmene)
        (CC or)
        (NNP Alcmena))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ Greek))
          (: :)
          (NP
            (NP (NNP AÃ) (NNP ⁄) (NNP Â) ('' '') (NNP Ã))
            (RRC
              (ADVP (RB ⁄))
              (NP (NNP ÂºÃ) (NNP ⁄) (NNP ÂπÃ) (NNP ⁄) (NNP Â) (NNP ®) (NNP Ã) (NNP ⁄) (NNP Â) (NNP ∏) (NNP Ã) (NN ⁄) (NNP Â) (NNP ·)))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN mother))
        (PP (IN of)
          (NP (NNP Heracles)))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(mother-34, mythology-3)
nsubj(mother-34, Alcmene-5)
conj_or(Alcmene-5, Alcmena-7)
nsubj(mother-34, Alcmena-7)
dep(Alcmene-5, Greek-9)
nn(Ã-15, AÃ-11)
nn(Ã-15, ⁄-12)
nn(Ã-15, Â-13)
dep(Greek-9, Ã-15)
advmod(·-30, ⁄-16)
nn(·-30, ÂºÃ-17)
nn(·-30, ⁄-18)
nn(·-30, ÂπÃ-19)
nn(·-30, ⁄-20)
nn(·-30, Â-21)
nn(·-30, ®-22)
nn(·-30, Ã-23)
nn(·-30, ⁄-24)
nn(·-30, Â-25)
nn(·-30, ∏-26)
nn(·-30, Ã-27)
nn(·-30, ⁄-28)
nn(·-30, Â-29)
rcmod(Ã-15, ·-30)
cop(mother-34, was-32)
det(mother-34, the-33)
root(ROOT-0, mother-34)
prep_of(mother-34, Heracles-36)

(ROOT
  (S
    (NP (DT The) (NNPS Alexandrists))
    (VP (VBD were)
      (NP
        (NP (DT a) (NN school))
        (PP (IN of)
          (NP (NNP Renaissance) (NNS philosophers)))
        (SBAR
          (WHNP (WP who))
          (S (, ,)
            (PP (IN in)
              (NP
                (NP (DT the) (JJ great) (NN controversy))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN subject))
                    (PP (IN of)
                      (NP (JJ personal) (NN immortality)))))))
            (, ,)
            (VP (VBD adopted)
              (NP
                (NP (DT the) (NN explanation))
                (PP (IN of)
                  (NP (DT the) (NNP De) (NNP Anima))))
              (PP (VBN given)
                (PP (IN by)
                  (NP
                    (NP (NNP Alexander))
                    (PP (IN of)
                      (NP (NNP Aphrodisias)))))))))))
    (. .)))

det(Alexandrists-2, The-1)
nsubj(school-5, Alexandrists-2)
cop(school-5, were-3)
det(school-5, a-4)
root(ROOT-0, school-5)
nsubj(adopted-22, school-5)
nn(philosophers-8, Renaissance-7)
prep_of(school-5, philosophers-8)
det(controversy-14, the-12)
amod(controversy-14, great-13)
prep_in(adopted-22, controversy-14)
det(subject-17, the-16)
prep_on(controversy-14, subject-17)
amod(immortality-20, personal-19)
prep_of(subject-17, immortality-20)
rcmod(school-5, adopted-22)
det(explanation-24, the-23)
dobj(adopted-22, explanation-24)
det(Anima-28, the-26)
nn(Anima-28, De-27)
prep_of(explanation-24, Anima-28)
prep(adopted-22, given-29)
pcomp(given-29, by-30)
prep_by(given-29, Alexander-31)
prep_of(Alexander-31, Aphrodisias-33)

(ROOT
  (S
    (NP
      (NP (DT An) (NN Antipope))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Latin))
          (: :)
          (NP (NN antipapa)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ makes)
              (S
                (NP (DT a) (RB widely) (VBN accepted) (NN claim))
                (VP (TO to)
                  (VP (VB be)
                    (NP (DT the) (JJ lawful) (NN pope))
                    (, ,)
                    (PP (IN in)
                      (NP
                        (NP (NN opposition))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN pope))
                            (VP (VBN recognized)
                              (PP (IN by)
                                (NP (DT the) (NNP Roman) (NNP Catholic) (NNP Church))))))))))))))))
    (. .)))

det(Antipope-2, An-1)
nsubj(person-10, Antipope-2)
dep(Antipope-2, Latin-4)
dep(Latin-4, antipapa-6)
cop(person-10, is-8)
det(person-10, a-9)
root(ROOT-0, person-10)
nsubj(makes-12, person-10)
rcmod(person-10, makes-12)
det(claim-16, a-13)
advmod(claim-16, widely-14)
amod(claim-16, accepted-15)
nsubj(pope-21, claim-16)
aux(pope-21, to-17)
cop(pope-21, be-18)
det(pope-21, the-19)
amod(pope-21, lawful-20)
xcomp(makes-12, pope-21)
prep_in(pope-21, opposition-24)
det(pope-27, the-26)
prep_to(opposition-24, pope-27)
partmod(pope-27, recognized-28)
det(Church-33, the-30)
nn(Church-33, Roman-31)
nn(Church-33, Catholic-32)
agent(recognized-28, Church-33)

(ROOT
  (S
    (NP (DT The) (NNPS Amazons))
    (VP (VBP are)
      (NP
        (NP (JJ all-female) (NNS warriors))
        (PP (IN in)
          (NP (JJ Greek) (NN mythology)))))
    (. .)))

det(Amazons-2, The-1)
nsubj(warriors-5, Amazons-2)
cop(warriors-5, are-3)
amod(warriors-5, all-female-4)
root(ROOT-0, warriors-5)
amod(mythology-8, Greek-7)
prep_in(warriors-5, mythology-8)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Acre))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN area))
            (PP (IN in)
              (NP
                (NP (DT a) (NN number))
                (PP (IN of)
                  (NP (JJ different) (NNS systems)))))))
        (, ,)
        (PP (VBG including)
          (NP (DT the) (NNP imperial)
            (CC and)
            (NNP U.) (NNP S.) (JJ customary) (NNS systems)))))
    (. .)))

det(Acre-2, The-1)
nsubj(unit-5, Acre-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, area-7)
det(number-10, a-9)
prep_in(area-7, number-10)
amod(systems-13, different-12)
prep_of(number-10, systems-13)
det(imperial-17, the-16)
prep_including(unit-5, imperial-17)
nn(systems-22, U.-19)
nn(systems-22, S.-20)
amod(systems-22, customary-21)
prep_including(unit-5, systems-22)
conj_and(imperial-17, systems-22)

(ROOT
  (S
    (NP (DT An) (NNP Allomorph))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ linguistics) (NN term))
        (PP (IN for)
          (NP
            (NP (DT a) (JJ variant) (NN form))
            (PP (IN of)
              (NP (DT a) (NN morpheme)))))))
    (. .)))

det(Allomorph-2, An-1)
nsubj(term-6, Allomorph-2)
cop(term-6, is-3)
det(term-6, a-4)
amod(term-6, linguistics-5)
root(ROOT-0, term-6)
det(form-10, a-8)
amod(form-10, variant-9)
prep_for(term-6, form-10)
det(morpheme-13, a-12)
prep_of(form-10, morpheme-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS phonetics)))
    (, ,)
    (NP (DT an) (NNP Allophone))
    (VP (VBZ is)
      (NP
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (JJ several) (JJ similar) (NN speech) (NNS sounds))))
        (PRN (-LRB- -LRB-)
          (NP (NNS phones))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP belong)
              (PP (TO to)
                (NP (DT the) (JJ same) (NN phoneme))))))))
    (. .)))

prep_in(one-7, phonetics-2)
det(Allophone-5, an-4)
nsubj(one-7, Allophone-5)
cop(one-7, is-6)
root(ROOT-0, one-7)
nsubj(belong-17, one-7)
amod(sounds-12, several-9)
amod(sounds-12, similar-10)
nn(sounds-12, speech-11)
prep_of(one-7, sounds-12)
appos(one-7, phones-14)
rcmod(one-7, belong-17)
det(phoneme-21, the-19)
amod(phoneme-21, same-20)
prep_to(belong-17, phoneme-21)

(ROOT
  (S
    (NP (DT An) (NNP Affix))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN morpheme))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN attached)
                (PP (TO to)
                  (NP (DT a) (NN stem)))
                (S
                  (VP (TO to)
                    (VP (VB form)
                      (NP (DT a) (NN word)))))))))))
    (. .)))

det(Affix-2, An-1)
nsubj(morpheme-5, Affix-2)
cop(morpheme-5, is-3)
det(morpheme-5, a-4)
root(ROOT-0, morpheme-5)
nsubjpass(attached-8, morpheme-5)
auxpass(attached-8, is-7)
rcmod(morpheme-5, attached-8)
det(stem-11, a-10)
prep_to(attached-8, stem-11)
aux(form-13, to-12)
xcomp(attached-8, form-13)
det(word-15, a-14)
dobj(form-13, word-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Ambush))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB long) (VBN established))
          (JJ military) (NN tactic))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT an) (VBG ambushing) (NN force))
            (VP (VBZ uses)
              (ADJP (JJ concealment)
                (S
                  (VP (TO to)
                    (VP (VB attack)
                      (NP
                        (NP (DT an) (NN enemy))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ passes)
                              (NP (PRP$ its) (NN position)))))))))))))))
    (. .)))

det(Ambush-2, An-1)
nsubj(tactic-8, Ambush-2)
cop(tactic-8, is-3)
det(tactic-8, a-4)
advmod(established-6, long-5)
amod(tactic-8, established-6)
amod(tactic-8, military-7)
root(ROOT-0, tactic-8)
rel(uses-14, which-10)
det(force-13, an-11)
amod(force-13, ambushing-12)
nsubj(uses-14, force-13)
rcmod(tactic-8, uses-14)
acomp(uses-14, concealment-15)
aux(attack-17, to-16)
xcomp(concealment-15, attack-17)
det(enemy-19, an-18)
dobj(attack-17, enemy-19)
nsubj(passes-21, enemy-19)
rcmod(enemy-19, passes-21)
poss(position-23, its-22)
dobj(passes-21, position-23)

(ROOT
  (S
    (NP
      (NP
        (NP (DT An) (NN Abzyme))
        (PRN (-LRB- -LRB-)
          (PP (IN from)
            (NP (NN antibody)
              (CC and)
              (NN enzyme)))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (S
          (ADJP
            (ADJP (JJ catmab))
            (PRN (-LRB- -LRB-)
              (PP (IN from)
                (NP (JJ catalytic) (JJ monoclonal) (NN antibody)))
              (-RRB- -RRB-)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ monoclonal) (NN antibody))
        (PP (IN with)
          (NP (JJ catalytic) (NN activity)))))
    (. .)))

det(Abzyme-2, An-1)
nsubj(antibody-23, Abzyme-2)
dep(Abzyme-2, from-4)
pobj(from-4, antibody-5)
pobj(from-4, enzyme-7)
conj_and(antibody-5, enzyme-7)
advmod(called-11, also-10)
partmod(Abzyme-2, called-11)
dep(called-11, catmab-12)
dep(catmab-12, from-14)
amod(antibody-17, catalytic-15)
amod(antibody-17, monoclonal-16)
pobj(from-14, antibody-17)
cop(antibody-23, is-20)
det(antibody-23, a-21)
amod(antibody-23, monoclonal-22)
root(ROOT-0, antibody-23)
amod(activity-26, catalytic-25)
prep_with(antibody-23, activity-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Autosome))
    (VP (VBZ is)
      (NP (DT a) (JJ non-sex) (NN chromosome)))
    (. .)))

det(Autosome-2, An-1)
nsubj(chromosome-6, Autosome-2)
cop(chromosome-6, is-3)
det(chromosome-6, a-4)
amod(chromosome-6, non-sex-5)
root(ROOT-0, chromosome-6)

(ROOT
  (S
    (NP (NNS Apus))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ faint) (JJ southern))
        (NN constellation))
      (, ,)
      (FRAG (RB not)
        (ADJP (JJ visible)
          (PP (TO to)
            (NP (DT the) (JJ ancient) (NNS Greeks))))))
    (. .)))

nsubj(constellation-6, Apus-1)
cop(constellation-6, is-2)
det(constellation-6, a-3)
amod(southern-5, faint-4)
amod(constellation-6, southern-5)
root(ROOT-0, constellation-6)
dep(constellation-6, not-8)
dep(not-8, visible-9)
det(Greeks-13, the-11)
amod(Greeks-13, ancient-12)
prep_to(visible-9, Greeks-13)

(ROOT
  (S
    (NP (NNP Aslan))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ Turkish) (NN word))
        (VP
          (ADVP (RB also))
          (VBN used)
          (PP (IN in)
            (NP (NNP Persian)))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT the) (NN meaning))
              (PP (IN of)
                (NP (NN lion))))))))
    (. .)))

nsubj(word-5, Aslan-1)
cop(word-5, is-2)
det(word-5, a-3)
amod(word-5, Turkish-4)
root(ROOT-0, word-5)
advmod(used-7, also-6)
partmod(word-5, used-7)
prep_in(used-7, Persian-9)
det(meaning-13, the-12)
prep_with(used-7, meaning-13)
prep_of(meaning-13, lion-15)

(ROOT
  (S
    (NP (DT The) (NNP Amiga))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP
            (NP (JJ personal) (NNS computers))
            (VP
              (ADVP (RB originally))
              (VBN developed)
              (PP (IN by)
                (NP (NNP Amiga) (NNP Corporation))))))))
    (. .)))

det(Amiga-2, The-1)
nsubj(family-5, Amiga-2)
cop(family-5, is-3)
det(family-5, a-4)
root(ROOT-0, family-5)
amod(computers-8, personal-7)
prep_of(family-5, computers-8)
advmod(developed-10, originally-9)
partmod(computers-8, developed-10)
nn(Corporation-13, Amiga-12)
agent(developed-10, Corporation-13)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Angula))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN measure))
          (ADJP (JJ equal)
            (PP (TO to)
              (NP
                (NP (DT a) (NN finger) (POS 's))
                (NN breadth)))))))
    (. .)))

det(Angula-3, The-1)
nn(Angula-3, word-2)
nsubj(refers-4, Angula-3)
root(ROOT-0, refers-4)
det(measure-7, a-6)
prep_to(refers-4, measure-7)
amod(measure-7, equal-8)
det(finger-11, a-10)
poss(breadth-13, finger-11)
prep_to(equal-8, breadth-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (NP (DT an) (NNP Array))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN data) (NN structure))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN group))
              (PP (IN of)
                (NP
                  (NP (NNS elements))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP are)
                        (VP (VBN accessed)
                          (PP (IN by)
                            (NP (NN indexing))))))))))))))
    (. .)))

nn(science-3, computer-2)
prep_in(structure-9, science-3)
det(Array-5, an-4)
nsubj(structure-9, Array-5)
cop(structure-9, is-6)
det(structure-9, a-7)
nn(structure-9, data-8)
root(ROOT-0, structure-9)
partmod(structure-9, consisting-10)
det(group-13, a-12)
prep_of(consisting-10, group-13)
prep_of(group-13, elements-15)
nsubjpass(accessed-18, elements-15)
auxpass(accessed-18, are-17)
rcmod(elements-15, accessed-18)
agent(accessed-18, indexing-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Aorta))
      (PRN (-LRB- -LRB-)
        (VP (VBN pronounced) ('' '')
          (NP (NN ay-OR-tuh))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS largest) (NN artery))
        (PP (IN in)
          (NP (DT the) (JJ human) (NN body))))
      (, ,)
      (S
        (VP
          (VP (VBG originating)
            (PP (IN from)
              (NP
                (NP (DT the) (JJ left) (NN ventricle))
                (PP (IN of)
                  (NP (DT the) (NN heart))))))
          (CC and)
          (VP (VBG bringing)
            (NP (JJ oxygenated) (NN blood))
            (PP (TO to)
              (NP
                (NP (DT all) (NNS parts))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN body))
                    (PP (IN in)
                      (NP (DT the) (JJ systemic) (NN circulation)))))))))))
    (. .)))

det(Aorta-2, The-1)
nsubj(artery-12, Aorta-2)
dep(Aorta-2, pronounced-4)
dobj(pronounced-4, ay-OR-tuh-6)
cop(artery-12, is-9)
det(artery-12, the-10)
amod(artery-12, largest-11)
root(ROOT-0, artery-12)
det(body-16, the-14)
amod(body-16, human-15)
prep_in(artery-12, body-16)
dep(artery-12, originating-18)
det(ventricle-22, the-20)
amod(ventricle-22, left-21)
prep_from(originating-18, ventricle-22)
det(heart-25, the-24)
prep_of(ventricle-22, heart-25)
dep(artery-12, bringing-27)
conj_and(originating-18, bringing-27)
amod(blood-29, oxygenated-28)
dobj(bringing-27, blood-29)
det(parts-32, all-31)
prep_to(bringing-27, parts-32)
det(body-35, the-34)
prep_of(parts-32, body-35)
det(circulation-39, the-37)
amod(circulation-39, systemic-38)
prep_in(body-35, circulation-39)

(ROOT
  (S
    (NP (DT An) (NNP Ansible))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hypothetical) (NN machine))
        (UCP
          (ADJP (JJ capable)
            (PP (IN of)
              (NP (JJ superluminal) (NN communication))))
          (CC and)
          (VP (VBN used)
            (PP (IN as)
              (NP
                (NP (DT a) (NN plot) (NN device))
                (PP (IN in)
                  (NP (NN science) (NN fiction) (NN literature)))))))))
    (. .)))

det(Ansible-2, An-1)
nsubj(machine-6, Ansible-2)
cop(machine-6, is-3)
det(machine-6, a-4)
amod(machine-6, hypothetical-5)
root(ROOT-0, machine-6)
amod(machine-6, capable-7)
amod(communication-10, superluminal-9)
prep_of(capable-7, communication-10)
amod(machine-6, used-12)
conj_and(capable-7, used-12)
det(device-16, a-14)
nn(device-16, plot-15)
prep_as(used-12, device-16)
nn(literature-20, science-18)
nn(literature-20, fiction-19)
prep_in(device-16, literature-20)

(ROOT
  (S
    (NP (DT The) (NNPS Angles))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ modern) (JJ English) (NN word))
        (PP (IN for)
          (NP
            (NP (DT a) (JJ Germanic-speaking) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD took)
                  (NP (PRP$ their) (NN name))
                  (PP (IN from)
                    (NP
                      (NP (DT the)
                        (ADJP (JJ cultural) (JJ ancestral))
                        (NN region))
                      (PP (IN of)
                        (NP
                          (NP (NNP Angeln))
                          (, ,)
                          (NP
                            (NP (DT a) (JJ modern) (NN district))
                            (VP (VBN located)
                              (PP (IN in)
                                (NP (NNP Schleswig-Holstein) (, ,) (NNP Germany))))))))))))))))
    (. .)))

det(Angles-2, The-1)
nsubj(word-7, Angles-2)
cop(word-7, is-3)
det(word-7, a-4)
amod(word-7, modern-5)
amod(word-7, English-6)
root(ROOT-0, word-7)
det(people-11, a-9)
amod(people-11, Germanic-speaking-10)
prep_for(word-7, people-11)
nsubj(took-13, people-11)
rcmod(people-11, took-13)
poss(name-15, their-14)
dobj(took-13, name-15)
det(region-20, the-17)
amod(ancestral-19, cultural-18)
amod(region-20, ancestral-19)
prep_from(took-13, region-20)
prep_of(region-20, Angeln-22)
det(district-26, a-24)
amod(district-26, modern-25)
appos(Angeln-22, district-26)
partmod(district-26, located-27)
nn(Germany-31, Schleswig-Holstein-29)
prep_in(located-27, Germany-31)

(ROOT
  (S
    (NP (DT An) (NNP Angel))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN transcendental))
        (VP (VBG being)
          (VP (VBN found)
            (PP (IN in)
              (NP (JJ many) (NNS religions)))))))
    (. .)))

det(Angel-2, An-1)
nsubj(transcendental-5, Angel-2)
cop(transcendental-5, is-3)
det(transcendental-5, a-4)
root(ROOT-0, transcendental-5)
auxpass(found-7, being-6)
partmod(transcendental-5, found-7)
amod(religions-10, many-9)
prep_in(found-7, religions-10)

(ROOT
  (S
    (NP (NNS Aeolus))
    (PRN (-LRB- -LRB-)
      (S
        (NP (NNP Ã) (NNP ⁄) (NNP ÂŒÃ) (NNP ¡) (NNP ÂπÂ) (NNP ´) (NNP Ã) (NNP ⁄) (NNP Â) (NNP ¿) (NNP Ã))
        (VP (VBZ ⁄)
          (S
            (NP (NNP Â) ('' '') (NNP Ã) (NNP ⁄) (NNP Â) (NNP ¿) (NNP Ã) (NNP ∂) (NNP Â))
            (ADJP (JJ ≠)))))
      (-RRB- -RRB-))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN ruler))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS winds))
            (PP (IN in)
              (NP (JJ Greek) (NNP Mythology)))))))
    (. .)))

nsubj(ruler-28, Aeolus-1)
nn(Ã-13, Ã-3)
nn(Ã-13, ⁄-4)
nn(Ã-13, ÂŒÃ-5)
nn(Ã-13, ¡-6)
nn(Ã-13, ÂπÂ-7)
nn(Ã-13, ´-8)
nn(Ã-13, Ã-9)
nn(Ã-13, ⁄-10)
nn(Ã-13, Â-11)
nn(Ã-13, ¿-12)
nsubj(⁄-14, Ã-13)
parataxis(ruler-28, ⁄-14)
nn(Â-23, Â-15)
nn(Â-23, Ã-17)
nn(Â-23, ⁄-18)
nn(Â-23, Â-19)
nn(Â-23, ¿-20)
nn(Â-23, Ã-21)
nn(Â-23, ∂-22)
nsubj(≠-24, Â-23)
xcomp(⁄-14, ≠-24)
cop(ruler-28, was-26)
det(ruler-28, the-27)
root(ROOT-0, ruler-28)
det(winds-31, the-30)
prep_of(ruler-28, winds-31)
amod(Mythology-34, Greek-33)
prep_in(winds-31, Mythology-34)

(ROOT
  (S
    (PP (IN In)
      (NP (NN philosophy)))
    (, ,)
    (NP (DT the) (NN term) (NN Anti-realism))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT any) (NN position))
                (PP (VBG involving)
                  (NP
                    (NP (RB either) (DT the) (NN denial))
                    (PP (IN of)
                      (NP
                        (NP (DT an) (JJ objective) (NN reality))
                        (PP (IN of)
                          (NP
                            (NP (NNS entities))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (JJ certain) (NN type))
                                (CC or)
                                (NP (DT the) (NN denial))))))))))))))
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ verification-transcendent) (NNS statements))
              (PP (IN about)
                (NP
                  (NP (DT a) (NN type))
                  (PP (IN of)
                    (NP (NN entity))))))
            (VP (VBP are)
              (ADJP (DT either) (JJ true)
                (CC or)
                (JJ false)))))))
    (. .)))

prep_in(used-8, philosophy-2)
det(Anti-realism-6, the-4)
nn(Anti-realism-6, term-5)
nsubjpass(used-8, Anti-realism-6)
xsubj(describe-10, Anti-realism-6)
auxpass(used-8, is-7)
root(ROOT-0, used-8)
aux(describe-10, to-9)
xcomp(used-8, describe-10)
det(position-12, any-11)
dobj(describe-10, position-12)
advmod(denial-16, either-14)
det(denial-16, the-15)
prep_involving(position-12, denial-16)
det(reality-20, an-18)
amod(reality-20, objective-19)
prep_of(denial-16, reality-20)
prep_of(reality-20, entities-22)
det(type-26, a-24)
amod(type-26, certain-25)
prep_of(entities-22, type-26)
det(denial-29, the-28)
prep_of(entities-22, denial-29)
conj_or(type-26, denial-29)
complm(true-40, that-30)
amod(statements-32, verification-transcendent-31)
nsubj(true-40, statements-32)
nsubj(false-42, statements-32)
det(type-35, a-34)
prep_about(statements-32, type-35)
prep_of(type-35, entity-37)
cop(true-40, are-38)
preconj(true-40, either-39)
ccomp(used-8, true-40)
ccomp(used-8, false-42)
conj_or(true-40, false-42)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP
        (NP (DT An) (NNP Arab))
        (-LRB- -LRB-)
        (NP
          (NP
            (NP (NNP Ã˘Â) (POS '))
            (NNP Ã˘Â) (NNP ±) (NNP Ã˘Â))
          (NP (NNP ¨) (NNP Ã˙Â)))
        (: ...))
      (, ,)
      (NP
        (NP (NNP Ã))
        (: ...)
        (NP
          (NP (NNP Â) (NNP ¿))
          (NP (NNS arabi)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ identifies)
              (PP (RB as) (JJ such)
                (PP (IN on)
                  (NP (JJ genealogical) (, ,)
                    (ADJP (JJ linguistic) (, ,)
                      (CC or)
                      (JJ cultural))
                    (NNS grounds)))))))))
    (. .)))

det(Arab-2, An-1)
nsubj(person-21, Arab-2)
poss(Ã˘Â-8, Ã˘Â-4)
nn(Ã˘Â-8, Ã˘Â-6)
nn(Ã˘Â-8, ±-7)
dep(Arab-2, Ã˘Â-8)
nn(Ã˙Â-10, ¨-9)
dep(Ã˘Â-8, Ã˙Â-10)
appos(Arab-2, Ã-13)
nn(¿-16, Â-15)
dep(Ã-13, ¿-16)
dep(¿-16, arabi-17)
cop(person-21, is-19)
det(person-21, a-20)
root(ROOT-0, person-21)
nsubj(identifies-23, person-21)
rcmod(person-21, identifies-23)
advmod(such-25, as-24)
prep(identifies-23, such-25)
amod(grounds-33, genealogical-27)
amod(grounds-33, linguistic-29)
conj_or(linguistic-29, cultural-32)
amod(grounds-33, cultural-32)
prep_on(such-25, grounds-33)

(ROOT
  (S
    (NP (DT The) (NNP Apicomplexa))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ large) (NN group))
        (PP (IN of)
          (NP
            (NP (NNS protists))
            (, ,)
            (VP (VBN characterized)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN presence))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ unique) (NN organelle))
                      (VP (VBN called)
                        (NP (DT an) (JJ apical) (NN complex))
                        (PRN (-LRB- -LRB-)
                          (S
                            (VP (VB see)
                              (ADJP
                                (ADVP (RB also))
                                (JJ apicoplast))))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Apicomplexa-2, The-1)
nsubj(group-6, Apicomplexa-2)
cop(group-6, are-3)
det(group-6, a-4)
amod(group-6, large-5)
root(ROOT-0, group-6)
prep_of(group-6, protists-8)
partmod(protists-8, characterized-10)
det(presence-13, the-12)
agent(characterized-10, presence-13)
det(organelle-17, a-15)
amod(organelle-17, unique-16)
prep_of(presence-13, organelle-17)
partmod(organelle-17, called-18)
det(complex-21, an-19)
amod(complex-21, apical-20)
dobj(called-18, complex-21)
parataxis(called-18, see-23)
advmod(apicoplast-25, also-24)
acomp(see-23, apicoplast-25)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Analgesic))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB colloquially))
          (VBN known)
          (PP (IN as)
            (NP (DT a) (NN painkiller))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT any) (NN member))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ diverse) (NN group))
              (PP (IN of)
                (NP (NNS drugs))))))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB relieve)
                (NP (NN pain))))))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB achieve)
              (NP (NN analgesia))))
          (-RRB- -RRB-))))
    (. .)))

det(Analgesic-2, An-1)
nsubj(member-12, Analgesic-2)
advmod(known-5, colloquially-4)
dep(Analgesic-2, known-5)
det(painkiller-8, a-7)
prep_as(known-5, painkiller-8)
cop(member-12, is-10)
det(member-12, any-11)
root(ROOT-0, member-12)
xsubj(relieve-21, member-12)
det(group-16, the-14)
amod(group-16, diverse-15)
prep_of(member-12, group-16)
prep_of(group-16, drugs-18)
partmod(member-12, used-19)
aux(relieve-21, to-20)
xcomp(used-19, relieve-21)
dobj(relieve-21, pain-22)
dep(member-12, achieve-24)
parataxis(used-19, achieve-24)
dobj(achieve-24, analgesia-25)

(ROOT
  (S
    (NP (DT An) (NNP Antidepressant))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ psychiatric) (NN medication))
        (CC or)
        (NP
          (NP
            (NP
              (NP (JJ other) (NN substance))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (NN nutrient))
                  (CC or)
                  (NP (NN herb)))
                (-RRB- -RRB-)))
            (VP (VBN used)
              (PP (IN for)
                (S
                  (VP (VBG alleviating)
                    (NP (NN depression)
                      (CC or)
                      (NN dysthymia)))))))
          (-LRB- -LRB-)
          (NP (`` `) (JJ milder) ('' ') (NN depression))
          (-RRB- -RRB-))))
    (. .)))

det(Antidepressant-2, An-1)
nsubj(medication-6, Antidepressant-2)
cop(medication-6, is-3)
det(medication-6, a-4)
amod(medication-6, psychiatric-5)
root(ROOT-0, medication-6)
amod(substance-9, other-8)
conj_or(medication-6, substance-9)
dep(substance-9, nutrient-11)
dep(substance-9, herb-13)
conj_or(nutrient-11, herb-13)
partmod(substance-9, used-15)
prepc_for(used-15, alleviating-17)
dobj(alleviating-17, depression-18)
dobj(alleviating-17, dysthymia-20)
conj_or(depression-18, dysthymia-20)
amod(depression-25, milder-23)
dep(substance-9, depression-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NN business)
        (CC and)
        (NN accounting)))
    (, ,)
    (NP (DT an) (NNP Asset))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT a) (JJ probable) (JJ future) (JJ economic) (NN benefit))
            (VP (VBN obtained)
              (CC or)
              (VBN controlled)
              (PP (IN by)
                (NP
                  (NP (DT a) (JJ particular) (NN entity))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN result))
                      (PP (IN of)
                        (NP (DT a) (JJ past) (NN transaction)
                          (CC or)
                          (NN event))))))))))))
    (. .)))

prep_in(defined-9, business-2)
conj_and(business-2, accounting-4)
prep_in(defined-9, accounting-4)
det(Asset-7, an-6)
nsubjpass(defined-9, Asset-7)
auxpass(defined-9, is-8)
root(ROOT-0, defined-9)
det(benefit-15, a-11)
amod(benefit-15, probable-12)
amod(benefit-15, future-13)
amod(benefit-15, economic-14)
prep_as(defined-9, benefit-15)
partmod(benefit-15, obtained-16)
partmod(benefit-15, controlled-18)
conj_or(obtained-16, controlled-18)
det(entity-22, a-20)
amod(entity-22, particular-21)
agent(obtained-16, entity-22)
det(result-25, a-24)
prep_as(entity-22, result-25)
det(transaction-29, a-27)
amod(transaction-29, past-28)
prep_of(result-25, transaction-29)
prep_of(result-25, event-31)
conj_or(transaction-29, event-31)

(ROOT
  (S
    (NP (DT An) (NNP Anode))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN electrode))
        (SBAR
          (WHPP (IN through)
            (WHNP
              (WHNP (WDT which))
              (PRN (-LRB- -LRB-)
                (ADJP (JJ positive))
                (-RRB- -RRB-))))
          (S
            (NP (JJ electric) (NN current))
            (VP (VBZ flows)
              (PP (IN into)
                (NP (DT a) (JJ polarized) (JJ electrical) (NN device))))))))
    (. .)))

det(Anode-2, An-1)
nsubj(electrode-5, Anode-2)
cop(electrode-5, is-3)
det(electrode-5, an-4)
root(ROOT-0, electrode-5)
rel(flows-13, which-7)
dep(which-7, positive-9)
amod(current-12, electric-11)
nsubj(flows-13, current-12)
rcmod(electrode-5, flows-13)
det(device-18, a-15)
amod(device-18, polarized-16)
amod(device-18, electrical-17)
prep_into(flows-13, device-18)

(ROOT
  (S
    (NP (DT An) (NNP Adhesive))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN compound))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ adheres))
              (CC or)
              (VP
                (NP (NNS bonds))
                (ADVP
                  (NP (CD two) (NNS items))
                  (RB together))))))))
    (. .)))

det(Adhesive-2, An-1)
nsubj(compound-5, Adhesive-2)
cop(compound-5, is-3)
det(compound-5, a-4)
root(ROOT-0, compound-5)
nsubj(adheres-7, compound-5)
rcmod(compound-5, adheres-7)
rcmod(compound-5, bonds-9)
conj_or(adheres-7, bonds-9)
num(items-11, two-10)
npadvmod(together-12, items-11)
advmod(bonds-9, together-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP (DT an) (NNP Arrangement))
    (VP (VBZ refers)
      (PP (CC either)
        (PP (TO to)
          (NP
            (NP (DT a) (NN rewriting))
            (PP (IN of)
              (NP
                (NP (DT a) (NN piece))
                (PP (IN of)
                  (NP
                    (NP (JJ existing) (NN music))
                    (PP (IN with)
                      (NP (JJ additional) (JJ new) (NN material)))))))))
        (CC or)
        (PP (TO to)
          (NP
            (NP (DT a) (NN fleshing-out))
            (PP (IN of)
              (NP (DT a) (JJ compositional) (NN sketch)))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (DT a) (JJ lead) (NN sheet)))))))
    (. .)))

prep_in(refers-6, music-2)
det(Arrangement-5, an-4)
nsubj(refers-6, Arrangement-5)
root(ROOT-0, refers-6)
preconj(refers-6, either-7)
det(rewriting-10, a-9)
prep_to(refers-6, rewriting-10)
det(piece-13, a-12)
prep_of(rewriting-10, piece-13)
amod(music-16, existing-15)
prep_of(piece-13, music-16)
amod(material-20, additional-18)
amod(material-20, new-19)
prep_with(music-16, material-20)
det(fleshing-out-24, a-23)
prep_to(refers-6, fleshing-out-24)
conj_or(rewriting-10, fleshing-out-24)
det(sketch-28, a-26)
amod(sketch-28, compositional-27)
prep_of(fleshing-out-24, sketch-28)
det(sheet-34, a-32)
amod(sheet-34, lead-33)
prep_such_as(fleshing-out-24, sheet-34)

(ROOT
  (S
    (NP (DT An) (JJ Alexandrine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN line))
        (PP (IN of)
          (NP (JJ poetic) (NN meter)))))
    (. .)))

det(Alexandrine-2, An-1)
nsubj(line-5, Alexandrine-2)
cop(line-5, is-3)
det(line-5, a-4)
root(ROOT-0, line-5)
amod(meter-8, poetic-7)
prep_of(line-5, meter-8)

(ROOT
  (S
    (NP (DT An) (NNP Anthem))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN composition))
        (PP (TO to)
          (NP
            (NP (DT an) (JJ English) (JJ religious) (NN text))
            (VP (VBN sung)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN context))
                  (PP (IN of)
                    (NP (DT an) (JJ Anglican) (NN service))))))))))
    (. .)))

det(Anthem-2, An-1)
nsubj(composition-5, Anthem-2)
cop(composition-5, is-3)
det(composition-5, a-4)
root(ROOT-0, composition-5)
det(text-10, an-7)
amod(text-10, English-8)
amod(text-10, religious-9)
prep_to(composition-5, text-10)
partmod(text-10, sung-11)
det(context-14, the-13)
prep_in(sung-11, context-14)
det(service-18, an-16)
amod(service-18, Anglican-17)
prep_of(context-14, service-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Acceleration))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP
          (PP (IN as)
            (NP
              (NP (DT the) (NN rate))
              (PP (IN of)
                (NP
                  (NP (NN change))
                  (PP (IN of)
                    (NP (NN velocity)))))))
          (, ,)
          (CC or)
          (PP (IN as)
            (NP
              (NP (DT the) (JJ second) (NN derivative))
              (PP (IN of)
                (NP (NN position))))))
        (PRN (-LRB- -LRB-)
          (PP (IN with)
            (NP
              (NP (NN respect))
              (PP (TO to)
                (NP (NN time)))))
          (-RRB- -RRB-))))
    (. .)))

prep_in(defined-6, physics-2)
nsubjpass(defined-6, Acceleration-4)
auxpass(defined-6, is-5)
root(ROOT-0, defined-6)
det(rate-9, the-8)
prep_as(defined-6, rate-9)
prep_of(rate-9, change-11)
prep_of(change-11, velocity-13)
det(derivative-19, the-17)
amod(derivative-19, second-18)
prep_as(defined-6, derivative-19)
conj_or(rate-9, derivative-19)
prep_of(derivative-19, position-21)
dep(defined-6, with-23)
pobj(with-23, respect-24)
prep_to(respect-24, time-26)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP Ababda))
        (PRN (-LRB- -LRB-)
          (CC or)
          (ADJP (JJ Ababde))
          (-RRB- -RRB-)))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT the) (NNP Gebadei))
          (PP (IN of)
            (NP (NNP Pliny)))
          (, ,)
          (CC and)
          (NP
            (NP (RB possibly) (DT the) (NNP Troglodytes))
            (PP (IN of)
              (NP (JJ other) (JJ classical) (NNS writers)))))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (ADVP (RB nomads))
      (VP (VBG living)
        (PP (IN in)
          (NP
            (NP (DT the) (NN area))
            (PP (IN between)
              (NP
                (NP (DT the) (NNP Nile))
                (CC and)
                (NP (DT the) (NNP Red) (NNP Sea))))
            (, ,)
            (PP (IN in)
              (NP
                (NP (DT the) (NN vicinity))
                (PP (IN of)
                  (NP (NNP Aswan)))))))
        (PP (IN in)
          (NP (NNP Egypt)))))
    (. .)))

det(Ababda-2, The-1)
nsubj(living-24, Ababda-2)
dep(Ababde-5, or-4)
dep(Ababda-2, Ababde-5)
det(Gebadei-9, the-8)
dep(Ababda-2, Gebadei-9)
prep_of(Gebadei-9, Pliny-11)
advmod(Troglodytes-16, possibly-14)
det(Troglodytes-16, the-15)
dep(Ababda-2, Troglodytes-16)
conj_and(Gebadei-9, Troglodytes-16)
amod(writers-20, other-18)
amod(writers-20, classical-19)
prep_of(Troglodytes-16, writers-20)
aux(living-24, are-22)
advmod(living-24, nomads-23)
root(ROOT-0, living-24)
det(area-27, the-26)
prep_in(living-24, area-27)
det(Nile-30, the-29)
prep_between(area-27, Nile-30)
det(Sea-34, the-32)
nn(Sea-34, Red-33)
prep_between(area-27, Sea-34)
conj_and(Nile-30, Sea-34)
det(vicinity-38, the-37)
prep_in(area-27, vicinity-38)
prep_of(vicinity-38, Aswan-40)
prep_in(living-24, Egypt-42)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS Aurochs)
        (CC or)
        (NNS urus))
      (PRN (-LRB- -LRB-)
        (NP (NNP Bos) (NNS primigenius))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ large))
          (NN type))
        (PP (IN of)
          (NP
            (NP (NNS cattle))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (ADJP (JJ prevalent)
                    (PP (IN in)
                      (NP (NNP Europe))))
                  (PP (IN until)
                    (NP
                      (NP (PRP$ its) (NN extinction))
                      (PP (IN in)
                        (NP (CD 1627))))))))))))
    (. .)))

det(Aurochs-2, The-1)
nsubj(type-13, Aurochs-2)
conj_or(Aurochs-2, urus-4)
nsubj(type-13, urus-4)
nn(primigenius-7, Bos-6)
appos(Aurochs-2, primigenius-7)
cop(type-13, was-9)
det(type-13, a-10)
advmod(large-12, very-11)
amod(type-13, large-12)
root(ROOT-0, type-13)
prep_of(type-13, cattle-15)
nsubj(prevalent-18, cattle-15)
cop(prevalent-18, was-17)
rcmod(cattle-15, prevalent-18)
prep_in(prevalent-18, Europe-20)
poss(extinction-23, its-22)
prep_until(prevalent-18, extinction-23)
prep_in(extinction-23, 1627-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NN anatomy)))
    (, ,)
    (NP
      (NP (DT the) (NNPS Anus))
      (PRN (-LRB- -LRB-)
        (FRAG
          (PP (IN from)
            (NP
              (NP (NNP Latin) (NNP Ã) (NNP ≥) (NNP Â) (NNP ™) (NN nus) ('' '') (NN ring))
              (PRN (-LRB- -LRB-)
                (NP (NN circle))
                (-RRB- -RRB-))))
          (, ,)
          (NP (NNS anus))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ external) (NN opening))
        (PP (IN of)
          (NP (DT the) (NN rectum)))))
    (. .)))

prep_in(opening-26, anatomy-2)
det(Anus-5, the-4)
nsubj(opening-26, Anus-5)
dep(anus-20, from-7)
nn(ring-15, Latin-8)
nn(ring-15, Ã-9)
nn(ring-15, ≥-10)
nn(ring-15, Â-11)
nn(ring-15, ™-12)
nn(ring-15, nus-13)
pobj(from-7, ring-15)
appos(ring-15, circle-17)
dep(Anus-5, anus-20)
cop(opening-26, is-23)
det(opening-26, the-24)
amod(opening-26, external-25)
root(ROOT-0, opening-26)
det(rectum-29, the-28)
prep_of(opening-26, rectum-29)

(ROOT
  (S
    (NP (DT The) (NNP Acantharea))
    (VP
      (VP (VBP are)
        (NP
          (NP (DT a) (JJ small) (NN group))
          (PP (IN of)
            (NP (NN radiolarian) (NN protozoa)))))
      (, ,)
      (VP (VBD distinguished)
        (ADVP (RB mainly))
        (PP (IN by)
          (NP (PRP$ their) (NNS skeletons)))))
    (. .)))

det(Acantharea-2, The-1)
nsubj(group-6, Acantharea-2)
cop(group-6, are-3)
det(group-6, a-4)
amod(group-6, small-5)
root(ROOT-0, group-6)
nn(protozoa-9, radiolarian-8)
prep_of(group-6, protozoa-9)
dep(group-6, distinguished-11)
advmod(distinguished-11, mainly-12)
poss(skeletons-15, their-14)
prep_by(distinguished-11, skeletons-15)

(ROOT
  (S
    (NP (NNP Anglesey))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT a) (NN county))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ includes)
              (NP
                (NP (NNP Holy) (NNP Island))
                (CC and)
                (NP (JJ other) (JJ nearby) (JJ small) (NNS islands))))))))
    (. .)))

nsubj(county-5, Anglesey-1)
cop(county-5, is-2)
advmod(county-5, also-3)
det(county-5, a-4)
root(ROOT-0, county-5)
nsubj(includes-7, county-5)
rcmod(county-5, includes-7)
nn(Island-9, Holy-8)
dobj(includes-7, Island-9)
amod(islands-14, other-11)
amod(islands-14, nearby-12)
amod(islands-14, small-13)
dobj(includes-7, islands-14)
conj_and(Island-9, islands-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (ADVP (RB Affinity))
    (, ,)
    (PP (IN in)
      (NP (NN etymology)))
    (NP (NNP Affinity))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN opposite))
        (PP (IN of)
          (NP (NN infinity)))))
    (. .)))

advmod(opposite-8, Affinity-1)
prep_in(opposite-8, etymology-4)
nsubj(opposite-8, Affinity-5)
cop(opposite-8, is-6)
det(opposite-8, the-7)
root(ROOT-0, opposite-8)
prep_of(opposite-8, infinity-10)

(ROOT
  (S
    (NP (DT An) (NNP Antacid))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN substance))
        (, ,)
        (RRC
          (ADVP (RB generally))
          (NP
            (NP (DT a) (NN base))
            (CC or)
            (NP (JJ basic) (NN salt))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ counteracts)
              (NP (NN stomach))
              (ADVP (RB acidity)))))))
    (. .)))

det(Antacid-2, An-1)
nsubj(substance-5, Antacid-2)
cop(substance-5, is-3)
det(substance-5, any-4)
root(ROOT-0, substance-5)
advmod(base-9, generally-7)
det(base-9, a-8)
rcmod(substance-5, base-9)
amod(salt-12, basic-11)
rcmod(substance-5, salt-12)
conj_or(base-9, salt-12)
nsubj(counteracts-15, which-14)
rcmod(substance-5, counteracts-15)
dobj(counteracts-15, stomach-16)
advmod(counteracts-15, acidity-17)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ organic) (NN chemistry)))
    (, ,)
    (NP
      (NP (DT an) (NN Alkene))
      (, ,)
      (NP (NN olefin))
      (, ,)
      (CC or)
      (NP (NN olefine)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ unsaturated) (NN chemical) (NN compound))
        (VP (VBG containing)
          (NP
            (NP
              (QP (IN at) (JJS least) (CD one)))
            (NP (JJ carbon-to-carbon) (JJ double) (NN bond))))))
    (. .)))

amod(chemistry-3, organic-2)
prep_in(compound-16, chemistry-3)
det(Alkene-6, an-5)
nsubj(compound-16, Alkene-6)
conj_or(Alkene-6, olefin-8)
nsubj(compound-16, olefin-8)
conj_or(Alkene-6, olefine-11)
nsubj(compound-16, olefine-11)
cop(compound-16, is-12)
det(compound-16, an-13)
amod(compound-16, unsaturated-14)
nn(compound-16, chemical-15)
root(ROOT-0, compound-16)
partmod(compound-16, containing-17)
quantmod(one-20, at-18)
mwe(at-18, least-19)
pobj(at-18, least-19)
dobj(containing-17, one-20)
iobj(containing-17, one-20)
amod(bond-23, carbon-to-carbon-21)
amod(bond-23, double-22)
dobj(containing-17, bond-23)
dep(one-20, bond-23)

(ROOT
  (S
    (NP (DT An) (NNP Allene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN hydrocarbon))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP
              (NP (CD one) (NN atom))
              (PP (IN of)
                (NP (NN carbon))))
            (VP (VBZ is)
              (VP (VBN connected)
                (PP (IN by)
                  (NP (JJ double) (NNS bonds)))
                (PP (IN with)
                  (NP
                    (NP (CD two) (JJ other) (NNS atoms))
                    (PP (IN of)
                      (NP (NN carbon)))))))))))
    (. .)))

det(Allene-2, An-1)
nsubj(hydrocarbon-5, Allene-2)
cop(hydrocarbon-5, is-3)
det(hydrocarbon-5, a-4)
root(ROOT-0, hydrocarbon-5)
rel(connected-13, which-7)
num(atom-9, one-8)
nsubjpass(connected-13, atom-9)
prep_of(atom-9, carbon-11)
auxpass(connected-13, is-12)
rcmod(hydrocarbon-5, connected-13)
amod(bonds-16, double-15)
agent(connected-13, bonds-16)
num(atoms-20, two-18)
amod(atoms-20, other-19)
prep_with(connected-13, atoms-20)
prep_of(atoms-20, carbon-22)

(ROOT
  (S
    (NP (DT An) (NNP Antianginal))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN drug))
        (VP (VBN used)
          (PP (IN in)
            (NP
              (NP (DT the) (NN treatment))
              (PP (IN of)
                (NP
                  (NP (NN angina) (NNS pectoris))
                  (, ,)
                  (NP
                    (NP (DT a) (NN symptom))
                    (PP (IN of)
                      (NP (JJ ischaemic) (NN heart) (NN disease)))))))))))
    (. .)))

det(Antianginal-2, An-1)
nsubj(drug-5, Antianginal-2)
cop(drug-5, is-3)
det(drug-5, any-4)
root(ROOT-0, drug-5)
partmod(drug-5, used-6)
det(treatment-9, the-8)
prep_in(used-6, treatment-9)
nn(pectoris-12, angina-11)
prep_of(treatment-9, pectoris-12)
det(symptom-15, a-14)
appos(pectoris-12, symptom-15)
amod(disease-19, ischaemic-17)
nn(disease-19, heart-18)
prep_of(symptom-15, disease-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT The) (NNPS Abipones))
      (VP (VBD were)
        (NP
          (NP (DT a) (NN tribe))
          (PP (IN of)
            (NP
              (NP (NNP South) (NNP American) (NNPS Indians))
              (PP (IN of)
                (NP (NNP Guaycuran) (NN stock))))))
        (S
          (ADVP (RB recently))
          (VP (VBG inhabiting)
            (NP
              (NP (DT the) (NN territory))
              (VP (VBG lying)
                (PP (IN between)
                  (NP (NNP Santa) (NNP Fe)
                    (CC and)
                    (NNP St.)))))))))
    (NP (DT The) (NNP Azawakh))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ sighthound) (NN dog) (NN breed))
        (PP (IN from)
          (NP (NNP Africa)))))
    (. .)))

det(Abipones-2, The-1)
nsubj(tribe-5, Abipones-2)
cop(tribe-5, were-3)
det(tribe-5, a-4)
dep(breed-29, tribe-5)
nn(Indians-9, South-7)
nn(Indians-9, American-8)
prep_of(tribe-5, Indians-9)
nn(stock-12, Guaycuran-11)
prep_of(Indians-9, stock-12)
advmod(inhabiting-14, recently-13)
xcomp(tribe-5, inhabiting-14)
det(territory-16, the-15)
dobj(inhabiting-14, territory-16)
partmod(territory-16, lying-17)
nn(Fe-20, Santa-19)
prep_between(lying-17, Fe-20)
prep_between(lying-17, St.-22)
conj_and(Fe-20, St.-22)
det(Azawakh-24, The-23)
nsubj(breed-29, Azawakh-24)
cop(breed-29, is-25)
det(breed-29, a-26)
amod(breed-29, sighthound-27)
nn(breed-29, dog-28)
root(ROOT-0, breed-29)
prep_from(breed-29, Africa-31)

(ROOT
  (S
    (NP (DT An) (NNP Ammeter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measuring) (NN instrument))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB measure)
                (NP (DT the) (JJ electric) (NN current))
                (PP (IN in)
                  (NP (DT a) (NN circuit)))))))))
    (. .)))

det(Ammeter-2, An-1)
nsubj(instrument-6, Ammeter-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
nn(instrument-6, measuring-5)
root(ROOT-0, instrument-6)
xsubj(measure-9, instrument-6)
partmod(instrument-6, used-7)
aux(measure-9, to-8)
xcomp(used-7, measure-9)
det(current-12, the-10)
amod(current-12, electric-11)
dobj(measure-9, current-12)
det(circuit-15, a-14)
prep_in(measure-9, circuit-15)

(ROOT
  (S
    (NP (DT An) (NNP Anxiolytic))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN drug))
        (VP (VBN prescribed)
          (PP (IN for)
            (NP
              (NP (DT the) (NN treatment))
              (PP (IN of)
                (NP
                  (NP (NNS symptoms))
                  (PP (IN of)
                    (NP (NN anxiety))))))))))
    (. .)))

det(Anxiolytic-2, An-1)
nsubj(drug-5, Anxiolytic-2)
cop(drug-5, is-3)
det(drug-5, a-4)
root(ROOT-0, drug-5)
partmod(drug-5, prescribed-6)
det(treatment-9, the-8)
prep_for(prescribed-6, treatment-9)
prep_of(treatment-9, symptoms-11)
prep_of(symptoms-11, anxiety-13)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNP Artemis))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT the) (NN daughter))
          (PP (IN of)
            (NP (NNP Zeus)
              (CC and)
              (NNP Leto))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ twin) (NN sister))
          (PP (IN of)
            (NP (NNP Apollo))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(daughter-8, mythology-3)
nsubj(daughter-8, Artemis-5)
cop(daughter-8, was-6)
det(daughter-8, the-7)
root(ROOT-0, daughter-8)
prep_of(daughter-8, Zeus-10)
prep_of(daughter-8, Leto-12)
conj_and(Zeus-10, Leto-12)
det(sister-17, the-15)
amod(sister-17, twin-16)
conj_and(daughter-8, sister-17)
prep_of(sister-17, Apollo-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Admiralty))
    (VP (VBD was)
      (ADVP (RB formerly))
      (NP
        (NP (DT the) (NN authority))
        (PP (IN in)
          (NP
            (NP (DT the) (NNP United) (NNP Kingdom))
            (ADJP (JJ responsible)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN command))
                  (PP (IN of)
                    (NP (DT the) (NNP Royal) (NNP Navy))))))))))
    (. .)))

det(Admiralty-2, The-1)
nsubj(authority-6, Admiralty-2)
cop(authority-6, was-3)
advmod(authority-6, formerly-4)
det(authority-6, the-5)
root(ROOT-0, authority-6)
det(Kingdom-10, the-8)
nn(Kingdom-10, United-9)
prep_in(authority-6, Kingdom-10)
amod(Kingdom-10, responsible-11)
det(command-14, the-13)
prep_for(responsible-11, command-14)
det(Navy-18, the-16)
nn(Navy-18, Royal-17)
prep_of(command-14, Navy-18)

(ROOT
  (S
    (NP (DT An) (NNP Anemometer))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN device))
          (PP (IN for)
            (S
              (VP (VBG measuring)
                (NP (NN wind) (NN speed)))))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (CD one) (NN instrument))
          (VP (VBN used)
            (PP (IN in)
              (NP (DT a) (NN weather) (NN station)))))))
    (. .)))

det(Anemometer-2, An-1)
nsubj(device-5, Anemometer-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
prepc_for(device-5, measuring-7)
nn(speed-9, wind-8)
dobj(measuring-7, speed-9)
cop(instrument-14, is-12)
num(instrument-14, one-13)
conj_and(device-5, instrument-14)
partmod(instrument-14, used-15)
det(station-19, a-17)
nn(station-19, weather-18)
prep_in(used-15, station-19)

(ROOT
  (S
    (NP (DT The) (NNP Apeiron))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ cosmological) (NN theory))
        (VP (VBN created)
          (PP (IN by)
            (NP (NNP Anaximander)))
          (PP (IN in)
            (NP (DT the) (JJ 6th) (NN century) (NN BC))))))
    (. .)))

det(Apeiron-2, The-1)
nsubj(theory-6, Apeiron-2)
cop(theory-6, is-3)
det(theory-6, a-4)
amod(theory-6, cosmological-5)
root(ROOT-0, theory-6)
partmod(theory-6, created-7)
agent(created-7, Anaximander-9)
det(BC-14, the-11)
amod(BC-14, 6th-12)
nn(BC-14, century-13)
prep_in(created-7, BC-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (DT a) (NN computer) (POS 's))
          (JJ central) (NN processing) (NN unit))
        (PRN (-LRB- -LRB-)
          (NP (NNP CPU))
          (-RRB- -RRB-))))
    (, ,)
    (NP (DT an) (NNP Accumulator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN register))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (JJ intermediate) (NN arithmetic)
              (CC and)
              (NN logic) (NNS results))
            (VP (VBP are)
              (VP (VBN stored)))))))
    (. .)))

det(computer-3, a-2)
poss(unit-7, computer-3)
amod(unit-7, central-5)
nn(unit-7, processing-6)
prep_in(register-16, unit-7)
abbrev(unit-7, CPU-9)
det(Accumulator-13, an-12)
nsubj(register-16, Accumulator-13)
cop(register-16, is-14)
det(register-16, a-15)
root(ROOT-0, register-16)
rel(stored-25, which-18)
amod(arithmetic-20, intermediate-19)
nsubjpass(stored-25, arithmetic-20)
nn(results-23, logic-22)
conj_and(arithmetic-20, results-23)
nsubjpass(stored-25, results-23)
auxpass(stored-25, are-24)
rcmod(register-16, stored-25)

(ROOT
  (S
    (NP (DT An) (NNP Afterglow))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ broad) (JJ high) (NN arch))
        (PP (IN of)
          (NP
            (NP
              (ADJP (JJ whitish)
                (CC or)
                (JJ rosy))
              (NN light))
            (VP (VBG appearing)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN sky))
                  (ADJP (JJ due)
                    (PP (TO to)
                      (NP
                        (NP
                          (ADJP (RB very) (JJ fine))
                          (NNS particles))
                        (PP (IN of)
                          (NP
                            (NP (NN dust))
                            (VP (VBN suspended)
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ high) (NNS regions))
                                  (PP (IN of)
                                    (NP (DT the) (NN atmosphere))))))))))))))))))
    (. .)))

det(Afterglow-2, An-1)
nsubj(arch-7, Afterglow-2)
cop(arch-7, is-3)
det(arch-7, a-4)
amod(arch-7, broad-5)
amod(arch-7, high-6)
root(ROOT-0, arch-7)
amod(light-12, whitish-9)
conj_or(whitish-9, rosy-11)
amod(light-12, rosy-11)
prep_of(arch-7, light-12)
partmod(light-12, appearing-13)
det(sky-16, the-15)
prep_in(appearing-13, sky-16)
advmod(fine-20, very-19)
amod(particles-21, fine-20)
prep_due_to(sky-16, particles-21)
prep_of(particles-21, dust-23)
partmod(dust-23, suspended-24)
det(regions-28, the-26)
amod(regions-28, high-27)
prep_in(suspended-24, regions-28)
det(atmosphere-31, the-30)
prep_of(regions-28, atmosphere-31)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS phonetics)))
    (, ,)
    (NP (NNP Aspiration))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ strong) (NN burst))
        (PP (IN of)
          (NP (NN air)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ accompanies)
              (NP
                (NP (RB either) (DT the) (NN release))
                (CC or)
                (PRN (, ,)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN case))
                      (PP (IN of)
                        (NP (NN preaspiration)))))
                  (, ,))
                (NP (DT the) (NN closure))
                (PP (IN of)
                  (NP (DT some) (NNS obstruents)))))))))
    (. .)))

prep_in(burst-8, phonetics-2)
nsubj(burst-8, Aspiration-4)
cop(burst-8, is-5)
det(burst-8, the-6)
amod(burst-8, strong-7)
root(ROOT-0, burst-8)
nsubj(accompanies-12, burst-8)
prep_of(burst-8, air-10)
rcmod(burst-8, accompanies-12)
advmod(release-15, either-13)
det(release-15, the-14)
dobj(accompanies-12, release-15)
dep(release-15, in-18)
det(case-20, the-19)
pobj(in-18, case-20)
prep_of(case-20, preaspiration-22)
det(closure-25, the-24)
dobj(accompanies-12, closure-25)
conj_or(release-15, closure-25)
det(obstruents-28, some-27)
prep_of(release-15, obstruents-28)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS economics)
        (CC and)
        (NN finance)))
    (, ,)
    (NP (NN Arbitrage))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN practice))
        (PP (IN of)
          (S
            (VP
              (VP (VBG taking)
                (NP
                  (NP (NN advantage))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN price) (NN differential))
                      (PP (IN between)
                        (NP
                          (QP (CD two)
                            (CC or)
                            (JJR more))
                          (NNS markets)))))))
              (: :)
              (VP (VBG striking)
                (NP
                  (NP (DT a) (NN combination))
                  (PP (IN of)
                    (NP (JJ matching) (NNS deals)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VB capitalize)
                        (PP (IN upon)
                          (NP
                            (NP (DT the) (NN imbalance))
                            (, ,)
                            (NP (DT the) (NN profit))))
                        (S
                          (VP (VBG being)
                            (NP
                              (NP (DT the) (NN difference))
                              (PP (IN between)
                                (NP (DT the) (NN market) (NNS prices))))))))))))))))
    (. .)))

prep_in(practice-9, economics-2)
conj_and(economics-2, finance-4)
prep_in(practice-9, finance-4)
nsubj(practice-9, Arbitrage-6)
cop(practice-9, is-7)
det(practice-9, the-8)
root(ROOT-0, practice-9)
prepc_of(practice-9, taking-11)
dobj(taking-11, advantage-12)
det(differential-16, a-14)
nn(differential-16, price-15)
prep_of(advantage-12, differential-16)
num(markets-21, two-18)
conj_or(two-18, more-20)
quantmod(two-18, more-20)
num(markets-21, more-20)
prep_between(differential-16, markets-21)
dep(taking-11, striking-23)
det(combination-25, a-24)
dobj(striking-23, combination-25)
nsubj(capitalize-30, combination-25)
amod(deals-28, matching-27)
prep_of(combination-25, deals-28)
rcmod(combination-25, capitalize-30)
det(imbalance-33, the-32)
prep_upon(capitalize-30, imbalance-33)
det(profit-36, the-35)
appos(imbalance-33, profit-36)
cop(difference-39, being-37)
det(difference-39, the-38)
xcomp(capitalize-30, difference-39)
det(prices-43, the-41)
nn(prices-43, market-42)
prep_between(difference-39, prices-43)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT An) (NNP Aquarium))
      (PRN (-LRB- -LRB-)
        (NP (JJ plural) (NNS aquariums)
          (CC or)
          (NN aquaria))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vivarium))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP
                (ADJP
                  (ADVP (IN at) (JJS least))
                  (NP (CD one))
                  (JJ transparent))
                (NN side))
              (SBAR
                (WHPP (IN in)
                  (WHNP (WDT which)))
                (S
                  (NP (JJ water-dwelling) (NNS plants)
                    (CC or)
                    (NNS animals))
                  (VP (VBP are)
                    (VP (VBN kept))))))))))
    (. .)))

det(Aquarium-2, An-1)
nsubj(vivarium-11, Aquarium-2)
amod(aquariums-5, plural-4)
appos(Aquarium-2, aquariums-5)
appos(Aquarium-2, aquaria-7)
conj_or(aquariums-5, aquaria-7)
cop(vivarium-11, is-9)
det(vivarium-11, a-10)
root(ROOT-0, vivarium-11)
partmod(vivarium-11, consisting-12)
advmod(transparent-17, at-14)
pobj(at-14, least-15)
dep(transparent-17, one-16)
amod(side-18, transparent-17)
prep_of(consisting-12, side-18)
rel(kept-26, which-20)
amod(plants-22, water-dwelling-21)
nsubjpass(kept-26, plants-22)
conj_or(plants-22, animals-24)
nsubjpass(kept-26, animals-24)
auxpass(kept-26, are-25)
rcmod(side-18, kept-26)

(ROOT
  (S
    (ADVP (RB Generally))
    (, ,)
    (NP (DT an) (NNP Amplifier))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN device))
        (SBAR
          (WHNP (WDT that) (NNS changes))
          (, ,)
          (S
            (ADVP (RB usually))
            (VP
              (VP (VBZ increases))
              (, ,)
              (NP
                (NP (DT the) (NN amplitude))
                (PP (IN of)
                  (NP (DT a) (NN signal)))))))))
    (. .)))

advmod(device-7, Generally-1)
det(Amplifier-4, an-3)
nsubj(device-7, Amplifier-4)
cop(device-7, is-5)
det(device-7, any-6)
root(ROOT-0, device-7)
det(changes-9, device-7)
nsubj(increases-12, changes-9)
advmod(increases-12, usually-11)
rcmod(device-7, increases-12)
det(amplitude-15, the-14)
dobj(increases-12, amplitude-15)
det(signal-18, a-17)
prep_of(amplitude-15, signal-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Ammunition))
      (, ,)
      (VP
        (ADVP (RB often))
        (VBN referred)
        (PP (TO to)
          (NP
            (QP (RB as) (CD ammo)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ generic) (NN term) (NN meaning))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (DT the) (NN assembly))
              (PP (IN of)))
            (-RRB- -RRB-))
          (NP (DT a) (NN projectile)))
        (CC and)
        (NP (PRP$ its) (NN propellant))))
    (. .)))

nsubj(meaning-13, Ammunition-1)
advmod(referred-4, often-3)
partmod(Ammunition-1, referred-4)
quantmod(ammo-7, as-6)
prep_to(referred-4, ammo-7)
cop(meaning-13, is-9)
det(meaning-13, a-10)
amod(meaning-13, generic-11)
nn(meaning-13, term-12)
root(ROOT-0, meaning-13)
det(assembly-16, the-15)
dep(meaning-13, assembly-16)
prep(assembly-16, of-17)
det(projectile-20, a-19)
dep(meaning-13, projectile-20)
poss(propellant-23, its-22)
conj_and(meaning-13, propellant-23)

(ROOT
  (S
    (NP (DT An) (NNP Antioxidant))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN molecule))
        (ADJP (JJ capable)
          (PP (IN of)
            (S
              (VP (VBG slowing)
                (CC or)
                (VBG preventing)
                (NP
                  (NP (DT the) (NN oxidation))
                  (PP (IN of)
                    (NP (JJ other) (NNS molecules))))))))))
    (. .)))

det(Antioxidant-2, An-1)
nsubj(molecule-5, Antioxidant-2)
cop(molecule-5, is-3)
det(molecule-5, a-4)
root(ROOT-0, molecule-5)
amod(molecule-5, capable-6)
prepc_of(capable-6, slowing-8)
prepc_of(capable-6, preventing-10)
conj_or(slowing-8, preventing-10)
det(oxidation-12, the-11)
dobj(slowing-8, oxidation-12)
amod(molecules-15, other-14)
prep_of(oxidation-12, molecules-15)

(ROOT
  (S
    (NP (DT A) (NN Bit))
    (VP (VBZ is)
      (NP (DT a) (JJ binary) (NN digit))
      (, ,)
      (S
        (VP (VBG taking)
          (NP
            (NP (DT a) (NN value))
            (PP (IN of)
              (NP (DT either) (CD 0)
                (CC or)
                (CD 1)))))))
    (. .)))

det(Bit-2, A-1)
nsubj(digit-6, Bit-2)
cop(digit-6, is-3)
det(digit-6, a-4)
amod(digit-6, binary-5)
root(ROOT-0, digit-6)
partmod(digit-6, taking-8)
xcomp(digit-6, taking-8)
det(value-10, a-9)
dobj(taking-8, value-10)
preconj(0-13, either-12)
prep_of(value-10, 0-13)
prep_of(value-10, 1-15)
conj_or(0-13, 1-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (NP
      (NP (DT a) (NN Byte))
      (PRN (-LRB- -LRB-)
        (VP
          (VP (VBN pronounced) ('' '')
            (NP (NN bite))
            ('' ''))
          (, ,)
          (VP (VBN baÃ)
            (NP (NNP ≈) (NNP Âªt))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN measurement))
            (PP (IN of)
              (NP (NN information) (NN storage))))))
      (, ,)
      (S
        (ADVP (RBS most) (RB often))
        (VP (VBG consisting)
          (PP (IN of)
            (NP (CD eight) (NNS bits))))))
    (. .)))

nn(science-3, computer-2)
prep_in(unit-18, science-3)
det(Byte-5, a-4)
nsubj(unit-18, Byte-5)
dep(Byte-5, pronounced-7)
dobj(pronounced-7, bite-9)
dep(pronounced-7, baÃ-12)
nn(Âªt-14, ≈-13)
dobj(baÃ-12, Âªt-14)
cop(unit-18, is-16)
det(unit-18, a-17)
root(ROOT-0, unit-18)
prep_of(unit-18, measurement-20)
nn(storage-23, information-22)
prep_of(measurement-20, storage-23)
advmod(often-26, most-25)
advmod(consisting-27, often-26)
partmod(unit-18, consisting-27)
xcomp(unit-18, consisting-27)
num(bits-30, eight-29)
prep_of(consisting-27, bits-30)

(ROOT
  (S
    (NP (DT A) (NNP Bridge))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN structure))
        (VP (VBN built)
          (S
            (VP (TO to)
              (VP (VB span)
                (NP
                  (NP (DT a) (NN gorge))
                  (, ,)
                  (NP (NN valley))
                  (, ,)
                  (NP (NN road))
                  (, ,)
                  (NP (NN railroad) (NN track))
                  (, ,)
                  (NP (NN river))
                  (, ,)
                  (NP
                    (NP (NN body))
                    (PP (IN of)
                      (NP (NN water))))
                  (, ,)
                  (CC or)
                  (NP (DT any) (JJ other) (JJ physical) (NN obstacle))))))
          (, ,)
          (PP (IN for)
            (NP
              (NP (DT the) (NN purpose))
              (PP (IN of)
                (S
                  (VP (VBG providing)
                    (NP (NN passage))
                    (PP (IN over)
                      (NP (DT the) (NN obstacle)))))))))))
    (. .)))

det(Bridge-2, A-1)
nsubj(structure-5, Bridge-2)
cop(structure-5, is-3)
det(structure-5, a-4)
root(ROOT-0, structure-5)
xsubj(span-8, structure-5)
partmod(structure-5, built-6)
aux(span-8, to-7)
xcomp(built-6, span-8)
det(gorge-10, a-9)
dobj(span-8, gorge-10)
dobj(span-8, valley-12)
conj_or(gorge-10, valley-12)
dobj(span-8, road-14)
conj_or(gorge-10, road-14)
nn(track-17, railroad-16)
dobj(span-8, track-17)
conj_or(gorge-10, track-17)
dobj(span-8, river-19)
conj_or(gorge-10, river-19)
dobj(span-8, body-21)
conj_or(gorge-10, body-21)
prep_of(body-21, water-23)
det(obstacle-29, any-26)
amod(obstacle-29, other-27)
amod(obstacle-29, physical-28)
dobj(span-8, obstacle-29)
conj_or(gorge-10, obstacle-29)
det(purpose-33, the-32)
prep_for(built-6, purpose-33)
prepc_of(purpose-33, providing-35)
dobj(providing-35, passage-36)
det(obstacle-39, the-38)
prep_over(providing-35, obstacle-39)

(ROOT
  (S
    (NP (DT A) (NNP Bead))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (, ,) (JJ decorative) (NN object))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN pierced)
                (PP (IN for)
                  (NP (VBG threading)
                    (CC or)
                    (VBG stringing)))))))))
    (. .)))

det(Bead-2, A-1)
nsubj(object-8, Bead-2)
cop(object-8, is-3)
det(object-8, a-4)
amod(object-8, small-5)
amod(object-8, decorative-7)
root(ROOT-0, object-8)
nsubjpass(pierced-11, object-8)
auxpass(pierced-11, is-10)
rcmod(object-8, pierced-11)
prep_for(pierced-11, threading-13)
prep_for(pierced-11, stringing-15)
conj_or(threading-13, stringing-15)

(ROOT
  (S
    (NP (NNS Basis))
    (VP (MD may)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT the) (NN value) (NN differential))
            (PP (IN between)
              (NP
                (NP (DT a) (NN future))
                (CC and)
                (NP (DT the) (NN spot) (NN price))))))))
    (. .)))

nsubj(refer-3, Basis-1)
aux(refer-3, may-2)
root(ROOT-0, refer-3)
det(differential-7, the-5)
nn(differential-7, value-6)
prep_to(refer-3, differential-7)
det(future-10, a-9)
prep_between(differential-7, future-10)
det(price-14, the-12)
nn(price-14, spot-13)
prep_between(differential-7, price-14)
conj_and(future-10, price-14)

(ROOT
  (S
    (NP (DT The) (NNPS Bromeliales))
    (VP (VBZ is)
      (NP (DT the) (VBG flowering) (NNS plants)))
    (. .)))

det(Bromeliales-2, The-1)
nsubj(plants-6, Bromeliales-2)
cop(plants-6, is-3)
det(plants-6, the-4)
amod(plants-6, flowering-5)
root(ROOT-0, plants-6)

(ROOT
  (S
    (NP (DT The) (NNPS Brassicales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP (VBG flowering) (NNS plants)))
        (, ,)
        (VP (VBG belonging)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ eurosids) (NNP II) (NN group))
              (PP (IN of)
                (NP (NNS dicotyledons)))))
          (PP (IN under)
            (NP (DT the) (NNP APG) (NNP II) (NN system))))))
    (. .)))

det(Brassicales-2, The-1)
nsubj(order-5, Brassicales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
partmod(order-5, belonging-10)
det(group-15, the-12)
amod(group-15, eurosids-13)
nn(group-15, II-14)
prep_to(belonging-10, group-15)
prep_of(group-15, dicotyledons-17)
det(system-22, the-19)
nn(system-22, APG-20)
nn(system-22, II-21)
prep_under(belonging-10, system-22)

(ROOT
  (S
    (NP (NNS Blindness))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (JJ visual) (NN acuity))
            (PP (IN of)
              (NP
                (NP
                  (QP (JJR less) (IN than) (CD 3)))
                (PP
                  (NP
                    (NP
                      (QP (CD \/) (CD 60)))
                    (, ,)
                    (CC or)
                    (NP
                      (NP (JJ corresponding) (JJ visual) (NN field) (NN loss))
                      (PP (TO to)
                        (NP
                          (QP (JJR less) (IN than) (CD 10))
                          (NNS degrees))))
                    (, ,))
                  (IN in)
                  (NP
                    (NP (DT the) (JJR better) (NN eye))
                    (PP (IN with)
                      (NP
                        (ADJP (JJS best) (JJ possible))
                        (NN correction)))))))))))
    (. .)))

nsubjpass(defined-3, Blindness-1)
auxpass(defined-3, is-2)
root(ROOT-0, defined-3)
amod(acuity-6, visual-5)
prep_as(defined-3, acuity-6)
mwe(than-9, less-8)
quantmod(3-10, than-9)
prep_of(acuity-6, 3-10)
number(60-12, \/-11)
npadvmod(3-10, 60-12)
amod(loss-18, corresponding-15)
amod(loss-18, visual-16)
nn(loss-18, field-17)
npadvmod(3-10, loss-18)
conj_or(60-12, loss-18)
mwe(than-21, less-20)
quantmod(10-22, than-21)
num(degrees-23, 10-22)
prep_to(loss-18, degrees-23)
det(eye-28, the-26)
amod(eye-28, better-27)
prep_in(3-10, eye-28)
dep(possible-31, best-30)
amod(correction-32, possible-31)
prep_with(eye-28, correction-32)

(ROOT
  (S
    (NP (DT A) (NNP Bomber))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ military) (NN aircraft))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB attack)
                (NP (NN ground) (NNS targets)))))
          (, ,)
          (PP (RB primarily) (IN by)
            (S
              (VP (VBG dropping)
                (NP (NNS bombs))))))))
    (. .)))

det(Bomber-2, A-1)
nsubj(aircraft-6, Bomber-2)
cop(aircraft-6, is-3)
det(aircraft-6, a-4)
amod(aircraft-6, military-5)
root(ROOT-0, aircraft-6)
xsubj(attack-9, aircraft-6)
partmod(aircraft-6, designed-7)
aux(attack-9, to-8)
xcomp(designed-7, attack-9)
nn(targets-11, ground-10)
dobj(attack-9, targets-11)
advmod(designed-7, primarily-13)
agent(designed-7, dropping-15)
dobj(dropping-15, bombs-16)

(ROOT
  (S
    (NP (DT The) (NNP Lhop)
      (CC or)
      (NNP Doya))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ little-known) (NN tribe))
        (PP (IN of)
          (NP (JJ southwest) (NNP Bhutan)))))
    (. .)))

det(Lhop-2, The-1)
nsubj(tribe-8, Lhop-2)
conj_or(Lhop-2, Doya-4)
nsubj(tribe-8, Doya-4)
cop(tribe-8, are-5)
det(tribe-8, a-6)
amod(tribe-8, little-known-7)
root(ROOT-0, tribe-8)
amod(Bhutan-11, southwest-10)
prep_of(tribe-8, Bhutan-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS animals)))
    (, ,)
    (NP (DT the) (NNP Brain))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN control) (NN center))
        (PP (IN of)
          (NP (DT the) (JJ central) (JJ nervous) (NN system)))
        (, ,)
        (ADJP (JJ responsible)
          (PP (IN for)
            (NP (NN behavior))))))
    (. .)))

prep_in(center-9, animals-2)
det(Brain-5, the-4)
nsubj(center-9, Brain-5)
cop(center-9, is-6)
det(center-9, the-7)
nn(center-9, control-8)
root(ROOT-0, center-9)
det(system-14, the-11)
amod(system-14, central-12)
amod(system-14, nervous-13)
prep_of(center-9, system-14)
amod(center-9, responsible-16)
prep_for(responsible-16, behavior-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN term) (NNP Biotic))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN condition))
          (PP (IN of)
            (NP (VBG living) (NNS organisms))))))
    (. .)))

det(Biotic-3, The-1)
nn(Biotic-3, term-2)
nsubj(refers-4, Biotic-3)
root(ROOT-0, refers-4)
det(condition-7, the-6)
prep_to(refers-4, condition-7)
amod(organisms-10, living-9)
prep_of(condition-7, organisms-10)

(ROOT
  (S
    (NP (DT A) (NNP Burning-glass))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN convex) (NN lens))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB concentrate)
                (NP
                  (NP (DT the) (NN sun) (POS 's))
                  (NNS rays))
                (PP (IN onto)
                  (NP (DT a) (JJ small) (NN area)))
                (, ,)
                (S
                  (VP
                    (VP (VBG heating)
                      (S
                        (VP (VBG <PRT>)
                          (PRT (RP up))
                          (NP (JJ </PRT>) (DT the) (NN area)))))
                    (CC and)
                    (ADVP (RB thus))
                    (VP (VBG resulting)
                      (PP (IN in)
                        (NP
                          (NP (NN ignition))
                          (PP (IN of)
                            (NP (DT the) (VBN exposed) (NN surface))))))))))))))
    (. .)))

det(Burning-glass-2, A-1)
nsubj(lens-7, Burning-glass-2)
cop(lens-7, is-3)
det(lens-7, a-4)
amod(lens-7, large-5)
nn(lens-7, convex-6)
root(ROOT-0, lens-7)
nsubj(concentrate-10, lens-7)
aux(concentrate-10, can-9)
rcmod(lens-7, concentrate-10)
det(sun-12, the-11)
poss(rays-14, sun-12)
dobj(concentrate-10, rays-14)
det(area-18, a-16)
amod(area-18, small-17)
prep_onto(concentrate-10, area-18)
dep(concentrate-10, heating-20)
xcomp(heating-20, <PRT>-21)
prt(<PRT>-21, up-22)
amod(area-25, </PRT>-23)
det(area-25, the-24)
dobj(<PRT>-21, area-25)
dep(concentrate-10, thus-27)
advmod(heating-20, thus-27)
conj_and(heating-20, thus-27)
dep(concentrate-10, resulting-28)
conj_and(heating-20, resulting-28)
prep_in(resulting-28, ignition-30)
det(surface-34, the-32)
amod(surface-34, exposed-33)
prep_of(ignition-30, surface-34)

(ROOT
  (S
    (NP
      (NP (DT A) (NN banker))
      (CC or)
      (NP (NNP Bank)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ financial) (NN institution))
        (SBAR
          (WHNP (WP$ whose) (JJ primary) (NN activity))
          (S
            (VP (VBZ is)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB act)
                      (PP (IN as)
                        (NP
                          (NP (DT a) (NN payment) (NN agent))
                          (PP (IN for)
                            (NP (NNS customers)))))))
                  (, ,)
                  (CC and)
                  (VP (TO to)
                    (VP
                      (VP (VB borrow)
                        (PRN (, ,)
                          (S
                            (VP (VB lend)))
                          (, ,)))
                      (CC and)
                      (PRN (, ,)
                        (PP (IN in)
                          (NP (DT all) (JJ modern) (NN banking) (NNS systems)))
                        (, ,))
                      (VP (VB create)
                        (NP (NN money))))))))))))
    (. .)))

det(banker-2, A-1)
nsubj(institution-8, banker-2)
conj_or(banker-2, Bank-4)
nsubj(institution-8, Bank-4)
cop(institution-8, is-5)
det(institution-8, a-6)
amod(institution-8, financial-7)
root(ROOT-0, institution-8)
poss(activity-11, institution-8)
amod(activity-11, primary-10)
nsubj(is-12, activity-11)
rcmod(institution-8, is-12)
aux(act-14, to-13)
ccomp(is-12, act-14)
det(agent-18, a-16)
nn(agent-18, payment-17)
prep_as(act-14, agent-18)
prep_for(agent-18, customers-20)
aux(borrow-24, to-23)
ccomp(is-12, borrow-24)
conj_and(act-14, borrow-24)
parataxis(borrow-24, lend-26)
dep(borrow-24, in-30)
det(systems-34, all-31)
amod(systems-34, modern-32)
nn(systems-34, banking-33)
pobj(in-30, systems-34)
conj_and(act-14, create-36)
conj_and(borrow-24, create-36)
dobj(create-36, money-37)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Bundestag))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (NP (NNP '') (NNP Federal) (NNP Diet))
            ('' '')
            (CC or)
            (NP (NNP '') (NNP Lower) (NNP House)))
          (PP (IN of)
            (NP (NNP German) (NNP Parliament) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN parliament))
        (PP (IN of)
          (NP (NNP Germany)))))
    (. .)))

det(Bundestag-2, The-1)
nsubj(parliament-19, Bundestag-2)
nn(Diet-6, Federal-5)
dep(Bundestag-2, Diet-6)
nn(House-11, Lower-10)
dep(Bundestag-2, House-11)
conj_or(Diet-6, House-11)
nn(Parliament-14, German-13)
prep_of(Diet-6, Parliament-14)
cop(parliament-19, is-17)
det(parliament-19, the-18)
root(ROOT-0, parliament-19)
prep_of(parliament-19, Germany-21)

(ROOT
  (S
    (S
      (NP (DT A) (NN Book))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN set)
            (CC or)
            (NN collection))
          (PP (IN of)
            (NP
              (NP (JJ written))
              (, ,)
              (VP (VBN printed))
              (, ,)
              (VP (VBN illustrated)))))))
    (, ,)
    (CC or)
    (S
      (NP
        (NP (JJ blank) (NNS sheets))
        (, ,)
        (VP (VBN made)
          (PP (IN of)
            (NP
              (NP (NN paper))
              (, ,)
              (NP (NN parchment))
              (, ,)
              (CC or)
              (NP (JJ other) (NN material)))))
        (, ,))
      (ADVP (RB usually))
      (VP (VBN fastened)
        (S
          (ADVP (RB together))
          (VP (TO to)
            (VP (VB hinge)
              (PP (IN at)
                (NP (CD one) (NN side))))))))
    (. .)))

det(Book-2, A-1)
nsubj(set-5, Book-2)
cop(set-5, is-3)
det(set-5, a-4)
root(ROOT-0, set-5)
conj_or(set-5, collection-7)
prep_of(set-5, written-9)
partmod(written-9, printed-11)
partmod(written-9, illustrated-13)
amod(sheets-17, blank-16)
nsubj(fastened-30, sheets-17)
xsubj(hinge-33, sheets-17)
partmod(sheets-17, made-19)
prep_of(made-19, paper-21)
prep_of(made-19, parchment-23)
conj_or(paper-21, parchment-23)
amod(material-27, other-26)
prep_of(made-19, material-27)
conj_or(paper-21, material-27)
advmod(fastened-30, usually-29)
conj_or(set-5, fastened-30)
advmod(hinge-33, together-31)
aux(hinge-33, to-32)
xcomp(fastened-30, hinge-33)
num(side-36, one-35)
prep_at(hinge-33, side-36)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (NN regard))
        (PP (TO to)
          (NP (VBG living) (NNS things)))))
    (, ,)
    (NP (DT a) (NN Body))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ integral) (JJ physical) (NN material))
        (PP (IN of)
          (NP (DT an) (NN individual)))))
    (. .)))

amod(things-5, living-4)
prep_with_regard_to(material-13, things-5)
det(Body-8, a-7)
nsubj(material-13, Body-8)
cop(material-13, is-9)
det(material-13, the-10)
amod(material-13, integral-11)
amod(material-13, physical-12)
root(ROOT-0, material-13)
det(individual-16, an-15)
prep_of(material-13, individual-16)

(ROOT
  (S
    (NP (DT The) (NNP Banjo))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ stringed) (NN instrument))
        (VP (VBN developed)
          (PP (IN by)
            (NP
              (NP (JJ enslaved) (NNPS Africans))
              (PP (IN in)
                (NP (DT the) (NNP United) (NNPS States)))
              (, ,)
              (VP (VBN adapted)
                (PP (IN from)
                  (NP (JJ several) (JJ African) (NNS instruments)))))))))
    (. .)))

det(Banjo-2, The-1)
nsubj(instrument-6, Banjo-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, stringed-5)
root(ROOT-0, instrument-6)
partmod(instrument-6, developed-7)
amod(Africans-10, enslaved-9)
agent(developed-7, Africans-10)
det(States-14, the-12)
nn(States-14, United-13)
prep_in(Africans-10, States-14)
partmod(Africans-10, adapted-16)
amod(instruments-20, several-18)
amod(instruments-20, African-19)
prep_from(adapted-16, instruments-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP (NNP Blowfish))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ keyed) (, ,) (JJ symmetric))
          (NN block) (NN cipher))
        (, ,)
        (VP
          (VP (VBN designed)
            (PP (IN in)
              (NP (CD 1993)))
            (PP (IN by)
              (NP (NNP Bruce) (NNP Schneier))))
          (CC and)
          (VP (VBN included)
            (PP (IN in)
              (NP
                (NP (DT a) (JJ large) (NN number))
                (PP (IN of)
                  (NP (NN cipher) (NNS suites)
                    (CC and)
                    (NN encryption) (NNS products)))))))))
    (. .)))

prep_in(cipher-11, cryptography-2)
nsubj(cipher-11, Blowfish-4)
cop(cipher-11, is-5)
det(cipher-11, a-6)
amod(symmetric-9, keyed-7)
amod(cipher-11, symmetric-9)
nn(cipher-11, block-10)
root(ROOT-0, cipher-11)
dep(cipher-11, designed-13)
prep_in(designed-13, 1993-15)
nn(Schneier-18, Bruce-17)
prep_by(designed-13, Schneier-18)
dep(cipher-11, included-20)
conj_and(designed-13, included-20)
det(number-24, a-22)
amod(number-24, large-23)
prep_in(included-20, number-24)
nn(suites-27, cipher-26)
prep_of(number-24, suites-27)
nn(products-30, encryption-29)
prep_of(number-24, products-30)
conj_and(suites-27, products-30)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNS arts)))
    (, ,)
    (NP
      (NP (DT the) (NN Baroque))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ pronounced) (JJ \/) (NN bÃ))
          (NP (NNP ≈) (NNP Â˙) (`` `) (NN rÃ) (NNS ≈) (NNP Â) (NNP ‚) (NNP k) (NNP \/)))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP (DT a) (JJ Western) (JJ cultural) (NN epoch))
      (, ,)
      (S
        (VP (VBG commencing)
          (ADVP (RB roughly))
          (PP (IN at)
            (NP
              (NP (DT the) (NN turn))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ 17th) (NN century))
                  (PP (IN in)
                    (NP (NNP Rome) (, ,) (NNP Italy))))))))))
    (. .)))

det(arts-3, the-2)
prep_in(epoch-25, arts-3)
det(Baroque-6, the-5)
nsubj(epoch-25, Baroque-6)
amod(bÃ-10, pronounced-8)
amod(bÃ-10, \/-9)
dep(Baroque-6, bÃ-10)
nn(\/-19, ≈-11)
nn(\/-19, Â˙-12)
nn(\/-19, rÃ-14)
nn(\/-19, ≈-15)
nn(\/-19, Â-16)
nn(\/-19, ‚-17)
nn(\/-19, k-18)
dep(bÃ-10, \/-19)
cop(epoch-25, was-21)
det(epoch-25, a-22)
amod(epoch-25, Western-23)
amod(epoch-25, cultural-24)
root(ROOT-0, epoch-25)
partmod(epoch-25, commencing-27)
xcomp(epoch-25, commencing-27)
advmod(commencing-27, roughly-28)
det(turn-31, the-30)
prep_at(commencing-27, turn-31)
det(century-35, the-33)
amod(century-35, 17th-34)
prep_of(turn-31, century-35)
nn(Italy-39, Rome-37)
prep_in(century-35, Italy-39)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN computer) (NN networking))
        (CC and)
        (NP (JJ other) (JJ digital) (NNS fields))))
    (, ,)
    (NP (DT the) (NN term) (NN Bandwidth))
    (ADVP (RB often))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN data) (NN rate))
          (VP (VBN measured)
            (PP (IN in)
              (NP (NNS bits)))
            (S
              (VP (VBG \/)
                (NP (PRP s))))
            (, ,)
            (PP (IN for)
              (NP (NN example) (NN network) (NN throughput)))))))
    (. .)))

nn(networking-3, computer-2)
prep_in(refers-13, networking-3)
amod(fields-7, other-5)
amod(fields-7, digital-6)
conj_and(networking-3, fields-7)
prep_in(refers-13, fields-7)
det(Bandwidth-11, the-9)
nn(Bandwidth-11, term-10)
nsubj(refers-13, Bandwidth-11)
advmod(refers-13, often-12)
root(ROOT-0, refers-13)
det(rate-17, a-15)
nn(rate-17, data-16)
prep_to(refers-13, rate-17)
partmod(rate-17, measured-18)
prep_in(measured-18, bits-20)
xcomp(measured-18, \/-21)
dobj(\/-21, s-22)
nn(throughput-27, example-25)
nn(throughput-27, network-26)
prep_for(measured-18, throughput-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Bicycle))
      (, ,)
      (NP (NN cycle))
      (, ,)
      (CC or)
      (NP (NN bike)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pedal-driven) (, ,) (JJ human-powered) (NN vehicle))
        (PP (IN with)
          (NP
            (NP (CD two) (NNS wheels))
            (VP (VBN attached)
              (PP (TO to)
                (NP
                  (NP (DT a) (NN frame))
                  (, ,)
                  (NP
                    (NP (CD one))
                    (PP (IN behind)
                      (NP (DT the) (JJ other)))))))))))
    (. .)))

det(Bicycle-2, The-1)
nsubj(vehicle-13, Bicycle-2)
conj_or(Bicycle-2, cycle-4)
nsubj(vehicle-13, cycle-4)
conj_or(Bicycle-2, bike-7)
nsubj(vehicle-13, bike-7)
cop(vehicle-13, is-8)
det(vehicle-13, a-9)
amod(vehicle-13, pedal-driven-10)
amod(vehicle-13, human-powered-12)
root(ROOT-0, vehicle-13)
num(wheels-16, two-15)
prep_with(vehicle-13, wheels-16)
partmod(wheels-16, attached-17)
det(frame-20, a-19)
prep_to(attached-17, frame-20)
appos(frame-20, one-22)
det(other-25, the-24)
prep_behind(one-22, other-25)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ inorganic) (NN chemistry)))
    (, ,)
    (NP
      (NP (NNP Bicarbonate))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ IUPAC-recommended) (NN nomenclature))
          (: :)
          (NP (NN hydrogencarbonate)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ intermediate) (NN form))
        (PP (IN in)
          (NP
            (NP (DT the) (NN deprotonation))
            (PP (IN of)
              (NP (JJ carbonic) (NN acid)))))))
    (. .)))

amod(chemistry-3, inorganic-2)
prep_in(form-15, chemistry-3)
nsubj(form-15, Bicarbonate-5)
amod(nomenclature-8, IUPAC-recommended-7)
dep(Bicarbonate-5, nomenclature-8)
dep(nomenclature-8, hydrogencarbonate-10)
cop(form-15, is-12)
det(form-15, an-13)
amod(form-15, intermediate-14)
root(ROOT-0, form-15)
det(deprotonation-18, the-17)
prep_in(form-15, deprotonation-18)
amod(acid-21, carbonic-20)
prep_of(deprotonation-18, acid-21)

(ROOT
  (S
    (NP (DT A) (NNP Boat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN watercraft))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP
                (VP (VB float))
                (CC or)
                (VP
                  (NP (NN plane))
                  (PP (IN on)
                    (NP (NN water))))
                (, ,)
                (CC and)
                (VP (VB provide)
                  (NP (NN transport))
                  (PP (IN over)
                    (NP (PRP it))))))))))
    (. .)))

det(Boat-2, A-1)
nsubj(watercraft-5, Boat-2)
cop(watercraft-5, is-3)
det(watercraft-5, a-4)
root(ROOT-0, watercraft-5)
xsubj(float-8, watercraft-5)
partmod(watercraft-5, designed-6)
aux(float-8, to-7)
xcomp(designed-6, float-8)
xcomp(designed-6, plane-10)
conj_or(float-8, plane-10)
prep_on(plane-10, water-12)
xcomp(designed-6, provide-15)
conj_and(float-8, provide-15)
dobj(provide-15, transport-16)
prep_over(provide-15, it-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN programming)))
    (, ,)
    (NP
      (NP (NNP BASIC))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT an) (NN acronym))
          (PP (IN for)
            (NP
              (NP (NNP Beginner) (POS 's))
              (NNP All-purpose) (NNP Symbolic) (NNP Instruction) (NNP Code))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP (JJ high-level) (NN programming) (NNS languages)))))
    (. .)))

nn(programming-3, computer-2)
prep_in(family-19, programming-3)
nsubj(family-19, BASIC-5)
det(acronym-8, an-7)
dep(BASIC-5, acronym-8)
poss(Code-15, Beginner-10)
nn(Code-15, All-purpose-12)
nn(Code-15, Symbolic-13)
nn(Code-15, Instruction-14)
prep_for(acronym-8, Code-15)
cop(family-19, is-17)
det(family-19, a-18)
root(ROOT-0, family-19)
amod(languages-23, high-level-21)
nn(languages-23, programming-22)
prep_of(family-19, languages-23)

(ROOT
  (S
    (NP (DT A) (NNP Battleship))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (, ,)
          (ADJP (RB heavily) (JJ armored))
          (NN warship))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ main) (NN battery))
            (VP (VBG consisting)
              (PP (IN of)
                (NP
                  (NP (DT the) (JJS largest) (NN calibre))
                  (PP (IN of)
                    (NP (NNS guns))))))))))
    (. .)))

det(Battleship-2, A-1)
nsubj(warship-9, Battleship-2)
cop(warship-9, is-3)
det(warship-9, a-4)
amod(warship-9, large-5)
advmod(armored-8, heavily-7)
amod(warship-9, armored-8)
root(ROOT-0, warship-9)
det(battery-13, a-11)
amod(battery-13, main-12)
prep_with(warship-9, battery-13)
partmod(battery-13, consisting-14)
det(calibre-18, the-16)
amod(calibre-18, largest-17)
prep_of(consisting-14, calibre-18)
prep_of(calibre-18, guns-20)

(ROOT
  (S
    (NP (NNP Bilskirnir))
    (VP (VBD was)
      (ADVP (RB also))
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT an) (NNP Extreme) (NNP Metal) (NN event))
            (VP (VBN held)
              (ADVP (RB monthly))
              (PP (IN in)
                (NP (NNP Birmingham) (, ,) (NNP UK)))
              (PP (IN by)
                (NP (JJ local) (NNS legends) (NNP Barnabus) (NNP Price)
                  (CC and)
                  (NNP Noj))))))))
    (. .)))

nsubj(name-5, Bilskirnir-1)
cop(name-5, was-2)
advmod(name-5, also-3)
det(name-5, the-4)
root(ROOT-0, name-5)
det(event-10, an-7)
nn(event-10, Extreme-8)
nn(event-10, Metal-9)
prep_of(name-5, event-10)
partmod(event-10, held-11)
advmod(held-11, monthly-12)
nn(UK-16, Birmingham-14)
prep_in(held-11, UK-16)
amod(Price-21, local-18)
nn(Price-21, legends-19)
nn(Price-21, Barnabus-20)
agent(held-11, Price-21)
agent(held-11, Noj-23)
conj_and(Price-21, Noj-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP BrÃ) (NNP ∞) (NNP Â))
      (: --)
      (NP (NN singamen)))
    (PRN (-LRB- -LRB-)
      (PP (IN from)
        (NP (NNP Old) (NNP Norse) (NNP brisinga) ('' '') (NN flaming)))
      (PRN (, ,)
        (S
          (NP
            (NP (JJ glowing))
            ('' '')
            (CC and)
            (NP (NNS men))
            ('' ''))
          (VP (VBP jewellry) (, ,)
            (NP (NN ornament))
            ('' ''))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN necklace))
        (PP (IN of)
          (NP
            (NP (DT the) (NN goddess) (NN Freyja))
            (PRN (-LRB- -LRB-)
              (CC or)
              (NP
                (NP (NNP Frigg))
                (PP (IN in)
                  (NP (DT some) (JJ mythological) (NNS writings))))
              (-RRB- -RRB-))))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(necklace-30, mythology-3)
nn(Â-7, BrÃ-5)
nn(Â-7, ∞-6)
nsubj(necklace-30, Â-7)
dep(Â-7, singamen-9)
dep(necklace-30, from-11)
nn(flaming-16, Old-12)
nn(flaming-16, Norse-13)
nn(flaming-16, brisinga-14)
pobj(from-11, flaming-16)
nsubj(jewellry-23, glowing-18)
conj_and(glowing-18, men-21)
nsubj(jewellry-23, men-21)
dep(from-11, jewellry-23)
dobj(jewellry-23, ornament-25)
cop(necklace-30, is-28)
det(necklace-30, the-29)
root(ROOT-0, necklace-30)
det(Freyja-34, the-32)
nn(Freyja-34, goddess-33)
prep_of(necklace-30, Freyja-34)
dep(Frigg-37, or-36)
dep(Freyja-34, Frigg-37)
det(writings-41, some-39)
amod(writings-41, mythological-40)
prep_in(Frigg-37, writings-41)

(ROOT
  (S
    (PP (IN In)
      (NP (NN complexity) (NN theory)))
    (, ,)
    (NP (NNP BPP))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN class))
        (PP (IN of)
          (NP
            (NP (NN decision) (NNS problems))
            (ADJP (JJ solvable)
              (PP
                (PP (IN by)
                  (NP
                    (NP (DT a) (JJ probabilistic) (NNP Turing) (NN machine))
                    (PP (IN in)
                      (NP (JJ polynomial) (NN time)))))
                (, ,)
                (PP (IN with)
                  (NP
                    (NP (DT an) (NN error) (NN probability))
                    (PP (IN of)
                      (NP
                        (QP (IN at) (JJS most) (CD 1))
                        (QP (CD \/) (CD 3))))))))
            (PP (IN for)
              (NP (DT all) (NNS instances)))))))
    (. .)))

nn(theory-3, complexity-2)
prep_in(class-8, theory-3)
nsubj(class-8, BPP-5)
cop(class-8, is-6)
det(class-8, the-7)
root(ROOT-0, class-8)
nn(problems-11, decision-10)
prep_of(class-8, problems-11)
amod(problems-11, solvable-12)
det(machine-17, a-14)
amod(machine-17, probabilistic-15)
nn(machine-17, Turing-16)
prep_by(solvable-12, machine-17)
amod(time-20, polynomial-19)
prep_in(machine-17, time-20)
det(probability-25, an-23)
nn(probability-25, error-24)
prep_with(solvable-12, probability-25)
quantmod(1-29, at-27)
mwe(at-27, most-28)
pobj(at-27, most-28)
num(3-31, 1-29)
number(3-31, \/-30)
prep_of(probability-25, 3-31)
det(instances-34, all-33)
prep_for(problems-11, instances-34)

(ROOT
  (S
    (NP (NNP Brainfuck))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ esoteric) (NN programming) (NN language))
        (VP (VBN noted)
          (PP (IN for)
            (NP (PRP$ its) (JJ extreme) (NN minimalism))))))
    (. .)))

nsubj(language-6, Brainfuck-1)
cop(language-6, is-2)
det(language-6, an-3)
amod(language-6, esoteric-4)
nn(language-6, programming-5)
root(ROOT-0, language-6)
partmod(language-6, noted-7)
poss(minimalism-11, its-9)
amod(minimalism-11, extreme-10)
prep_for(noted-7, minimalism-11)

(ROOT
  (S
    (NP (DT A) (NNP Bishop))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP (JJ ordained)
            (CC or)
            (JJ consecrated))
          (NN member))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ Christian) (NNS clergy))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ is)
                  (ADVP (RB generally))
                  (VP (VBN entrusted)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN position))
                        (PP (IN of)
                          (NP (NN authority)
                            (CC and)
                            (NN oversight)))))))))))))
    (. .)))

det(Bishop-2, A-1)
nsubj(member-8, Bishop-2)
cop(member-8, is-3)
det(member-8, an-4)
amod(member-8, ordained-5)
conj_or(ordained-5, consecrated-7)
amod(member-8, consecrated-7)
root(ROOT-0, member-8)
det(clergy-12, the-10)
amod(clergy-12, Christian-11)
prep_of(member-8, clergy-12)
nsubjpass(entrusted-16, clergy-12)
auxpass(entrusted-16, is-14)
advmod(entrusted-16, generally-15)
rcmod(clergy-12, entrusted-16)
det(position-19, a-18)
prep_with(entrusted-16, position-19)
prep_of(position-19, authority-21)
prep_of(position-19, oversight-23)
conj_and(authority-21, oversight-23)

(ROOT
  (S
    (NP (DT A) (NN Bus))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN road) (NN vehicle))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB carry)
                (NP
                  (NP (JJ numerous) (NNS passengers))
                  (PP (IN in)
                    (NP (NN addition))))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN driver))
                    (CC and)
                    (NP (RB sometimes) (DT a) (NN conductor))))))))))
    (. .)))

det(Bus-2, A-1)
nsubj(vehicle-7, Bus-2)
cop(vehicle-7, is-3)
det(vehicle-7, a-4)
amod(vehicle-7, large-5)
nn(vehicle-7, road-6)
root(ROOT-0, vehicle-7)
xsubj(carry-10, vehicle-7)
partmod(vehicle-7, designed-8)
aux(carry-10, to-9)
xcomp(designed-8, carry-10)
amod(passengers-12, numerous-11)
dobj(carry-10, passengers-12)
prep_in(passengers-12, addition-14)
det(driver-17, the-16)
prep_to(carry-10, driver-17)
advmod(conductor-21, sometimes-19)
det(conductor-21, a-20)
prep_to(carry-10, conductor-21)
conj_and(driver-17, conductor-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Barge))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ flat-bottomed) (NN boat))
        (, ,)
        (VP (VBN built)
          (ADVP (RB mainly))
          (PP (IN for)
            (NP
              (NP (NN river)
                (CC and)
                (NN canal) (NN transport))
              (PP (IN of)
                (NP (JJ heavy) (NNS goods))))))))
    (. .)))

det(Barge-2, A-1)
nsubj(boat-6, Barge-2)
cop(boat-6, is-3)
det(boat-6, a-4)
amod(boat-6, flat-bottomed-5)
root(ROOT-0, boat-6)
partmod(boat-6, built-8)
advmod(built-8, mainly-9)
nn(transport-14, river-11)
conj_and(river-11, canal-13)
nn(transport-14, canal-13)
prep_for(built-8, transport-14)
amod(goods-17, heavy-16)
prep_of(transport-14, goods-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Bacteriophage))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (`` `) (NNS bacteria) ('' '))
            (CC and)
            (NP
              (NP (JJ Greek))
              (VP (VBN phagein)))
            (, ,) (`` `)
            (S
              (VP (TO to)
                (VP (VB eat) ('' '))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN one))
        (PP (IN of)
          (NP
            (NP (DT a) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS viruses))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VB infect)
                      (NP (NNS bacteria)))))))))))
    (. .)))

det(Bacteriophage-2, A-1)
nsubj(one-19, Bacteriophage-2)
dep(Bacteriophage-2, from-4)
pobj(from-4, bacteria-6)
pobj(from-4, Greek-9)
conj_and(bacteria-6, Greek-9)
partmod(Greek-9, phagein-10)
aux(eat-14, to-13)
pobj(from-4, eat-14)
conj_and(bacteria-6, eat-14)
infmod(bacteria-6, eat-14)
cop(one-19, is-17)
det(one-19, any-18)
root(ROOT-0, one-19)
det(number-22, a-21)
prep_of(one-19, number-22)
prep_of(number-22, viruses-24)
nsubj(infect-26, viruses-24)
rcmod(viruses-24, infect-26)
dobj(infect-26, bacteria-27)

(ROOT
  (S
    (NP (DT A) (NNP Bacteriostat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ biological)
          (CC or)
          (JJ chemical) (NN agent))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ causes)
              (NP (NNS bacteriostasis)))))))
    (. .)))

det(Bacteriostat-2, A-1)
nsubj(agent-8, Bacteriostat-2)
cop(agent-8, is-3)
det(agent-8, a-4)
amod(agent-8, biological-5)
conj_or(biological-5, chemical-7)
amod(agent-8, chemical-7)
root(ROOT-0, agent-8)
nsubj(causes-10, agent-8)
rcmod(agent-8, causes-10)
dobj(causes-10, bacteriostasis-11)

(ROOT
  (S
    (NP (DT A) (NN Bactericide)
      (CC or)
      (NN bacteriocide))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN substance))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ kills)
              (NP
                (NP (NNS bacteria))
                (CC and)
                (PRN (, ,)
                  (ADVP (RB preferably))
                  (, ,))
                (NP (NN nothing) (RB else))))))))
    (. .)))

det(Bactericide-2, A-1)
nsubj(substance-7, Bactericide-2)
conj_or(Bactericide-2, bacteriocide-4)
nsubj(substance-7, bacteriocide-4)
cop(substance-7, is-5)
det(substance-7, a-6)
root(ROOT-0, substance-7)
nsubj(kills-9, substance-7)
rcmod(substance-7, kills-9)
dobj(kills-9, bacteria-10)
dep(bacteria-10, preferably-13)
dobj(kills-9, nothing-15)
conj_and(bacteria-10, nothing-15)
advmod(nothing-15, else-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS electronics)))
    (, ,)
    (NP (DT a) (NN Battery))
    (VP (VBZ is)
      (NP
        (NP
          (QP (CD two)
            (CC or)
            (JJR more))
          (JJ electrochemical) (NNS cells))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP
              (VP (VBP store)
                (NP (NN chemical) (NN energy)))
              (CC and)
              (VP (VBP make)
                (S
                  (NP (PRP it))
                  (ADJP (JJ available)
                    (PP (IN as)
                      (NP (JJ electrical) (NN energy)))))))))))
    (. .)))

prep_in(cells-11, electronics-2)
det(Battery-5, a-4)
nsubj(cells-11, Battery-5)
cop(cells-11, is-6)
num(cells-11, two-7)
conj_or(two-7, more-9)
quantmod(two-7, more-9)
num(cells-11, more-9)
amod(cells-11, electrochemical-10)
root(ROOT-0, cells-11)
nsubj(store-13, cells-11)
nsubj(make-17, cells-11)
rcmod(cells-11, store-13)
nn(energy-15, chemical-14)
dobj(store-13, energy-15)
rcmod(cells-11, make-17)
conj_and(store-13, make-17)
nsubj(available-19, it-18)
xcomp(make-17, available-19)
amod(energy-22, electrical-21)
prep_as(available-19, energy-22)

(ROOT
  (S
    (NP (DT The) (NNP Bassoon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN woodwind) (NN instrument))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ double) (JJ reed) (NN family))
            (SBAR (IN that)
              (SINV
                (ADVP (RB typically))
                (VP (VBZ plays))
                (NP
                  (NP (NN music))
                  (ADJP
                    (ADJP (VBN written)
                      (PP (IN in)
                        (NP (DT the) (NN bass)
                          (CC and)
                          (NN tenor) (NN registers))))
                    (CC and)
                    (ADJP (RB occasionally) (RB even) (JJR higher))))
                (. .)))))))
    (. !)))

det(Bassoon-2, The-1)
nsubj(instrument-6, Bassoon-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
nn(instrument-6, woodwind-5)
root(ROOT-0, instrument-6)
det(family-11, the-8)
amod(family-11, double-9)
amod(family-11, reed-10)
prep_in(instrument-6, family-11)
complm(plays-14, that-12)
advmod(plays-14, typically-13)
dep(family-11, plays-14)
nsubj(plays-14, music-15)
amod(music-15, written-16)
det(registers-22, the-18)
nn(registers-22, bass-19)
conj_and(bass-19, tenor-21)
nn(registers-22, tenor-21)
prep_in(written-16, registers-22)
advmod(higher-26, occasionally-24)
advmod(higher-26, even-25)
amod(music-15, higher-26)
conj_and(written-16, higher-26)

(ROOT
  (S
    (NP (NNS Bioinformatics) (JJR more))
    (ADVP (RB properly))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN creation)
            (CC and)
            (NN advancement))
          (PP (IN of)
            (NP
              (NP (NNS algorithms))
              (, ,)
              (NP (JJ computational)
                (CC and)
                (JJ statistical) (NNS techniques))
              (, ,)
              (CC and)
              (NP (NN theory))))))
      (S
        (VP (TO to)
          (VP (VB solve)
            (NP
              (NP (JJ formal)
                (CC and)
                (JJ practical) (NNS problems))
              (VP (VBG arising)
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN management)
                      (CC and)
                      (NN analysis))
                    (PP (IN of)
                      (NP (JJ biological) (NNS data)))))))))))
    (. .)))

dep(more-2, Bioinformatics-1)
nsubj(refers-4, more-2)
xsubj(solve-21, more-2)
advmod(refers-4, properly-3)
root(ROOT-0, refers-4)
det(creation-7, the-6)
prep_to(refers-4, creation-7)
prep_to(refers-4, advancement-9)
conj_and(creation-7, advancement-9)
prep_of(creation-7, algorithms-11)
amod(techniques-16, computational-13)
conj_and(computational-13, statistical-15)
amod(techniques-16, statistical-15)
prep_of(creation-7, techniques-16)
conj_and(algorithms-11, techniques-16)
prep_of(creation-7, theory-19)
conj_and(algorithms-11, theory-19)
aux(solve-21, to-20)
xcomp(refers-4, solve-21)
amod(problems-25, formal-22)
conj_and(formal-22, practical-24)
amod(problems-25, practical-24)
dobj(solve-21, problems-25)
partmod(problems-25, arising-26)
det(management-29, the-28)
prep_from(arising-26, management-29)
prep_from(arising-26, analysis-31)
conj_and(management-29, analysis-31)
amod(data-34, biological-33)
prep_of(management-29, data-34)

(ROOT
  (S
    (NP (DT The) (NNP Cell))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (JJ structural)
            (CC and)
            (JJ functional))
          (NN unit))
        (PP (IN of)
          (NP
            (ADJP (RB all) (VBN known))
            (JJ living) (NNS organisms)))))
    (. .)))

det(Cell-2, The-1)
nsubj(unit-8, Cell-2)
cop(unit-8, is-3)
det(unit-8, the-4)
amod(unit-8, structural-5)
conj_and(structural-5, functional-7)
amod(unit-8, functional-7)
root(ROOT-0, unit-8)
advmod(known-11, all-10)
amod(organisms-13, known-11)
amod(organisms-13, living-12)
prep_of(unit-8, organisms-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Trade) (NNP Exchange))
      (CC or)
      (NP (NNP Barter)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (NN trade)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (NNS goods)
              (CC or)
              (NNS services))
            (VP (VBP are)
              (ADVP (RB directly))
              (VP (VBN exchanged)
                (PP (IN for)
                  (NP
                    (NP (JJ other) (NNS goods))
                    (CC and)
                    (NP (NNS \/)
                      (CC or)
                      (NNS services))))
                (, ,)
                (PP (IN without)
                  (NP
                    (NP (DT the) (NN use))
                    (PP (IN of)
                      (NP (NN money)))))))))))
    (. .)))

det(Exchange-3, A-1)
nn(Exchange-3, Trade-2)
nsubj(type-8, Exchange-3)
conj_or(Exchange-3, Barter-5)
nsubj(type-8, Barter-5)
cop(type-8, is-6)
det(type-8, a-7)
root(ROOT-0, type-8)
prep_of(type-8, trade-10)
rel(exchanged-18, which-12)
nsubjpass(exchanged-18, goods-13)
conj_or(goods-13, services-15)
nsubjpass(exchanged-18, services-15)
auxpass(exchanged-18, are-16)
advmod(exchanged-18, directly-17)
rcmod(type-8, exchanged-18)
amod(goods-21, other-20)
prep_for(exchanged-18, goods-21)
prep_for(exchanged-18, \/-23)
conj_and(goods-21, \/-23)
conj_and(goods-21, services-25)
conj_or(\/-23, services-25)
det(use-29, the-28)
prep_without(exchanged-18, use-29)
prep_of(use-29, money-31)

(ROOT
  (S
    (S
      (NP (DT A) (NN Brand))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN collection))
          (PP (IN of)
            (NP (NNS images)
              (CC and)
              (NNS ideas)))
          (VP (VBG representing)
            (NP (DT an) (JJ economic) (NN producer))))))
    (: ;)
    (S
      (ADVP (RBR more) (RB specifically))
      (, ,)
      (NP (PRP it))
      (VP (VBZ refers)
        (PP (TO to)
          (NP
            (NP (DT the) (JJ concrete) (NNS symbols))
            (PP (JJ such) (IN as)
              (NP (DT a) (NN name) (, ,) (NN logo) (, ,) (NN slogan) (, ,)
                (CC and)
                (NN design) (NN scheme)))))))
    (. .)))

det(Brand-2, A-1)
nsubj(collection-5, Brand-2)
cop(collection-5, is-3)
det(collection-5, a-4)
root(ROOT-0, collection-5)
prep_of(collection-5, images-7)
prep_of(collection-5, ideas-9)
conj_and(images-7, ideas-9)
partmod(collection-5, representing-10)
det(producer-13, an-11)
amod(producer-13, economic-12)
dobj(representing-10, producer-13)
advmod(specifically-16, more-15)
advmod(refers-19, specifically-16)
nsubj(refers-19, it-18)
parataxis(collection-5, refers-19)
det(symbols-23, the-21)
amod(symbols-23, concrete-22)
prep_to(refers-19, symbols-23)
det(slogan-31, a-26)
nn(slogan-31, name-27)
dep(slogan-31, logo-29)
prep_such_as(symbols-23, slogan-31)
nn(scheme-35, design-34)
prep_such_as(symbols-23, scheme-35)
conj_and(slogan-31, scheme-35)

(ROOT
  (S
    (NP (DT The) (NNP Bavarii))
    (VP (VBD were)
      (NP
        (NP (DT a)
          (ADJP (JJ large)
            (CC and)
            (JJ powerful))
          (NN tribe))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD emerged)
              (ADVP (RB late))
              (PP (IN in)
                (NP (JJ Teutonic) (JJ tribal) (NNS times)))
              (, ,)
              (PP (IN in)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (ADVP (RB now))
                      (NP
                        (NP (DT the) (JJ Czech) (NN Republic))
                        (PRN (-LRB- -LRB-)
                          (NP (NNP Bohemia))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Bavarii-2, The-1)
nsubj(tribe-8, Bavarii-2)
cop(tribe-8, were-3)
det(tribe-8, a-4)
amod(tribe-8, large-5)
conj_and(large-5, powerful-7)
amod(tribe-8, powerful-7)
root(ROOT-0, tribe-8)
nsubj(emerged-10, tribe-8)
rcmod(tribe-8, emerged-10)
advmod(emerged-10, late-11)
amod(times-15, Teutonic-13)
amod(times-15, tribal-14)
prep_in(emerged-10, times-15)
nsubj(Republic-23, what-18)
cop(Republic-23, is-19)
advmod(Republic-23, now-20)
det(Republic-23, the-21)
amod(Republic-23, Czech-22)
prepc_in(emerged-10, Republic-23)
appos(Republic-23, Bohemia-25)

(ROOT
  (S
    (NP (DT The) (NNPS Burgundians)
      (CC or)
      (NNPS Burgundes))
    (VP (VBD were)
      (NP
        (NP (DT an) (NNP East) (NNP Germanic) (NN tribe))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD may)
              (VP (VB have)
                (VP (VBD emigrated)
                  (PP (IN from)
                    (NP
                      (NP (NNP mainland) (NNP Scandinavia))
                      (PP
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN island))
                            (PP (IN of)
                              (NP (NNP Bornholm)))
                            (, ,)
                            (SBAR
                              (WHNP
                                (NP (WP$ whose) (JJ old) (NN form))
                                (PP (IN in)
                                  (NP (NNP Old) (NNP Norse))))
                              (S
                                (ADVP (RB still))
                                (VP (VBD was)
                                  (NP
                                    (NP (NNP Burgundarholmr))
                                    (PRN (-LRB- -LRB-)
                                      (NP
                                        (NP (DT the) (NN Island))
                                        (PP (IN of)
                                          (NP (DT the) (NNPS Burgundians))))
                                      (-RRB- -RRB-))))))))
                        (, ,)
                        (CC and)
                        (PP (IN from)
                          (NP (RB there))))))
                  (PP (TO to)
                    (NP (JJ mainland) (NNP Europe))))))))))
    (. .)))

det(Burgundians-2, The-1)
nsubj(tribe-9, Burgundians-2)
conj_or(Burgundians-2, Burgundes-4)
nsubj(tribe-9, Burgundes-4)
cop(tribe-9, were-5)
det(tribe-9, an-6)
nn(tribe-9, East-7)
nn(tribe-9, Germanic-8)
root(ROOT-0, tribe-9)
nsubj(emigrated-13, tribe-9)
aux(emigrated-13, may-11)
aux(emigrated-13, have-12)
rcmod(tribe-9, emigrated-13)
nn(Scandinavia-16, mainland-15)
prep_from(emigrated-13, Scandinavia-16)
prep_from(emigrated-13, Scandinavia-16')
conj_and(Scandinavia-16, Scandinavia-16')
det(island-19, the-18)
prep_to(Scandinavia-16, island-19)
poss(form-25, island-19)
prep_of(island-19, Bornholm-21)
amod(form-25, old-24)
nsubj(Burgundarholmr-31, form-25)
nn(Norse-28, Old-27)
prep_in(form-25, Norse-28)
advmod(Burgundarholmr-31, still-29)
cop(Burgundarholmr-31, was-30)
rcmod(island-19, Burgundarholmr-31)
det(Island-34, the-33)
dep(Burgundarholmr-31, Island-34)
det(Burgundians-37, the-36)
prep_of(Island-34, Burgundians-37)
prep_from(Scandinavia-16', there-42)
amod(Europe-45, mainland-44)
prep_to(emigrated-13, Europe-45)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Christianity)))
    (, ,)
    (NP
      (NP (NNP Baptism))
      (PRN (-LRB- -LRB-)
        (S
          (VP
            (VP (VBG Greek) (, ,) ('' '')
              (S
                (VP (VBG immersing) ('' ''))))
            (, ,) ('' '')
            (VP (VBG performing))
            (NP (NNS ablutions) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ sacramental) (NN act))
        (PP (IN of)
          (S
            (VP (VBG cleansing)
              (PP (IN in)
                (NP
                  (NP (NN water))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ admits)
                        (NP (CD one))
                        (PP (IN as)
                          (NP
                            (NP (DT a) (JJ full) (NN member))
                            (PP (IN of)
                              (NP (DT the) (NNP Church)))))))))))))))
    (. .)))

prep_in(act-20, Christianity-2)
nsubj(act-20, Baptism-4)
dep(Baptism-4, Greek-6)
xcomp(Greek-6, immersing-9)
dep(Greek-6, performing-13)
dobj(Greek-6, ablutions-14)
cop(act-20, is-17)
det(act-20, the-18)
amod(act-20, sacramental-19)
root(ROOT-0, act-20)
prepc_of(act-20, cleansing-22)
prep_in(cleansing-22, water-24)
nsubj(admits-26, water-24)
rcmod(water-24, admits-26)
dobj(admits-26, one-27)
det(member-31, a-29)
amod(member-31, full-30)
prep_as(admits-26, member-31)
det(Church-34, the-33)
prep_of(member-31, Church-34)

(ROOT
  (S
    (NP (DT The) (NNP Bastarnae))
    (VP (VBD were)
      (NP
        (NP (DT an) (JJ important) (JJ ancient) (NNS people))
        (PP (IN of)
          (NP
            (NP
              (ADJP
                (ADJP (JJ uncertain))
                (PRN (, ,)
                  (CC but)
                  (ADVP (RB probably))
                  (ADJP (JJ mixed) (JJ Germanic-Celtic-Sarmatian))
                  (, ,)))
              (JJ ethnic) (NN origin))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD lived)
                  (PP (IN between)
                    (NP
                      (NP (DT the) (NNP Danube))
                      (CC and)
                      (NP
                        (NP (DT the) (NN Dnieper))
                        (PRN (-LRB- -LRB-)
                          (NP (NNP Strabo))
                          (, ,)
                          (NP (NNP Geography) (, ,) (NNP VII))
                          (, ,)
                          (NP (CD 3,17))
                          (-RRB- -RRB-)))))
                  (PP (IN during)
                    (NP (DT the) (JJ last) (NNS centuries) (NN BC)
                      (CC and)
                      (JJ early) (NNS centuries) (NN AD))))))))))
    (. .)))

det(Bastarnae-2, The-1)
nsubj(people-7, Bastarnae-2)
cop(people-7, were-3)
det(people-7, an-4)
amod(people-7, important-5)
amod(people-7, ancient-6)
root(ROOT-0, people-7)
amod(origin-17, uncertain-9)
dep(Germanic-Celtic-Sarmatian-14, but-11)
dep(Germanic-Celtic-Sarmatian-14, probably-12)
amod(Germanic-Celtic-Sarmatian-14, mixed-13)
dep(uncertain-9, Germanic-Celtic-Sarmatian-14)
amod(origin-17, ethnic-16)
prep_of(people-7, origin-17)
nsubj(lived-20, origin-17)
rcmod(origin-17, lived-20)
det(Danube-23, the-22)
prep_between(lived-20, Danube-23)
det(Dnieper-26, the-25)
prep_between(lived-20, Dnieper-26)
conj_and(Danube-23, Dnieper-26)
appos(Dnieper-26, Strabo-28)
nn(VII-32, Geography-30)
dep(Strabo-28, VII-32)
dep(Strabo-28, 3,17-34)
det(BC-40, the-37)
amod(BC-40, last-38)
nn(BC-40, centuries-39)
prep_during(lived-20, BC-40)
amod(AD-44, early-42)
nn(AD-44, centuries-43)
prep_during(lived-20, AD-44)
conj_and(BC-40, AD-44)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Boomerang))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ simple) (JJ wooden) (NN implement))
        (VP (VBN used)
          (PP (IN for)
            (NP (JJ various) (NNS purposes))))))
    (. .)))

det(Boomerang-2, A-1)
nsubj(implement-7, Boomerang-2)
cop(implement-7, is-3)
det(implement-7, a-4)
amod(implement-7, simple-5)
amod(implement-7, wooden-6)
root(ROOT-0, implement-7)
partmod(implement-7, used-8)
amod(purposes-11, various-10)
prep_for(used-8, purposes-11)

(ROOT
  (S
    (NP (DT The) (NNP Beagle))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN breed))
        (PP (IN of)
          (NP (JJ medium-sized) (NN dog)))))
    (. .)))

det(Beagle-2, The-1)
nsubj(breed-5, Beagle-2)
cop(breed-5, is-3)
det(breed-5, a-4)
root(ROOT-0, breed-5)
amod(dog-8, medium-sized-7)
prep_of(breed-5, dog-8)

(ROOT
  (S
    (S
      (NP (NNP Bioterrorism))
      (VP (VBZ is)
        (NP
          (NP (NN terrorism))
          (PP (IN by)
            (NP (JJ intentional) (NN release)
              (CC or)
              (NN dissemination)))
          (PP (IN of)
            (NP
              (NP (JJ biological) (NNS agents))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (NNS bacteria))
                  (, ,)
                  (NP (NNS viruses)
                    (CC or)
                    (NNS toxins)))
                (-RRB- -RRB-)))))))
    (: ;)
    (S
      (NP (DT these))
      (VP (MD may)
        (VP (VB be)
          (PP
            (PP (IN in)
              (NP (DT a) (NN naturally-occurring)))
            (CC or)
            (PP (IN in)
              (NP (DT a) (JJ human-modified) (NN form)))))))
    (. .)))

nsubj(terrorism-3, Bioterrorism-1)
cop(terrorism-3, is-2)
root(ROOT-0, terrorism-3)
amod(release-6, intentional-5)
prep_by(terrorism-3, release-6)
prep_by(terrorism-3, dissemination-8)
conj_or(release-6, dissemination-8)
amod(agents-11, biological-10)
prep_of(terrorism-3, agents-11)
dep(agents-11, bacteria-13)
appos(bacteria-13, viruses-15)
appos(bacteria-13, toxins-17)
conj_or(viruses-15, toxins-17)
nsubj(be-22, these-20)
aux(be-22, may-21)
parataxis(terrorism-3, be-22)
det(naturally-occurring-25, a-24)
prep_in(be-22, naturally-occurring-25)
det(form-30, a-28)
amod(form-30, human-modified-29)
prep_in(be-22, form-30)
conj_or(naturally-occurring-25, form-30)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP Galjoen))
        (, ,)
        (NP (JJ black) (NN bream))
        (, ,))
      (CC or)
      (NP (JJ blackfish) (, ,) (NNP Dichistius) (NNS capensis)))
    (VP (VBZ is)
      (NP
        (NP (SYM a))
        (PP (IN of)
          (NP (JJ marine) (NN fish)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN found)
                (ADVP (RB only))
                (PP (IN along)
                  (NP
                    (NP (DT the) (NN coast))
                    (PP (IN of)
                      (NP (NNP South) (NNP Africa)))))))))))
    (. .)))

det(Galjoen-2, The-1)
nsubj(a-13, Galjoen-2)
amod(bream-5, black-4)
appos(Galjoen-2, bream-5)
amod(capensis-11, blackfish-8)
dep(capensis-11, Dichistius-10)
conj_or(Galjoen-2, capensis-11)
nsubj(a-13, capensis-11)
cop(a-13, is-12)
root(ROOT-0, a-13)
nsubjpass(found-19, a-13)
amod(fish-16, marine-15)
prep_of(a-13, fish-16)
auxpass(found-19, is-18)
rcmod(a-13, found-19)
advmod(found-19, only-20)
det(coast-23, the-22)
prep_along(found-19, coast-23)
nn(Africa-26, South-25)
prep_of(coast-23, Africa-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN term) (NN Breast))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (JJ upper) (JJ ventral) (NN region))
          (PP (IN of)
            (NP
              (NP (DT an)
                (ADJP
                  (QP (CD animalÃ) (NNS cents)))
                (NNP Â) (NNP •) (NNP Â˙s) (NN torso))
              (, ,)
              (ADVP (RB particularly))
              (NP
                (NP (DT that))
                (PP (IN of)
                  (NP (NNS mammals))))))
          (, ,)
          (PP (VBG including)
            (NP (JJ human) (NNS beings))))))
    (. .)))

det(Breast-3, The-1)
nn(Breast-3, term-2)
nsubj(refers-4, Breast-3)
root(ROOT-0, refers-4)
det(region-9, the-6)
amod(region-9, upper-7)
amod(region-9, ventral-8)
prep_to(refers-4, region-9)
det(torso-17, an-11)
number(cents-13, animalÃ-12)
num(torso-17, cents-13)
nn(torso-17, Â-14)
nn(torso-17, •-15)
nn(torso-17, Â˙s-16)
prep_of(region-9, torso-17)
advmod(torso-17, particularly-19)
dep(torso-17, that-20)
prep_of(that-20, mammals-22)
amod(beings-26, human-25)
prep_including(region-9, beings-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Bunyip))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB usually))
          (VBN translated)
          (PP (IN as) ('' '')
            (NP (NNP devil) ('' '')))
          (ADVP (CC or))
          ('' '')
          (S
            (VP (VBG spirit) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mythical) (NN creature))
        (PP (IN from)
          (NP (JJ Australian) (NN folklore)))))
    (. .)))

det(Bunyip-2, The-1)
nsubj(creature-18, Bunyip-2)
advmod(translated-5, usually-4)
dep(Bunyip-2, translated-5)
prep_as(translated-5, devil-8)
advmod(translated-5, or-10)
xcomp(translated-5, spirit-12)
cop(creature-18, is-15)
det(creature-18, a-16)
amod(creature-18, mythical-17)
root(ROOT-0, creature-18)
amod(folklore-21, Australian-20)
prep_from(creature-18, folklore-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Brick))
    (VP (VBZ is)
      (PP (IN of)
        (NP
          (NP (JJ ceramic) (NN material))
          (VP (VBN used)
            (PP (IN in)
              (NP
                (NP (NN masonry) (NN construction))
                (, ,)
                (VP (VBN laid)
                  (S
                    (VP (VBG using)
                      (NP (NN mortar)))))))))))
    (. .)))

det(Brick-2, A-1)
nsubj(is-3, Brick-2)
root(ROOT-0, is-3)
amod(material-6, ceramic-5)
prep_of(is-3, material-6)
partmod(material-6, used-7)
nn(construction-10, masonry-9)
prep_in(used-7, construction-10)
partmod(construction-10, laid-12)
xcomp(laid-12, using-13)
dobj(using-13, mortar-14)

(ROOT
  (S
    (NP (DT A) (NNP Blizzard))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ severe) (NN winter) (NN storm) (NN condition))
        (VP (VBN characterized)
          (PP (IN by)
            (NP
              (NP (JJ low) (NNS temperatures))
              (, ,)
              (NP (JJ strong) (NNS winds))
              (, ,)
              (CC and)
              (NP (JJ heavy) (JJ blowing) (NN snow)))))))
    (. .)))

det(Blizzard-2, A-1)
nsubj(condition-8, Blizzard-2)
cop(condition-8, is-3)
det(condition-8, a-4)
amod(condition-8, severe-5)
nn(condition-8, winter-6)
nn(condition-8, storm-7)
root(ROOT-0, condition-8)
partmod(condition-8, characterized-9)
amod(temperatures-12, low-11)
agent(characterized-9, temperatures-12)
amod(winds-15, strong-14)
agent(characterized-9, winds-15)
conj_and(temperatures-12, winds-15)
amod(snow-20, heavy-18)
amod(snow-20, blowing-19)
agent(characterized-9, snow-20)
conj_and(temperatures-12, snow-20)

(ROOT
  (S
    (S
      (NP (DT A) (JJ Bikini)
        (CC or)
        (JJ two-piece))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN type))
          (PP (IN of)
            (NP
              (NP
                (NP (NNS women) (POS 's))
                (NN swimsuit))
              (, ,)
              (VP (VBN characterized)
                (PP (IN by)
                  (NP (CD two) (JJ separate) (NNS parts)))))))))
    (: -)
    (S
      (NP (PRP one))
      (VP (VBG covering)
        (S
          (NP
            (NP (DT the) (NNS breasts))
            (, ,)
            (NP
              (NP (DT the) (JJ other))
              (NP
                (NP (DT the) (NN groin))
                (PRN (-LRB- -LRB-)
                  (CC and)
                  (ADVP (RB optionally))
                  (NP (DT the) (NN buttocks))
                  (-RRB- -RRB-))))
            (, ,))
          (VP (VBG leaving)
            (NP
              (NP (DT an) (JJ uncovered) (NN area))
              (PP (IN between)
                (NP (DT the) (CD two) (NNS garments))))))))
    (. .)))

dep(Bikini-2, A-1)
nsubj(type-7, Bikini-2)
conj_or(Bikini-2, two-piece-4)
nsubj(type-7, two-piece-4)
cop(type-7, is-5)
det(type-7, a-6)
root(ROOT-0, type-7)
poss(swimsuit-11, women-9)
prep_of(type-7, swimsuit-11)
partmod(swimsuit-11, characterized-13)
num(parts-17, two-15)
amod(parts-17, separate-16)
agent(characterized-13, parts-17)
nsubj(covering-20, one-19)
parataxis(type-7, covering-20)
det(breasts-22, the-21)
nsubj(leaving-35, breasts-22)
det(other-25, the-24)
appos(breasts-22, other-25)
det(groin-27, the-26)
dep(other-25, groin-27)
dep(buttocks-32, and-29)
dep(buttocks-32, optionally-30)
det(buttocks-32, the-31)
appos(groin-27, buttocks-32)
dep(covering-20, leaving-35)
det(area-38, an-36)
amod(area-38, uncovered-37)
dobj(leaving-35, area-38)
det(garments-42, the-40)
num(garments-42, two-41)
prep_between(area-38, garments-42)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT A) (NNP Ballad))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN poem))
          (VP
            (ADVP (RB usually))
            (VBN set)
            (PP (TO to)
              (NP (NN music)))))))
    (: ;)
    (S
      (ADVP (RB thus))
      (, ,)
      (NP (PRP it))
      (ADVP (RB often))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN story))
          (VP (VBN told)
            (PP (IN in)
              (NP (DT a) (NN song)))))))
    (. .)))

det(Ballad-2, A-1)
nsubj(poem-5, Ballad-2)
cop(poem-5, is-3)
det(poem-5, a-4)
root(ROOT-0, poem-5)
advmod(set-7, usually-6)
partmod(poem-5, set-7)
prep_to(set-7, music-9)
advmod(story-17, thus-11)
nsubj(story-17, it-13)
advmod(story-17, often-14)
cop(story-17, is-15)
det(story-17, a-16)
parataxis(poem-5, story-17)
partmod(story-17, told-18)
det(song-21, a-20)
prep_in(told-18, song-21)

(ROOT
  (S
    (NP (NNP Bison))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ taxonomic) (NN group))
        (VP (VBG containing)
          (NP
            (NP (CD six) (NNS species))
            (PP (IN of)
              (NP (JJ large) (JJ even-toed) (NNS ungulates))))
          (PP (IN within)
            (NP (DT the) (JJ subfamily) (NN Bovinae))))))
    (. .)))

nsubj(group-5, Bison-1)
cop(group-5, is-2)
det(group-5, a-3)
amod(group-5, taxonomic-4)
root(ROOT-0, group-5)
partmod(group-5, containing-6)
num(species-8, six-7)
dobj(containing-6, species-8)
amod(ungulates-12, large-10)
amod(ungulates-12, even-toed-11)
prep_of(species-8, ungulates-12)
det(Bovinae-16, the-14)
amod(Bovinae-16, subfamily-15)
prep_within(containing-6, Bovinae-16)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (NN Bogie))
        (PRN (-LRB- -LRB-)
          (NP (NNP Ã))
          (: --)
          (NP
            (NP (NNP Â) (NNP √) (NNP boÃ))
            (: ...)
            (NP
              (NP (NNP Â))
              (: ...)
              (NP (NN gi))))
          (-RRB- -RRB-)))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP BÃ) (NNP ∑) (NNP Â) (`` `) (NNP -) (NN gÃ) (NNP ≥))
          (NP (NNP Â) (NNP „)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ wheeled) (NN wagon))
        (CC or)
        (NP (NN trolley))))
    (. .)))

det(Bogie-2, A-1)
nsubj(wagon-28, Bogie-2)
dep(Bogie-2, Ã-4)
nn(boÃ-8, Â-6)
nn(boÃ-8, √-7)
dep(Ã-4, boÃ-8)
dep(boÃ-8, Â-10)
dep(Â-10, gi-12)
nn(≥-21, BÃ-15)
nn(≥-21, ∑-16)
nn(≥-21, Â-17)
nn(≥-21, gÃ-20)
dep(Bogie-2, ≥-21)
nn(„-23, Â-22)
dep(≥-21, „-23)
cop(wagon-28, is-25)
det(wagon-28, a-26)
amod(wagon-28, wheeled-27)
root(ROOT-0, wagon-28)
conj_or(wagon-28, trolley-30)

(ROOT
  (S
    (NP (DT A) (NNP Broch))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NNP Iron) (NNP Age) (NN drystone) (JJ hollow-walled) (NN structure))
        (PP (IN of)
          (NP
            (NP (DT a) (NN type))
            (VP (VBN found)
              (ADVP (RB only))
              (PP (IN in)
                (NP (NNP Scotland))))))))
    (. .)))

det(Broch-2, A-1)
nsubj(structure-9, Broch-2)
cop(structure-9, is-3)
det(structure-9, an-4)
nn(structure-9, Iron-5)
nn(structure-9, Age-6)
nn(structure-9, drystone-7)
amod(structure-9, hollow-walled-8)
root(ROOT-0, structure-9)
det(type-12, a-11)
prep_of(structure-9, type-12)
partmod(type-12, found-13)
advmod(found-13, only-14)
prep_in(found-13, Scotland-16)

(ROOT
  (S
    (NP (DT A) (NNP Bat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mammal))
        (PP (IN in)
          (NP (DT the) (NN order) (NN Chiroptera)))))
    (. .)))

det(Bat-2, A-1)
nsubj(mammal-5, Bat-2)
cop(mammal-5, is-3)
det(mammal-5, a-4)
root(ROOT-0, mammal-5)
det(Chiroptera-9, the-7)
nn(Chiroptera-9, order-8)
prep_in(mammal-5, Chiroptera-9)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (, ,)
    (NP (DT a) (NN B-tree))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tree) (NNS data) (NN structure))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ keeps)
                (NP
                  (NP (NNS data))
                  (VP (VBN sorted))))
              (CC and)
              (VP (VBZ allows)
                (NP
                  (NP (NNS searches))
                  (, ,)
                  (NP (NNS insertions))
                  (, ,)
                  (CC and)
                  (NP (NNS deletions)))
                (PP (IN in)
                  (NP (JJ logarithmic) (JJ amortized) (NN time)))))))))
    (. .)))

nn(science-3, computer-2)
prep_in(structure-11, science-3)
det(B-tree-6, a-5)
nsubj(structure-11, B-tree-6)
cop(structure-11, is-7)
det(structure-11, a-8)
nn(structure-11, tree-9)
nn(structure-11, data-10)
root(ROOT-0, structure-11)
nsubj(keeps-13, structure-11)
nsubj(allows-17, structure-11)
rcmod(structure-11, keeps-13)
dobj(keeps-13, data-14)
partmod(data-14, sorted-15)
rcmod(structure-11, allows-17)
conj_and(keeps-13, allows-17)
dobj(allows-17, searches-18)
dobj(allows-17, insertions-20)
conj_and(searches-18, insertions-20)
dobj(allows-17, deletions-23)
conj_and(searches-18, deletions-23)
amod(time-27, logarithmic-25)
amod(time-27, amortized-26)
prep_in(allows-17, time-27)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NN Bacillus))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NNS genus))
          (PP (IN of)
            (NP (JJ rod-shaped) (, ,) (JJ beta-hemolytic) (JJ Gram-positive) (NNS bacteria))))
        (CC and)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP (DT the) (NN division) (NNS Firmicutes))))))
    (. .)))

nsubj(genus-4, Bacillus-1)
cop(genus-4, is-2)
det(genus-4, a-3)
root(ROOT-0, genus-4)
amod(bacteria-10, rod-shaped-6)
amod(bacteria-10, beta-hemolytic-8)
amod(bacteria-10, Gram-positive-9)
prep_of(genus-4, bacteria-10)
det(member-13, a-12)
conj_and(genus-4, member-13)
det(Firmicutes-17, the-15)
nn(Firmicutes-17, division-16)
prep_of(member-13, Firmicutes-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Bestiary))
      (, ,)
      (CC or)
      (NP (NNP Bestiarum) (NNP vocabulum)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN compendium))
        (PP (IN of)
          (NP (NNS beasts)))))
    (. .)))

det(Bestiary-2, A-1)
nsubj(compendium-9, Bestiary-2)
nn(vocabulum-6, Bestiarum-5)
conj_or(Bestiary-2, vocabulum-6)
nsubj(compendium-9, vocabulum-6)
cop(compendium-9, is-7)
det(compendium-9, a-8)
root(ROOT-0, compendium-9)
prep_of(compendium-9, beasts-11)

(ROOT
  (S
    (NP (DT The) (NNP Borzoi))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN breed))
        (PP (IN of)
          (NP (JJ domestic) (NN dog)))
        (PRN (-LRB- -LRB-)
          (S
            (NP (NNS canis))
            (VP (VBZ lupus)
              (NP (NNS familiaris))))
          (-RRB- -RRB-))
        (ADVP (RB also))
        (SBAR
          (S
            (VP (VBD called)
              (NP (DT the) (JJ Russian) (NN Wolfhound)))))))
    (. .)))

det(Borzoi-2, The-1)
nsubj(breed-5, Borzoi-2)
cop(breed-5, is-3)
det(breed-5, a-4)
root(ROOT-0, breed-5)
amod(dog-8, domestic-7)
prep_of(breed-5, dog-8)
nsubj(lupus-11, canis-10)
dep(breed-5, lupus-11)
dobj(lupus-11, familiaris-12)
advmod(breed-5, also-14)
rcmod(breed-5, called-15)
det(Wolfhound-18, the-16)
amod(Wolfhound-18, Russian-17)
dobj(called-15, Wolfhound-18)

(ROOT
  (S
    (NP (DT The) (NNP Basenji))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN breed))
        (PP (IN of)
          (NP (NN hunting) (NN dog)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ originates)
              (PP (IN in)
                (NP (JJ central) (NNP Africa))))))))
    (. .)))

det(Basenji-2, The-1)
nsubj(breed-5, Basenji-2)
cop(breed-5, is-3)
det(breed-5, a-4)
root(ROOT-0, breed-5)
nsubj(originates-10, breed-5)
nn(dog-8, hunting-7)
prep_of(breed-5, dog-8)
rcmod(breed-5, originates-10)
amod(Africa-13, central-12)
prep_in(originates-10, Africa-13)

(ROOT
  (S
    (NP (DT A) (NN Balloon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ flexible) (NN bag))
        (VP (VBN filled)
          (PP (IN with)
            (NP
              (NP (DT a) (NN type))
              (PP (IN of)
                (NP (NN gas)))
              (, ,)
              (PP (JJ such) (IN as)
                (NP (NN helium) (, ,) (NN hydrogen) (, ,) (NNS nitrous) (NN oxide)
                  (CC or)
                  (NN air))))))))
    (. .)))

det(Balloon-2, A-1)
nsubj(bag-6, Balloon-2)
cop(bag-6, is-3)
det(bag-6, a-4)
amod(bag-6, flexible-5)
root(ROOT-0, bag-6)
partmod(bag-6, filled-7)
det(type-10, a-9)
prep_with(filled-7, type-10)
prep_of(type-10, gas-12)
nn(oxide-21, helium-16)
prep_such_as(type-10, hydrogen-18)
conj_or(oxide-21, hydrogen-18)
prep_such_as(type-10, nitrous-20)
conj_or(oxide-21, nitrous-20)
prep_such_as(type-10, oxide-21)
prep_such_as(type-10, air-23)
conj_or(oxide-21, air-23)

(ROOT
  (S
    (NP (DT A) (NNP Biome))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN climatically)
          (CC and)
          (NN geographically))
        (VP (VBN defined)
          (NP
            (NP (NN area))
            (PP (IN of)
              (NP
                (NP
                  (ADJP (RB ecologically) (JJ similar))
                  (JJ climatic) (NNS conditions))
                (PP (JJ such) (IN as)
                  (NP
                    (NP (NNS communities) (NNS plants))
                    (, ,)
                    (NP (NNS animals))
                    (, ,)
                    (CC and)
                    (NP (NN soil) (NNS organisms))))
                (, ,)
                (VP
                  (ADVP (RB often))
                  (VBN referred)
                  (S
                    (VP (TO to)))
                  (PP (IN as)
                    (NP (NNS ecosystems))))))))))
    (. .)))

det(Biome-2, A-1)
nsubj(climatically-5, Biome-2)
cop(climatically-5, is-3)
det(climatically-5, a-4)
root(ROOT-0, climatically-5)
conj_and(climatically-5, geographically-7)
partmod(climatically-5, defined-8)
dobj(defined-8, area-9)
advmod(similar-12, ecologically-11)
amod(conditions-14, similar-12)
amod(conditions-14, climatic-13)
prep_of(area-9, conditions-14)
xsubj(to-28, conditions-14)
nn(plants-18, communities-17)
prep_such_as(conditions-14, plants-18)
prep_such_as(conditions-14, animals-20)
conj_and(plants-18, animals-20)
nn(organisms-24, soil-23)
prep_such_as(conditions-14, organisms-24)
conj_and(plants-18, organisms-24)
advmod(referred-27, often-26)
partmod(conditions-14, referred-27)
xcomp(referred-27, to-28)
prep_as(referred-27, ecosystems-30)

(ROOT
  (S
    (NP (DT The) (NNP BeBox))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ short-lived) (JJ dual) (NN processor) (NN PC))
        (, ,)
        (VP (VBN offered)
          (PP (IN by)
            (NP (NNP Be) (NNP Inc.)))
          (S
            (VP (TO to)
              (VP (VB run)
                (NP
                  (NP (PRP$ their) (JJ own) (VBG operating) (NN system))
                  (, ,)
                  (NP (NNP BeOS)))))))))
    (. .)))

det(BeBox-2, The-1)
nsubj(PC-8, BeBox-2)
cop(PC-8, was-3)
det(PC-8, a-4)
amod(PC-8, short-lived-5)
amod(PC-8, dual-6)
nn(PC-8, processor-7)
root(ROOT-0, PC-8)
xsubj(run-15, PC-8)
partmod(PC-8, offered-10)
nn(Inc.-13, Be-12)
agent(offered-10, Inc.-13)
aux(run-15, to-14)
xcomp(offered-10, run-15)
poss(system-19, their-16)
amod(system-19, own-17)
amod(system-19, operating-18)
dobj(run-15, system-19)
appos(system-19, BeOS-21)

(ROOT
  (S
    (NP (DT The) (NNPS Balkans))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (JJ historic)
            (CC and)
            (JJ geographic))
          (NN name))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT a) (NN region))
                  (PP (IN of)
                    (NP (JJ southeastern) (NNP Europe))))))))))
    (. .)))

det(Balkans-2, The-1)
nsubj(name-8, Balkans-2)
cop(name-8, is-3)
det(name-8, the-4)
amod(name-8, historic-5)
conj_and(historic-5, geographic-7)
amod(name-8, geographic-7)
root(ROOT-0, name-8)
xsubj(describe-11, name-8)
partmod(name-8, used-9)
aux(describe-11, to-10)
xcomp(used-9, describe-11)
det(region-13, a-12)
dobj(describe-11, region-13)
amod(Europe-16, southeastern-15)
prep_of(region-13, Europe-16)

(ROOT
  (S
    (NP (DT A) (NNP Barrister))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN lawyer))
        (VP (VBN found)
          (PP (IN in)
            (NP
              (NP (JJ many) (JJ common) (NN law) (NNS jurisdictions))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP employ)
                    (NP (DT a) (NN split) (NN profession)))))))))
      (PRN (-LRB- -LRB-)
        (ADJP (RB as) (VBN opposed)
          (PP (TO to)
            (NP (DT a) (JJ fused) (NN profession))))
        (-RRB- -RRB-))
      (PP (IN in)
        (NP
          (NP (NN relation))
          (PP (TO to)
            (NP (JJ legal) (NN representation))))))
    (. .)))

det(Barrister-2, A-1)
nsubj(lawyer-5, Barrister-2)
cop(lawyer-5, is-3)
det(lawyer-5, a-4)
root(ROOT-0, lawyer-5)
partmod(lawyer-5, found-6)
amod(jurisdictions-11, many-8)
amod(jurisdictions-11, common-9)
nn(jurisdictions-11, law-10)
prep_in(found-6, jurisdictions-11)
nsubj(employ-13, jurisdictions-11)
rcmod(jurisdictions-11, employ-13)
det(profession-16, a-14)
nn(profession-16, split-15)
dobj(employ-13, profession-16)
advmod(opposed-19, as-18)
dep(lawyer-5, opposed-19)
det(profession-23, a-21)
amod(profession-23, fused-22)
prep_to(opposed-19, profession-23)
prep_in(lawyer-5, relation-26)
amod(representation-29, legal-28)
prep_to(relation-26, representation-29)

(ROOT
  (S
    (NP (DT A) (NNP Borough))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ administrative) (NN division))
        (PP (IN of)
          (NP (JJ various) (NNS countries)))))
    (. .)))

det(Borough-2, A-1)
nsubj(division-6, Borough-2)
cop(division-6, is-3)
det(division-6, an-4)
amod(division-6, administrative-5)
root(ROOT-0, division-6)
amod(countries-9, various-8)
prep_of(division-6, countries-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (DT A) (NNP Bildungsroman))
          (-LRB- -LRB-)
          (NP
            (NP (NNP Ã))
            (: --)
            (NP (NNP Â) (NNP √) (NNP bÃ) (NNP ≈) (NNP ÂªldÃ)))
          (: ...))
        (NP (NNP Â)))
      (: ...)
      (NP (NNP Ã) (NNP ∑) (NNP Â))
      (: --))
    (VP (VBZ s))
    (. .)))

det(Bildungsroman-2, A-1)
nsubj(s-18, Bildungsroman-2)
dep(Bildungsroman-2, Ã-4)
nn(ÂªldÃ-10, Â-6)
nn(ÂªldÃ-10, √-7)
nn(ÂªldÃ-10, bÃ-8)
nn(ÂªldÃ-10, ≈-9)
dep(Ã-4, ÂªldÃ-10)
dep(Bildungsroman-2, Â-12)
nn(Â-16, Ã-14)
nn(Â-16, ∑-15)
dep(Bildungsroman-2, Â-16)
root(ROOT-0, s-18)

(ROOT
  (NP
    (NP (NN roÃ))
    (: --)
    (NP
      (NP (NNP Â))
      (SBAR
        (S (`` `)
          (NP
            (NP (NN maÃ))
            (: --)
            (NP (NNP Â) (NNP ∆) (NNP n) (, ;))
            ('' '')
            (NP
              (NP (NN novel))
              (PP (IN of)
                (NP (NN formation))))
            ('' ''))
          (-RRB- -RRB-)
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ novelistic) (NN genre))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD arose)
                    (PP (IN during)
                      (NP (DT the) (JJ German) (NN Enlightenment)))))))))))
    (. .)))

root(ROOT-0, roÃ-1)
dep(roÃ-1, Â-3)
nsubj(genre-20, maÃ-5)
nn(n-9, Â-7)
nn(n-9, ∆-8)
dep(maÃ-5, n-9)
dep(maÃ-5, novel-12)
prep_of(novel-12, formation-14)
cop(genre-20, is-17)
det(genre-20, a-18)
amod(genre-20, novelistic-19)
rcmod(Â-3, genre-20)
nsubj(arose-22, genre-20)
rcmod(genre-20, arose-22)
det(Enlightenment-26, the-24)
amod(Enlightenment-26, German-25)
prep_during(arose-22, Enlightenment-26)

(ROOT
  (S
    (NP (DT A) (NNP Bachelor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN man))
        (PP (IN above)
          (NP
            (NP (DT the) (NN age))
            (PP (IN of)
              (NP (NN majority)))))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (ADVP (RB never))
              (VP (VBN been)
                (ADJP (VBN married)
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP (VB see)
                        (ADJP (JJ single))))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(Bachelor-2, A-1)
nsubj(man-5, Bachelor-2)
cop(man-5, is-3)
det(man-5, a-4)
root(ROOT-0, man-5)
nsubjpass(married-15, man-5)
det(age-8, the-7)
prep_above(man-5, age-8)
prep_of(age-8, majority-10)
aux(married-15, has-12)
neg(married-15, never-13)
auxpass(married-15, been-14)
rcmod(man-5, married-15)
dep(married-15, see-17)
acomp(see-17, single-18)

(ROOT
  (S
    (NP
      (NP (NN Banacek))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (VBG rotating) (NNP NBC) (NNP Mystery) (NN Movie) (NN series))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ short-lived) (, ,) (JJ light-hearted) (NN detective) (NN TV) (NN series))
        (VP (VBG starring)
          (NP
            (NP (NNP George) (NNP Peppard))
            (PP (IN on)
              (NP (NNP NBC))))
          (PP (IN from)
            (NP (CD 1972) (TO to) (CD 1974))))))
    (. .)))

nsubj(series-19, Banacek-1)
dep(Banacek-1, one-3)
det(series-10, the-5)
amod(series-10, rotating-6)
nn(series-10, NBC-7)
nn(series-10, Mystery-8)
nn(series-10, Movie-9)
prep_of(one-3, series-10)
cop(series-19, was-12)
det(series-19, a-13)
amod(series-19, short-lived-14)
amod(series-19, light-hearted-16)
nn(series-19, detective-17)
nn(series-19, TV-18)
root(ROOT-0, series-19)
partmod(series-19, starring-20)
nn(Peppard-22, George-21)
dobj(starring-20, Peppard-22)
prep_on(Peppard-22, NBC-24)
num(1974-28, 1972-26)
dep(1974-28, to-27)
prep_from(starring-20, 1974-28)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Beast))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN animal))
        (, ,) (RB especially)
        (NP (DT a) (JJ four-legged) (NN mammal))))
    (. .)))

det(Beast-2, A-1)
nsubj(animal-5, Beast-2)
cop(animal-5, is-3)
det(animal-5, an-4)
root(ROOT-0, animal-5)
advmod(animal-5, especially-7)
det(mammal-10, a-8)
amod(mammal-10, four-legged-9)
dep(animal-5, mammal-10)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Bain-marie))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (DT a) (JJ double) (NN boiler))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ French) (NN term))
        (PP (IN for)
          (NP
            (NP (DT a) (NN piece))
            (PP (IN of)
              (NP
                (NP (NN equipment))
                (VP (VBN used)
                  (PRT (RP in))
                  (NP (NN science) (, ,) (NN industry) (, ,)
                    (CC and)
                    (NN cooking))
                  (S
                    (VP
                      (VP (TO to)
                        (VP (VB heat)
                          (NP (NNS materials))
                          (ADVP (RB gently)
                            (CC and)
                            (RB gradually))
                          (PP (TO to)
                            (NP (VBN fixed) (NNS temperatures)))))
                      (, ,)
                      (CC or)
                      (VP (TO to)
                        (VP (VB keep)
                          (S
                            (NP (NNS materials))
                            (ADJP (JJ warm)
                              (PP (IN over)
                                (NP
                                  (NP (DT a) (NN period))
                                  (PP (IN of)
                                    (NP (NN time))))))))))))))))))
    (. .)))

det(Bain-marie-2, A-1)
nsubj(term-14, Bain-marie-2)
advmod(known-5, also-4)
dep(Bain-marie-2, known-5)
det(boiler-9, a-7)
amod(boiler-9, double-8)
prep_as(known-5, boiler-9)
cop(term-14, is-11)
det(term-14, a-12)
amod(term-14, French-13)
root(ROOT-0, term-14)
det(piece-17, a-16)
prep_for(term-14, piece-17)
prep_of(piece-17, equipment-19)
partmod(equipment-19, used-20)
prt(used-20, in-21)
dobj(used-20, science-22)
dobj(used-20, industry-24)
conj_and(science-22, industry-24)
dobj(used-20, cooking-27)
conj_and(science-22, cooking-27)
aux(heat-29, to-28)
dep(used-20, heat-29)
dobj(heat-29, materials-30)
advmod(heat-29, gently-31)
advmod(heat-29, gradually-33)
conj_and(gently-31, gradually-33)
amod(temperatures-36, fixed-35)
prep_to(heat-29, temperatures-36)
aux(keep-40, to-39)
dep(used-20, keep-40)
conj_or(heat-29, keep-40)
nsubj(warm-42, materials-41)
xcomp(keep-40, warm-42)
det(period-45, a-44)
prep_over(warm-42, period-45)
prep_of(period-45, time-47)

(ROOT
  (S
    (NP
      (NP (NNS Calculus))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Latin) (, ,) (NNP Calculus))
          (, ,)
          (NP
            (NP (DT a) (JJ small) (NN stone))
            (VP (VBN used)
              (PP (IN for)
                (S
                  (VP (VBG counting)))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN branch))
        (PP (IN of)
          (NP
            (NP (NNS mathematics))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBZ includes)
                    (NP
                      (NP (DT the) (NN study))
                      (PP (IN of)
                        (NP (NNS limits) (, ,) (NNS derivatives) (, ,) (NNS integrals) (, ,)
                          (CC and)
                          (NN infinite) (NNS series)))))
                  (, ,)
                  (CC and)
                  (VP (VBZ constitutes)
                    (NP
                      (NP (DT a) (JJ major) (NN part))
                      (PP (IN of)
                        (NP (JJ modern) (NN university) (NN education))))))))))))
    (. .)))

nsubj(branch-16, Calculus-1)
nn(Calculus-5, Latin-3)
dep(Calculus-1, Calculus-5)
det(stone-9, a-7)
amod(stone-9, small-8)
appos(Calculus-5, stone-9)
partmod(stone-9, used-10)
prepc_for(used-10, counting-12)
cop(branch-16, is-14)
det(branch-16, a-15)
root(ROOT-0, branch-16)
prep_of(branch-16, mathematics-18)
nsubj(includes-20, mathematics-18)
nsubj(constitutes-35, mathematics-18)
rcmod(mathematics-18, includes-20)
det(study-22, the-21)
dobj(includes-20, study-22)
nn(integrals-28, limits-24)
dep(integrals-28, derivatives-26)
prep_of(study-22, integrals-28)
nn(series-32, infinite-31)
prep_of(study-22, series-32)
conj_and(integrals-28, series-32)
rcmod(mathematics-18, constitutes-35)
conj_and(includes-20, constitutes-35)
det(part-38, a-36)
amod(part-38, major-37)
dobj(constitutes-35, part-38)
amod(education-42, modern-40)
nn(education-42, university-41)
prep_of(part-38, education-42)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Casino))
    (VP (VBZ is) (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (JJ modern) (NN sense))
          (PP (IN of)
            (NP (DT the) (NN word)))))
      (NP
        (NP (DT a) (NN facility))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ houses)
              (CC and)
              (VBZ accommodates)
              (NP
                (NP (JJ certain) (NNS types))
                (PP (IN of)
                  (NP (VBG gambling) (NNS activities)))))))))
    (. .)))

det(Casino-2, A-1)
nsubj(facility-13, Casino-2)
cop(facility-13, is-3)
det(sense-8, the-6)
amod(sense-8, modern-7)
prep_in(facility-13, sense-8)
det(word-11, the-10)
prep_of(sense-8, word-11)
det(facility-13, a-12)
root(ROOT-0, facility-13)
nsubj(houses-15, facility-13)
nsubj(accommodates-17, facility-13)
rcmod(facility-13, houses-15)
rcmod(facility-13, accommodates-17)
conj_and(houses-15, accommodates-17)
amod(types-19, certain-18)
dobj(houses-15, types-19)
amod(activities-22, gambling-21)
prep_of(types-19, activities-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS communications)))
    (, ,)
    (NP (DT a) (NNP Code))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN rule))
        (PP (IN for)
          (S
            (VP (VBG converting)
              (NP
                (NP (DT a) (NN piece))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (NN information))
                      (PRN (-LRB- -LRB-)
                        (PP (IN for)
                          (NP
                            (NP (NN example))
                            (, ,)
                            (NP (DT a) (NN letter) (, ,) (NN word) (, ,) (NN phrase) (, ,)
                              (CC or)
                              (NN gesture))))
                        (-RRB- -RRB-)))
                    (PP
                      (PP (IN into)
                        (NP
                          (NP (DT another) (NN form)
                            (CC or)
                            (NN representation))
                          (PRN (-LRB- -LRB-)
                            (NP
                              (NP (CD one) (NN sign))
                              (PP (IN into)
                                (NP (DT another) (NN sign))))
                            (-RRB- -RRB-))))
                      (, ,) (RB not)
                      (ADVP (RB necessarily))
                      (PP (IN of)
                        (NP (DT the) (JJ same) (NN type))))))))))))
    (. .)))

prep_in(rule-8, communications-2)
det(Code-5, a-4)
nsubj(rule-8, Code-5)
cop(rule-8, is-6)
det(rule-8, a-7)
root(ROOT-0, rule-8)
prepc_for(rule-8, converting-10)
det(piece-12, a-11)
dobj(converting-10, piece-12)
prep_of(piece-12, information-14)
dep(information-14, for-16)
pobj(for-16, example-17)
det(letter-20, a-19)
appos(example-17, letter-20)
appos(example-17, word-22)
conj_or(letter-20, word-22)
appos(example-17, phrase-24)
conj_or(letter-20, phrase-24)
appos(example-17, gesture-27)
conj_or(letter-20, gesture-27)
det(form-31, another-30)
prep_into(information-14, form-31)
prep_into(information-14, representation-33)
conj_or(form-31, representation-33)
num(sign-36, one-35)
dep(form-31, sign-36)
det(sign-39, another-38)
prep_into(sign-36, sign-39)
neg(information-14, not-42)
advmod(information-14, necessarily-43)
det(type-47, the-45)
amod(type-47, same-46)
prep_of(information-14, type-47)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Callitrichinae))
      (PRN (-LRB- -LRB-)
        (NP (NNP synonym) (NNP Hapalinae))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN subfamily))
        (PP (IN within)
          (NP
            (NP (DT the) (NN family) (NN Cebidae))
            (, ,)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the) (CD four) (NNS families))
                  (PP (IN of)
                    (NP (NNP New) (NNP World) (NNS monkeys))))))))))
    (. .)))

det(Callitrichinae-2, The-1)
nsubj(subfamily-9, Callitrichinae-2)
nn(Hapalinae-5, synonym-4)
appos(Callitrichinae-2, Hapalinae-5)
cop(subfamily-9, are-7)
det(subfamily-9, a-8)
root(ROOT-0, subfamily-9)
det(Cebidae-13, the-11)
nn(Cebidae-13, family-12)
prep_within(subfamily-9, Cebidae-13)
appos(Cebidae-13, one-15)
det(families-19, the-17)
num(families-19, four-18)
prep_of(one-15, families-19)
nn(monkeys-23, New-21)
nn(monkeys-23, World-22)
prep_of(families-19, monkeys-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Cebidae) (NN form) (NN one))
      (PP (IN of)
        (NP
          (NP (DT the) (CD four) (NNS families))
          (PP (IN of)
            (NP (NNP New) (NNP World) (NNS monkeys))))))
    (ADVP (RB now))
    (VP (VBD recognized))
    (. .)))

det(one-4, The-1)
nn(one-4, Cebidae-2)
nn(one-4, form-3)
nsubj(recognized-14, one-4)
det(families-8, the-6)
num(families-8, four-7)
prep_of(one-4, families-8)
nn(monkeys-12, New-10)
nn(monkeys-12, World-11)
prep_of(families-8, monkeys-12)
advmod(recognized-14, now-13)
root(ROOT-0, recognized-14)

(ROOT
  (S
    (NP (DT The) (NNP Coast))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP
          (PP (IN as)
            (NP
              (NP (DT the) (NN part))
              (PP (IN of)
                (NP (DT the) (NN land) (NN adjoining)))))
          (CC or)
          (PP (IN near)
            (NP (DT the) (NN ocean))))))
    (. .)))

det(Coast-2, The-1)
nsubjpass(defined-4, Coast-2)
nsubjpass(defined-4', Coast-2)
auxpass(defined-4, is-3)
root(ROOT-0, defined-4)
conj_or(defined-4, defined-4')
det(part-7, the-6)
prep_as(defined-4, part-7)
det(adjoining-11, the-9)
nn(adjoining-11, land-10)
prep_of(part-7, adjoining-11)
det(ocean-15, the-14)
prep_near(defined-4', ocean-15)

(ROOT
  (S
    (NP (DT A) (NN Continent))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NNS landmasses))
        (PP (IN on)
          (NP (NNP Earth)))))
    (. .)))

det(Continent-2, A-1)
nsubj(landmasses-5, Continent-2)
cop(landmasses-5, is-3)
num(landmasses-5, one-4)
root(ROOT-0, landmasses-5)
prep_on(landmasses-5, Earth-7)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP
      (NP (DT a) (NNP Cipher))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ cypher))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT an) (NN algorithm))
          (PP (IN for)
            (S
              (VP (VBG performing)
                (NP (NN encryption)
                  (CC and)
                  (NN decryption))))))
        (: -)
        (NP
          (NP (DT a) (NN series))
          (PP (IN of)
            (NP (JJ well-defined) (NNS steps)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN followed)
                    (PP (IN as)
                      (NP (DT a) (NN procedure)))))))))))
    (. .)))

prep_in(algorithm-12, cryptography-2)
det(Cipher-5, a-4)
nsubj(algorithm-12, Cipher-5)
dep(cypher-8, or-7)
dep(Cipher-5, cypher-8)
cop(algorithm-12, is-10)
det(algorithm-12, an-11)
root(ROOT-0, algorithm-12)
prepc_for(algorithm-12, performing-14)
dobj(performing-14, encryption-15)
dobj(performing-14, decryption-17)
conj_and(encryption-15, decryption-17)
det(series-20, a-19)
dep(algorithm-12, series-20)
nsubjpass(followed-27, series-20)
amod(steps-23, well-defined-22)
prep_of(series-20, steps-23)
aux(followed-27, can-25)
auxpass(followed-27, be-26)
rcmod(series-20, followed-27)
det(procedure-30, a-29)
prep_as(followed-27, procedure-30)

(ROOT
  (S
    (NP (DT A) (NNP Constitution))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN system))
        (PP (IN for)
          (NP
            (NP (NN governance))
            (, ,)
            (VP
              (ADVP (RB often))
              (VBN codified)
              (PP (IN as)
                (NP
                  (NP (DT a) (VBN written) (NN document))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ establishes)
                        (NP
                          (NP (DT the) (NNS rules)
                            (CC and)
                            (NNS principles))
                          (PP (IN of)
                            (NP (DT an)
                              (ADJP (JJ autonomous) (JJ political))
                              (NN entity))))))))))))))
    (. .)))

det(Constitution-2, A-1)
nsubj(system-5, Constitution-2)
cop(system-5, is-3)
det(system-5, a-4)
root(ROOT-0, system-5)
prep_for(system-5, governance-7)
advmod(codified-10, often-9)
partmod(governance-7, codified-10)
det(document-14, a-12)
amod(document-14, written-13)
prep_as(codified-10, document-14)
nsubj(establishes-17, document-14)
rcmod(document-14, establishes-17)
det(rules-19, the-18)
dobj(establishes-17, rules-19)
dobj(establishes-17, principles-21)
conj_and(rules-19, principles-21)
det(entity-26, an-23)
amod(political-25, autonomous-24)
amod(entity-26, political-25)
prep_of(rules-19, entity-26)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT a) (NNP Keyboard))
    (VP (VBZ is)
      (NP (DT a) (JJ peripheral)
        (ADJP (RB partially) (JJ modelled)
          (PP (IN after)
            (NP (DT the) (NN typewriter))))
        (NN keyboard)))
    (. .)))

prep_in(keyboard-14, computing-2)
det(Keyboard-5, a-4)
nsubj(keyboard-14, Keyboard-5)
cop(keyboard-14, is-6)
det(keyboard-14, a-7)
amod(keyboard-14, peripheral-8)
advmod(modelled-10, partially-9)
amod(keyboard-14, modelled-10)
det(typewriter-13, the-12)
prep_after(modelled-10, typewriter-13)
root(ROOT-0, keyboard-14)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ common) (NN usage)))
    (, ,)
    (NP (DT a) (NNP Constellation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN group))
        (PP (IN of)
          (NP
            (NP (NNS stars))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (VP (VBN connected)
                    (ADVP (RB together))
                    (S
                      (VP (TO to)
                        (VP (VB form)
                          (NP (DT a) (NN figure)
                            (CC or)
                            (NN picture)))))))))))))
    (. .)))

amod(usage-3, common-2)
prep_in(group-9, usage-3)
det(Constellation-6, a-5)
nsubj(group-9, Constellation-6)
cop(group-9, is-7)
det(group-9, a-8)
root(ROOT-0, group-9)
prep_of(group-9, stars-11)
nsubjpass(connected-14, stars-11)
auxpass(connected-14, are-13)
rcmod(stars-11, connected-14)
advmod(connected-14, together-15)
aux(form-17, to-16)
xcomp(connected-14, form-17)
det(figure-19, a-18)
dobj(form-17, figure-19)
dobj(form-17, picture-21)
conj_or(figure-19, picture-21)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Cone))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ Greek) (NNP Ã) (NNP ⁄) (NNP ÂºÃ) (NNP ¡) (NNP Â) (NNP ¿) (NNP Â) (NNP ¶) (NNP Ã) (NNP ⁄) (NNP Â) (NNP ∏) (NNP Ã) (NNP ⁄) (NNP Â) (NNP ¿) (NNP Ã) (NNP ∂) (NNP Â) (NNS ≠))
            (, ,)
            (ADJP (JJ Latin) (JJ conu))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ basic) (JJ geometrical) (NN shape))
        (: ;)
        (VP (VB see)
          (NP
            (NP (NN cone))
            (PRN (-LRB- -LRB-)
              (NP (NN geometry))
              (-RRB- -RRB-))))))
    (. .)))

det(Cone-2, A-1)
nsubj(shape-35, Cone-2)
dep(Cone-2, from-4)
det(≠-26, the-5)
amod(≠-26, Greek-6)
nn(≠-26, Ã-7)
nn(≠-26, ⁄-8)
nn(≠-26, ÂºÃ-9)
nn(≠-26, ¡-10)
nn(≠-26, Â-11)
nn(≠-26, ¿-12)
nn(≠-26, Â-13)
nn(≠-26, ¶-14)
nn(≠-26, Ã-15)
nn(≠-26, ⁄-16)
nn(≠-26, Â-17)
nn(≠-26, ∏-18)
nn(≠-26, Ã-19)
nn(≠-26, ⁄-20)
nn(≠-26, Â-21)
nn(≠-26, ¿-22)
nn(≠-26, Ã-23)
nn(≠-26, ∂-24)
nn(≠-26, Â-25)
pobj(from-4, ≠-26)
amod(conu-29, Latin-28)
amod(≠-26, conu-29)
cop(shape-35, is-31)
det(shape-35, a-32)
amod(shape-35, basic-33)
amod(shape-35, geometrical-34)
root(ROOT-0, shape-35)
dep(shape-35, see-37)
dobj(see-37, cone-38)
appos(cone-38, geometry-40)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ combinatorial) (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Combination))
    (VP
      (VP (VBZ is)
        (NP
          (NP
            (NP
              (NP (DT an))
              (PP (IN of)
                (NP (JJ distinct) (NNS elements))))
            (, ,)
            (ADVP (RB usually)))
          (PP (IN of)
            (NP (DT a) (JJ prescribed) (NN size)))))
      (CC and)
      (VP (VBN taken)
        (PP (IN from)
          (NP (DT a) (VBN given) (NN set)))))
    (. .)))

amod(mathematics-3, combinatorial-2)
prep_in(an-8, mathematics-3)
det(Combination-6, a-5)
nsubj(an-8, Combination-6)
nsubj(taken-19, Combination-6)
cop(an-8, is-7)
root(ROOT-0, an-8)
amod(elements-11, distinct-10)
prep_of(an-8, elements-11)
advmod(an-8, usually-13)
det(size-17, a-15)
amod(size-17, prescribed-16)
prep_of(an-8, size-17)
conj_and(an-8, taken-19)
det(set-23, a-21)
amod(set-23, given-22)
prep_from(taken-19, set-23)

(ROOT
  (S
    (NP (NNP Creationism))
    (VP (VBZ is)
      (NP (DT a) (JJ religious) (NN belief))
      (SBAR (IN that)
        (S
          (NP
            (NP (NN humanity))
            (, ,)
            (NP (NN life))
            (, ,)
            (NP (DT the) (NN Earth))
            (, ,)
            (CC and)
            (NP (DT the) (NN universe)))
          (VP (VBD were)
            (VP (VBN created)
              (PP (IN in)
                (NP (PRP$ their) (JJ original) (NN form)))
              (PP (IN by)
                (NP
                  (NP
                    (NP (DT a) (NN deity))
                    (PRN (-LRB- -LRB-)
                      (ADVP (RB often))
                      (NP
                        (NP (DT the) (NNP Abrahamic) (NNP God))
                        (PP (IN of)
                          (NP (NNP Judaism) (, ,) (NNP Christianity)
                            (CC and)
                            (NNP Islam))))
                      (-RRB- -RRB-)))
                  (CC or)
                  (NP
                    (NP (NNS deities))
                    (, ,)
                    (SBAR
                      (WHNP (WP$ whose) (NN existence))
                      (S
                        (VP (VBZ is)
                          (VP (VBN presupposed)))))))))))))
    (. .)))

nsubj(belief-5, Creationism-1)
cop(belief-5, is-2)
det(belief-5, a-3)
amod(belief-5, religious-4)
root(ROOT-0, belief-5)
complm(created-18, that-6)
nsubjpass(created-18, humanity-7)
conj_and(humanity-7, life-9)
nsubjpass(created-18, life-9)
det(Earth-12, the-11)
conj_and(humanity-7, Earth-12)
nsubjpass(created-18, Earth-12)
det(universe-16, the-15)
conj_and(humanity-7, universe-16)
nsubjpass(created-18, universe-16)
auxpass(created-18, were-17)
ccomp(belief-5, created-18)
poss(form-22, their-20)
amod(form-22, original-21)
prep_in(created-18, form-22)
det(deity-25, a-24)
agent(created-18, deity-25)
dep(God-30, often-27)
det(God-30, the-28)
nn(God-30, Abrahamic-29)
dep(deity-25, God-30)
prep_of(God-30, Judaism-32)
prep_of(God-30, Christianity-34)
conj_and(Judaism-32, Christianity-34)
prep_of(God-30, Islam-36)
conj_and(Judaism-32, Islam-36)
agent(created-18, deities-39)
conj_or(deity-25, deities-39)
poss(existence-42, deities-39)
nsubjpass(presupposed-44, existence-42)
auxpass(presupposed-44, is-43)
rcmod(deities-39, presupposed-44)

(ROOT
  (S
    (NP (DT A) (NNP Colloid))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (JJ mechanical) (NN mixture)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (CD one) (NN substance))
            (VP (VBZ is)
              (VP (VBG dispersed)
                (ADVP (RB evenly))
                (PP (IN throughout)
                  (NP (DT another)))))))))
    (. .)))

det(Colloid-2, A-1)
nsubj(type-5, Colloid-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
amod(mixture-8, mechanical-7)
prep_of(type-5, mixture-8)
advmod(dispersed-13, where-9)
num(substance-11, one-10)
nsubj(dispersed-13, substance-11)
aux(dispersed-13, is-12)
rcmod(type-5, dispersed-13)
advmod(dispersed-13, evenly-14)
prep_throughout(dispersed-13, another-16)

(ROOT
  (S
    (NP (NNP Cross-stitch))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ popular) (NN form))
        (PP (IN of)
          (NP (JJ counted-thread) (NN embroidery)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (JJ X-shaped) (NNS stitches))
            (VP (VBP are)
              (VP (VBN used)
                (S
                  (VP (TO to)
                    (VP (VB form)
                      (NP (DT a) (NN picture)))))))))))
    (. .)))

nsubj(form-5, Cross-stitch-1)
cop(form-5, is-2)
det(form-5, a-3)
amod(form-5, popular-4)
root(ROOT-0, form-5)
amod(embroidery-8, counted-thread-7)
prep_of(form-5, embroidery-8)
rel(used-14, which-10)
amod(stitches-12, X-shaped-11)
nsubjpass(used-14, stitches-12)
xsubj(form-16, stitches-12)
auxpass(used-14, are-13)
rcmod(form-5, used-14)
aux(form-16, to-15)
xcomp(used-14, form-16)
det(picture-18, a-17)
dobj(form-16, picture-18)

(ROOT
  (S
    (NP (DT The) (NNP Cambrian))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ geologic) (NN period)
          (CC and)
          (NN system))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBD began)
                (PP (IN about)
                  (NP
                    (NP (NNP Cambriancambrian) (NNP Ma))
                    (PRN (-LRB- -LRB-)
                      (ADVP
                        (NP (CD million) (NNS years))
                        (RB ago))
                      (-RRB- -RRB-))))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN end))
                    (PP (IN of)
                      (NP (DT the) (JJ Proterozoic) (NN eon))))))
              (CC and)
              (VP (VBD ended)
                (PP (IN about)
                  (NP (NNP cambrianordovician) (NNP Ma)))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN beginning))
                    (PP (IN of)
                      (NP (DT the) (NNP Ordovician) (NN period)))))
                (NP (NNP ICS) (CD 2004))))))))
    (. .)))

det(Cambrian-2, The-1)
nsubj(period-6, Cambrian-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
nsubj(began-10, period-6)
nsubj(ended-27, period-6)
conj_and(period-6, system-8)
nsubj(began-10, system-8)
rcmod(period-6, began-10)
nn(Ma-13, Cambriancambrian-12)
prep_about(began-10, Ma-13)
num(years-16, million-15)
npadvmod(ago-17, years-16)
dep(Ma-13, ago-17)
det(end-21, the-20)
prep_at(began-10, end-21)
det(eon-25, the-23)
amod(eon-25, Proterozoic-24)
prep_of(end-21, eon-25)
rcmod(period-6, ended-27)
conj_and(began-10, ended-27)
nn(Ma-30, cambrianordovician-29)
prep_about(ended-27, Ma-30)
det(beginning-33, the-32)
prep_with(ended-27, beginning-33)
det(period-37, the-35)
nn(period-37, Ordovician-36)
prep_of(beginning-33, period-37)
dobj(ended-27, ICS-38)
num(ICS-38, 2004-39)

(ROOT
  (S
    (NP (DT A) (NNP Condom))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN barrier) (NN device))
        (VP
          (ADVP (RBS most) (RB commonly))
          (VBN used)
          (PP (IN during)
            (NP (JJ sexual) (NN intercourse))))))
    (. .)))

det(Condom-2, A-1)
nsubj(device-6, Condom-2)
cop(device-6, is-3)
det(device-6, a-4)
nn(device-6, barrier-5)
root(ROOT-0, device-6)
advmod(commonly-8, most-7)
advmod(used-9, commonly-8)
partmod(device-6, used-9)
amod(intercourse-12, sexual-11)
prep_during(used-9, intercourse-12)

(ROOT
  (S
    (NP (DT A) (NNP Calendar))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN system))
        (PP (IN of)
          (NP
            (NP (VBG organizing) (NNS days))
            (PP (IN for)
              (NP (DT a) (JJ social) (, ,) (JJ religious) (, ,) (JJ commercial)
                (CC or)
                (JJ administrative) (NN purpose)))))))
    (. .)))

det(Calendar-2, A-1)
nsubj(system-5, Calendar-2)
cop(system-5, is-3)
det(system-5, a-4)
root(ROOT-0, system-5)
amod(days-8, organizing-7)
prep_of(system-5, days-8)
det(purpose-18, a-10)
amod(purpose-18, social-11)
conj_or(social-11, religious-13)
amod(purpose-18, religious-13)
conj_or(social-11, commercial-15)
amod(purpose-18, commercial-15)
conj_or(social-11, administrative-17)
amod(purpose-18, administrative-17)
prep_for(days-8, purpose-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP City))
    (VP (VBZ is)
      (NP (DT an) (JJ urban) (NN settlement)))
    (. .)))

det(City-2, A-1)
nsubj(settlement-6, City-2)
cop(settlement-6, is-3)
det(settlement-6, an-4)
amod(settlement-6, urban-5)
root(ROOT-0, settlement-6)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNPS Cucurbitales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (VP (VBN included)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ rosid) (NN group))
                  (PP (IN of)
                    (NP (NNS dicotyledons))))))))))
    (. .)))

det(Cucurbitales-2, The-1)
nsubj(order-5, Cucurbitales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
partmod(plants-8, included-10)
det(group-14, the-12)
amod(group-14, rosid-13)
prep_in(included-10, group-14)
prep_of(group-14, dicotyledons-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP (DT a) (NNP Copula))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB link)
                (NP
                  (NP (DT the) (NN subject))
                  (PP (IN of)
                    (NP (DT a) (NN sentence))))
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN predicate))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (DT a) (NN subject) (NN complement))
                        (CC or)
                        (NP (DT an) (NN adverbial)))
                      (-RRB- -RRB-))))))))))
    (. .)))

prep_in(word-8, linguistics-2)
det(Copula-5, a-4)
nsubj(word-8, Copula-5)
cop(word-8, is-6)
det(word-8, a-7)
root(ROOT-0, word-8)
xsubj(link-11, word-8)
partmod(word-8, used-9)
aux(link-11, to-10)
xcomp(used-9, link-11)
det(subject-13, the-12)
dobj(link-11, subject-13)
det(sentence-16, a-15)
prep_of(subject-13, sentence-16)
det(predicate-19, a-18)
prep_with(link-11, predicate-19)
det(complement-23, a-21)
nn(complement-23, subject-22)
dep(predicate-19, complement-23)
det(adverbial-26, an-25)
dep(predicate-19, adverbial-26)
conj_or(complement-23, adverbial-26)

(ROOT
  (S
    (NP (DT A) (NNP Chemist))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN scientist))
        (VP (VBN trained)
          (PP (IN in)
            (NP
              (NP (DT the) (NN science))
              (PP (IN of)
                (NP (NN chemistry))))))))
    (. .)))

det(Chemist-2, A-1)
nsubj(scientist-5, Chemist-2)
cop(scientist-5, is-3)
det(scientist-5, a-4)
root(ROOT-0, scientist-5)
partmod(scientist-5, trained-6)
det(science-9, the-8)
prep_in(trained-6, science-9)
prep_of(science-9, chemistry-11)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ articulatory) (NNS phonetics)))
    (, ,)
    (NP (DT a) (NNP Consonant))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN speech) (NN sound))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN articulated)
                (PP (IN with)
                  (NP
                    (NP
                      (ADJP (JJ complete)
                        (CC or)
                        (JJ partial))
                      (NN closure))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ upper) (JJ vocal) (NN tract))
                        (, ,)
                        (NP
                          (NP (DT the) (JJ upper) (JJ vocal) (NN tract))
                          (VP (VBG being)
                            (VP (VBN defined)
                              (PP (IN as)
                                (NP
                                  (NP (DT that) (NN part))
                                  (PP (IN of)
                                    (NP
                                      (NP (DT the) (JJ vocal) (NN tract))
                                      (SBAR
                                        (WHNP (WDT that))
                                        (S
                                          (VP (VBZ lies)
                                            (PP (IN above)
                                              (NP (DT the) (NN larynx)))))))))))))))))))))))
    (. .)))

amod(phonetics-3, articulatory-2)
prep_in(sound-10, phonetics-3)
det(Consonant-6, a-5)
nsubj(sound-10, Consonant-6)
cop(sound-10, is-7)
det(sound-10, a-8)
nn(sound-10, speech-9)
root(ROOT-0, sound-10)
nsubjpass(articulated-13, sound-10)
auxpass(articulated-13, is-12)
rcmod(sound-10, articulated-13)
amod(closure-18, complete-15)
conj_or(complete-15, partial-17)
amod(closure-18, partial-17)
prep_with(articulated-13, closure-18)
det(tract-23, the-20)
amod(tract-23, upper-21)
amod(tract-23, vocal-22)
prep_of(closure-18, tract-23)
det(tract-28, the-25)
amod(tract-28, upper-26)
amod(tract-28, vocal-27)
appos(tract-23, tract-28)
auxpass(defined-30, being-29)
partmod(tract-28, defined-30)
det(part-33, that-32)
prep_as(defined-30, part-33)
det(tract-37, the-35)
amod(tract-37, vocal-36)
prep_of(part-33, tract-37)
nsubj(lies-39, tract-37)
rcmod(tract-37, lies-39)
det(larynx-42, the-41)
prep_above(lies-39, larynx-42)

(ROOT
  (S
    (NP (DT A) (NN Currency))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN medium))
        (PP (IN of)
          (NP (NN exchange)))
        (, ,)
        (VP (VBG facilitating)
          (NP
            (NP (DT the) (NN transfer))
            (PP (IN of)
              (NP
                (NP (NNS goods))
                (CC and)
                (NP (NNS \/)
                  (CC or)
                  (NNS services))))))))
    (. .)))

det(Currency-2, A-1)
nsubj(medium-5, Currency-2)
cop(medium-5, is-3)
det(medium-5, a-4)
root(ROOT-0, medium-5)
prep_of(medium-5, exchange-7)
partmod(medium-5, facilitating-9)
det(transfer-11, the-10)
dobj(facilitating-9, transfer-11)
prep_of(transfer-11, goods-13)
prep_of(transfer-11, \/-15)
conj_and(goods-13, \/-15)
conj_and(goods-13, services-17)
conj_or(\/-15, services-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Codex))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Latin))
          (PP (IN for)
            (NP (NN block)))
          (PP (IN of)
            (NP (NN wood))))
        (, ,)
        (NP
          (NP (NN book))
          (: ;)
          (NP (NN plural) (NNS codices)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN book))
        (PP (IN in)
          (NP
            (NP (DT the) (NN format))
            (VP (VBN used)
              (PP (IN for)
                (NP (JJ modern) (NNS books)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (JJ separate) (NNS pages))
                  (VP
                    (ADVP (RB normally))
                    (VBN bound)
                    (UCP
                      (ADVP (RB together))
                      (CC and)
                      (PP (VBN given)
                        (NP (DT a) (NN cover))))))))))))
    (. .)))

det(Codex-2, A-1)
nsubj(book-17, Codex-2)
dep(Codex-2, Latin-4)
prep_for(Latin-4, block-6)
prep_of(Latin-4, wood-8)
dep(Latin-4, book-10)
nn(codices-13, plural-12)
dep(book-10, codices-13)
cop(book-17, is-15)
det(book-17, a-16)
root(ROOT-0, book-17)
det(format-20, the-19)
prep_in(book-17, format-20)
partmod(format-20, used-21)
amod(books-24, modern-23)
prep_for(used-21, books-24)
amod(pages-28, separate-27)
prep_with(used-21, pages-28)
advmod(bound-30, normally-29)
partmod(pages-28, bound-30)
dep(bound-30, together-31)
dep(bound-30, given-33)
conj_and(together-31, given-33)
det(cover-35, a-34)
dep(given-33, cover-35)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Calf))
      (PRN (-LRB- -LRB-)
        (NP (CD plural) (NNS calves))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ young))
        (PP (IN of)
          (NP
            (NP (JJ various) (NNS species))
            (PP (IN of)
              (NP (NN mammal)))))))
    (. .)))

det(Calf-2, A-1)
nsubj(young-9, Calf-2)
num(calves-5, plural-4)
appos(Calf-2, calves-5)
cop(young-9, is-7)
det(young-9, the-8)
root(ROOT-0, young-9)
amod(species-12, various-11)
prep_of(young-9, species-12)
prep_of(species-12, mammal-14)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ biological) (NNS terms)))
    (, ,)
    (NP (DT a) (NNP Community))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN group))
        (PP (IN of)
          (NP
            (NP (VBG interacting) (NNS organisms))
            (VP (VBG sharing)
              (NP (DT an) (NN environment)))))))
    (. .)))

amod(terms-3, biological-2)
prep_in(group-9, terms-3)
det(Community-6, a-5)
nsubj(group-9, Community-6)
cop(group-9, is-7)
det(group-9, a-8)
root(ROOT-0, group-9)
amod(organisms-12, interacting-11)
prep_of(group-9, organisms-12)
partmod(organisms-12, sharing-13)
det(environment-15, an-14)
dobj(sharing-13, environment-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN film)))
    (, ,)
    (NP (DT a) (NNP Cutaway))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN interruption))
        (PP (IN of)
          (NP
            (NP (DT a)
              (ADJP (RB continuously) (JJ filmed))
              (NN action))
            (PP (IN by)
              (S
                (VP (VBG inserting)
                  (NP
                    (NP (DT a) (NN view))
                    (PP (IN of)
                      (NP (NN something) (RB else)))))))))))
    (. .)))

prep_in(interruption-8, film-2)
det(Cutaway-5, a-4)
nsubj(interruption-8, Cutaway-5)
cop(interruption-8, is-6)
det(interruption-8, the-7)
root(ROOT-0, interruption-8)
det(action-13, a-10)
advmod(filmed-12, continuously-11)
amod(action-13, filmed-12)
prep_of(interruption-8, action-13)
prepc_by(action-13, inserting-15)
det(view-17, a-16)
dobj(inserting-15, view-17)
prep_of(view-17, something-19)
advmod(something-19, else-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN medicine)))
    (, ,)
    (NP (DT a) (NNP Coma))
    (PRN (-LRB- -LRB-)
      (PP (IN from)
        (NP (DT the) (JJ Greek) (NNP Ã) (NNP ⁄) (NNP ÂºÃ) (NNP ¡) (NNP Â) (NNP ¿) (NNP Â) (NNP ¶) (NNP Ã) (NNP ⁄) (NNP ÂπÃ) (NNP ⁄) (NNP Â) (NNP ±) (NN koma)))
      (PRN (, ,)
        (S
          (VP (VBG meaning)
            (NP (JJ deep) (NN sleep)))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ profound) (NN state))
        (PP (IN of)
          (NP (NNS unconsciousness)))))
    (. .)))

prep_in(state-33, medicine-2)
det(Coma-5, a-4)
nsubj(state-33, Coma-5)
dep(state-33, from-7)
det(koma-24, the-8)
amod(koma-24, Greek-9)
nn(koma-24, Ã-10)
nn(koma-24, ⁄-11)
nn(koma-24, ÂºÃ-12)
nn(koma-24, ¡-13)
nn(koma-24, Â-14)
nn(koma-24, ¿-15)
nn(koma-24, Â-16)
nn(koma-24, ¶-17)
nn(koma-24, Ã-18)
nn(koma-24, ⁄-19)
nn(koma-24, ÂπÃ-20)
nn(koma-24, ⁄-21)
nn(koma-24, Â-22)
nn(koma-24, ±-23)
pobj(from-7, koma-24)
dep(from-7, meaning-26)
amod(sleep-28, deep-27)
dobj(meaning-26, sleep-28)
cop(state-33, is-30)
det(state-33, a-31)
amod(state-33, profound-32)
root(ROOT-0, state-33)
prep_of(state-33, unconsciousness-35)

(ROOT
  (S
    (NP (NNS Constellations))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ quarterly) (JJ peer-reviewed) (NN journal))
        (PP (IN of)
          (NP
            (ADJP (JJ critical)
              (CC and)
              (JJ democratic))
            (NN theory)))))
    (. .)))

nsubj(journal-6, Constellations-1)
cop(journal-6, is-2)
det(journal-6, a-3)
amod(journal-6, quarterly-4)
amod(journal-6, peer-reviewed-5)
root(ROOT-0, journal-6)
amod(theory-11, critical-8)
conj_and(critical-8, democratic-10)
amod(theory-11, democratic-10)
prep_of(journal-6, theory-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Cervix))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (S
            (VP (VBG Latin) ('' '')
              (NP (NN neck))
              ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN neck))
        (PP (IN of)
          (NP
            (NP (DT the) (NN uterus))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP it))
                (VP (VBZ joins)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (JJ top) (NN end))
                      (PP (IN of)
                        (NP (DT the) (NN vagina))))))))))))
    (. .)))

det(Cervix-2, The-1)
nsubj(neck-12, Cervix-2)
dep(Cervix-2, from-4)
pcomp(from-4, Latin-5)
dobj(Latin-5, neck-7)
cop(neck-12, is-10)
det(neck-12, the-11)
root(ROOT-0, neck-12)
det(uterus-15, the-14)
prep_of(neck-12, uterus-15)
advmod(joins-18, where-16)
nsubj(joins-18, it-17)
rcmod(uterus-15, joins-18)
det(end-22, the-20)
amod(end-22, top-21)
prep_with(joins-18, end-22)
det(vagina-25, the-24)
prep_of(end-22, vagina-25)

(ROOT
  (S
    (NP (DT A) (NNP Compiler))
    (VP (VBZ is)
      (NP (DT a) (NN computer) (NN program))
      (PRN (-LRB- -LRB-)
        (CC or)
        (VP (VBN set)
          (PP (IN of)
            (NP (NNS programs))))
        (-RRB- -RRB-))
      (SBAR (IN that)
        (S
          (NP (JJ translates) (NN text))
          (VP (VBN written)
            (PP (IN in)
              (NP
                (NP (DT a) (NN computer) (NN language))
                (PRN (-LRB- -LRB-)
                  (NP (DT the) (NN source) (NN language))
                  (-RRB- -RRB-))))
            (PP (IN into)
              (NP
                (NP (DT another) (NN computer) (NN language))
                (PRN (-LRB- -LRB-)
                  (NP (DT the) (NN target) (NN language))
                  (-RRB- -RRB-))))))))
    (. .)))

det(Compiler-2, A-1)
nsubj(program-6, Compiler-2)
cop(program-6, is-3)
det(program-6, a-4)
nn(program-6, computer-5)
root(ROOT-0, program-6)
dep(set-9, or-8)
dep(program-6, set-9)
prep_of(set-9, programs-11)
complm(written-16, that-13)
amod(text-15, translates-14)
nsubj(written-16, text-15)
ccomp(program-6, written-16)
det(language-20, a-18)
nn(language-20, computer-19)
prep_in(written-16, language-20)
det(language-24, the-22)
nn(language-24, source-23)
appos(language-20, language-24)
det(language-29, another-27)
nn(language-29, computer-28)
prep_into(written-16, language-29)
det(language-33, the-31)
nn(language-33, target-32)
appos(language-29, language-33)

(ROOT
  (S
    (NP (DT A) (NNP Castrato))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN man))
        (PP (IN with)
          (NP (DT a) (NN singing) (NN voice)))
        (ADJP (JJ equivalent)
          (PP (TO to)
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP (DT a) (NN soprano) (, ,) (NN mezzo-soprano) (, ,)
                  (CC or)
                  (NN contralto) (NN voice))))))
        (VP (VBN produced)
          (ADVP (RB either))
          (PP (IN by)
            (NP
              (NP (NN castration))
              (PP (IN of)
                (NP (DT the) (NN singer)))))
          (PP (IN before)
            (NP
              (NP (NN puberty)
                (CC or)
                (NN one))
              (SBAR
                (WHNP (WP who))
                (S
                  (PRN (, ,)
                    (SBAR (IN because)
                      (FRAG
                        (PP (IN of)
                          (NP (DT an) (JJ endocrinological) (NN condition)))))
                    (, ,))
                  (VP
                    (ADVP (RB never))
                    (VBZ reaches)
                    (NP (JJ sexual) (NN maturity))))))))))
    (. .)))

det(Castrato-2, A-1)
nsubj(man-5, Castrato-2)
cop(man-5, is-3)
det(man-5, a-4)
root(ROOT-0, man-5)
det(voice-9, a-7)
nn(voice-9, singing-8)
prep_with(man-5, voice-9)
amod(man-5, equivalent-10)
prep_to(equivalent-10, that-12)
det(mezzo-soprano-17, a-14)
nn(mezzo-soprano-17, soprano-15)
prep_of(that-12, mezzo-soprano-17)
nn(voice-21, contralto-20)
prep_of(that-12, voice-21)
conj_or(mezzo-soprano-17, voice-21)
partmod(man-5, produced-22)
advmod(produced-22, either-23)
agent(produced-22, castration-25)
det(singer-28, the-27)
prep_of(castration-25, singer-28)
prep_before(produced-22, puberty-30)
nsubj(reaches-42, puberty-30)
prep_before(produced-22, one-32)
conj_or(puberty-30, one-32)
nsubj(reaches-42, one-32)
mark(of-36, because-35)
parataxis(reaches-42, of-36)
det(condition-39, an-37)
amod(condition-39, endocrinological-38)
pobj(of-36, condition-39)
neg(reaches-42, never-41)
rcmod(puberty-30, reaches-42)
amod(maturity-44, sexual-43)
dobj(reaches-42, maturity-44)

(ROOT
  (S
    (NP (DT A) (NNP Cave))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ natural) (JJ underground) (NN void))
        (ADJP (JJ large) (RB enough)
          (PP (IN for)
            (NP (DT a) (NN human)))
          (S
            (VP (TO to)
              (VP (VB enter)))))))
    (. .)))

det(Cave-2, A-1)
nsubj(void-7, Cave-2)
cop(void-7, is-3)
det(void-7, a-4)
amod(void-7, natural-5)
amod(void-7, underground-6)
root(ROOT-0, void-7)
amod(void-7, large-8)
advmod(large-8, enough-9)
det(human-12, a-11)
prep_for(large-8, human-12)
aux(enter-14, to-13)
xcomp(large-8, enter-14)

(ROOT
  (S
    (NP (DT A) (NNP Celebrity))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ widely-recognized)
            (CC or)
            (JJ famous))
          (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ commands)
              (NP
                (NP (DT a) (JJ high) (NN degree))
                (PP (IN of)
                  (NP (NN public)
                    (CC and)
                    (NN media) (NN attention)))))))))
    (. .)))

det(Celebrity-2, A-1)
nsubj(person-8, Celebrity-2)
cop(person-8, is-3)
det(person-8, a-4)
amod(person-8, widely-recognized-5)
conj_or(widely-recognized-5, famous-7)
amod(person-8, famous-7)
root(ROOT-0, person-8)
nsubj(commands-10, person-8)
rcmod(person-8, commands-10)
det(degree-13, a-11)
amod(degree-13, high-12)
dobj(commands-10, degree-13)
nn(attention-18, public-15)
conj_and(public-15, media-17)
nn(attention-18, media-17)
prep_of(degree-13, attention-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Roman) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP Cupid))
      (PRN (-LRB- -LRB-)
        (NP (NNP Latin) (NNP cupido))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN god))
        (PP (IN of)
          (NP (JJ erotic) (NN love)
            (CC and)
            (NN beauty)))))
    (. .)))

nn(mythology-3, Roman-2)
prep_in(god-12, mythology-3)
nsubj(god-12, Cupid-5)
nn(cupido-8, Latin-7)
appos(Cupid-5, cupido-8)
cop(god-12, is-10)
det(god-12, the-11)
root(ROOT-0, god-12)
amod(love-15, erotic-14)
prep_of(god-12, love-15)
prep_of(god-12, beauty-17)
conj_and(love-15, beauty-17)

(ROOT
  (S
    (S
      (NP (NNP Caesium))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ international) (NN spelling) (NN standardized))
          (PP (IN by)
            (NP (DT the) (NN IUPAC))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (NNP North) (NNP American) (NNP English)))
      (, ,)
      (NP (DT the) (NN spelling) (NN cesium))
      (VP (VBZ is)
        (ADJP (RBR more) (JJ common))))
    (. .)))

nsubj(standardized-6, Caesium-1)
cop(standardized-6, is-2)
det(standardized-6, the-3)
amod(standardized-6, international-4)
nn(standardized-6, spelling-5)
root(ROOT-0, standardized-6)
det(IUPAC-9, the-8)
prep_by(standardized-6, IUPAC-9)
nn(English-15, North-13)
nn(English-15, American-14)
prep_in(common-22, English-15)
det(cesium-19, the-17)
nn(cesium-19, spelling-18)
nsubj(common-22, cesium-19)
cop(common-22, is-20)
advmod(common-22, more-21)
conj_but(standardized-6, common-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT a) (NN Comment))
    (VP (VBZ is)
      (NP
        (NP (NN information))
        (PP (IN in)
          (NP
            (NP (DT a) (NN file))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADVP (RB primarily))
                  (VP (VBN intended)
                    (PP (IN as)
                      (NP (DT an) (NN annotation)))))))))))
    (. .)))

prep_in(information-7, computing-2)
det(Comment-5, a-4)
nsubj(information-7, Comment-5)
cop(information-7, is-6)
root(ROOT-0, information-7)
det(file-10, a-9)
prep_in(information-7, file-10)
nsubjpass(intended-14, file-10)
auxpass(intended-14, is-12)
advmod(intended-14, primarily-13)
rcmod(file-10, intended-14)
det(annotation-17, an-16)
prep_as(intended-14, annotation-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Century))
      (PRN (-LRB- -LRB-)
        (PP (IN From)
          (NP
            (NP (DT the) (JJ Latin) (NN cent))
            (, ,)
            (NP (CD one) (CD hundred))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (QP (CD one) (CD hundred))
        (JJ consecutive) (NNS years)))
    (. .)))

det(Century-2, A-1)
nsubj(years-16, Century-2)
dep(Century-2, From-4)
det(cent-7, the-5)
amod(cent-7, Latin-6)
pobj(From-4, cent-7)
num(hundred-10, one-9)
appos(cent-7, hundred-10)
cop(years-16, is-12)
number(hundred-14, one-13)
num(years-16, hundred-14)
amod(years-16, consecutive-15)
root(ROOT-0, years-16)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN fiction)))
    (, ,)
    (NP
      (NP (NNP Continuity))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (S
            (ADJP (JJ time-scheme))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (NN consistency))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS characteristics))
            (PP (IN of)
              (NP (NNS persons) (, ,) (NN plot) (, ,) (NNS objects) (, ,) (NNS places)
                (CC and)
                (NNS events)))
            (VP (VBN seen)
              (PP (IN by)
                (NP (DT the) (NN reader)
                  (CC or)
                  (NN viewer))))))))
    (. .)))

prep_in(consistency-11, fiction-2)
nsubj(consistency-11, Continuity-4)
advmod(called-7, also-6)
dep(Continuity-4, called-7)
acomp(called-7, time-scheme-8)
cop(consistency-11, is-10)
root(ROOT-0, consistency-11)
det(characteristics-14, the-13)
prep_of(consistency-11, characteristics-14)
prep_of(characteristics-14, persons-16)
prep_of(characteristics-14, plot-18)
conj_and(persons-16, plot-18)
prep_of(characteristics-14, objects-20)
conj_and(persons-16, objects-20)
prep_of(characteristics-14, places-22)
conj_and(persons-16, places-22)
prep_of(characteristics-14, events-24)
conj_and(persons-16, events-24)
partmod(characteristics-14, seen-25)
det(reader-28, the-27)
agent(seen-25, reader-28)
agent(seen-25, viewer-30)
conj_or(reader-28, viewer-30)

(ROOT
  (S
    (NP (DT The) (NN name) (NNS Cybernetics))
    (VP
      (VP (VBZ denotes)
        (NP
          (NP (DT the) (NN study))
          (PP (IN of) ('' '')
            (NP (JJ teleological) (NNS mechanisms)))))
      ('' '')
      (CC and)
      (VP (VBD was)
        (VP (VBN popularized)
          (PP (IN through)
            (NP
              (NP (PRP$ his) (NN book) (NNPS Cybernetics))
              (, ,)
              (CC or)
              (NP
                (NP (NNP Control)
                  (CC and)
                  (NNP Communication))
                (PP (IN in)
                  (NP (DT the) (NNP Animal)
                    (CC and)
                    (NNP Machine))))))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NNP Hermann)
                (CC &)
                (NNP amp))
              (: ;)
              (NP
                (NP (NN amp))
                (: ;)
                (NP
                  (NP (NNP Cie) (, ,) (NNP Paris))
                  (, ,)
                  (NP (CD 1948)))))
            (-RRB- -RRB-)))))
    (. .)))

det(Cybernetics-3, The-1)
nn(Cybernetics-3, name-2)
nsubj(denotes-4, Cybernetics-3)
nsubjpass(popularized-14, Cybernetics-3)
root(ROOT-0, denotes-4)
det(study-6, the-5)
dobj(denotes-4, study-6)
amod(mechanisms-10, teleological-9)
prep_of(study-6, mechanisms-10)
auxpass(popularized-14, was-13)
conj_and(denotes-4, popularized-14)
poss(Cybernetics-18, his-16)
nn(Cybernetics-18, book-17)
prep_through(popularized-14, Cybernetics-18)
prep_through(popularized-14, Control-21)
conj_or(Cybernetics-18, Control-21)
conj_or(Cybernetics-18, Communication-23)
conj_and(Control-21, Communication-23)
det(Animal-26, the-25)
prep_in(Control-21, Animal-26)
prep_in(Control-21, Machine-28)
conj_and(Animal-26, Machine-28)
dep(popularized-14, Hermann-30)
dep(popularized-14, amp-32)
conj_and(Hermann-30, amp-32)
dep(Hermann-30, amp-34)
nn(Paris-38, Cie-36)
dep(amp-34, Paris-38)
appos(Paris-38, 1948-40)

(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP (NN Counterpoint))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN relationship))
          (PP (IN between)
            (NP
              (QP (CD two)
                (CC or)
                (JJR more))
              (NNS voices)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (ADJP (JJ independent)
                  (PP (IN in)
                    (NP (NN contour)
                      (CC and)
                      (NN rhythm))))))))
        (, ,)
        (CC and)
        (NP
          (NP (NN interdependent))
          (PP (IN in)
            (NP (NN harmony))))))
    (. .)))

prep_in(relationship-7, music-2)
nsubj(relationship-7, Counterpoint-4)
cop(relationship-7, is-5)
det(relationship-7, the-6)
root(ROOT-0, relationship-7)
nsubj(independent-15, relationship-7)
num(voices-12, two-9)
conj_or(two-9, more-11)
quantmod(two-9, more-11)
num(voices-12, more-11)
prep_between(relationship-7, voices-12)
cop(independent-15, are-14)
rcmod(relationship-7, independent-15)
prep_in(independent-15, contour-17)
prep_in(independent-15, rhythm-19)
conj_and(contour-17, rhythm-19)
conj_and(relationship-7, interdependent-22)
nsubj(independent-15, interdependent-22)
prep_in(interdependent-22, harmony-24)

(ROOT
  (S
    (NP (DT A) (NNP Cyanide))
    (VP (VBZ is)
      (NP
        (NP (NN chemical) (NN compound))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contains)
              (NP
                (NP
                  (NP (DT the) (JJ cyano) (NN group))
                  (-LRB- -LRB-)
                  (NP (NNP CÃ) (NNS cents) (NNP Â) (NNP ≈) (NNP Â) (NNP ¡) (NNP N))
                  (-RRB- -RRB-))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ consists)
                      (PP (IN of)
                        (NP
                          (NP (DT a) (NN carbon) (NN atom))
                          (VP (VBN triple-bonded)
                            (PP (TO to)
                              (NP (DT a) (NN nitrogen) (NN atom)))))))))))))))
    (. .)))

det(Cyanide-2, A-1)
nsubj(compound-5, Cyanide-2)
cop(compound-5, is-3)
nn(compound-5, chemical-4)
root(ROOT-0, compound-5)
nsubj(contains-7, compound-5)
rcmod(compound-5, contains-7)
det(group-10, the-8)
amod(group-10, cyano-9)
dobj(contains-7, group-10)
nsubj(consists-22, group-10)
nn(N-18, CÃ-12)
nn(N-18, cents-13)
nn(N-18, Â-14)
nn(N-18, ≈-15)
nn(N-18, Â-16)
nn(N-18, ¡-17)
dep(group-10, N-18)
rcmod(group-10, consists-22)
det(atom-26, a-24)
nn(atom-26, carbon-25)
prep_of(consists-22, atom-26)
partmod(atom-26, triple-bonded-27)
det(atom-31, a-29)
nn(atom-31, nitrogen-30)
prep_to(triple-bonded-27, atom-31)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT a) (NNP Carbonate))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN salt)
          (CC or)
          (NN ester))
        (PP (IN of)
          (NP (JJ carbonic) (NN acid)))))
    (. .)))

prep_in(salt-8, chemistry-2)
det(Carbonate-5, a-4)
nsubj(salt-8, Carbonate-5)
cop(salt-8, is-6)
det(salt-8, a-7)
root(ROOT-0, salt-8)
conj_or(salt-8, ester-10)
amod(acid-13, carbonic-12)
prep_of(salt-8, acid-13)

(ROOT
  (S
    (NP (DT The) (NNP Circumference))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN distance))
        (PP (IN around)
          (NP (DT a) (VBN closed) (NN curve)))))
    (. .)))

det(Circumference-2, The-1)
nsubj(distance-5, Circumference-2)
cop(distance-5, is-3)
det(distance-5, the-4)
root(ROOT-0, distance-5)
det(curve-9, a-7)
amod(curve-9, closed-8)
prep_around(distance-5, curve-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN chemistry))
        (, ,)
        (NP (NN mineralogy))
        (, ,)
        (CC and)
        (NP (NNS materials) (NN science))))
    (, ,)
    (NP (DT a) (NNP Crystal))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ solid))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP
              (NP (DT the) (JJ constituent) (NNS atoms))
              (, ,)
              (NP (NNS molecules))
              (, ,)
              (CC or)
              (NP (NNS ions)))
            (VP (VBP are)
              (VP (VBN packed)
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN regularly))
                    (VP (VBN ordered) (, ,)
                      (S
                        (VP (VBG repeating)
                          (NP
                            (NP (NN pattern))
                            (VP (VBG extending)
                              (PP (IN in)
                                (NP (DT all) (CD three) (JJ spatial) (NNS dimensions))))))))))))))))
    (. .)))

prep_in(solid-14, chemistry-2)
conj_and(chemistry-2, mineralogy-4)
prep_in(solid-14, mineralogy-4)
nn(science-8, materials-7)
conj_and(chemistry-2, science-8)
prep_in(solid-14, science-8)
det(Crystal-11, a-10)
nsubj(solid-14, Crystal-11)
cop(solid-14, is-12)
det(solid-14, a-13)
root(ROOT-0, solid-14)
rel(packed-26, which-16)
det(atoms-19, the-17)
amod(atoms-19, constituent-18)
nsubjpass(packed-26, atoms-19)
conj_or(atoms-19, molecules-21)
nsubjpass(packed-26, molecules-21)
conj_or(atoms-19, ions-24)
nsubjpass(packed-26, ions-24)
auxpass(packed-26, are-25)
rcmod(solid-14, packed-26)
det(regularly-29, a-28)
prep_in(packed-26, regularly-29)
partmod(regularly-29, ordered-30)
xcomp(ordered-30, repeating-32)
dobj(repeating-32, pattern-33)
partmod(pattern-33, extending-34)
det(dimensions-39, all-36)
num(dimensions-39, three-37)
amod(dimensions-39, spatial-38)
prep_in(extending-34, dimensions-39)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (NNP C))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ general-purpose) (, ,) (IN block) (JJ structured) (, ,))
          (JJ procedural) (, ,)
          (ADJP (JJ imperative))
          (NN computer) (VBG programming) (NN language))
        (VP (VBN developed)
          (PP (IN in)
            (NP (CD 1972)))
          (PP (IN by)
            (NP
              (NP (NNP Dennis) (NNP Ritchie))
              (PP (IN at)
                (NP (DT the) (NNP Bell) (NNP Telephone) (NNPS Laboratories)))))
          (PP (IN for)
            (NP
              (NP (NN use))
              (PP (IN with)
                (NP (DT the) (NNP Unix) (NN operating) (NN system))))))))
    (. .)))

prep_in(language-17, computing-2)
nsubj(language-17, C-4)
cop(language-17, is-5)
det(language-17, a-6)
amod(structured-10, general-purpose-7)
dep(structured-10, block-9)
amod(language-17, structured-10)
amod(language-17, procedural-12)
amod(language-17, imperative-14)
nn(language-17, computer-15)
amod(language-17, programming-16)
root(ROOT-0, language-17)
partmod(language-17, developed-18)
prep_in(developed-18, 1972-20)
nn(Ritchie-23, Dennis-22)
agent(developed-18, Ritchie-23)
det(Laboratories-28, the-25)
nn(Laboratories-28, Bell-26)
nn(Laboratories-28, Telephone-27)
prep_at(Ritchie-23, Laboratories-28)
prep_for(developed-18, use-30)
det(system-35, the-32)
nn(system-35, Unix-33)
nn(system-35, operating-34)
prep_with(use-30, system-35)

(ROOT
  (S
    (NP (DT The) (NNPS Commodores))
    (VP (VBD were)
      (NP
        (NP (DT a)
          (ADJP (RB highly) (JJ successful))
          (NN funk) (NN \/) (NN soul) (NN band))
        (PP (IN of)
          (NP (DT the) (CD 1970s)
            (CC and)
            (CD 1980s)))))
    (. .)))

det(Commodores-2, The-1)
nsubj(band-10, Commodores-2)
cop(band-10, were-3)
det(band-10, a-4)
advmod(successful-6, highly-5)
amod(band-10, successful-6)
nn(band-10, funk-7)
nn(band-10, \/-8)
nn(band-10, soul-9)
root(ROOT-0, band-10)
dep(1970s-13, the-12)
prep_of(band-10, 1970s-13)
prep_of(band-10, 1980s-15)
conj_and(1970s-13, 1980s-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN anatomy)))
    (: :)
    (NP (NNP Cortex))
    (VP (VBZ refers)
      (PP
        (PP (TO to)
          (NP
            (NP (DT the) (JJ outermost)
              (CC or)
              (JJ superficial) (NN layer))
            (PP (IN of)
              (NP (DT an) (NN organ)))))
        (, ,)
        (CC and)
        (RB especially)
        (PP (IN in)
          (NP (DT the) (NN brain)))))
    (. .)))

prep_in(refers-5, anatomy-2)
nsubj(refers-5, Cortex-4)
root(ROOT-0, refers-5)
prep(refers-5, to-6)
det(layer-11, the-7)
amod(layer-11, outermost-8)
conj_or(outermost-8, superficial-10)
amod(layer-11, superficial-10)
pobj(to-6, layer-11)
det(organ-14, an-13)
prep_of(layer-11, organ-14)
prep(refers-5, especially-17)
advmod(to-6, especially-17)
conj_and(to-6, especially-17)
dep(to-6, in-18)
det(brain-20, the-19)
pobj(in-18, brain-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN vector) (NNS calculus)))
    (, ,)
    (NP
      (NP (NNP Curl))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (RB :) (JJR rotor))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vector) (NN operator))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ shows)
              (NP
                (NP
                  (NP (DT a) (NN vector) (NN field) (POS 's))
                  ('' '') (NN rotation))
                ('' '') (: ;)
                (NP
                  (NP (DT that) (NN is))
                  (, ,)
                  (NP
                    (NP (DT the) (NN direction))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (DT the) (NNS axis))
                          (PP (IN of)
                            (NP (NN rotation))))
                        (CC and)
                        (NP
                          (NP (DT the) (NN magnitude))
                          (PP (IN of)
                            (NP (DT the) (NN rotation))))))))))))))
    (. .)))

nn(calculus-3, vector-2)
prep_in(operator-14, calculus-3)
nsubj(operator-14, Curl-5)
dep(rotor-9, or-7)
dep(Curl-5, rotor-9)
cop(operator-14, is-11)
det(operator-14, a-12)
nn(operator-14, vector-13)
root(ROOT-0, operator-14)
nsubj(shows-16, operator-14)
rcmod(operator-14, shows-16)
det(field-19, a-17)
nn(field-19, vector-18)
poss(rotation-22, field-19)
dobj(shows-16, rotation-22)
det(is-26, that-25)
dep(rotation-22, is-26)
det(direction-29, the-28)
appos(is-26, direction-29)
det(axis-32, the-31)
prep_of(direction-29, axis-32)
prep_of(axis-32, rotation-34)
det(magnitude-37, the-36)
prep_of(direction-29, magnitude-37)
conj_and(axis-32, magnitude-37)
det(rotation-40, the-39)
prep_of(magnitude-37, rotation-40)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Conjecture))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mathematical) (NN statement))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP
              (VP (VBZ appears)
                (ADJP (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ true)))))))
              (, ,)
              (CC but)
              (VP (VBZ has) (RB not)
                (VP (VBN been)
                  (ADVP (RB formally))
                  (VP (VBN proven)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ true)
                            (PP (IN under)
                              (NP
                                (NP (DT the) (NNS rules))
                                (PP (IN of)
                                  (NP (JJ mathematical) (NN logic)))))))))))))))))
    (. .)))

prep_in(statement-9, mathematics-2)
det(Conjecture-5, a-4)
nsubj(statement-9, Conjecture-5)
cop(statement-9, is-6)
det(statement-9, a-7)
amod(statement-9, mathematical-8)
root(ROOT-0, statement-9)
nsubj(likely-12, statement-9)
nsubjpass(proven-22, statement-9)
cop(likely-12, appears-11)
rcmod(statement-9, likely-12)
aux(true-15, to-13)
cop(true-15, be-14)
xcomp(likely-12, true-15)
aux(proven-22, has-18)
neg(proven-22, not-19)
auxpass(proven-22, been-20)
advmod(proven-22, formally-21)
rcmod(statement-9, proven-22)
conj_but(likely-12, proven-22)
aux(true-25, to-23)
cop(true-25, be-24)
xcomp(proven-22, true-25)
det(rules-28, the-27)
prep_under(true-25, rules-28)
amod(logic-31, mathematical-30)
prep_of(rules-28, logic-31)

(ROOT
  (S
    (NP (DT The) (NN word) (NNP Cardinal))
    (ADVP (RB usually))
    (VP (VBZ refers)
      (PP
        (PP (TO to)
          (NP
            (NP (NNS things))
            (PP (IN of)
              (NP (JJ fundamental) (NN importance)))))
        (, ,) (RB as)
        (PP (IN in)
          (NP (JJ cardinal) (NN rule)
            (CC or)
            (NN cardinal) (NNS sins)))))
    (. .)))

det(Cardinal-3, The-1)
nn(Cardinal-3, word-2)
nsubj(refers-5, Cardinal-3)
advmod(refers-5, usually-4)
root(ROOT-0, refers-5)
prep_to(refers-5, things-7)
amod(importance-10, fundamental-9)
prep_of(things-7, importance-10)
advmod(refers-5, as-12)
amod(rule-15, cardinal-14)
prep_in(refers-5, rule-15)
nn(sins-18, cardinal-17)
prep_in(refers-5, sins-18)
conj_or(rule-15, sins-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP
      (NP (DT the) (NN Cardinality))
      (PP (IN of)
        (NP (DT a) (NN set))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP (DT the)))
        ('' '')
        (NP
          (NP (NN number))
          (PP (IN of)
            (NP
              (NP (NNS elements))
              (PP (IN of)
                (NP (DT the) (NN set) ('' ''))))))))
    (. .)))

prep_in(measure-11, mathematics-2)
det(Cardinality-5, the-4)
nsubj(measure-11, Cardinality-5)
det(set-8, a-7)
prep_of(Cardinality-5, set-8)
cop(measure-11, is-9)
det(measure-11, a-10)
root(ROOT-0, measure-11)
prep_of(measure-11, the-13)
dep(measure-11, number-15)
prep_of(number-15, elements-17)
det(set-20, the-19)
prep_of(elements-17, set-20)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ computational) (NN complexity) (NN theory)))
    (, ,)
    (NP (NN Co-NP))
    (VP (VBZ is)
      (NP (DT a) (NN complexity) (NN class)))
    (. .)))

amod(theory-4, computational-2)
nn(theory-4, complexity-3)
prep_in(class-10, theory-4)
nsubj(class-10, Co-NP-6)
cop(class-10, is-7)
det(class-10, a-8)
nn(class-10, complexity-9)
root(ROOT-0, class-10)

(ROOT
  (S
    (NP (DT A) (NNP Cardinal))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ senior) (JJ ecclesiastical) (NN official))
          (, ,)
          (NP (RB usually) (DT a) (NN bishop))
          (, ,))
        (PP (IN of)
          (NP (DT the) (NNP Catholic) (NNP Church)))))
    (. .)))

det(Cardinal-2, A-1)
nsubj(official-7, Cardinal-2)
cop(official-7, is-3)
det(official-7, a-4)
amod(official-7, senior-5)
amod(official-7, ecclesiastical-6)
root(ROOT-0, official-7)
advmod(bishop-11, usually-9)
det(bishop-11, a-10)
appos(official-7, bishop-11)
det(Church-16, the-14)
nn(Church-16, Catholic-15)
prep_of(official-7, Church-16)

(ROOT
  (S
    (NP (DT A) (NNP Civilization)
      (CC or)
      (NNP civilisation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN society)
          (CC or)
          (NN culture) (NN group))
        (VP
          (ADVP (RB normally))
          (VBN defined)
          (PP (IN as)
            (NP
              (NP (DT a) (JJ complex) (NN society))
              (VP (VBN characterized)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN practice))
                    (PP (IN of)
                      (NP (NN agriculture)
                        (CC and)
                        (NN settlement)))))
                (PP (IN in)
                  (NP (NNS cities)))))))))
    (. .)))

det(Civilization-2, A-1)
nsubj(group-10, Civilization-2)
conj_or(Civilization-2, civilisation-4)
nsubj(group-10, civilisation-4)
cop(group-10, is-5)
det(group-10, a-6)
nn(group-10, society-7)
conj_or(society-7, culture-9)
nn(group-10, culture-9)
root(ROOT-0, group-10)
advmod(defined-12, normally-11)
partmod(group-10, defined-12)
det(society-16, a-14)
amod(society-16, complex-15)
prep_as(defined-12, society-16)
partmod(society-16, characterized-17)
det(practice-20, the-19)
agent(characterized-17, practice-20)
prep_of(practice-20, agriculture-22)
prep_of(practice-20, settlement-24)
conj_and(agriculture-22, settlement-24)
prep_in(characterized-17, cities-26)

(ROOT
  (S
    (NP (DT A) (NN Cube))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ three-dimensional) (JJ solid) (NN object))
        (VP (VBN bounded)
          (PP (IN by)
            (NP
              (NP (CD six) (JJ square) (NNS faces))
              (, ,)
              (NP (NNS facets)
                (CC or)
                (NNS sides))
              (, ,)))
          (PP (IN with)
            (NP
              (NP (CD three) (NN meeting))
              (PP (IN at)
                (NP (DT each) (NN vertex))))))))
    (. .)))

det(Cube-2, A-1)
nsubj(object-7, Cube-2)
cop(object-7, is-3)
det(object-7, a-4)
amod(object-7, three-dimensional-5)
amod(object-7, solid-6)
root(ROOT-0, object-7)
partmod(object-7, bounded-8)
num(faces-12, six-10)
amod(faces-12, square-11)
agent(bounded-8, faces-12)
appos(faces-12, facets-14)
appos(faces-12, sides-16)
conj_or(facets-14, sides-16)
num(meeting-20, three-19)
prep_with(bounded-8, meeting-20)
det(vertex-23, each-22)
prep_at(meeting-20, vertex-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN architecture)))
    (, ,)
    (NP (DT a) (NNP Cupola)
      (CC or)
      (NNP lantern))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RB radially) (JJ symmetrical))
            (JJ ornamental) (NN structure))
          (PRN (-LRB- -LRB-)
            (ADJP (RB often) (JJ dome-shaped)
              (CC or)
              (JJ quadrilateral))
            (-RRB- -RRB-)))
        (VP (VBN located)
          (PP (IN on)
            (NP
              (NP (NN top))
              (PP (IN of)
                (NP
                  (NP (DT a) (JJR larger) (NN roof))
                  (CC or)
                  (NP (NN dome)))))))
        (, ,)
        (VP
          (ADVP (RB often))
          (VBN used)
          (UCP
            (PP (IN as)
              (NP (DT a) (NN lookout)))
            (CC or)
            (S
              (VP (TO to)
                (VP
                  (VP (VB admit)
                    (NP (NN light)))
                  (CC and)
                  (VP (VB provide)
                    (NP (NN ventilation))))))))))
    (. .)))

prep_in(structure-13, architecture-2)
det(Cupola-5, a-4)
nsubj(structure-13, Cupola-5)
conj_or(Cupola-5, lantern-7)
nsubj(structure-13, lantern-7)
cop(structure-13, is-8)
det(structure-13, a-9)
advmod(symmetrical-11, radially-10)
amod(structure-13, symmetrical-11)
amod(structure-13, ornamental-12)
root(ROOT-0, structure-13)
advmod(dome-shaped-16, often-15)
dep(structure-13, dome-shaped-16)
dep(structure-13, quadrilateral-18)
conj_or(dome-shaped-16, quadrilateral-18)
partmod(structure-13, located-20)
det(roof-26, a-24)
amod(roof-26, larger-25)
prep_on_top_of(located-20, roof-26)
prep_on_top_of(located-20, dome-28)
conj_or(roof-26, dome-28)
advmod(used-31, often-30)
partmod(structure-13, used-31)
dep(used-31, as-32)
det(lookout-34, a-33)
pobj(as-32, lookout-34)
aux(admit-37, to-36)
dep(used-31, admit-37)
conj_or(as-32, admit-37)
dobj(admit-37, light-38)
conj_or(as-32, provide-40)
conj_and(admit-37, provide-40)
dobj(provide-40, ventilation-41)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ traditional) (NNS cultures)))
    (, ,)
    (NP (NNP Air))
    (VP (VBZ is)
      (ADVP (RB often))
      (VP (VBN seen)
        (PP (IN as)
          (NP
            (NP (DT a) (JJ universal) (NN power))
            (CC or)
            (NP (JJ pure) (NN substance))))))
    (. .)))

amod(cultures-3, traditional-2)
prep_in(seen-8, cultures-3)
nsubjpass(seen-8, Air-5)
auxpass(seen-8, is-6)
advmod(seen-8, often-7)
root(ROOT-0, seen-8)
det(power-12, a-10)
amod(power-12, universal-11)
prep_as(seen-8, power-12)
amod(substance-15, pure-14)
prep_as(seen-8, substance-15)
conj_or(power-12, substance-15)

(ROOT
  (S
    (NP (DT A) (NNP Church))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN building))
        (VP (VBN used)
          (PP (IN for)
            (NP
              (NP (NN prayer))
              (, ,)
              (NP (NN worship))
              (, ,)
              (CC or)
              (NP (JJ other) (JJ public) (JJ religious) (NNS services))))
          (, ,)
          (S
            (ADVP (RB usually))
            (VP (VBG referring)
              (ADVP (RB specifically))
              (PP (TO to)
                (NP
                  (NP (DT those))
                  (PP (IN for)
                    (NP (JJ Christian) (NN worship))))))))))
    (. .)))

det(Church-2, A-1)
nsubj(building-5, Church-2)
cop(building-5, is-3)
det(building-5, a-4)
root(ROOT-0, building-5)
partmod(building-5, used-6)
prep_for(used-6, prayer-8)
prep_for(used-6, worship-10)
conj_or(prayer-8, worship-10)
amod(services-16, other-13)
amod(services-16, public-14)
amod(services-16, religious-15)
prep_for(used-6, services-16)
conj_or(prayer-8, services-16)
advmod(referring-19, usually-18)
xcomp(used-6, referring-19)
advmod(referring-19, specifically-20)
prep_to(referring-19, those-22)
amod(worship-25, Christian-24)
prep_for(those-22, worship-25)

(ROOT
  (S
    (NP (DT A) (NNP Capsid))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN protein) (NN shell))
        (PP (IN of)
          (NP (DT a) (NN virus)))))
    (. .)))

det(Capsid-2, A-1)
nsubj(shell-6, Capsid-2)
cop(shell-6, is-3)
det(shell-6, the-4)
nn(shell-6, protein-5)
root(ROOT-0, shell-6)
det(virus-9, a-8)
prep_of(shell-6, virus-9)

(ROOT
  (S
    (NP (NNP Cretinism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN condition))
        (PP (IN of)
          (NP
            (NP
              (ADJP (RB severely) (JJ stunted))
              (ADJP (NN physical)
                (CC and)
                (JJ mental))
              (NN growth)
              (ADJP (JJ due)
                (PP (TO to)
                  (NP
                    (NP
                      (ADJP (JJ untreated) (JJ congenital))
                      (NN deficiency))
                    (PP (IN of)
                      (NP (NN thyroid))))))
              (NNS hormones))
            (PRN (-LRB- -LRB-)
              (NP (NN hypothyroidism))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(condition-4, Cretinism-1)
cop(condition-4, is-2)
det(condition-4, a-3)
root(ROOT-0, condition-4)
advmod(stunted-7, severely-6)
amod(hormones-19, stunted-7)
amod(hormones-19, physical-8)
conj_and(physical-8, mental-10)
amod(hormones-19, mental-10)
nn(hormones-19, growth-11)
amod(congenital-15, untreated-14)
amod(deficiency-16, congenital-15)
prep_due_to(hormones-19, deficiency-16)
prep_of(deficiency-16, thyroid-18)
prep_of(condition-4, hormones-19)
appos(hormones-19, hypothyroidism-21)

(ROOT
  (S
    (NP (DT The) (NNP Calorie))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pre-SI) (NN unit))
        (PP (IN of)
          (NP (NN energy))))
      (, ,)
      (PP (IN in)
        (NP (JJ particular) (NN heat))))
    (. .)))

det(Calorie-2, The-1)
nsubj(unit-6, Calorie-2)
cop(unit-6, is-3)
det(unit-6, a-4)
amod(unit-6, pre-SI-5)
root(ROOT-0, unit-6)
prep_of(unit-6, energy-8)
amod(heat-12, particular-11)
prep_in(unit-6, heat-12)

(ROOT
  (S
    (NP (NNP Corcovado))
    (, ,)
    (S
      (VP (VBG meaning) ('' '')
        (NP (NN hunchback))
        ('' '')
        (PP (IN in)
          (NP (NNP Portuguese)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mountain))
        (PP (IN in)
          (NP
            (NP (JJ central) (NNP Rio) (NNP de) (NNP Janeiro))
            (, ,)
            (NP (NNP Brazil))))))
    (. .)))

nsubj(mountain-11, Corcovado-1)
partmod(mountain-11, meaning-3)
dobj(meaning-3, hunchback-5)
prep_in(meaning-3, Portuguese-8)
cop(mountain-11, is-9)
det(mountain-11, a-10)
root(ROOT-0, mountain-11)
amod(Janeiro-16, central-13)
nn(Janeiro-16, Rio-14)
nn(Janeiro-16, de-15)
prep_in(mountain-11, Janeiro-16)
appos(Janeiro-16, Brazil-18)

(ROOT
  (S
    (NP (DT The) (NN Clarinet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN in)
          (NP (DT the) (NN woodwind) (NN family)))))
    (. .)))

det(Clarinet-2, The-1)
nsubj(instrument-6, Clarinet-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(family-10, the-8)
nn(family-10, woodwind-9)
prep_in(instrument-6, family-10)

(ROOT
  (S
    (NP (NNP ChojnÃ) (NNP ∞) (NNP Â) (`` ``) (NNP w) (-LRB- -LRB-) (NNP Haynau) (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ small) (NN town))
          (PRN (-LRB- -LRB-)
            (NP
              (NP
                (QP (CD 14,389) (CD inhabitants)))
              (PP (RB as) (IN of)
                (NP (CD 2006))))
            (-RRB- -RRB-)))
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NNP Skora) (NN river))
              (, ,)
              (PP (IN in)
                (NP (NNP Legnica) (NNP County)))
              (, ,))
            (PRN (-LRB- -LRB-)
              (NP (NNP Lower) (NNP Silesian) (NNP Voivodeship))
              (-RRB- -RRB-))))
        (, ,)
        (PP (IN in)
          (NP (JJ south-western) (NNP Poland)))))
    (. .)))

nn(Haynau-7, ChojnÃ-1)
nn(Haynau-7, ∞-2)
nn(Haynau-7, Â-3)
nn(Haynau-7, w-5)
nsubj(town-12, Haynau-7)
cop(town-12, is-9)
det(town-12, a-10)
amod(town-12, small-11)
root(ROOT-0, town-12)
number(inhabitants-15, 14,389-14)
dep(town-12, inhabitants-15)
prep_as_of(inhabitants-15, 2006-18)
det(river-23, the-21)
nn(river-23, Skora-22)
prep_on(town-12, river-23)
nn(County-27, Legnica-26)
prep_in(river-23, County-27)
nn(Voivodeship-32, Lower-30)
nn(Voivodeship-32, Silesian-31)
appos(river-23, Voivodeship-32)
amod(Poland-37, south-western-36)
prep_in(town-12, Poland-37)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Carcinogen))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT any) (NN substance) (, ,) (NN radionuclide)
            (CC or)
            (NN radiation))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (NP
                  (NP (DT an) (NN agent))
                  (VP
                    (ADVP (RB directly))
                    (VBN involved)
                    (PP
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN promotion))
                          (PP (IN of)
                            (NP (NN cancer)))))
                      (CC or)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN facilitation))
                          (PP (IN of)
                            (NP (PRP$ its) (NN propagation))))))))))))))
    (. .)))

det(Carcinogen-3, The-1)
nn(Carcinogen-3, term-2)
nsubj(refers-4, Carcinogen-3)
root(ROOT-0, refers-4)
det(substance-7, any-6)
prep_to(refers-4, substance-7)
nsubj(agent-15, substance-7)
prep_to(refers-4, radionuclide-9)
conj_or(substance-7, radionuclide-9)
nsubj(agent-15, radionuclide-9)
prep_to(refers-4, radiation-11)
conj_or(substance-7, radiation-11)
nsubj(agent-15, radiation-11)
cop(agent-15, is-13)
det(agent-15, an-14)
rcmod(substance-7, agent-15)
advmod(involved-17, directly-16)
partmod(agent-15, involved-17)
det(promotion-20, the-19)
prep_in(involved-17, promotion-20)
prep_of(promotion-20, cancer-22)
det(facilitation-26, the-25)
prep_in(involved-17, facilitation-26)
conj_or(promotion-20, facilitation-26)
poss(propagation-29, its-28)
prep_of(facilitation-26, propagation-29)

(ROOT
  (S
    (NP (DT A) (NN Clock))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN instrument))
        (PP (IN for)
          (S
            (VP (VBG measuring) (, ,) (VBG indicating)
              (CC and)
              (VBG maintaining)
              (NP (DT the) (NN time)))))))
    (. .)))

det(Clock-2, A-1)
nsubj(instrument-5, Clock-2)
cop(instrument-5, is-3)
det(instrument-5, an-4)
root(ROOT-0, instrument-5)
prepc_for(instrument-5, measuring-7)
prepc_for(instrument-5, indicating-9)
conj_and(measuring-7, indicating-9)
prepc_for(instrument-5, maintaining-11)
conj_and(measuring-7, maintaining-11)
det(time-13, the-12)
dobj(measuring-7, time-13)

(ROOT
  (S
    (NP (DT The) (NNP Chlorophyceae))
    (VP (VBP are)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS classes))
            (PP (IN of)
              (NP (JJ green) (NN algae)))
            (, ,)
            (VP (VBD distinguished)
              (ADVP (RB mainly))
              (PP (IN on)
                (NP
                  (NP (DT the) (NN basis))
                  (PP (IN of)
                    (NP (JJ ultrastructural) (NN morphology))))))))))
    (. .)))

det(Chlorophyceae-2, The-1)
nsubj(one-4, Chlorophyceae-2)
cop(one-4, are-3)
root(ROOT-0, one-4)
det(classes-7, the-6)
prep_of(one-4, classes-7)
amod(algae-10, green-9)
prep_of(classes-7, algae-10)
partmod(classes-7, distinguished-12)
advmod(distinguished-12, mainly-13)
det(basis-16, the-15)
prep_on(distinguished-12, basis-16)
amod(morphology-19, ultrastructural-18)
prep_of(basis-16, morphology-19)

(ROOT
  (S
    (NP (DT A) (NNP Clutch))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mechanism))
        (PP (IN for)
          (S
            (VP (VBG transmitting)
              (NP
                (NP (NN rotation))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD can)
                      (VP (VB be)
                        (VP (VBN engaged)
                          (CC and)
                          (VBN disengaged))))))))))))
    (. .)))

det(Clutch-2, A-1)
nsubj(mechanism-5, Clutch-2)
cop(mechanism-5, is-3)
det(mechanism-5, a-4)
root(ROOT-0, mechanism-5)
prepc_for(mechanism-5, transmitting-7)
dobj(transmitting-7, rotation-8)
nsubjpass(engaged-13, rotation-8)
nsubjpass(disengaged-15, rotation-8)
aux(engaged-13, can-11)
auxpass(engaged-13, be-12)
rcmod(rotation-8, engaged-13)
rcmod(rotation-8, disengaged-15)
conj_and(engaged-13, disengaged-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Couplet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN pair))
        (PP (IN of)
          (NP
            (NP (NNS lines))
            (PP (IN of)
              (NP (NN verse)))))))
    (. .)))

det(Couplet-2, A-1)
nsubj(pair-5, Couplet-2)
cop(pair-5, is-3)
det(pair-5, a-4)
root(ROOT-0, pair-5)
prep_of(pair-5, lines-7)
prep_of(lines-7, verse-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Cello))
    (VP (VBZ is)
      (NP (DT a) (JJ bowed) (NN string) (NN instrument)))
    (. .)))

det(Cello-2, The-1)
nsubj(instrument-7, Cello-2)
cop(instrument-7, is-3)
det(instrument-7, a-4)
amod(instrument-7, bowed-5)
nn(instrument-7, string-6)
root(ROOT-0, instrument-7)

(ROOT
  (S
    (NP (DT The) (NNP Cimbri))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ Celtic)
          (CC or)
          (JJ Germanic) (NN tribe))
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB together)
              (PP (IN with)
                (NP (DT the) (NNP Teutones)
                  (CC and)
                  (DT the) (NNPS Ambrones))))
            (VP (VBD threatened)
              (NP (DT the) (NNP Roman) (NNP Republic))
              (PP (IN in)
                (NP (DT the) (JJ late) (JJ 2nd) (NN century) (NN BC))))))))
    (. .)))

det(Cimbri-2, The-1)
nsubj(tribe-8, Cimbri-2)
cop(tribe-8, were-3)
det(tribe-8, a-4)
amod(tribe-8, Celtic-5)
conj_or(Celtic-5, Germanic-7)
amod(tribe-8, Germanic-7)
root(ROOT-0, tribe-8)
nsubj(threatened-17, tribe-8)
det(Ambrones-16, the-12)
nn(Ambrones-16, Teutones-13)
conj_and(Teutones-13, the-15)
nn(Ambrones-16, the-15)
prep_together_with(threatened-17, Ambrones-16)
rcmod(tribe-8, threatened-17)
det(Republic-20, the-18)
nn(Republic-20, Roman-19)
dobj(threatened-17, Republic-20)
det(BC-26, the-22)
amod(BC-26, late-23)
amod(BC-26, 2nd-24)
nn(BC-26, century-25)
prep_in(threatened-17, BC-26)

(ROOT
  (S
    (NP (DT A) (NNP Carbine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN firearm))
        (ADJP
          (ADJP (JJ similar)
            (PP (TO to)
              (NP
                (NP (DT a) (NN rifle))
                (CC or)
                (NP (NN musket)))))
          (, ,)
          (CC but)
          (ADJP
            (ADJP (RB generally) (JJR shorter))
            (PRN (CC and)
              (PP (IN of)
                (NP (JJR lesser) (NN power))))))))
    (. .)))

det(Carbine-2, A-1)
nsubj(firearm-5, Carbine-2)
cop(firearm-5, is-3)
det(firearm-5, a-4)
root(ROOT-0, firearm-5)
amod(firearm-5, similar-6)
det(rifle-9, a-8)
prep_to(similar-6, rifle-9)
prep_to(similar-6, musket-11)
conj_or(rifle-9, musket-11)
advmod(shorter-15, generally-14)
amod(firearm-5, shorter-15)
conj_but(similar-6, shorter-15)
dep(of-17, and-16)
dep(shorter-15, of-17)
amod(power-19, lesser-18)
pobj(of-17, power-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN term) (NN Camel))
    (VP (VBZ describes)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (CD six) (JJ camellike) (NNS creatures))
              (PP (IN in)
                (NP (DT the) (NN family) (NN Camelidae))))
            (: :)
            (NP (DT the) (CD two) (JJ true) (NNS camels))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (CD four) (NNP South) (NNP American) (NNS camelids))
              (, ,)
              (NP (DT the) (NN llama))
              (, ,)
              (NP (NN alpaca))
              (, ,)
              (NP (NN guanaco))
              (, ,)
              (CC and)
              (NP (NNP vicuÃ) (NNP ∞) (NNP Â) (NNP ±) (NNP a)))))))
    (. .)))

det(Camel-3, The-1)
nn(Camel-3, term-2)
nsubj(describes-4, Camel-3)
root(ROOT-0, describes-4)
dobj(describes-4, any-5)
det(creatures-10, the-7)
num(creatures-10, six-8)
amod(creatures-10, camellike-9)
prep_of(any-5, creatures-10)
det(Camelidae-14, the-12)
nn(Camelidae-14, family-13)
prep_in(creatures-10, Camelidae-14)
det(camels-19, the-16)
num(camels-19, two-17)
amod(camels-19, true-18)
prep_of(any-5, camels-19)
conj_and(creatures-10, camels-19)
det(camelids-26, the-22)
num(camelids-26, four-23)
nn(camelids-26, South-24)
nn(camelids-26, American-25)
prep_of(any-5, camelids-26)
conj_and(creatures-10, camelids-26)
det(llama-29, the-28)
conj_and(creatures-10, llama-29)
conj_and(camelids-26, llama-29)
conj_and(creatures-10, alpaca-31)
conj_and(camelids-26, alpaca-31)
conj_and(creatures-10, guanaco-33)
conj_and(camelids-26, guanaco-33)
nn(a-40, vicuÃ-36)
nn(a-40, ∞-37)
nn(a-40, Â-38)
nn(a-40, ±-39)
conj_and(creatures-10, a-40)
conj_and(camelids-26, a-40)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (NNP Compactification))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process)
          (CC or)
          (NN result))
        (PP (IN of)
          (S
            (VP (VBG enlarging)
              (NP (DT a) (JJ topological) (NN space))
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (PRP it) (JJ compact))))))))))
    (. .)))

prep_in(process-7, mathematics-2)
nsubj(process-7, Compactification-4)
cop(process-7, is-5)
det(process-7, the-6)
root(ROOT-0, process-7)
conj_or(process-7, result-9)
prepc_of(process-7, enlarging-11)
det(space-14, a-12)
amod(space-14, topological-13)
dobj(enlarging-11, space-14)
aux(make-16, to-15)
xcomp(enlarging-11, make-16)
dobj(make-16, it-17)
amod(it-17, compact-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN architecture)))
    (, ,)
    (NP (DT a) (NN Bus))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subsystem))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ transfers)
              (NP
                (NP (NNS data))
                (PP (IN between)
                  (NP (NN computer) (NNS components))))
              (PP
                (PP (IN inside)
                  (NP (DT a) (NN computer)))
                (CC or)
                (PP (IN between)
                  (NP (NNS computers)))))))))
    (. .)))

nn(architecture-3, computer-2)
prep_in(subsystem-9, architecture-3)
det(Bus-6, a-5)
nsubj(subsystem-9, Bus-6)
cop(subsystem-9, is-7)
det(subsystem-9, a-8)
root(ROOT-0, subsystem-9)
nsubj(transfers-11, subsystem-9)
nsubj(transfers-11', subsystem-9)
rcmod(subsystem-9, transfers-11)
rcmod(subsystem-9, transfers-11')
conj_or(transfers-11, transfers-11')
dobj(transfers-11, data-12)
nn(components-15, computer-14)
prep_between(data-12, components-15)
det(computer-18, a-17)
prep_inside(transfers-11, computer-18)
prep_between(transfers-11', computers-21)

(ROOT
  (S
    (NP (NNP Cuisine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ specific) (NN set))
        (PP (IN of)
          (NP (JJ cooking) (NNS traditions)
            (CC and)
            (NNS practices)))
        (, ,)
        (VP
          (ADVP (RB often))
          (VBN associated)
          (PP (IN with)
            (NP (DT a) (JJ specific) (NN culture))))))
    (. .)))

nsubj(set-5, Cuisine-1)
cop(set-5, is-2)
det(set-5, a-3)
amod(set-5, specific-4)
root(ROOT-0, set-5)
amod(traditions-8, cooking-7)
prep_of(set-5, traditions-8)
prep_of(set-5, practices-10)
conj_and(traditions-8, practices-10)
advmod(associated-13, often-12)
partmod(set-5, associated-13)
det(culture-17, a-15)
amod(culture-17, specific-16)
prep_with(associated-13, culture-17)

(ROOT
  (S
    (NP (NNP CPAN))
    (VP (MD can)
      (VP (VB denote)
        (NP
          (NP
            (NP (RB either)
              (NP (DT the) (NN archive) (NN network))
              (ADVP (PRP itself)))
            (, ,)
            (CC or)
            (NP
              (NP (DT the) (JJ Perl) (NN program))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ acts)
                    (PP (IN as)
                      (NP (DT an) (NN interface)))
                    (PP (TO to)
                      (NP (DT the) (NN network))))))))
          (CC and)
          (RB as)
          (NP
            (NP (DT an) (VBN automated) (NN software) (NN installer))
            (PRN (-LRB- -LRB-)
              (PP (RB somewhat) (IN like)
                (NP (DT a) (NN package) (NN manager)))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(denote-3, CPAN-1)
aux(denote-3, can-2)
root(ROOT-0, denote-3)
advmod(network-7, either-4)
det(network-7, the-5)
nn(network-7, archive-6)
dobj(denote-3, network-7)
advmod(network-7, itself-8)
det(program-13, the-11)
amod(program-13, Perl-12)
dobj(denote-3, program-13)
conj_or(network-7, program-13)
nsubj(acts-15, program-13)
rcmod(program-13, acts-15)
det(interface-18, an-17)
prep_as(acts-15, interface-18)
det(network-21, the-20)
prep_to(acts-15, network-21)
dobj(denote-3, as-23)
advmod(network-7, as-23)
conj_and(network-7, as-23)
det(installer-27, an-24)
amod(installer-27, automated-25)
nn(installer-27, software-26)
dep(network-7, installer-27)
advmod(like-30, somewhat-29)
dep(installer-27, like-30)
det(manager-33, a-31)
nn(manager-33, package-32)
pobj(like-30, manager-33)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ general))
          (NN sense))
        (PP (IN of)
          (NP (DT the) (NN word)))))
    (, ,)
    (NP (DT a) (NNP Cement))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN binder))
        (, ,)
        (NP
          (NP (DT a) (NN substance))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP
                (VP (VBZ sets))
                (CC and)
                (VP (VBZ hardens)
                  (ADVP (RB independently)))
                (, ,)
                (CC and)
                (VP (MD can)
                  (VP (VB bind)
                    (NP (JJ other) (NNS materials))
                    (ADVP (RB together))))))))))
    (. .)))

det(sense-5, the-2)
advmod(general-4, most-3)
amod(sense-5, general-4)
prep_in(binder-14, sense-5)
det(word-8, the-7)
prep_of(sense-5, word-8)
det(Cement-11, a-10)
nsubj(binder-14, Cement-11)
cop(binder-14, is-12)
det(binder-14, a-13)
root(ROOT-0, binder-14)
det(substance-17, a-16)
appos(binder-14, substance-17)
nsubj(sets-19, substance-17)
nsubj(hardens-21, substance-17)
nsubj(bind-26, substance-17)
rcmod(substance-17, sets-19)
rcmod(substance-17, hardens-21)
conj_and(sets-19, hardens-21)
advmod(hardens-21, independently-22)
aux(bind-26, can-25)
rcmod(substance-17, bind-26)
conj_and(sets-19, bind-26)
amod(materials-28, other-27)
dobj(bind-26, materials-28)
advmod(bind-26, together-29)

(ROOT
  (S
    (NP (DT A) (NNP Clade))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ taxonomic) (NN group))
        (VP (VBG comprising)
          (NP
            (NP (DT a) (JJ single) (JJ common) (NN ancestor))
            (CC and)
            (NP
              (NP (PDT all) (DT the) (NNS descendants))
              (PP (IN of)
                (NP (DT that) (NN ancestor))))))))
    (. .)))

det(Clade-2, A-1)
nsubj(group-6, Clade-2)
cop(group-6, is-3)
det(group-6, a-4)
amod(group-6, taxonomic-5)
root(ROOT-0, group-6)
partmod(group-6, comprising-7)
det(ancestor-11, a-8)
amod(ancestor-11, single-9)
amod(ancestor-11, common-10)
dobj(comprising-7, ancestor-11)
predet(descendants-15, all-13)
det(descendants-15, the-14)
dobj(comprising-7, descendants-15)
conj_and(ancestor-11, descendants-15)
det(ancestor-18, that-17)
prep_of(descendants-15, ancestor-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (PP
      (ADVP (RB especially))
      (IN in)
      (NP (NN order) (NN theory)))
    (, ,)
    (NP
      (NP
        (NP (DT the) (NNP Cofinality) (NN cf))
        (PRN (-LRB- -LRB-)
          (NP (NNP A))
          (-RRB- -RRB-)))
      (PP (IN of)
        (NP (DT a)
          (ADJP (RB partially) (JJ ordered))
          (NN set) (NN A))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS least))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS cardinalities))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ cofinal) (NNS subsets))
                (PP (IN of)
                  (NP (NNP A)))))))))
    (. .)))

prep_in(least-23, mathematics-2)
advmod(least-23, especially-4)
nn(theory-7, order-6)
prep_in(least-23, theory-7)
det(cf-11, the-9)
nn(cf-11, Cofinality-10)
nsubj(least-23, cf-11)
appos(cf-11, A-13)
det(A-20, a-16)
advmod(ordered-18, partially-17)
amod(A-20, ordered-18)
nn(A-20, set-19)
prep_of(cf-11, A-20)
cop(least-23, is-21)
det(least-23, the-22)
root(ROOT-0, least-23)
det(cardinalities-26, the-25)
prep_of(least-23, cardinalities-26)
det(subsets-30, the-28)
amod(subsets-30, cofinal-29)
prep_of(cardinalities-26, subsets-30)
prep_of(subsets-30, A-32)

(ROOT
  (S
    (NP (DT A) (NNP Citadel))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS fortress))
        (PP (IN for)
          (S
            (VP
              (VP (VBG protecting)
                (NP (DT a) (NN town)))
              (, ,)
              (ADVP (RB sometimes))
              (VP (VBG incorporating)
                (NP (DT a) (NN castle))))))))
    (. .)))

det(Citadel-2, A-1)
nsubj(fortress-5, Citadel-2)
cop(fortress-5, is-3)
det(fortress-5, a-4)
root(ROOT-0, fortress-5)
prepc_for(fortress-5, protecting-7)
det(town-9, a-8)
dobj(protecting-7, town-9)
advmod(protecting-7, sometimes-11)
dep(protecting-7, incorporating-12)
det(castle-14, a-13)
dobj(incorporating-12, castle-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (DT The) (NN Coyote))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NNP kaÃ) (NNP ≈) (NNP ÂªÃ))
              (: --)
              (NP
                (NP
                  (NP (NNP Â) (NNP √) (NNP oÃ))
                  (: ...)
                  (NP (NNP Â)))
                (: ...)
                (NP
                  (NP (NN ti))
                  (, ,)
                  (NP (NNP Ã)))
                (: --)
                (NP
                  (NP (NNP Â) (NNP √))
                  (NP (NNP kaÃ) (NNP ≈) (NNP ÂªoÃ)))
                (: ...)
                (NP
                  (NP (NNP Â))
                  (: ...)
                  (NP (NN t)))))
            (-RRB- -RRB-)))
        (PRN (-LRB- -LRB-)
          (NP (NNP Canis) (NNS latrans))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT the) (JJ prairie) (NN wolf))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mammal))
        (PP (IN of)
          (NP (DT the) (NN order) (NN Carnivora)))))
    (. .)))

det(Coyote-2, The-1)
nsubj(mammal-42, Coyote-2)
nn(ÂªÃ-6, kaÃ-4)
nn(ÂªÃ-6, ≈-5)
dep(Coyote-2, ÂªÃ-6)
nn(oÃ-10, Â-8)
nn(oÃ-10, √-9)
dep(ÂªÃ-6, oÃ-10)
dep(oÃ-10, Â-12)
dep(oÃ-10, ti-14)
appos(ti-14, Ã-16)
nn(√-19, Â-18)
dep(oÃ-10, √-19)
nn(ÂªoÃ-22, kaÃ-20)
nn(ÂªoÃ-22, ≈-21)
dep(√-19, ÂªoÃ-22)
dep(oÃ-10, Â-24)
dep(Â-24, t-26)
nn(latrans-30, Canis-29)
appos(Coyote-2, latrans-30)
advmod(known-34, also-33)
partmod(Coyote-2, known-34)
det(wolf-38, the-36)
amod(wolf-38, prairie-37)
prep_as(known-34, wolf-38)
cop(mammal-42, is-40)
det(mammal-42, a-41)
root(ROOT-0, mammal-42)
det(Carnivora-46, the-44)
nn(Carnivora-46, order-45)
prep_of(mammal-42, Carnivora-46)

(ROOT
  (S
    (NP (DT The) (NNP Canidae) (NN family))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN part))
        (PP (IN of)
          (NP
            (NP (DT the) (NN order) (NN Carnivora))
            (PP (IN within)
              (NP
                (NP (DT the) (NNS mammals))
                (PRN (-LRB- -LRB-)
                  (NP (NNP Class) (NNP Mammalia))
                  (-RRB- -RRB-))))))))
    (. .)))

det(family-3, The-1)
nn(family-3, Canidae-2)
nsubj(part-6, family-3)
cop(part-6, is-4)
det(part-6, a-5)
root(ROOT-0, part-6)
det(Carnivora-10, the-8)
nn(Carnivora-10, order-9)
prep_of(part-6, Carnivora-10)
det(mammals-13, the-12)
prep_within(Carnivora-10, mammals-13)
nn(Mammalia-16, Class-15)
appos(mammals-13, Mammalia-16)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP (DT a) (NNP Clitic))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP
          (ADJP (RB grammatically) (JJ independent))
          (CC and)
          (ADJP (RB phonologically) (JJ dependent)))
        (NN word)))
    (. .)))

prep_in(word-13, linguistics-2)
det(Clitic-5, a-4)
nsubj(word-13, Clitic-5)
cop(word-13, is-6)
det(word-13, a-7)
advmod(independent-9, grammatically-8)
amod(word-13, independent-9)
advmod(dependent-12, phonologically-11)
conj_and(independent-9, dependent-12)
amod(word-13, dependent-12)
root(ROOT-0, word-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NN CD-R))
      (PRN (-LRB- -LRB-)
        (NP (NNP Compact) (NNP Disc-Recordable))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN variation))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Compact) (NNP Disc))
            (VP (VBN invented)
              (PP (IN by)
                (NP (NNP Philips)
                  (CC and)
                  (NNP Sony))))))))
    (. .)))

det(CD-R-2, A-1)
nsubj(variation-9, CD-R-2)
nn(Disc-Recordable-5, Compact-4)
appos(CD-R-2, Disc-Recordable-5)
cop(variation-9, is-7)
det(variation-9, a-8)
root(ROOT-0, variation-9)
det(Disc-13, the-11)
nn(Disc-13, Compact-12)
prep_of(variation-9, Disc-13)
partmod(Disc-13, invented-14)
agent(invented-14, Philips-16)
agent(invented-14, Sony-18)
conj_and(Philips-16, Sony-18)

(ROOT
  (NP
    (NP (NNP The))
    (NP (NNP Cytosol) (-LRB- -LRB-) (NNP cf))
    (. .)))

root(ROOT-0, The-1)
nn(cf-4, Cytosol-2)
dep(The-1, cf-4)

(ROOT
  (SINV
    (VP (VBG cytoplasm) (, ,)
      (PRN (-LRB- -LRB-)
        (NP (RB often) (JJ abbreviated) (NN ICF))
        (-RRB- -RRB-)))
    (PRN
      (S
        (NP (WDT which))
        (VP
          (ADVP (RB also))
          (VBZ includes)
          (NP (DT the) (NNS organelles))))
      (-RRB- -RRB-))
    (VP (VBZ is))
    (NP
      (NP (DT the) (JJ internal) (NN fluid))
      (PP (IN of)
        (UCP
          (NP (DT the) (NN cell))
          (, ,)
          (CC and)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (DT a) (NN portion))
                (PP (IN of)
                  (NP (NN cell) (NN metabolism))))
              (VP (VBZ occurs)))))))
    (. .)))

root(ROOT-0, cytoplasm-1)
advmod(ICF-6, often-4)
amod(ICF-6, abbreviated-5)
dep(cytoplasm-1, ICF-6)
nsubj(includes-10, which-8)
advmod(includes-10, also-9)
parataxis(cytoplasm-1, includes-10)
parataxis(is-14, includes-10)
det(organelles-12, the-11)
dobj(includes-10, organelles-12)
aux(cytoplasm-1, is-14)
det(fluid-17, the-15)
amod(fluid-17, internal-16)
nsubj(cytoplasm-1, fluid-17)
det(cell-20, the-19)
prep_of(fluid-17, cell-20)
advmod(occurs-29, where-23)
det(portion-25, a-24)
nsubj(occurs-29, portion-25)
nn(metabolism-28, cell-27)
prep_of(portion-25, metabolism-28)
prep_of(fluid-17, occurs-29)
conj_and(cell-20, occurs-29)
rcmod(cell-20, occurs-29)

(ROOT
  (S
    (NP (DT A) (NNP Crew))
    (VP (VBZ comprises)
      (NP
        (NP (DT a) (NN body))
        (CC or)
        (NP
          (NP (DT a) (NN class))
          (PP (IN of)
            (NP
              (NP (NNS people))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP work)
                    (PP (IN at)
                      (NP
                        (NP (DT a) (JJ common) (NN activity))
                        (, ,)
                        (ADVP (RB generally))))
                    (PP (IN in)
                      (NP (DT a)
                        (ADJP (JJ structured)
                          (CC or)
                          (JJ hierarchical))
                        (NN organization)))))))))))
    (. .)))

det(Crew-2, A-1)
nsubj(comprises-3, Crew-2)
root(ROOT-0, comprises-3)
det(body-5, a-4)
dobj(comprises-3, body-5)
det(class-8, a-7)
dobj(comprises-3, class-8)
conj_or(body-5, class-8)
prep_of(class-8, people-10)
nsubj(work-12, people-10)
rcmod(people-10, work-12)
det(activity-16, a-14)
amod(activity-16, common-15)
prep_at(work-12, activity-16)
advmod(activity-16, generally-18)
det(organization-24, a-20)
amod(organization-24, structured-21)
conj_or(structured-21, hierarchical-23)
amod(organization-24, hierarchical-23)
prep_in(work-12, organization-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Cyborg))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ cybernetic) (NN organism))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NN e.))
            (, ,)
            (NP
              (NP (DT an) (NN organism))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT both) (NN artificial))
                      (CC and)
                      (NP (JJ natural) (NNS systems))))))))
          (-RRB- -RRB-))))
    (. .)))

det(Cyborg-2, A-1)
nsubj(organism-6, Cyborg-2)
cop(organism-6, is-3)
det(organism-6, a-4)
amod(organism-6, cybernetic-5)
root(ROOT-0, organism-6)
dep(organism-6, e.-8)
det(organism-11, an-10)
appos(e.-8, organism-11)
nsubj(has-13, organism-11)
rcmod(organism-11, has-13)
det(artificial-15, both-14)
dobj(has-13, artificial-15)
amod(systems-18, natural-17)
dobj(has-13, systems-18)
conj_and(artificial-15, systems-18)

(ROOT
  (S
    (NP (DT The) (NNPS Clitoris))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ sexual) (NN organ))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ present))
              (ADVP (RB only))
              (PP (IN in)
                (NP (JJ female) (NNS mammals))))))))
    (. .)))

det(Clitoris-2, The-1)
nsubj(organ-6, Clitoris-2)
cop(organ-6, is-3)
det(organ-6, a-4)
amod(organ-6, sexual-5)
root(ROOT-0, organ-6)
nsubj(present-9, organ-6)
cop(present-9, is-8)
rcmod(organ-6, present-9)
advmod(present-9, only-10)
amod(mammals-13, female-12)
prep_in(present-9, mammals-13)

(ROOT
  (S
    (S
      (NP (DT The) (NNPS Cotswolds))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN range))
          (PP (IN of)
            (NP
              (NP (NNS hills))
              (PP (IN in)
                (NP (JJ west-central) (NNP England)))
              (, ,)
              (VP
                (ADVP (RB sometimes))
                (VBN called)
                (NP
                  (NP (NNP the) ('' '') (NNP Heart))
                  (PP (IN of)
                    (NP (NNP England))))
                ('' '')))))))
    (, ,)
    (NP (DT an) (NN area))
    (VP
      (VP (VBP convert)
        (NP (NNS <PRT>))
        (PP (IN across)
          (NP (NNP </PRT>))))
      (CC and)
      (VP (VBP convert)
        (ADVP (RB long))))
    (. .)))

det(Cotswolds-2, The-1)
nsubj(range-5, Cotswolds-2)
cop(range-5, is-3)
det(range-5, a-4)
ccomp(convert-23, range-5)
prep_of(range-5, hills-7)
amod(England-10, west-central-9)
prep_in(hills-7, England-10)
advmod(called-13, sometimes-12)
partmod(hills-7, called-13)
nn(Heart-16, the-14)
dobj(called-13, Heart-16)
prep_of(Heart-16, England-18)
det(area-22, an-21)
nsubj(convert-23, area-22)
nsubj(convert-28, area-22)
root(ROOT-0, convert-23)
dobj(convert-23, <PRT>-24)
prep_across(convert-23, </PRT>-26)
conj_and(convert-23, convert-28)
advmod(convert-28, long-29)

(ROOT
  (S
    (PP (IN In)
      (UCP
        (NP (NNS politics))
        (CC and)
        (PP (IN in)
          (NP (NN history)))))
    (, ,)
    (NP (DT a) (NN Colony))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN territory))
        (PP (IN under)
          (NP
            (NP (DT the) (JJ immediate) (JJ political) (NN control))
            (PP (IN of)
              (NP (DT a) (NN state)))))))
    (. .)))

prep_in(territory-11, politics-2)
conj_and(politics-2, in-4)
prep_in(territory-11, in-4)
prep_in(politics-2, history-5)
det(Colony-8, a-7)
nsubj(territory-11, Colony-8)
cop(territory-11, is-9)
det(territory-11, a-10)
root(ROOT-0, territory-11)
det(control-16, the-13)
amod(control-16, immediate-14)
amod(control-16, political-15)
prep_under(territory-11, control-16)
det(state-19, a-18)
prep_of(control-16, state-19)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Column))
      (PP (IN in)
        (NP (JJ structural) (NN engineering))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ vertical) (JJ structural) (NN element))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ transmits) (, ,)
              (PP (IN through)
                (NP
                  (NP (NN compression))
                  (, ,)
                  (NP
                    (NP (DT the) (NN weight))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN structure))
                        (PP (IN above)
                          (PP (TO to)
                            (NP (JJ other) (JJ structural) (NNS elements)))))))))
              (ADVP (RB below)))))))
    (. .)))

det(Column-2, A-1)
nsubj(element-10, Column-2)
amod(engineering-5, structural-4)
prep_in(Column-2, engineering-5)
cop(element-10, is-6)
det(element-10, a-7)
amod(element-10, vertical-8)
amod(element-10, structural-9)
root(ROOT-0, element-10)
nsubj(transmits-12, element-10)
rcmod(element-10, transmits-12)
prep_through(transmits-12, compression-15)
det(weight-18, the-17)
appos(compression-15, weight-18)
det(structure-21, the-20)
prep_of(weight-18, structure-21)
prep(structure-21, above-22)
pcomp(above-22, to-23)
amod(elements-26, other-24)
amod(elements-26, structural-25)
prep_to(above-22, elements-26)
advmod(transmits-12, below-27)

(ROOT
  (S
    (NP (DT A) (NNP Cabal))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN number))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (VP (VBN united)
              (PP (IN in)
                (NP (DT some) (JJ close) (NN design)))
              (, ,)
              (S
                (ADVP (RB usually))
                (VP (TO to)
                  (VP (VB promote)
                    (NP (PRP$ their) (JJ private) (NNS views)
                      (CC and)
                      (NNS interests))
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN church))
                        (, ,)
                        (ADVP
                          (NP
                            (NP (NN state))
                            (, ,)
                            (CC or)
                            (NP (JJ other) (NN community))
                            (, ,))
                          (RB often)
                          (PP (IN by)
                            (NP (NN intrigue))))))))))))))
    (. .)))

det(Cabal-2, A-1)
nsubj(number-5, Cabal-2)
cop(number-5, is-3)
det(number-5, a-4)
root(ROOT-0, number-5)
prep_of(number-5, people-7)
xsubj(promote-16, people-7)
partmod(people-7, united-8)
det(design-12, some-10)
amod(design-12, close-11)
prep_in(united-8, design-12)
advmod(promote-16, usually-14)
aux(promote-16, to-15)
xcomp(united-8, promote-16)
poss(views-19, their-17)
amod(views-19, private-18)
dobj(promote-16, views-19)
dobj(promote-16, interests-21)
conj_and(views-19, interests-21)
det(church-24, a-23)
prep_in(promote-16, church-24)
npadvmod(often-32, state-26)
amod(community-30, other-29)
conj_or(state-26, community-30)
npadvmod(often-32, community-30)
advmod(church-24, often-32)
prep_by(often-32, intrigue-34)

(ROOT
  (S
    (NP (DT A) (NNP Cathode))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN electrode))
        (SBAR
          (WHPP (IN through)
            (WHNP
              (WHNP (WDT which))
              (PRN (-LRB- -LRB-)
                (ADJP (JJ positive))
                (-RRB- -RRB-))))
          (S
            (NP (JJ electric) (NN current))
            (VP (VBZ flows)
              (PRT (RP out))
              (PP (IN of)
                (NP (DT a) (JJ polarized) (JJ electrical) (NN device))))))))
    (. .)))

det(Cathode-2, A-1)
nsubj(electrode-5, Cathode-2)
cop(electrode-5, is-3)
det(electrode-5, an-4)
root(ROOT-0, electrode-5)
rel(flows-13, which-7)
dep(which-7, positive-9)
amod(current-12, electric-11)
nsubj(flows-13, current-12)
rcmod(electrode-5, flows-13)
det(device-19, a-16)
amod(device-19, polarized-17)
amod(device-19, electrical-18)
prep_out_of(flows-13, device-19)

(ROOT
  (S
    (S
      (ADVP (RB Chirality))
      (, ,)
      (NP (CC or))
      ('' '')
      (VP (VBD handedness) ('' '')))
    (, ,)
    (NP (-LRB- -LRB-) (JJ Greek) (, ,) (NNP Ã) (NNP ∂) (NNP ÂΩÃ))
    (VP
      (VP (VBZ ⁄)
        (NP (NNP ÂµÃ) (CD ⁄)
          (NP (NNP Â) (POS '))
          (NNP Ã))
        (VP (VB ∂)
          (NP
            (NP (NNP Â) (NNP ™))
            (, ,)
            (ADJP (JJ kheir))
            (: :))
          ('' '')
          (NP (NN hand) ('' ''))
          (-RRB- -RRB-)))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN property))
          (PP (IN of)
            (ADJP
              (ADJP (RB asymmetry) (JJ important))
              (PP (IN in)
                (NP
                  (NP (JJ several) (NNS branches))
                  (PP (IN of)
                    (NP (NN science))))))))))
    (. .)))

advmod(handedness-5, Chirality-1)
nsubj(handedness-5, or-3)
ccomp(⁄-14, handedness-5)
amod(ÂΩÃ-13, Greek-9)
dep(ÂΩÃ-13, Ã-11)
nn(ÂΩÃ-13, ∂-12)
nsubj(⁄-14, ÂΩÃ-13)
root(ROOT-0, ⁄-14)
nn(Ã-19, ÂµÃ-15)
num(Ã-19, ⁄-16)
poss(Ã-19, Â-17)
dobj(⁄-14, Ã-19)
dep(⁄-14, ∂-20)
nn(™-22, Â-21)
dobj(∂-20, ™-22)
amod(™-22, kheir-24)
dobj(∂-20, hand-27)
cop(property-32, is-30)
det(property-32, a-31)
dep(⁄-14, property-32)
advmod(important-35, asymmetry-34)
prep_of(property-32, important-35)
amod(branches-38, several-37)
prep_in(important-35, branches-38)
prep_of(branches-38, science-40)

(ROOT
  (S
    (NP (DT A) (NNPS Campus))
    (VP (VBZ is)
      (ADVP (RB traditionally))
      (NP
        (NP (DT the) (NN land))
        (SBAR
          (WHPP (IN on)
            (WHNP (WDT which)))
          (S
            (NP
              (NP (DT a) (NN college)
                (CC or)
                (NN university))
              (CC and)
              (NP (JJ related) (JJ institutional) (NNS buildings)))
            (VP (VBP are)
              (ADJP (VBN situated)))))))
    (. .)))

det(Campus-2, A-1)
nsubj(land-6, Campus-2)
cop(land-6, is-3)
advmod(land-6, traditionally-4)
det(land-6, the-5)
root(ROOT-0, land-6)
rel(situated-18, which-8)
det(college-10, a-9)
nsubjpass(situated-18, college-10)
conj_or(college-10, university-12)
nsubjpass(situated-18, university-12)
amod(buildings-16, related-14)
amod(buildings-16, institutional-15)
conj_and(college-10, buildings-16)
nsubjpass(situated-18, buildings-16)
auxpass(situated-18, are-17)
rcmod(land-6, situated-18)

(ROOT
  (S
    (NP (DT A) (NNP Crossbow))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN weapon))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN bow))
              (VP (VBN mounted)
                (PP (IN on)
                  (NP (DT a) (NN stock)))
                (SBAR (IN that)
                  (S
                    (NP (NNS shoots))
                    (VP
                      (VP (VBZ projectiles))
                      (, ,)
                      (ADVP (RB often))
                      (VP (VBD called)
                        (NP (NNS bolts))))))))))))
    (. .)))

det(Crossbow-2, A-1)
nsubj(weapon-5, Crossbow-2)
cop(weapon-5, is-3)
det(weapon-5, a-4)
root(ROOT-0, weapon-5)
partmod(weapon-5, consisting-6)
det(bow-9, a-8)
prep_of(consisting-6, bow-9)
partmod(bow-9, mounted-10)
det(stock-13, a-12)
prep_on(mounted-10, stock-13)
complm(projectiles-16, that-14)
nsubj(projectiles-16, shoots-15)
ccomp(mounted-10, projectiles-16)
advmod(projectiles-16, often-18)
dep(projectiles-16, called-19)
dobj(called-19, bolts-20)

(ROOT
  (S
    (NP (DT A) (NNP Cruiser))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN type))
        (PP (IN of)
          (NP
            (NP (NN warship))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD had)
                  (NP
                    (NP (PRP$ its) (JJ prime) (NN period))
                    (PP (IN from)
                      (NP (DT the) (JJ late) (JJ 19th) (NN century))))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN end))
                      (PP (IN of)
                        (NP (DT the) (NNP Cold) (NNP War))))))))))))
    (. .)))

det(Cruiser-2, A-1)
nsubj(type-6, Cruiser-2)
cop(type-6, is-3)
det(type-6, a-4)
amod(type-6, large-5)
root(ROOT-0, type-6)
prep_of(type-6, warship-8)
nsubj(had-11, warship-8)
rcmod(warship-8, had-11)
poss(period-14, its-12)
amod(period-14, prime-13)
dobj(had-11, period-14)
det(century-19, the-16)
amod(century-19, late-17)
amod(century-19, 19th-18)
prep_from(period-14, century-19)
det(end-22, the-21)
prep_to(had-11, end-22)
det(War-26, the-24)
nn(War-26, Cold-25)
prep_of(end-22, War-26)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Copycat))
      (PRN (-LRB- -LRB-)
        (ADVP (RB also))
        (NP
          (NP (`` `) (NN copy-cat) ('' '))
          (CC or)
          (NP (`` `) (NN copy) (NN cat) ('' ')))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (PRN (-LRB- -LRB-)
          (CC or)
          (NP
            (NP
              (NP (NN animal))
              (, ,)
              (CC or)
              (NP (NN computer)))
            (NP (NN program)))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ mimics)
              (CC or)
              (VBZ repeats)
              (NP
                (NP (DT the) (NN behavior))
                (PP (IN of)
                  (NP (DT another)))))))))
    (. .)))

det(Copycat-2, A-1)
nsubj(person-16, Copycat-2)
dep(copy-cat-6, also-4)
dep(Copycat-2, copy-cat-6)
nn(cat-11, copy-10)
dep(Copycat-2, cat-11)
conj_or(copy-cat-6, cat-11)
cop(person-16, is-14)
det(person-16, a-15)
root(ROOT-0, person-16)
nsubj(mimics-26, person-16)
nsubj(repeats-28, person-16)
dep(animal-19, or-18)
dep(person-16, animal-19)
dep(person-16, computer-22)
conj_or(animal-19, computer-22)
dep(animal-19, program-23)
rcmod(person-16, mimics-26)
rcmod(person-16, repeats-28)
conj_or(mimics-26, repeats-28)
det(behavior-30, the-29)
dobj(mimics-26, behavior-30)
prep_of(behavior-30, another-32)

(ROOT
  (S
    (NP (DT A) (NNP Cannon))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN type))
          (PP (IN of)
            (NP (NN artillery))))
        (PRN (, ,)
          (ADVP (RB usually))
          (NP (JJ large)
            (CC and)
            (JJ tubular))
          (, ,))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ uses)
              (S
                (NP
                  (NP (NN gunpowder))
                  (CC or)
                  (NP (JJ other) (JJ explosive-based) (NNS propellants)))
                (VP (TO to)
                  (VP (VB launch)
                    (NP
                      (NP (DT a) (NN projectile))
                      (PP (IN over)
                        (NP (DT a) (NN distance))))))))))))
    (. .)))

det(Cannon-2, A-1)
nsubj(type-5, Cannon-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
nsubj(uses-15, type-5)
prep_of(type-5, artillery-7)
dep(large-10, usually-9)
dep(type-5, large-10)
dep(type-5, tubular-12)
conj_and(large-10, tubular-12)
rcmod(type-5, uses-15)
nsubj(launch-22, gunpowder-16)
amod(propellants-20, other-18)
amod(propellants-20, explosive-based-19)
conj_or(gunpowder-16, propellants-20)
nsubj(launch-22, propellants-20)
aux(launch-22, to-21)
xcomp(uses-15, launch-22)
det(projectile-24, a-23)
dobj(launch-22, projectile-24)
det(distance-27, a-26)
prep_over(projectile-24, distance-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP
      (NP (DT a) (NNP Mouse))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN plural) (NNS mice))
          (, ,)
          (NP (NN mouse) (NNS devices))
          (, ,)
          (CC or)
          (NP (NNS mouses)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pointing) (NN device))
        (SBAR
          (WHNP
            (NP (WDT that) (NNS functions))
            (PP (IN by)
              (S
                (VP (VBG detecting)
                  (NP (JJ two-dimensional) (NN motion))))))
          (S
            (ADJP (JJ relative)
              (PP (TO to)
                (NP (PRP$ its) (JJ supporting) (NN surface))))))))
    (. .)))

prep_in(device-19, computing-2)
det(Mouse-5, a-4)
nsubj(device-19, Mouse-5)
nn(mice-8, plural-7)
dep(Mouse-5, mice-8)
nn(devices-11, mouse-10)
dep(Mouse-5, devices-11)
conj_or(mice-8, devices-11)
dep(Mouse-5, mouses-14)
conj_or(mice-8, mouses-14)
cop(device-19, is-16)
det(device-19, a-17)
amod(device-19, pointing-18)
root(ROOT-0, device-19)
dep(functions-21, device-19)
dep(relative-26, functions-21)
prepc_by(functions-21, detecting-23)
amod(motion-25, two-dimensional-24)
dobj(detecting-23, motion-25)
rcmod(device-19, relative-26)
poss(surface-30, its-28)
amod(surface-30, supporting-29)
prep_to(relative-26, surface-30)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Catapult))
      (VP (VBZ is)
        (NP
          (NP (DT any) (NN one))
          (PP (IN of)
            (NP
              (NP (DT a) (NN number))
              (PP (IN of)
                (NP
                  (NP (JJ non-handheld) (JJ mechanical) (NNS devices))
                  (VP (VBN used)
                    (S
                      (VP (TO to)
                        (VP (VB throw)
                          (NP (DT a) (JJ projectile) (DT a) (JJ great) (NN distance))
                          (PP (IN without)
                            (NP
                              (NP (DT the) (NN aid))
                              (PP (IN of)
                                (NP (DT an) (JJ explosive) (CD substanceÃ) (NNS cents))))))))))))))))
    (NP (NNP Â) (NNP •) (NNP Â))
    (VP (VBZ ‰)
      (NP
        (NP (RB particularly) (JJ various) (NNS types))
        (PP (IN of)
          (NP (JJ ancient)
            (CC and)
            (JJ medieval) (NN siege) (NNS engines)))))
    (. .)))

det(Catapult-2, A-1)
nsubj(one-5, Catapult-2)
cop(one-5, is-3)
det(one-5, any-4)
dep(‰-32, one-5)
det(number-8, a-7)
prep_of(one-5, number-8)
amod(devices-12, non-handheld-10)
amod(devices-12, mechanical-11)
prep_of(number-8, devices-12)
xsubj(throw-15, devices-12)
partmod(devices-12, used-13)
aux(throw-15, to-14)
xcomp(used-13, throw-15)
det(distance-20, a-16)
amod(distance-20, projectile-17)
det(distance-20, a-18)
amod(distance-20, great-19)
dobj(throw-15, distance-20)
det(aid-23, the-22)
prep_without(throw-15, aid-23)
det(cents-28, an-25)
amod(cents-28, explosive-26)
num(cents-28, substanceÃ-27)
prep_of(aid-23, cents-28)
nn(Â-31, Â-29)
nn(Â-31, •-30)
nsubj(‰-32, Â-31)
root(ROOT-0, ‰-32)
advmod(types-35, particularly-33)
amod(types-35, various-34)
dobj(‰-32, types-35)
amod(engines-41, ancient-37)
conj_and(ancient-37, medieval-39)
amod(engines-41, medieval-39)
nn(engines-41, siege-40)
prep_of(types-35, engines-41)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Clerihew))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ clerihew))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ specific))
          (NN kind))
        (PP (IN of)
          (NP (JJ short) (NN biographical) (NNS humorous) (NN verse)))))
    (. .)))

det(Clerihew-2, A-1)
nsubj(kind-11, Clerihew-2)
dep(clerihew-5, or-4)
dep(Clerihew-2, clerihew-5)
cop(kind-11, is-7)
det(kind-11, a-8)
advmod(specific-10, very-9)
amod(kind-11, specific-10)
root(ROOT-0, kind-11)
amod(verse-16, short-13)
nn(verse-16, biographical-14)
nn(verse-16, humorous-15)
prep_of(kind-11, verse-16)

(ROOT
  (S
    (NP (DT The) (NNP Cornet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN brass) (NN instrument))
        (ADJP (RB very) (JJ similar))
        (PP (TO to)
          (NP (DT the) (NN trumpet)))
        (, ,)
        (ADJP (JJ distinguished)
          (PP (IN by)
            (NP
              (NP (PRP$ its) (JJ conical) (NN bore))
              (, ,)
              (NP (JJ compact) (NN shape))
              (, ,)
              (CC and)
              (NP (NN mellower) (NN tone) (NN quality)))))))
    (. .)))

det(Cornet-2, The-1)
nsubj(instrument-6, Cornet-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
nn(instrument-6, brass-5)
root(ROOT-0, instrument-6)
advmod(similar-8, very-7)
amod(instrument-6, similar-8)
det(trumpet-11, the-10)
prep_to(instrument-6, trumpet-11)
amod(instrument-6, distinguished-13)
poss(bore-17, its-15)
amod(bore-17, conical-16)
prep_by(distinguished-13, bore-17)
amod(shape-20, compact-19)
prep_by(distinguished-13, shape-20)
conj_and(bore-17, shape-20)
nn(quality-25, mellower-23)
nn(quality-25, tone-24)
prep_by(distinguished-13, quality-25)
conj_and(bore-17, quality-25)

(ROOT
  (S
    (NP (DT A) (NNP CrannÃ) (NNP ∞) (NN Â) (`` ``) (NN g))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ ancient) (NN island))
        (VP (VBN used)
          (PP (IN for)
            (NP (DT a) (NN settlement))))))
    (. .)))

det(g-6, A-1)
nn(g-6, CrannÃ-2)
nn(g-6, ∞-3)
nn(g-6, Â-4)
nsubj(island-10, g-6)
cop(island-10, is-7)
det(island-10, an-8)
amod(island-10, ancient-9)
root(ROOT-0, island-10)
partmod(island-10, used-11)
det(settlement-14, a-13)
prep_for(used-11, settlement-14)

(ROOT
  (S
    (NP (DT The) (NNP Carat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN mass))
            (VP (VBN used)
              (PP (IN for)
                (S
                  (VP (VBG measuring)
                    (NP (NNS gems)
                      (CC and)
                      (NNS pearls))))))))))
    (. .)))

det(Carat-2, The-1)
nsubj(unit-5, Carat-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, mass-7)
partmod(mass-7, used-8)
prepc_for(used-8, measuring-10)
dobj(measuring-10, gems-11)
dobj(measuring-10, pearls-13)
conj_and(gems-11, pearls-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Cairn))
      (CC or)
      (NP (-LRB- -LRB-) (JJ Irish) (NN carn) (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ artificial) (NN pile))
        (PP (IN of)
          (NP
            (NP (NNS stones))
            (, ,)
            (ADVP (RB often)
              (PP (IN in)
                (NP (DT a) (JJ conical) (NN form))))))))
    (. .)))

det(Cairn-2, A-1)
nsubj(pile-11, Cairn-2)
amod(carn-6, Irish-5)
conj_or(Cairn-2, carn-6)
nsubj(pile-11, carn-6)
cop(pile-11, is-8)
det(pile-11, an-9)
amod(pile-11, artificial-10)
root(ROOT-0, pile-11)
prep_of(pile-11, stones-13)
advmod(stones-13, often-15)
det(form-19, a-17)
amod(form-19, conical-18)
prep_in(often-15, form-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (NNP Cross-examination))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN interrogation))
        (PP (IN of)
          (NP
            (NP (DT a) (NN witness))
            (VP (VBN called)
              (PP (IN by)
                (NP
                  (NP (CD one) (POS 's))
                  (NN opponent))))))))
    (. .)))

prep_in(interrogation-7, law-2)
nsubj(interrogation-7, Cross-examination-4)
cop(interrogation-7, is-5)
det(interrogation-7, the-6)
root(ROOT-0, interrogation-7)
det(witness-10, a-9)
prep_of(interrogation-7, witness-10)
partmod(witness-10, called-11)
poss(opponent-15, one-13)
agent(called-11, opponent-15)

(ROOT
  (S
    (NP (DT A) (NNP Creed))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN statement)
          (CC or)
          (NN confession))
        (PP (IN of)
          (NP (NN belief) (NN Ã) (NNS cents) (NNP Â) (NNP •) (NNP Â) (NNP ‰))))
      (ADVP (RB usually))
      (NP
        (NP (JJ religious) (NN belief) (NN Ã) (NNS cents) (NNP Â) (NNP •) (NNP Â) (NNP ‰))
        (CC or)
        (NP
          (NP (NN faith))
          (VP
            (ADVP (RB often))
            (VBN recited)
            (PP (IN as)
              (NP
                (NP (NN part))
                (PP (IN of)
                  (NP (DT a) (JJ religious) (NN service)))))))))
    (. .)))

det(Creed-2, A-1)
nsubj(statement-5, Creed-2)
cop(statement-5, is-3)
det(statement-5, a-4)
root(ROOT-0, statement-5)
conj_or(statement-5, confession-7)
nn(‰-15, belief-9)
nn(‰-15, Ã-10)
nn(‰-15, cents-11)
nn(‰-15, Â-12)
nn(‰-15, •-13)
nn(‰-15, Â-14)
prep_of(statement-5, ‰-15)
advmod(statement-5, usually-16)
amod(‰-24, religious-17)
nn(‰-24, belief-18)
nn(‰-24, Ã-19)
nn(‰-24, cents-20)
nn(‰-24, Â-21)
nn(‰-24, •-22)
nn(‰-24, Â-23)
attr(statement-5, ‰-24)
attr(statement-5, faith-26)
conj_or(‰-24, faith-26)
advmod(recited-28, often-27)
partmod(faith-26, recited-28)
prep_as(recited-28, part-30)
det(service-34, a-32)
amod(service-34, religious-33)
prep_of(part-30, service-34)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNP Callisto))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN nymph))
        (PP (IN of)
          (NP (NNP Artemis)))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(nymph-8, mythology-3)
nsubj(nymph-8, Callisto-5)
cop(nymph-8, was-6)
det(nymph-8, a-7)
root(ROOT-0, nymph-8)
prep_of(nymph-8, Artemis-10)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNP United) (NNPS States)
        (CC and)
        (NNP Canada)))
    (, ,)
    (NP (DT a) (NNP Cookie))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ small) (, ,) (JJ flat))
        (JJ baked) (NN dessert)))
    (. .)))

det(States-4, the-2)
nn(States-4, United-3)
prep_in(dessert-16, States-4)
conj_and(States-4, Canada-6)
prep_in(dessert-16, Canada-6)
det(Cookie-9, a-8)
nsubj(dessert-16, Cookie-9)
cop(dessert-16, is-10)
det(dessert-16, a-11)
amod(flat-14, small-12)
amod(dessert-16, flat-14)
amod(dessert-16, baked-15)
root(ROOT-0, dessert-16)

(ROOT
  (S
    (NP (DT The) (NNP Choctaw))
    (VP (VBP are)
      (NP (DT a) (JJ Native) (JJ American) (NNS people))
      (ADVP (RB originally))
      (PP (IN from)
        (NP
          (NP (DT the) (NNP Southeastern) (NNP United) (NNPS States))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NNP Mississippi))
              (, ,)
              (NP (NNP Alabama))
              (, ,)
              (CC and)
              (NP (NNP Louisiana)))
            (-RRB- -RRB-)))))
    (. .)))

det(Choctaw-2, The-1)
nsubj(people-7, Choctaw-2)
cop(people-7, are-3)
det(people-7, a-4)
amod(people-7, Native-5)
amod(people-7, American-6)
root(ROOT-0, people-7)
advmod(people-7, originally-8)
det(States-13, the-10)
nn(States-13, Southeastern-11)
nn(States-13, United-12)
prep_from(people-7, States-13)
dep(States-13, Mississippi-15)
dep(States-13, Alabama-17)
conj_and(Mississippi-15, Alabama-17)
dep(States-13, Louisiana-20)
conj_and(Mississippi-15, Louisiana-20)

(ROOT
  (S
    (NP (DT A) (NNP Cytoprotectant))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN medication))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ combats)
              (NP (NNS ulcers))
              (PP (RB not) (IN by)
                (S
                  (VP (VBG reducing)
                    (NP (JJ gastric) (NN acid))
                    (PP (CC but)
                      (PP (IN by)
                        (S
                          (VP (VBG increasing)
                            (NP (JJ mucosal) (NN protection))))))))))))))
    (. .)))

det(Cytoprotectant-2, A-1)
nsubj(medication-5, Cytoprotectant-2)
cop(medication-5, is-3)
det(medication-5, any-4)
root(ROOT-0, medication-5)
nsubj(combats-7, medication-5)
rcmod(medication-5, combats-7)
dobj(combats-7, ulcers-8)
neg(combats-7, not-9)
prepc_by(combats-7, reducing-11)
amod(acid-13, gastric-12)
dobj(reducing-11, acid-13)
cc(reducing-11, but-14)
prepc_by(reducing-11, increasing-16)
amod(protection-18, mucosal-17)
dobj(increasing-16, protection-18)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Caliph))
      (VP (VBZ is)
        (NP
          (NP
            (NP (DT the) (NN head))
            (PP (IN of)
              (NP
                (NP (NN state))
                (PP (IN in)
                  (NP (DT a) (NNP Caliphate))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN title))
            (PP (IN for)
              (NP
                (NP (DT the) (NN leader))
                (PP (IN of)
                  (NP (DT the) (NNP Islamic) (NNP Ummah)))))))))
    (, ,)
    (NP (DT an) (JJ Islamic) (NN community))
    (VP (VBD ruled)
      (PP (IN by)
        (NP (DT the) (NNP Shari'a))))
    (. .)))

det(Caliph-2, The-1)
nsubj(head-5, Caliph-2)
cop(head-5, is-3)
det(head-5, the-4)
ccomp(ruled-26, head-5)
prep_of(head-5, state-7)
det(Caliphate-10, a-9)
prep_in(state-7, Caliphate-10)
det(title-14, the-13)
conj_and(head-5, title-14)
ccomp(ruled-26, title-14)
det(leader-17, the-16)
prep_for(title-14, leader-17)
det(Ummah-21, the-19)
nn(Ummah-21, Islamic-20)
prep_of(leader-17, Ummah-21)
det(community-25, an-23)
amod(community-25, Islamic-24)
nsubj(ruled-26, community-25)
root(ROOT-0, ruled-26)
det(Shari'a-29, the-28)
prep_by(ruled-26, Shari'a-29)

(ROOT
  (SINV
    (S
      (NP (DT The) (NNP Crankshaft))
      (, ,)
      (ADVP (RB sometimes))
      (ADVP (RB casually))
      (VP (VBD abbreviated)
        (S
          (VP (TO to)
            (VP (VB crank))))))
    (, ,)
    (VP (VBZ is))
    (NP
      (NP (DT the) (NN part))
      (PP (IN of)
        (NP
          (NP (DT an) (NN engine))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ translates)
                (S
                  (VP (VBG reciprocating)
                    (NP (JJ linear) (NN piston) (NN motion))
                    (PP (IN into)
                      (NP (NN rotation)))))))))))
    (. .)))

det(Crankshaft-2, The-1)
nsubj(abbreviated-6, Crankshaft-2)
xsubj(crank-8, Crankshaft-2)
advmod(abbreviated-6, sometimes-4)
advmod(abbreviated-6, casually-5)
ccomp(is-10, abbreviated-6)
aux(crank-8, to-7)
xcomp(abbreviated-6, crank-8)
root(ROOT-0, is-10)
det(part-12, the-11)
nsubj(is-10, part-12)
det(engine-15, an-14)
prep_of(part-12, engine-15)
nsubj(translates-17, engine-15)
rcmod(engine-15, translates-17)
xcomp(translates-17, reciprocating-18)
amod(motion-21, linear-19)
nn(motion-21, piston-20)
dobj(reciprocating-18, motion-21)
prep_into(reciprocating-18, rotation-23)

(ROOT
  (S
    (NP (DT The) (NNP Centromere))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP (DT a) (NN region))
            (, ,)
            (VP
              (ADVP (RB often))
              (VBN found)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT the) (NN chromosome))))))
            (, ,))
          (VP (VBN involved)
            (PP (IN in)
              (NP (NN cell) (NN division)))))
        (CC and)
        (NP
          (NP (DT the) (NN control))
          (PP (IN of)
            (NP (NN gene) (NN expression))))))
    (. .)))

det(Centromere-2, The-1)
nsubj(region-5, Centromere-2)
cop(region-5, is-3)
det(region-5, a-4)
root(ROOT-0, region-5)
advmod(found-8, often-7)
partmod(region-5, found-8)
det(middle-11, the-10)
prep_in(found-8, middle-11)
det(chromosome-14, the-13)
prep_of(middle-11, chromosome-14)
partmod(region-5, involved-16)
nn(division-19, cell-18)
prep_in(involved-16, division-19)
det(control-22, the-21)
conj_and(region-5, control-22)
nn(expression-25, gene-24)
prep_of(control-22, expression-25)

(ROOT
  (S
    (NP (NNP Colonialism))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN extension))
        (PP (IN of)
          (NP
            (NP
              (NP (DT a) (NN nation) (POS 's))
              (NN sovereignty))
            (PP (IN over)
              (NP
                (NP (NN territory))
                (PP (IN beyond)
                  (NP (PRP$ its) (NNS borders))))))))
      (PP (IN by)
        (NP
          (NP
            (NP (DT the) (NN establishment))
            (PP (IN of)
              (NP (DT either) (NN settler) (NNS colonies))))
          (CC or)
          (NP
            (NP (JJ administrative) (NNS dependencies))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (NNS indigenous) (NNS populations))
                (VP (VBP are)
                  (ADVP (RB directly))
                  (VP (VBN ruled)
                    (CC or)
                    (VBN displaced)))))))))
    (. .)))

nsubj(extension-4, Colonialism-1)
cop(extension-4, is-2)
det(extension-4, the-3)
root(ROOT-0, extension-4)
det(nation-7, a-6)
poss(sovereignty-9, nation-7)
prep_of(extension-4, sovereignty-9)
prep_over(sovereignty-9, territory-11)
poss(borders-14, its-13)
prep_beyond(territory-11, borders-14)
det(establishment-17, the-16)
prep_by(extension-4, establishment-17)
det(colonies-21, either-19)
nn(colonies-21, settler-20)
prep_of(establishment-17, colonies-21)
amod(dependencies-24, administrative-23)
prep_by(extension-4, dependencies-24)
conj_or(establishment-17, dependencies-24)
rel(ruled-31, which-26)
nn(populations-28, indigenous-27)
nsubjpass(ruled-31, populations-28)
nsubjpass(displaced-33, populations-28)
auxpass(ruled-31, are-29)
advmod(ruled-31, directly-30)
rcmod(dependencies-24, ruled-31)
rcmod(dependencies-24, displaced-33)
conj_or(ruled-31, displaced-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN term) (NN Complex))
      (PP (IN in)
        (NP (NN chemistry))))
    (VP (VBZ is)
      (ADVP (RB usually))
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (NNS molecules)
                  (CC or)
                  (NNS ensembles))
                (VP (VBN formed)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (NN combination))
                      (PP (IN of)
                        (NP (NNS ligands)
                          (CC and)
                          (NN metal) (NNS ions))))))))))))
    (. .)))

det(Complex-3, The-1)
nn(Complex-3, term-2)
nsubjpass(used-8, Complex-3)
xsubj(describe-10, Complex-3)
prep_in(Complex-3, chemistry-5)
auxpass(used-8, is-6)
advmod(used-8, usually-7)
root(ROOT-0, used-8)
aux(describe-10, to-9)
xcomp(used-8, describe-10)
dobj(describe-10, molecules-11)
dobj(describe-10, ensembles-13)
conj_or(molecules-11, ensembles-13)
partmod(molecules-11, formed-14)
det(combination-17, the-16)
agent(formed-14, combination-17)
prep_of(combination-17, ligands-19)
nn(ions-22, metal-21)
prep_of(combination-17, ions-22)
conj_and(ligands-19, ions-22)

(ROOT
  (S
    (NP (DT The) (NNP ColecoVision))
    (VP
      (VP (VBZ is)
        (NP
          (NP (NNP Coleco) (NNP Industries) (POS '))
          (JJ second) (NN generation) (NN home) (NN video) (NN game) (NNS console)))
      (CC and)
      (VP (VBD was)
        (VP (VBN released)
          (PP (IN in)
            (NP (NNP August) (CD 1982))))))
    (. .)))

det(ColecoVision-2, The-1)
nsubj(console-12, ColecoVision-2)
nsubjpass(released-15, ColecoVision-2)
cop(console-12, is-3)
nn(Industries-5, Coleco-4)
poss(console-12, Industries-5)
amod(console-12, second-7)
nn(console-12, generation-8)
nn(console-12, home-9)
nn(console-12, video-10)
nn(console-12, game-11)
root(ROOT-0, console-12)
auxpass(released-15, was-14)
conj_and(console-12, released-15)
prep_in(released-15, August-17)
num(August-17, 1982-18)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Crucifix))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Latin) (NN cruci) (NN fixus) (NN meaning) ('' ''))
            (PRN (-LRB- -LRB-)
              (NP (CD one))
              (-RRB- -RRB-))
            (VP (VBN fixed)
              (PP (TO to)
                (NP (DT a) (NN cross) ('' ''))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cross))
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN representation))
              (PP (IN of)
                (NP
                  (NP (NNP Jesus) (POS '))
                  (NN body))))
            (, ,)
            (CC or)
            (NP (NN corpus))))))
    (. .)))

det(Crucifix-2, A-1)
nsubj(cross-21, Crucifix-2)
dep(Crucifix-2, from-4)
amod(meaning-8, Latin-5)
nn(meaning-8, cruci-6)
nn(meaning-8, fixus-7)
pobj(from-4, meaning-8)
appos(meaning-8, one-11)
partmod(meaning-8, fixed-13)
det(cross-16, a-15)
prep_to(fixed-13, cross-16)
cop(cross-21, is-19)
det(cross-21, a-20)
root(ROOT-0, cross-21)
det(representation-24, a-23)
prep_with(cross-21, representation-24)
poss(body-28, Jesus-26)
prep_of(representation-24, body-28)
prep_with(cross-21, corpus-31)
conj_or(representation-24, corpus-31)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ general) (NN use)))
    (, ,)
    (NP (DT a) (NNP Complaint))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN expression))
        (PP (IN of)
          (NP (NN displeasure)))
        (, ,)
        (PP (JJ such) (IN as)
          (NP
            (NP (JJ poor) (NN service))
            (PP
              (PP (IN at)
                (NP (DT a) (NN store)))
              (, ,)
              (CC or)
              (PP (IN from)
                (NP (DT a) (JJ local) (NN government))))
            (, ,)
            (X (NN etc.))))))
    (. .)))

amod(use-3, general-2)
prep_in(expression-9, use-3)
det(Complaint-6, a-5)
nsubj(expression-9, Complaint-6)
cop(expression-9, is-7)
det(expression-9, an-8)
root(ROOT-0, expression-9)
prep_of(expression-9, displeasure-11)
amod(service-16, poor-15)
prep_such_as(expression-9, service-16)
prep_such_as(expression-9, service-16')
conj_or(service-16, service-16')
det(store-19, a-18)
prep_at(service-16, store-19)
det(government-25, a-23)
amod(government-25, local-24)
prep_from(service-16', government-25)
dep(service-16, etc.-27)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ object-oriented) (NN programming)))
    (, ,)
    (NP (DT a) (NN Class))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN programming) (NN language) (NN construct))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN used)
                (PP (IN as)
                  (NP (DT a) (NN blueprint)))
                (S
                  (VP (TO to)
                    (VP (VB create)
                      (NP (NNS objects)))))))))))
    (. .)))

amod(programming-3, object-oriented-2)
prep_in(construct-11, programming-3)
det(Class-6, a-5)
nsubj(construct-11, Class-6)
cop(construct-11, is-7)
det(construct-11, a-8)
nn(construct-11, programming-9)
nn(construct-11, language-10)
root(ROOT-0, construct-11)
nsubjpass(used-14, construct-11)
auxpass(used-14, is-13)
rcmod(construct-11, used-14)
det(blueprint-17, a-16)
prep_as(used-14, blueprint-17)
aux(create-19, to-18)
xcomp(used-14, create-19)
dobj(create-19, objects-20)

(ROOT
  (S
    (NP
      (NP (NNP Crochet))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP kroÃ))
          (: ...)
          (NP
            (NP
              (NP (NNP Â))
              (: ...)
              (NP (NNP Ã)))
            (: --)
            (NP
              (NP (NNP Â) (NNP √) (NNP Ã))
              (: ...)
              (NP (NNP Â) (NNP ∞) (NNP eÃ) (NNP ≈) (NNP Âª)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN process))
        (PP (IN of)
          (S
            (VP (VBG creating)
              (NP (NN fabric))
              (PP (IN from)
                (NP (NN yarn)
                  (CC or)
                  (NN thread)))
              (S
                (VP (VBG using)
                  (NP (DT a) (JJ crochet) (NN hook)))))))))
    (. .)))

nsubj(process-21, Crochet-1)
dep(Crochet-1, kroÃ-3)
dep(kroÃ-3, Â-5)
dep(Â-5, Ã-7)
nn(Ã-11, Â-9)
nn(Ã-11, √-10)
dep(Â-5, Ã-11)
nn(Âª-17, Â-13)
nn(Âª-17, ∞-14)
nn(Âª-17, eÃ-15)
nn(Âª-17, ≈-16)
dep(Ã-11, Âª-17)
cop(process-21, is-19)
det(process-21, a-20)
root(ROOT-0, process-21)
prepc_of(process-21, creating-23)
dobj(creating-23, fabric-24)
prep_from(creating-23, yarn-26)
prep_from(creating-23, thread-28)
conj_or(yarn-26, thread-28)
xcomp(creating-23, using-29)
det(hook-32, a-30)
amod(hook-32, crochet-31)
dobj(using-29, hook-32)

(ROOT
  (S
    (NP (DT A) (NNP Coil))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN series))
        (PP (IN of)
          (NP (NNS loops)))))
    (. .)))

det(Coil-2, A-1)
nsubj(series-5, Coil-2)
cop(series-5, is-3)
det(series-5, a-4)
root(ROOT-0, series-5)
prep_of(series-5, loops-7)

(ROOT
  (S
    (NP (DT A) (NNP Clipper))
    (VP (VBD was)
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ fast))
          (NN sailing) (NN ship))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ 19th) (NN century))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD had)
                  (NP
                    (NP (JJ multiple) (NNS masts))
                    (CC and)
                    (NP (DT a) (JJ square) (NN rig))))))))))
    (. .)))

det(Clipper-2, A-1)
nsubj(ship-8, Clipper-2)
cop(ship-8, was-3)
det(ship-8, a-4)
advmod(fast-6, very-5)
amod(ship-8, fast-6)
nn(ship-8, sailing-7)
root(ROOT-0, ship-8)
det(century-12, the-10)
amod(century-12, 19th-11)
prep_of(ship-8, century-12)
nsubj(had-14, century-12)
rcmod(century-12, had-14)
amod(masts-16, multiple-15)
dobj(had-14, masts-16)
det(rig-20, a-18)
amod(rig-20, square-19)
dobj(had-14, rig-20)
conj_and(masts-16, rig-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Corporation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ legal) (NN personality))
        (, ,)
        (VP
          (ADVP (RB usually))
          (VBN used)
          (S
            (VP (TO to)
              (VP (VB conduct)
                (NP (NN business))))))))
    (. .)))

det(Corporation-2, A-1)
nsubj(personality-6, Corporation-2)
cop(personality-6, is-3)
det(personality-6, a-4)
amod(personality-6, legal-5)
root(ROOT-0, personality-6)
xsubj(conduct-11, personality-6)
advmod(used-9, usually-8)
partmod(personality-6, used-9)
aux(conduct-11, to-10)
xcomp(used-9, conduct-11)
dobj(conduct-11, business-12)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Cider))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP Ã))
            (: --)
            (NP (NNP Â) (NNP √) (NNP saÃ) (NNP ≈) (NNP ÂªdÃ) (NNP ≈) (NNP Â˚)))
          (-RRB- -RRB-)))
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ alcoholic) (NN beverage))
          (VP (VBN made)
            (PP (IN from)
              (NP
                (NP (DT the) (JJ fermented) (NN juice))
                (PP (IN of)
                  (NP (NNS apples)))))
            (ADVP (RB mainly))
            (, ,)
            (SBAR (IN though)
              (S
                (NP (NNS pears))
                (VP (VBP are)
                  (ADVP (RB also))
                  (VP (VBN used)))))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (DT the) (NNP UK)))
      (, ,)
      (NP (NN pear) (NN cider))
      (VP (VBZ is)
        (VP (VBN known)
          (PP (IN as)
            (NP (NN perry))))))
    (. .)))

nsubj(beverage-16, Cider-1)
dep(Cider-1, Ã-3)
nn(Â˚-11, Â-5)
nn(Â˚-11, √-6)
nn(Â˚-11, saÃ-7)
nn(Â˚-11, ≈-8)
nn(Â˚-11, ÂªdÃ-9)
nn(Â˚-11, ≈-10)
dep(Ã-3, Â˚-11)
cop(beverage-16, is-13)
det(beverage-16, an-14)
amod(beverage-16, alcoholic-15)
root(ROOT-0, beverage-16)
partmod(beverage-16, made-17)
det(juice-21, the-19)
amod(juice-21, fermented-20)
prep_from(made-17, juice-21)
prep_of(juice-21, apples-23)
advmod(made-17, mainly-24)
mark(used-30, though-26)
nsubjpass(used-30, pears-27)
auxpass(used-30, are-28)
advmod(used-30, also-29)
advcl(made-17, used-30)
det(UK-34, the-33)
prep_in(known-39, UK-34)
nn(cider-37, pear-36)
nsubjpass(known-39, cider-37)
auxpass(known-39, is-38)
parataxis(beverage-16, known-39)
prep_as(known-39, perry-41)

(ROOT
  (S
    (NP
      (NP (NNP Cyclotrimethylenetrinitramine))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (NNP RDX) (, ,) (NNS cyclonite) (, ,) (NNP hexogen) (, ,)
            (CC and)
            (NNP T4))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ explosive) (NN nitroamine))
        (VP
          (ADVP (RB widely))
          (VBN used)
          (PP (IN in)
            (NP (JJ military)
              (CC and)
              (JJ industrial) (NNS applications))))))
    (. .)))

nsubj(nitroamine-18, Cyclotrimethylenetrinitramine-1)
advmod(known-4, also-3)
partmod(Cyclotrimethylenetrinitramine-1, known-4)
prep_as(known-4, RDX-6)
prep_as(known-4, cyclonite-8)
conj_and(RDX-6, cyclonite-8)
prep_as(known-4, hexogen-10)
conj_and(RDX-6, hexogen-10)
prep_as(known-4, T4-13)
conj_and(RDX-6, T4-13)
cop(nitroamine-18, is-15)
det(nitroamine-18, an-16)
amod(nitroamine-18, explosive-17)
root(ROOT-0, nitroamine-18)
advmod(used-20, widely-19)
partmod(nitroamine-18, used-20)
amod(applications-25, military-22)
conj_and(military-22, industrial-24)
amod(applications-25, industrial-24)
prep_in(used-20, applications-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (NNP Concentration))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN measure))
        (SBAR
          (WHPP (IN of)
            (WHNP
              (WHNP (WRB how) (RB much))
              (PP (IN of)
                (NP (DT a) (JJ given) (NN substance)))))
          (S
            (NP (EX there))
            (VP (VBZ is)
              (ADJP (JJ mixed)
                (PP (IN with)
                  (NP (DT another) (NN substance)))))))))
    (. .)))

prep_in(measure-7, chemistry-2)
nsubj(measure-7, Concentration-4)
cop(measure-7, is-5)
det(measure-7, the-6)
root(ROOT-0, measure-7)
rel(is-16, of-8)
advmod(much-10, how-9)
pobj(of-8, much-10)
det(substance-14, a-12)
amod(substance-14, given-13)
prep_of(much-10, substance-14)
expl(is-16, there-15)
rcmod(measure-7, is-16)
acomp(is-16, mixed-17)
det(substance-20, another-19)
prep_with(mixed-17, substance-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS mathematics))
        (CC and)
        (, ,)
        (PP (IN in)
          (NP
            (ADJP (JJ particular) (, ,) (JJ functional))
            (NN analysis)))))
    (, ,)
    (NP (NNP Convolution))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mathematical) (NN operator))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ takes)
                (NP
                  (NP (CD two) (NNS functions))
                  (UCP
                    (NP (SYM f))
                    (CC and)
                    (ADJP (JJ g)))))
              (CC and)
              (VP (VBZ produces)
                (NP
                  (NP (DT a) (JJ third) (NN function))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB typically))
                        (VP (VBN viewed)
                          (PP (IN as)
                            (NP
                              (NP (DT a) (VBN modified) (NN version))
                              (PP (IN of)
                                (NP (CD one)))
                              (PP (IN of)
                                (NP (DT the) (JJ original) (NNS functions))))))))))))))))
    (. .)))

prep_in(operator-15, mathematics-2)
conj_and(mathematics-2, in-5)
prep_in(operator-15, in-5)
amod(functional-8, particular-6)
amod(analysis-9, functional-8)
pobj(in-5, analysis-9)
nsubj(operator-15, Convolution-11)
cop(operator-15, is-12)
det(operator-15, a-13)
amod(operator-15, mathematical-14)
root(ROOT-0, operator-15)
nsubj(takes-17, operator-15)
nsubj(produces-24, operator-15)
rcmod(operator-15, takes-17)
num(functions-19, two-18)
dobj(takes-17, functions-19)
iobj(takes-17, functions-19)
dobj(takes-17, f-20)
dep(functions-19, f-20)
dobj(takes-17, g-22)
dep(functions-19, g-22)
conj_and(f-20, g-22)
rcmod(operator-15, produces-24)
conj_and(takes-17, produces-24)
det(function-27, a-25)
amod(function-27, third-26)
dobj(produces-24, function-27)
nsubjpass(viewed-31, function-27)
auxpass(viewed-31, is-29)
advmod(viewed-31, typically-30)
rcmod(function-27, viewed-31)
det(version-35, a-33)
amod(version-35, modified-34)
prep_as(viewed-31, version-35)
prep_of(version-35, one-37)
det(functions-41, the-39)
amod(functions-41, original-40)
prep_of(version-35, functions-41)

(ROOT
  (S
    (NP (DT The) (NNP Cro-hook))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (JJ double-ended) (NN crochet) (NN hook))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (JJ double-sided) (NN crochet))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (DT a) (NN variation))
                          (PP (IN of)
                            (NP (NNP Tunisian) (NN crochet))))))))))))))
    (. .)))

det(Cro-hook-2, The-1)
nsubj(hook-8, Cro-hook-2)
cop(hook-8, is-3)
det(hook-8, a-4)
amod(hook-8, special-5)
amod(hook-8, double-ended-6)
nn(hook-8, crochet-7)
root(ROOT-0, hook-8)
xsubj(make-11, hook-8)
partmod(hook-8, used-9)
aux(make-11, to-10)
xcomp(used-9, make-11)
amod(crochet-13, double-sided-12)
dobj(make-11, crochet-13)
nsubj(variation-18, crochet-13)
cop(variation-18, is-16)
det(variation-18, a-17)
rcmod(crochet-13, variation-18)
nn(crochet-21, Tunisian-20)
prep_of(variation-18, crochet-21)

(ROOT
  (S
    (NP (DT The) (NNP Clavichord))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ European) (JJ stringed) (NN keyboard) (NN instrument))
        (VP (VBN known)
          (PP (IN from)
            (NP (DT the) (JJ late) (NN Medieval)))
          (, ,)
          (PP (IN through)
            (NP (DT the) (NNP Renaissance) (, ,) (NNP Baroque)
              (CC and)
              (NNP Classical) (NNS eras))))))
    (. .)))

det(Clavichord-2, The-1)
nsubj(instrument-8, Clavichord-2)
cop(instrument-8, is-3)
det(instrument-8, a-4)
amod(instrument-8, European-5)
amod(instrument-8, stringed-6)
nn(instrument-8, keyboard-7)
root(ROOT-0, instrument-8)
partmod(instrument-8, known-9)
det(Medieval-13, the-11)
amod(Medieval-13, late-12)
prep_from(known-9, Medieval-13)
det(eras-22, the-16)
nn(eras-22, Renaissance-17)
conj_and(Renaissance-17, Baroque-19)
nn(eras-22, Baroque-19)
conj_and(Renaissance-17, Classical-21)
nn(eras-22, Classical-21)
prep_through(known-9, eras-22)

(ROOT
  (S
    (NP (DT A) (NNP Checksum))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP
            (NP (JJ redundancy) (NN check))
            (, ,)
            (NP (DT a) (JJ simple) (NN way)
              (S
                (VP (TO to)
                  (VP (VB protect)
                    (NP
                      (NP (DT the) (NN integrity))
                      (PP (IN of)
                        (NP (NNS data))))
                    (PP (IN by)
                      (S
                        (VP (VBG detecting)
                          (NP (NNS errors))
                          (PP (IN in)
                            (NP
                              (NP (NNS data))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP are)
                                    (VP (VBN sent)
                                      (PP (IN through)
                                        (NP
                                          (NP (NN space))
                                          (PRN (-LRB- -LRB-)
                                            (NP (NN telecommunications))
                                            (-RRB- -RRB-))
                                          (CC or)
                                          (NP (NN time))
                                          (PRN (-LRB- -LRB-)
                                            (NP (NN storage))
                                            (-RRB- -RRB-)))))))))))))))))))))
    (. .)))

det(Checksum-2, A-1)
nsubj(form-5, Checksum-2)
cop(form-5, is-3)
det(form-5, a-4)
root(ROOT-0, form-5)
amod(check-8, redundancy-7)
prep_of(form-5, check-8)
det(way-12, a-10)
amod(way-12, simple-11)
appos(check-8, way-12)
aux(protect-14, to-13)
infmod(way-12, protect-14)
det(integrity-16, the-15)
dobj(protect-14, integrity-16)
prep_of(integrity-16, data-18)
prepc_by(protect-14, detecting-20)
dobj(detecting-20, errors-21)
prep_in(detecting-20, data-23)
nsubjpass(sent-26, data-23)
auxpass(sent-26, are-25)
rcmod(data-23, sent-26)
prep_through(sent-26, space-28)
appos(space-28, telecommunications-30)
prep_through(sent-26, time-33)
conj_or(space-28, time-33)
appos(space-28, storage-35)

(ROOT
  (S
    (NP (DT The) (NNPS Contras))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN label))
        (PP (VBN given)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ various) (JJ rebel) (NNS groups))
              (VP (VBG opposing)
                (NP
                  (NP
                    (NP (NNP Nicaragua) (POS 's))
                    (NNP FSLN)
                    (PRN (-LRB- -LRB-)
                      (NP (NNP Frente) (NNP Sandinista) (NNP de) (NNP Liberacion) (NNP Nacional))
                      (-RRB- -RRB-))
                    (NNP Sandinista) (NN Junta))
                  (PP (IN of)
                    (NP
                      (NP (NNP National) (NNP Reconstruction))
                      (PP (VBG following)
                        (NP
                          (NP (DT the) (NNP July) (CD 1979) (NN overthrow))
                          (PP (IN of)
                            (NP (NNP Anastasio) (NNP Somoza) (NNP Debayle))))))))))))))
    (. .)))

det(Contras-2, The-1)
nsubj(label-5, Contras-2)
cop(label-5, is-3)
det(label-5, a-4)
root(ROOT-0, label-5)
prep(label-5, given-6)
pcomp(given-6, to-7)
det(groups-11, the-8)
amod(groups-11, various-9)
amod(groups-11, rebel-10)
prep_to(given-6, groups-11)
partmod(groups-11, opposing-12)
poss(Junta-24, Nicaragua-13)
nn(Junta-24, FSLN-15)
nn(Nacional-21, Frente-17)
nn(Nacional-21, Sandinista-18)
nn(Nacional-21, de-19)
nn(Nacional-21, Liberacion-20)
appos(Junta-24, Nacional-21)
nn(Junta-24, Sandinista-23)
dobj(opposing-12, Junta-24)
nn(Reconstruction-27, National-26)
prep_of(Junta-24, Reconstruction-27)
det(overthrow-32, the-29)
nn(overthrow-32, July-30)
num(overthrow-32, 1979-31)
prep_following(Reconstruction-27, overthrow-32)
nn(Debayle-36, Anastasio-34)
nn(Debayle-36, Somoza-35)
prep_of(overthrow-32, Debayle-36)

(ROOT
  (S
    (NP (DT A) (NNP Coin))
    (VP (VBZ is)
      (ADVP (RB usually))
      (NP
        (NP (DT a) (NN piece))
        (PP (IN of)
          (NP
            (NP (JJ hard) (NN material))
            (, ,)
            (NP (RB usually) (NN metal))
            (CC or)
            (NP (DT a) (JJ metallic) (NN material))))
        (, ,)
        (VP
          (ADVP (RB usually))
          (PP (IN in)
            (NP
              (NP (DT the) (NN shape))
              (PP (IN of)
                (NP (DT a) (NN disc))))))
        (, ,)
        (CC and)
        (NP
          (NP (JJS most))
          (VP
            (ADVP (RB often))
            (VBN issued)
            (PP (IN by)
              (NP (DT a) (NN government)))))))
    (. .)))

det(Coin-2, A-1)
nsubj(piece-6, Coin-2)
nsubj(most-27, Coin-2)
cop(piece-6, is-3)
advmod(piece-6, usually-4)
det(piece-6, a-5)
root(ROOT-0, piece-6)
amod(material-9, hard-8)
prep_of(piece-6, material-9)
advmod(metal-12, usually-11)
prep_of(piece-6, metal-12)
conj_or(material-9, metal-12)
det(material-16, a-14)
amod(material-16, metallic-15)
prep_of(piece-6, material-16)
conj_or(material-9, material-16)
conj_and(piece-6, usually-18)
det(shape-21, the-20)
prep_in(usually-18, shape-21)
det(disc-24, a-23)
prep_of(shape-21, disc-24)
conj_and(piece-6, most-27)
advmod(issued-29, often-28)
partmod(most-27, issued-29)
det(government-32, a-31)
agent(issued-29, government-32)

(ROOT
  (S
    (NP (DT A) (NN Contract))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN exchange))
        (PP (IN of)
          (NP
            (NP (NNS promises))
            (PP (IN between)
              (NP
                (QP (CD two)
                  (CC or)
                  (JJR more))
                (NNS parties)))))
        (S
          (VP (TO to)
            (VP
              (VP (VB do))
              (CC or)
              (VP (VB refrain)
                (PP (IN from)
                  (S
                    (VP (VBG doing)
                      (NP
                        (NP (DT an) (NN act))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADJP (JJ enforceable)
                                (PP (IN in)
                                  (NP
                                    (NP (DT a) (NN court))
                                    (PP (IN of)
                                      (NP (NN law)))))))))))))))))))
    (. .)))

det(Contract-2, A-1)
nsubj(exchange-5, Contract-2)
cop(exchange-5, is-3)
det(exchange-5, an-4)
root(ROOT-0, exchange-5)
prep_of(exchange-5, promises-7)
num(parties-12, two-9)
conj_or(two-9, more-11)
quantmod(two-9, more-11)
num(parties-12, more-11)
prep_between(promises-7, parties-12)
aux(do-14, to-13)
infmod(exchange-5, do-14)
infmod(exchange-5, refrain-16)
conj_or(do-14, refrain-16)
prepc_from(refrain-16, doing-18)
det(act-20, an-19)
dobj(doing-18, act-20)
nsubj(enforceable-23, act-20)
cop(enforceable-23, is-22)
rcmod(act-20, enforceable-23)
det(court-26, a-25)
prep_in(enforceable-23, court-26)
prep_of(court-26, law-28)

(ROOT
  (S
    (NP (NNP Commodore))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ military) (NN rank))
        (VP (VBN used)
          (PP (IN in)
            (NP (JJ many) (NNS navies)))
          (PP (IN for)
            (NP
              (NP (NNS officers))
              (SBAR
                (WHNP (WP$ whose) (NN position))
                (S
                  (VP
                    (VP (VBZ exceeds)
                      (NP
                        (NP (DT that))
                        (PP (IN of)
                          (NP (DT a) (NN navy) (NN captain)))))
                    (, ,)
                    (CC but)
                    (VP (VBZ is)
                      (ADJP (JJR less))
                      (PP (IN than)
                        (NP
                          (NP (DT that))
                          (PP (IN of)
                            (NP (DT a) (JJ rear) (NN admiral))))))))))))))
    (. .)))

nsubj(rank-5, Commodore-1)
cop(rank-5, is-2)
det(rank-5, a-3)
amod(rank-5, military-4)
root(ROOT-0, rank-5)
partmod(rank-5, used-6)
amod(navies-9, many-8)
prep_in(used-6, navies-9)
prep_for(used-6, officers-11)
poss(position-13, officers-11)
nsubj(exceeds-14, position-13)
nsubj(less-23, position-13)
rcmod(officers-11, exceeds-14)
dobj(exceeds-14, that-15)
det(captain-19, a-17)
nn(captain-19, navy-18)
prep_of(that-15, captain-19)
cop(less-23, is-22)
rcmod(officers-11, less-23)
conj_but(exceeds-14, less-23)
prep_than(less-23, that-25)
det(admiral-29, a-27)
amod(admiral-29, rear-28)
prep_of(that-25, admiral-29)

(ROOT
  (S
    (NP (DT A) (NNP Caldera))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ volcanic) (NN feature))
        (VP (VBN formed)
          (PP (IN by)
            (NP
              (NP (DT the) (NN collapse))
              (PP (IN of)
                (NP
                  (NP (NN land))
                  (PP (VBG following)
                    (NP (DT a) (JJ volcanic) (NN eruption))))))))))
    (. .)))

det(Caldera-2, A-1)
nsubj(feature-6, Caldera-2)
cop(feature-6, is-3)
det(feature-6, a-4)
amod(feature-6, volcanic-5)
root(ROOT-0, feature-6)
partmod(feature-6, formed-7)
det(collapse-10, the-9)
agent(formed-7, collapse-10)
prep_of(collapse-10, land-12)
det(eruption-16, a-14)
amod(eruption-16, volcanic-15)
prep_following(land-12, eruption-16)

(ROOT
  (SINV
    (S
      (NP (DT A) (NNP Calculator))
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ electronic) (NN device))
          (PP (IN for)
            (S
              (VP (VBG performing)
                (NP (JJ mathematical) (NNS calculations))))))))
    (, ,)
    (VP (VBD distinguished)
      (PP (IN from)
        (NP (DT a) (NN computer)))
      (PP (IN by)
        (NP (DT a) (JJ limited) (NN problem))))
    (NP
      (NP (JJ solving) (NN ability))
      (CC and)
      (NP
        (NP (DT an) (NN interface))
        (VP (VBN optimized)
          (PP (IN for)
            (NP
              (NP (JJ interactive) (NN calculation))
              (CONJP (RB rather) (IN than))
              (NP (NN programming)))))))
    (. .)))

det(Calculator-2, A-1)
nsubj(device-6, Calculator-2)
cop(device-6, is-3)
det(device-6, an-4)
amod(device-6, electronic-5)
ccomp(distinguished-12, device-6)
prepc_for(device-6, performing-8)
amod(calculations-10, mathematical-9)
dobj(performing-8, calculations-10)
root(ROOT-0, distinguished-12)
det(computer-15, a-14)
prep_from(distinguished-12, computer-15)
det(problem-19, a-17)
amod(problem-19, limited-18)
prep_by(distinguished-12, problem-19)
amod(ability-21, solving-20)
nsubj(distinguished-12, ability-21)
det(interface-24, an-23)
nsubj(distinguished-12, interface-24)
conj_and(ability-21, interface-24)
partmod(interface-24, optimized-25)
amod(calculation-28, interactive-27)
prep_for(optimized-25, calculation-28)
prep_for(optimized-25, programming-31)
conj_negcc(calculation-28, programming-31)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ phylogenetic) (NN taxonomy)))
    (, ,)
    (NP (DT the) (NNP Carinatae))
    (VP (VBP are)
      (VP (VBN considered)
        (NP
          (NP (DT the) (JJ last) (JJ common) (NN ancestor))
          (PP (IN of)
            (NP
              (NP (NNP Neornithes))
              (PRN (-LRB- -LRB-)
                (NP (NN living) (NNS birds))
                (-RRB- -RRB-))
              (CC and)
              (NP (NNP Ichthyornis))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (DT an)
                    (ADJP (JJ extinct))
                    (NN seabird))
                  (PP (IN of)
                    (NP (DT the) (JJ Cretaceous))))
                (-RRB- -RRB-)))))))
    (. .)))

amod(taxonomy-3, phylogenetic-2)
prep_in(considered-8, taxonomy-3)
det(Carinatae-6, the-5)
nsubjpass(considered-8, Carinatae-6)
auxpass(considered-8, are-7)
root(ROOT-0, considered-8)
det(ancestor-12, the-9)
amod(ancestor-12, last-10)
amod(ancestor-12, common-11)
dobj(considered-8, ancestor-12)
prep_of(ancestor-12, Neornithes-14)
nn(birds-17, living-16)
appos(Neornithes-14, birds-17)
prep_of(ancestor-12, Ichthyornis-20)
conj_and(Neornithes-14, Ichthyornis-20)
det(seabird-24, an-22)
amod(seabird-24, extinct-23)
dep(Neornithes-14, seabird-24)
det(Cretaceous-27, the-26)
prep_of(seabird-24, Cretaceous-27)

(ROOT
  (S
    (NP (DT A) (NNP Cocktail))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN style))
        (PP (IN of)
          (NP (VBN mixed) (NN drink)))))
    (. .)))

det(Cocktail-2, A-1)
nsubj(style-5, Cocktail-2)
cop(style-5, is-3)
det(style-5, a-4)
root(ROOT-0, style-5)
amod(drink-8, mixed-7)
prep_of(style-5, drink-8)

(ROOT
  (S
    (NP (NNP Chaos))
    (ADVP (RB typically))
    (VP
      (VP (VBZ refers)
        (S
          (VP (TO to)
            (VP (VB unpredictability)))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (DT the) (NNS antithesis))
          (PP (IN of)
            (NP (NNS cosmos))))))
    (. .)))

nsubj(refers-3, Chaos-1)
xsubj(unpredictability-5, Chaos-1)
advmod(refers-3, typically-2)
root(ROOT-0, refers-3)
aux(unpredictability-5, to-4)
xcomp(refers-3, unpredictability-5)
cop(antithesis-10, is-8)
det(antithesis-10, the-9)
conj_and(refers-3, antithesis-10)
prep_of(antithesis-10, cosmos-12)

(ROOT
  (S
    (NP (NNP Capella))
    (VP (VBZ refers)
      (PP (TO to)
        (NP (JJ vocal) (NN music)
          (CC or)
          (NN singing)))
      (PP (IN without)
        (NP
          (ADJP (JJ instrumental))
          (NN accompaniment))))
    (. .)))

nsubj(refers-2, Capella-1)
root(ROOT-0, refers-2)
amod(music-5, vocal-4)
prep_to(refers-2, music-5)
prep_to(refers-2, singing-7)
conj_or(music-5, singing-7)
amod(accompaniment-10, instrumental-9)
prep_without(refers-2, accompaniment-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS ethics)))
    (, ,)
    (NP (NNP Cognitivism))
    (VP (VBZ is)
      (NP (DT the) (JJ philosophical) (NN view))
      (SBAR (IN that)
        (S
          (NP (JJ ethical) (NNS sentences))
          (VP
            (VP (VBP express)
              (NP (NNS propositions)))
            (, ,)
            (CC and)
            (VP
              (ADVP (RB hence))
              (VBP are)
              (ADJP (JJ capable))
              (PP (IN of)
                (S
                  (VP (VBG being)
                    (ADJP (JJ true)
                      (CC or)
                      (JJ false))))))))))
    (. .)))

prep_in(view-8, ethics-2)
nsubj(view-8, Cognitivism-4)
cop(view-8, is-5)
det(view-8, the-6)
amod(view-8, philosophical-7)
root(ROOT-0, view-8)
complm(express-12, that-9)
amod(sentences-11, ethical-10)
nsubj(express-12, sentences-11)
nsubj(capable-18, sentences-11)
ccomp(view-8, express-12)
dobj(express-12, propositions-13)
advmod(capable-18, hence-16)
cop(capable-18, are-17)
ccomp(view-8, capable-18)
conj_and(express-12, capable-18)
cop(true-21, being-20)
prepc_of(capable-18, true-21)
prepc_of(capable-18, false-23)
conj_or(true-21, false-23)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ digital) (NN logic)
        (CC and)
        (NN computing)))
    (, ,)
    (NP (DT a) (NNP Counter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (SBAR
          (WHNP
            (WHNP (WDT which) (NNS stores))
            (PRN (-LRB- -LRB-)
              (CC and)
              (FRAG
                (ADVP (RB sometimes))
                (NP (NNS displays)))
              (-RRB- -RRB-)))
          (S
            (NP
              (NP (DT the) (NN number))
              (PP (IN of)
                (NP (CC times)
                  (NP (DT a) (JJ particular) (NN event))
                  (CC or)
                  (NP (NN process)))))
            (VP (VBZ has)
              (VP (VBN occurred) (, ,)
                (ADVP (RB often)
                  (PP (IN in)
                    (NP (NN relationship))
                    (PP (TO to)
                      (NP (DT a) (NN clock) (NN signal)))))))))))
    (. .)))

amod(logic-3, digital-2)
prep_in(device-11, logic-3)
conj_and(logic-3, computing-5)
prep_in(device-11, computing-5)
det(Counter-8, a-7)
nsubj(device-11, Counter-8)
cop(device-11, is-9)
det(device-11, a-10)
root(ROOT-0, device-11)
det(stores-13, device-11)
dobj(occurred-29, stores-13)
rel(occurred-29, stores-13)
dep(stores-13, and-15)
dep(displays-17, sometimes-16)
dep(and-15, displays-17)
det(number-20, the-19)
nsubj(occurred-29, number-20)
det(event-25, a-23)
amod(event-25, particular-24)
prep_of(number-20, event-25)
prep_of(number-20, process-27)
conj_or(event-25, process-27)
aux(occurred-29, has-28)
rcmod(device-11, occurred-29)
advmod(occurred-29, often-31)
prep_in(often-31, relationship-33)
det(signal-37, a-35)
nn(signal-37, clock-36)
prep_to(often-31, signal-37)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Centimetre))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ American) (NN spelling))
          (: :)
          (NP
            (NP (NN centimeter))
            (, ,)
            (NP (NN symbol) (NN cm))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN length))
            (PP (IN in)
              (NP (DT the) (JJ metric) (NN system)))
            (, ,)
            (ADJP (JJ equal)
              (PP (TO to)
                (NP
                  (NP (CD one) (NNS hundredth))
                  (PP (IN of)
                    (NP (DT a) (NN metre))))))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (JJ current) (NNP SI) (NN base) (NN unit))
                    (PP (IN of)
                      (NP (NN length)))))))))))
    (. .)))

det(Centimetre-2, A-1)
nsubj(unit-14, Centimetre-2)
amod(spelling-5, American-4)
dep(Centimetre-2, spelling-5)
dep(spelling-5, centimeter-7)
nn(cm-10, symbol-9)
appos(centimeter-7, cm-10)
cop(unit-14, is-12)
det(unit-14, a-13)
root(ROOT-0, unit-14)
prep_of(unit-14, length-16)
det(system-20, the-18)
amod(system-20, metric-19)
prep_in(length-16, system-20)
amod(length-16, equal-22)
num(hundredth-25, one-24)
prep_to(equal-22, hundredth-25)
det(metre-28, a-27)
prep_of(hundredth-25, metre-28)
nsubj(unit-36, which-30)
cop(unit-36, is-31)
det(unit-36, the-32)
amod(unit-36, current-33)
nn(unit-36, SI-34)
nn(unit-36, base-35)
rcmod(length-16, unit-36)
prep_of(unit-36, length-38)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Costume))
    (VP (MD can)
      (VP (VB refer)
        (PP
          (PP (TO to)
            (NP
              (NP (NN wardrobe)
                (CC and)
                (NN dress))
              (PP (IN in)
                (NP (NN general)))))
          (, ,)
          (CC or)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ distinctive) (NN style))
              (PP (IN of)
                (NP
                  (NP (NN dress))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ particular) (NNS people))
                      (, ,)
                      (NP (NN class))
                      (, ,)
                      (CC or)
                      (NP (NN period)))))))))))
    (. .)))

det(Costume-3, The-1)
nn(Costume-3, term-2)
nsubj(refer-5, Costume-3)
aux(refer-5, can-4)
root(ROOT-0, refer-5)
prep_to(refer-5, wardrobe-7)
prep_to(refer-5, dress-9)
conj_and(wardrobe-7, dress-9)
prep_in(wardrobe-7, general-11)
det(style-17, the-15)
amod(style-17, distinctive-16)
prep_to(refer-5, style-17)
conj_or(wardrobe-7, style-17)
prep_of(style-17, dress-19)
det(people-23, a-21)
amod(people-23, particular-22)
prep_of(dress-19, people-23)
prep_of(dress-19, class-25)
conj_or(people-23, class-25)
prep_of(dress-19, period-28)
conj_or(people-23, period-28)

(ROOT
  (S
    (NP (DT A) (NNP Centriole))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (NN barrel) (JJ shaped))
          (NN organelle))
        (VP (VBN found)
          (PP (IN in)
            (NP
              (NP
                (ADJP (RBS most) (JJ animal))
                (JJ eukaryotic) (NNS cells))
              (, ,)
              (ADJP (IN though) (JJ absent))))
          (PP (IN in)
            (NP (JJR higher) (NNS plants)
              (CC and)
              (NNS fungi))))))
    (. .)))

det(Centriole-2, A-1)
nsubj(organelle-7, Centriole-2)
cop(organelle-7, is-3)
det(organelle-7, a-4)
dep(shaped-6, barrel-5)
amod(organelle-7, shaped-6)
root(ROOT-0, organelle-7)
partmod(organelle-7, found-8)
advmod(animal-11, most-10)
amod(cells-13, animal-11)
amod(cells-13, eukaryotic-12)
prep_in(found-8, cells-13)
dep(absent-16, though-15)
amod(cells-13, absent-16)
amod(plants-19, higher-18)
prep_in(found-8, plants-19)
prep_in(found-8, fungi-21)
conj_and(plants-19, fungi-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Cirth))
      (PRN (-LRB- -LRB-)
        (NP (NNP '') (NNP Runes))
        ('' '') (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS letters))
        (PP (IN of)
          (NP
            (NP (DT an) (JJ artificial) (NN script))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (VP (VBN invented)
                    (PP (IN by)
                      (NP
                        (NP (NNP J.) (NNP R.) (NNP R.) (NNP Tolkien))
                        (PP (IN for)
                          (NP
                            (NP (DT the) (JJ constructed) (NNS languages))
                            (SBAR
                              (S
                                (NP (PRP he))
                                (VP (VBN devised)
                                  (CC and)
                                  (VBN used)
                                  (PP (IN in)
                                    (NP (PRP$ his) (NNS works))))))))))))))))))
    (. .)))

det(Cirth-2, The-1)
nsubj(letters-10, Cirth-2)
dep(Cirth-2, Runes-5)
cop(letters-10, are-8)
det(letters-10, the-9)
root(ROOT-0, letters-10)
det(script-14, an-12)
amod(script-14, artificial-13)
prep_of(letters-10, script-14)
nsubjpass(invented-17, script-14)
auxpass(invented-17, was-16)
rcmod(script-14, invented-17)
nn(Tolkien-22, J.-19)
nn(Tolkien-22, R.-20)
nn(Tolkien-22, R.-21)
agent(invented-17, Tolkien-22)
det(languages-26, the-24)
amod(languages-26, constructed-25)
prep_for(Tolkien-22, languages-26)
dobj(devised-28, languages-26)
nsubj(devised-28, he-27)
nsubj(used-30, he-27)
rcmod(languages-26, devised-28)
rcmod(languages-26, used-30)
conj_and(devised-28, used-30)
poss(works-33, his-32)
prep_in(devised-28, works-33)

(ROOT
  (S
    (NP (DT The) (NNP Compactron))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ 12-pin) (NN vacuum) (NN tube) (NN family))
        (VP (VBN introduced)
          (PP (IN in)
            (NP (CD 1961)))
          (PP (IN by)
            (NP
              (NP (NNP General) (NNP Electric))
              (PP (IN in)
                (NP (NNP Owensboro) (, ,) (NNP Kentucky)))))
          (PP (IN with)
            (NP
              (NP (DT the)
                (ADJP (JJ express))
                (NN purpose))
              (PP (IN of)
                (S
                  (VP (VBG keeping)
                    (NP (NNS tubes))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN market))
                        (PP (IN for)
                          (NP (DT a) (JJ few)
                            (QP (RBR more))
                            (NNS years)))))
                    (PP (IN during)
                      (NP (DT the) (JJ solid) (NN state) (NN revolution)))))))))))
    (. .)))

det(Compactron-2, The-1)
nsubj(family-8, Compactron-2)
cop(family-8, is-3)
det(family-8, a-4)
amod(family-8, 12-pin-5)
nn(family-8, vacuum-6)
nn(family-8, tube-7)
root(ROOT-0, family-8)
partmod(family-8, introduced-9)
prep_in(introduced-9, 1961-11)
nn(Electric-14, General-13)
agent(introduced-9, Electric-14)
nn(Kentucky-18, Owensboro-16)
prep_in(Electric-14, Kentucky-18)
det(purpose-22, the-20)
amod(purpose-22, express-21)
prep_with(introduced-9, purpose-22)
prepc_of(purpose-22, keeping-24)
dobj(keeping-24, tubes-25)
det(market-28, the-27)
prep_in(keeping-24, market-28)
det(years-33, a-30)
amod(years-33, few-31)
num(years-33, more-32)
prep_for(market-28, years-33)
det(revolution-38, the-35)
amod(revolution-38, solid-36)
nn(revolution-38, state-37)
prep_during(keeping-24, revolution-38)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT a) (NNP Carbide))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN compound))
        (PP (IN of)
          (NP
            (NP (NN carbon))
            (PP (IN with)
              (NP (DT a)
                (ADJP (RBR less) (JJ electronegative))
                (NN element)))))))
    (. .)))

prep_in(compound-8, chemistry-2)
det(Carbide-5, a-4)
nsubj(compound-8, Carbide-5)
cop(compound-8, is-6)
det(compound-8, a-7)
root(ROOT-0, compound-8)
prep_of(compound-8, carbon-10)
det(element-15, a-12)
advmod(electronegative-14, less-13)
amod(element-15, electronegative-14)
prep_with(carbon-10, element-15)

(ROOT
  (S
    (NP
      (NP (NNP Historically) (, ,) (NNP Corporatism)
        (CC or)
        (NNP corporativism))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ Italian))
          (: :)
          (NP (NN corporativismo)))
        (-RRB- -RRB-)))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ political)
            (CC or)
            (JJ economic) (NN system))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (NN power))
              (VP (VBZ is)
                (VP (VBN held)
                  (PP (IN by)
                    (NP
                      (NP (JJ civic) (NNS assemblies))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP represent)
                            (UCP
                              (ADJP (JJ economic))
                              (, ,)
                              (ADJP (JJ industrial))
                              (, ,)
                              (ADJP (JJ agrarian))
                              (, ,)
                              (ADJP (JJ social))
                              (, ,)
                              (ADJP (JJ cultural))
                              (, ,)
                              (CC and)
                              (NP (JJ professional) (NNS groups)))))))))))))))
    (. .)))

nsubj(refers-11, Historically-1)
conj_or(Historically-1, Corporatism-3)
nsubj(refers-11, Corporatism-3)
conj_or(Historically-1, corporativism-5)
nsubj(refers-11, corporativism-5)
dep(Historically-1, Italian-7)
dep(Italian-7, corporativismo-9)
root(ROOT-0, refers-11)
det(system-17, a-13)
amod(system-17, political-14)
conj_or(political-14, economic-16)
amod(system-17, economic-16)
prep_to(refers-11, system-17)
rel(held-22, which-19)
nsubjpass(held-22, power-20)
auxpass(held-22, is-21)
rcmod(system-17, held-22)
amod(assemblies-25, civic-24)
agent(held-22, assemblies-25)
nsubj(represent-27, assemblies-25)
rcmod(assemblies-25, represent-27)
acomp(represent-27, economic-28)
acomp(represent-27, industrial-30)
conj_and(economic-28, industrial-30)
acomp(represent-27, agrarian-32)
conj_and(economic-28, agrarian-32)
acomp(represent-27, social-34)
conj_and(economic-28, social-34)
acomp(represent-27, cultural-36)
conj_and(economic-28, cultural-36)
amod(groups-40, professional-39)
acomp(represent-27, groups-40)
conj_and(economic-28, groups-40)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Crossfire))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as) ('' '')
            (NP (JJ interlocking) (NN fire)))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ military) (NN term))
        (PP (IN for)
          (NP
            (NP (DT the) (NN siting))
            (PP (IN of)
              (NP
                (NP (NNS weapons))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP
                      (ADJP (RB often) (JJ automatic))
                      (NNS weapons))
                    (PP (JJ such) (IN as)
                      (NP (NN machine) (NNS guns))))
                  (-RRB- -RRB-)))))))
      (SBAR (RB so) (IN that)
        (S
          (NP
            (NP (PRP$ their) (NNS arcs))
            (PP (IN of)
              (NP (NN fire))))
          (VP (VBP overlap)))))
    (. .)))

det(Crossfire-2, A-1)
nsubj(term-15, Crossfire-2)
advmod(known-5, also-4)
dep(Crossfire-2, known-5)
amod(fire-9, interlocking-8)
prep_as(known-5, fire-9)
cop(term-15, is-12)
det(term-15, a-13)
amod(term-15, military-14)
root(ROOT-0, term-15)
det(siting-18, the-17)
prep_for(term-15, siting-18)
prep_of(siting-18, weapons-20)
advmod(automatic-23, often-22)
amod(weapons-24, automatic-23)
dep(weapons-20, weapons-24)
nn(guns-28, machine-27)
prep_such_as(weapons-24, guns-28)
advmod(overlap-36, so-30)
dep(overlap-36, that-31)
poss(arcs-33, their-32)
nsubj(overlap-36, arcs-33)
prep_of(arcs-33, fire-35)
advcl(term-15, overlap-36)

(ROOT
  (S
    (S
      (VP (VBG Cruising)
        (PP (IN by)
          (NP (NN boat)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN lifestyle))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ involves)
              (S
                (VP (VBG living)
                  (PP (IN for)
                    (NP (JJ extended) (NN time)))
                  (PP (IN on)
                    (NP
                      (NP (DT a) (NN boat) (NN while))
                      (VP (VBG traveling)
                        (PP (IN from)
                          (NP (NN place)))
                        (S
                          (VP (TO to)
                            (VP (VB place)
                              (PP (IN for)
                                (NP (NN pleasure))))))))))))))))
    (. .)))

csubj(lifestyle-6, Cruising-1)
prep_by(Cruising-1, boat-3)
cop(lifestyle-6, is-4)
det(lifestyle-6, a-5)
root(ROOT-0, lifestyle-6)
nsubj(involves-8, lifestyle-6)
rcmod(lifestyle-6, involves-8)
xcomp(involves-8, living-9)
amod(time-12, extended-11)
prep_for(living-9, time-12)
det(while-16, a-14)
nn(while-16, boat-15)
prep_on(living-9, while-16)
xsubj(place-21, while-16)
partmod(while-16, traveling-17)
prep_from(traveling-17, place-19)
aux(place-21, to-20)
xcomp(traveling-17, place-21)
prep_for(place-21, pleasure-23)

(ROOT
  (S
    (NP (DT The) (NNPS Cyprinodontiformes))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP (JJ ray-finned) (NN fish))))
      (, ,)
      (S
        (ADVP (RB also))
        (VP
          (VP (VBG called)
            (NP (DT the) (NNP Microcyprini)))
          (, ,)
          (CC and)
          (VP (VBG comprising)
            (NP
              (ADJP (RB mostly) (JJ small))
              (, ,) (JJ fresh-water) (NN fish))))))
    (. .)))

det(Cyprinodontiformes-2, The-1)
nsubj(order-5, Cyprinodontiformes-2)
cop(order-5, is-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(fish-8, ray-finned-7)
prep_of(order-5, fish-8)
advmod(called-11, also-10)
dep(order-5, called-11)
det(Microcyprini-13, the-12)
dobj(called-11, Microcyprini-13)
dep(order-5, comprising-16)
conj_and(called-11, comprising-16)
advmod(small-18, mostly-17)
amod(fish-21, small-18)
amod(fish-21, fresh-water-20)
dobj(comprising-16, fish-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NNP Covenant-breaker))
      (CC or)
      (NP
        (NP (DT the) (NN act))
        (PP (IN of)
          (NP (NNP Covenant-breaking)))))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ particular) (NN form))
          (PP (IN of)
            (NP (NN heresy))))))
    (. .)))

det(Covenant-breaker-2, A-1)
nsubj(refers-8, Covenant-breaker-2)
det(act-5, the-4)
conj_or(Covenant-breaker-2, act-5)
nsubj(refers-8, act-5)
prep_of(act-5, Covenant-breaking-7)
root(ROOT-0, refers-8)
det(form-12, a-10)
amod(form-12, particular-11)
prep_to(refers-8, form-12)
prep_of(form-12, heresy-14)

(ROOT
  (S
    (NP (DT A) (NN Convention))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (UCP
            (ADJP (VBN agreed))
            (, ,)
            (ADJP (JJ stipulated))
            (CC or)
            (ADVP (RB generally))
            (VP (VBN accepted)
              (NP
                (NP (NNS standards))
                (, ,)
                (NP (NNS norms))
                (, ,)
                (NP (JJ social) (NNS norms))
                (, ,)
                (CC or)
                (NP (NNS criteria)))
              (, ,)
              (S
                (ADVP (RB often))
                (VP (VBG taking)
                  (NP
                    (NP (DT the) (NN form))
                    (PP (IN of)
                      (NP (DT a) (NN custom)))))))))))
    (. .)))

det(Convention-2, A-1)
nsubj(set-5, Convention-2)
cop(set-5, is-3)
det(set-5, a-4)
root(ROOT-0, set-5)
prep_of(set-5, agreed-7)
prep_of(set-5, stipulated-9)
conj_or(agreed-7, stipulated-9)
prep_of(set-5, generally-11)
advmod(agreed-7, generally-11)
conj_or(agreed-7, generally-11)
prep_of(set-5, accepted-12)
conj_or(agreed-7, accepted-12)
dobj(accepted-12, standards-13)
dobj(accepted-12, norms-15)
conj_or(standards-13, norms-15)
amod(norms-18, social-17)
dobj(accepted-12, norms-18)
conj_or(standards-13, norms-18)
dobj(accepted-12, criteria-21)
conj_or(standards-13, criteria-21)
advmod(taking-24, often-23)
partmod(accepted-12, taking-24)
xcomp(accepted-12, taking-24)
det(form-26, the-25)
dobj(taking-24, form-26)
det(custom-29, a-28)
prep_of(form-26, custom-29)

(ROOT
  (S
    (PP (IN In)
      (NP (NN golf)))
    (, ,)
    (NP
      (NP (DT a) (NN caddie))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ Caddy))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ carries)
                (NP
                  (NP (DT a) (NN player) (POS 's))
                  (NN bag)))
              (, ,)
              (CC and)
              (VP (VBZ gives)
                (NP (NN insightful))
                (NP
                  (NP (NN advice))
                  (CC and)
                  (NP (JJ moral) (NN support)))))))))
    (. .)))

prep_in(person-12, golf-2)
det(caddie-5, a-4)
nsubj(person-12, caddie-5)
dep(Caddy-8, or-7)
dep(caddie-5, Caddy-8)
cop(person-12, is-10)
det(person-12, the-11)
root(ROOT-0, person-12)
nsubj(carries-14, person-12)
nsubj(gives-21, person-12)
rcmod(person-12, carries-14)
det(player-16, a-15)
poss(bag-18, player-16)
dobj(carries-14, bag-18)
rcmod(person-12, gives-21)
conj_and(carries-14, gives-21)
iobj(gives-21, insightful-22)
dobj(gives-21, advice-23)
amod(support-26, moral-25)
dobj(gives-21, support-26)
conj_and(advice-23, support-26)

(ROOT
  (S
    (NP (DT A) (NNP Corona))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NN plasma) ('' '') (NN atmosphere))
            ('' '')
            (PP (IN of)
              (NP
                (NP (DT the) (NNP Sun)
                  (CC or)
                  (JJ other) (NN celestial) (NN body))
                (, ,)
                (VP (VBG extending)
                  (NP
                    (NP (NNS millions))
                    (PP (IN of)
                      (NP (NNS kilometres))))
                  (PP (IN into)
                    (NP (NN space))))
                (, ,)
                (UCP
                  (VP
                    (ADVP (RBS most) (RB easily))
                    (VBN seen)
                    (PP (IN during)
                      (NP (DT a) (JJ total) (JJ solar) (NN eclipse)))
                    (, ,))
                  (CC but)
                  (ADVP (RB also))
                  (ADJP (JJ observable)))
                (PP (IN in)
                  (NP (DT a) (NN coronagraph)))))))))
    (. .)))

det(Corona-2, A-1)
nsubj(type-5, Corona-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
nn(atmosphere-9, plasma-7)
prep_of(type-5, atmosphere-9)
det(Sun-13, the-12)
prep_of(atmosphere-9, Sun-13)
amod(body-17, other-15)
nn(body-17, celestial-16)
prep_of(atmosphere-9, body-17)
conj_or(Sun-13, body-17)
partmod(Sun-13, extending-19)
dobj(extending-19, millions-20)
prep_of(millions-20, kilometres-22)
prep_into(extending-19, space-24)
advmod(easily-27, most-26)
advmod(seen-28, easily-27)
dep(Sun-13, seen-28)
det(eclipse-33, a-30)
amod(eclipse-33, total-31)
amod(eclipse-33, solar-32)
prep_during(seen-28, eclipse-33)
dep(Sun-13, also-36)
conj_but(seen-28, also-36)
dep(Sun-13, observable-37)
conj_but(seen-28, observable-37)
det(coronagraph-40, a-39)
prep_in(Sun-13, coronagraph-40)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ physical) (NN geography)))
    (, ,)
    (NP (DT a) (NNP Dune))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN hill))
        (PP (IN of)
          (NP
            (NP (NN sand))
            (VP (VBN built)
              (PP (IN by)
                (NP (NN aeolian) (NNS processes))))))))
    (. .)))

amod(geography-3, physical-2)
prep_in(hill-9, geography-3)
det(Dune-6, a-5)
nsubj(hill-9, Dune-6)
cop(hill-9, is-7)
det(hill-9, a-8)
root(ROOT-0, hill-9)
prep_of(hill-9, sand-11)
partmod(sand-11, built-12)
nn(processes-15, aeolian-14)
agent(built-12, processes-15)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS calculus))
        (, ,)
        (NP
          (NP (DT a) (NN branch))
          (PP (IN of)
            (NP (NNS mathematics))))))
    (, ,)
    (NP (DT the) (NNP Derivative))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measurement))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT a) (NN function))
              (VP (VBZ changes)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP
                      (NP (DT the) (NNS values))
                      (PP (IN of)
                        (NP (PRP$ its) (NNS inputs))))
                    (VP (VBP change))))))))))
    (. .)))

prep_in(measurement-13, calculus-2)
det(branch-5, a-4)
appos(calculus-2, branch-5)
prep_of(branch-5, mathematics-7)
det(Derivative-10, the-9)
nsubj(measurement-13, Derivative-10)
cop(measurement-13, is-11)
det(measurement-13, a-12)
root(ROOT-0, measurement-13)
advmod(changes-18, how-15)
det(function-17, a-16)
nsubj(changes-18, function-17)
prepc_of(measurement-13, changes-18)
advmod(change-25, when-19)
det(values-21, the-20)
nsubj(change-25, values-21)
poss(inputs-24, its-23)
prep_of(values-21, inputs-24)
advcl(changes-18, change-25)

(ROOT
  (S
    (NP (DT A) (NNP Dictionary))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN book))
        (PP (IN of)
          (NP
            (NP
              (NP (JJ alphabetically) (VBN listed) (NNS words))
              (PP (IN in)
                (NP (DT a) (JJ specific) (NN language)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (NNS definitions))
                  (, ,)
                  (NP (NNS etymologies))
                  (, ,)
                  (NP (NNS pronunciations))
                  (, ,)
                  (CC and)
                  (NP (JJ other) (NN information)))))
            (: ;)
            (CC or)
            (NP
              (NP (DT a) (NN book))
              (PP (IN of)
                (NP (JJ alphabetically) (VBN listed) (NNS words))))))
        (PP (IN in)
          (NP
            (NP (CD one) (NN language))
            (PP (IN with)
              (NP
                (NP (PRP$ their) (NNS equivalents))
                (PP (IN in)
                  (NP (DT another)))))))
        (, ,)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (DT a) (NN lexicon))))))
    (. .)))

det(Dictionary-2, A-1)
nsubj(book-5, Dictionary-2)
cop(book-5, is-3)
det(book-5, a-4)
root(ROOT-0, book-5)
amod(words-9, alphabetically-7)
amod(words-9, listed-8)
prep_of(book-5, words-9)
det(language-13, a-11)
amod(language-13, specific-12)
prep_in(words-9, language-13)
prep_with(words-9, definitions-16)
prep_with(words-9, etymologies-18)
conj_and(definitions-16, etymologies-18)
prep_with(words-9, pronunciations-20)
conj_and(definitions-16, pronunciations-20)
amod(information-24, other-23)
prep_with(words-9, information-24)
conj_and(definitions-16, information-24)
det(book-28, a-27)
prep_of(book-5, book-28)
conj_or(words-9, book-28)
amod(words-32, alphabetically-30)
amod(words-32, listed-31)
prep_of(book-28, words-32)
num(language-35, one-34)
prep_in(book-5, language-35)
poss(equivalents-38, their-37)
prep_with(language-35, equivalents-38)
prep_in(equivalents-38, another-40)
advmod(known-43, also-42)
partmod(book-5, known-43)
det(lexicon-46, a-45)
prep_as(known-43, lexicon-46)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Drum))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN member))
        (PP (IN of)
          (NP
            (NP (DT the) (NN percussion) (NN group))
            (, ,)
            (ADJP (RB technically) (VBN classified))))
        (PP (IN as)
          (NP (DT a) (NN membranophone)))))
    (. .)))

det(Drum-2, The-1)
nsubj(member-5, Drum-2)
cop(member-5, is-3)
det(member-5, a-4)
root(ROOT-0, member-5)
det(group-9, the-7)
nn(group-9, percussion-8)
prep_of(member-5, group-9)
advmod(classified-12, technically-11)
amod(group-9, classified-12)
det(membranophone-15, a-14)
prep_as(member-5, membranophone-15)

(ROOT
  (S
    (NP
      (NP (JJ Deoxyribonucleic) (NN acid))
      (PRN (-LRB- -LRB-)
        (NP (NNP DNA))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ nucleic) (NN acid))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contains)
              (NP
                (NP (DT the) (JJ genetic) (NNS instructions))
                (VP (VBN used)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN development)
                        (CC and)
                        (NN functioning))
                      (PP (IN of)
                        (NP
                          (NP (DT all))
                          (VP (VBN known)
                            (S
                              (VP (VBG living)
                                (NP
                                  (NP (NNS organisms))
                                  (CC and)
                                  (NP (DT some) (NNS viruses)))))))))))))))))
    (. .)))

amod(acid-2, Deoxyribonucleic-1)
nsubj(acid-9, acid-2)
abbrev(acid-2, DNA-4)
cop(acid-9, is-6)
det(acid-9, a-7)
amod(acid-9, nucleic-8)
root(ROOT-0, acid-9)
nsubj(contains-11, acid-9)
rcmod(acid-9, contains-11)
det(instructions-14, the-12)
amod(instructions-14, genetic-13)
dobj(contains-11, instructions-14)
partmod(instructions-14, used-15)
det(development-18, the-17)
prep_in(used-15, development-18)
prep_in(used-15, functioning-20)
conj_and(development-18, functioning-20)
prep_of(development-18, all-22)
partmod(all-22, known-23)
xcomp(known-23, living-24)
dobj(living-24, organisms-25)
det(viruses-28, some-27)
dobj(living-24, viruses-28)
conj_and(organisms-25, viruses-28)

(ROOT
  (S
    (NP (DT A) (NNP Definition))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN statement))
        (PP (IN of)
          (NP
            (NP (DT the) (NN meaning))
            (PP (IN of)
              (NP (DT a) (NN word)
                (CC or)
                (NN phrase)))))))
    (. .)))

det(Definition-2, A-1)
nsubj(statement-5, Definition-2)
cop(statement-5, is-3)
det(statement-5, a-4)
root(ROOT-0, statement-5)
det(meaning-8, the-7)
prep_of(statement-5, meaning-8)
det(word-11, a-10)
prep_of(meaning-8, word-11)
prep_of(meaning-8, phrase-13)
conj_or(word-11, phrase-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Drink))
      (, ,)
      (CC or)
      (NP (NN beverage)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN liquid))
        (VP
          (ADVP (RB specifically))
          (VBN prepared)
          (PP (IN for)
            (NP (JJ human) (NN consumption))))))
    (. .)))

det(Drink-2, A-1)
nsubj(liquid-8, Drink-2)
conj_or(Drink-2, beverage-5)
nsubj(liquid-8, beverage-5)
cop(liquid-8, is-6)
det(liquid-8, a-7)
root(ROOT-0, liquid-8)
advmod(prepared-10, specifically-9)
partmod(liquid-8, prepared-10)
amod(consumption-13, human-12)
prep_for(prepared-10, consumption-13)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Devonian))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ geologic) (NN period)
            (CC and)
            (NN system))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ Paleozoic) (NN era))
              (VP (VBG spanning)
                (PP (IN from)
                  (NP (NNP Ma)))
                (PP (TO to)
                  (NP (NNP Ma)
                    (CC &)
                    (NNP amp)))))))))
    (: ;)
    (S
      (NP
        (NP (NN amp))
        (: ;)
        (NP (NN nbsp))
        (: ;))
      (ADVP
        (NP (CD million) (NNS years))
        (RB ago))
      (VP (VBP ICS)
        (NP (CD 2004))))
    (. .)))

det(Devonian-2, The-1)
nsubj(period-6, Devonian-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
conj_and(period-6, system-8)
det(era-12, the-10)
amod(era-12, Paleozoic-11)
prep_of(period-6, era-12)
partmod(era-12, spanning-13)
prep_from(spanning-13, Ma-15)
prep_to(spanning-13, Ma-17)
prep_to(spanning-13, amp-19)
conj_and(Ma-17, amp-19)
nsubj(ICS-28, amp-21)
dep(amp-21, nbsp-23)
num(years-26, million-25)
npadvmod(ago-27, years-26)
advmod(ICS-28, ago-27)
parataxis(period-6, ICS-28)
dobj(ICS-28, 2004-29)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geometry)))
    (, ,)
    (NP
      (NP (DT a) (NN Diameter))
      (PP (IN of)
        (NP (DT a) (NN circle))))
    (VP (VBZ is)
      (NP
        (NP (DT any) (JJ straight) (NN line) (NN segment))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ passes)
              (PP (IN through)
                (NP
                  (NP
                    (NP (DT the) (NN center))
                    (PP (IN of)
                      (NP (DT the) (NN circle))))
                  (CC and)
                  (SBAR (WP$ whose)
                    (S
                      (NP (NNS endpoints))
                      (VP (VBP are)
                        (PP (IN on)
                          (NP (DT the) (NN circle)))))))))))))
    (. .)))

prep_in(segment-13, geometry-2)
det(Diameter-5, a-4)
nsubj(segment-13, Diameter-5)
det(circle-8, a-7)
prep_of(Diameter-5, circle-8)
cop(segment-13, is-9)
det(segment-13, any-10)
amod(segment-13, straight-11)
nn(segment-13, line-12)
root(ROOT-0, segment-13)
nsubj(passes-15, segment-13)
rcmod(segment-13, passes-15)
det(center-18, the-17)
prep_through(passes-15, center-18)
det(circle-21, the-20)
prep_of(center-18, circle-21)
dep(are-25, whose-23)
nsubj(are-25, endpoints-24)
prep_through(passes-15, are-25)
conj_and(center-18, are-25)
det(circle-28, the-27)
prep_on(are-25, circle-28)

(ROOT
  (S
    (NP (DT A) (NNP Disease))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ abnormal) (NN condition))
        (PP (IN of)
          (NP
            (NP (DT an) (NN organism))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ impairs)
                  (NP (JJ bodily) (NNS functions)))))))))
    (. .)))

det(Disease-2, A-1)
nsubj(condition-6, Disease-2)
cop(condition-6, is-3)
det(condition-6, an-4)
amod(condition-6, abnormal-5)
root(ROOT-0, condition-6)
det(organism-9, an-8)
prep_of(condition-6, organism-9)
nsubj(impairs-11, organism-9)
rcmod(organism-9, impairs-11)
amod(functions-13, bodily-12)
dobj(impairs-11, functions-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Desert))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN landscape)
          (CC or)
          (NN region))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ receives)
              (ADJP (RB very) (RB little) (JJ precipitation)))))))
    (. .)))

det(Desert-2, A-1)
nsubj(landscape-5, Desert-2)
cop(landscape-5, is-3)
det(landscape-5, a-4)
root(ROOT-0, landscape-5)
nsubj(receives-9, landscape-5)
conj_or(landscape-5, region-7)
nsubj(receives-9, region-7)
rcmod(landscape-5, receives-9)
advmod(precipitation-12, very-10)
advmod(precipitation-12, little-11)
acomp(receives-9, precipitation-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Dollar))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB often))
          (VBN represented)
          (PP (IN by)
            (NP
              (NP (DT the) (NN dollar) (NN sign))
              (: :)
              (NP (NNP '') (NNP $))
              ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ official) (NN currency))
            (PP (IN in)
              (NP
                (NP (JJ several) (NNS countries))
                (, ,)
                (NP (NNS dependencies))
                (CC and)
                (NP (JJ other) (NN world) (NNS regions))))))))
    (. .)))

det(Dollar-2, The-1)
nsubj(name-17, Dollar-2)
advmod(represented-5, often-4)
dep(Dollar-2, represented-5)
det(sign-9, the-7)
nn(sign-9, dollar-8)
prep_by(represented-5, sign-9)
dep(sign-9, $-12)
cop(name-17, is-15)
det(name-17, the-16)
root(ROOT-0, name-17)
det(currency-21, the-19)
amod(currency-21, official-20)
prep_of(name-17, currency-21)
amod(countries-24, several-23)
prep_in(currency-21, countries-24)
prep_in(currency-21, dependencies-26)
conj_and(countries-24, dependencies-26)
amod(regions-30, other-28)
nn(regions-30, world-29)
prep_in(currency-21, regions-30)
conj_and(countries-24, regions-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NN medicine)
        (CC and)
        (NN toxicology)))
    (, ,)
    (NP (DT a) (NNP Dose))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS smallest) (NN amount))
        (PP (IN of)
          (NP
            (NP (DT a) (NN substance))
            (VP (VBN required)
              (S
                (VP (TO to)
                  (VP (VB produce)
                    (NP (DT a) (JJ measurable) (NN effect))
                    (PP (IN on)
                      (NP (DT a) (VBG living) (NN organism)))))))))))
    (. .)))

prep_in(amount-11, medicine-2)
conj_and(medicine-2, toxicology-4)
prep_in(amount-11, toxicology-4)
det(Dose-7, a-6)
nsubj(amount-11, Dose-7)
cop(amount-11, is-8)
det(amount-11, the-9)
amod(amount-11, smallest-10)
root(ROOT-0, amount-11)
det(substance-14, a-13)
prep_of(amount-11, substance-14)
xsubj(produce-17, substance-14)
partmod(substance-14, required-15)
aux(produce-17, to-16)
xcomp(required-15, produce-17)
det(effect-20, a-18)
amod(effect-20, measurable-19)
dobj(produce-17, effect-20)
det(organism-24, a-22)
amod(organism-24, living-23)
prep_on(produce-17, organism-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (NNP Damages))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN money))
          (VP (VBN paid)
            (CC or)
            (VBN awarded)
            (PP (TO to)
              (NP
                (NP
                  (NP (DT a) (NN claimant))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP England))
                    (-RRB- -RRB-)))
                (, ,)
                (NP
                  (NP (NN pursuer))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Scotland))
                    (-RRB- -RRB-)))
                (CC or)
                (NP
                  (NP (NN plaintiff))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP US))
                    (-RRB- -RRB-)))))
            (PP (VBG following)
              (NP
                (NP (DT a) (JJ successful) (NN claim))
                (PP (IN in)
                  (NP (DT a) (JJ civil) (NN action)))))))))
    (. .)))

prep_in(refers-5, law-2)
nsubj(refers-5, Damages-4)
root(ROOT-0, refers-5)
det(money-8, the-7)
prep_to(refers-5, money-8)
partmod(money-8, paid-9)
partmod(money-8, awarded-11)
conj_or(paid-9, awarded-11)
det(claimant-14, a-13)
prep_to(paid-9, claimant-14)
appos(claimant-14, England-16)
prep_to(paid-9, pursuer-19)
conj_or(claimant-14, pursuer-19)
appos(pursuer-19, Scotland-21)
prep_to(paid-9, plaintiff-24)
conj_or(claimant-14, plaintiff-24)
abbrev(plaintiff-24, US-26)
det(claim-31, a-29)
amod(claim-31, successful-30)
prep_following(paid-9, claim-31)
det(action-35, a-33)
amod(action-35, civil-34)
prep_in(claim-31, action-35)

(ROOT
  (S
    (NP (DT A) (NN Disaster))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN impact))
        (PP (IN of)
          (NP (DT a) (JJ natural)
            (CC or)
            (JJ human-made) (NN hazard)))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB negatively))
            (VP (VBZ affects)
              (NP (NN society)
                (CC or)
                (NN environment)))))))
    (. .)))

det(Disaster-2, A-1)
nsubj(impact-5, Disaster-2)
cop(impact-5, is-3)
det(impact-5, the-4)
root(ROOT-0, impact-5)
nsubj(affects-14, impact-5)
det(hazard-11, a-7)
amod(hazard-11, natural-8)
conj_or(natural-8, human-made-10)
amod(hazard-11, human-made-10)
prep_of(impact-5, hazard-11)
advmod(affects-14, negatively-13)
rcmod(impact-5, affects-14)
dobj(affects-14, society-15)
dobj(affects-14, environment-17)
conj_or(society-15, environment-17)

(ROOT
  (S
    (NP (DT The) (NNPS Dipsacales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (VP (VBN included)
              (PP (IN within)
                (NP
                  (NP (DT the) (JJ asterid) (NN group))
                  (PP (IN of)
                    (NP (NNS dicotyledons))))))))))
    (. .)))

det(Dipsacales-2, The-1)
nsubj(order-5, Dipsacales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
partmod(plants-8, included-10)
det(group-14, the-12)
amod(group-14, asterid-13)
prep_within(included-10, group-14)
prep_of(group-14, dicotyledons-16)

(ROOT
  (S
    (NP (DT A) (NNP Dye))
    (VP (MD can)
      (ADVP (RB generally))
      (VP (VB be)
        (VP (VBN described)
          (PP (IN as)
            (NP
              (NP (DT a) (VBN colored) (NN substance))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT an) (NN affinity))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN substrate))
                          (SBAR
                            (WHPP (TO to)
                              (WHNP (WDT which)))
                            (S
                              (NP (PRP it))
                              (VP (VBZ is)
                                (VP (VBG being)
                                  (VP (VBN applied)))))))))))))))))
    (. .)))

det(Dye-2, A-1)
nsubjpass(described-6, Dye-2)
aux(described-6, can-3)
advmod(described-6, generally-4)
auxpass(described-6, be-5)
root(ROOT-0, described-6)
det(substance-10, a-8)
amod(substance-10, colored-9)
prep_as(described-6, substance-10)
nsubj(has-12, substance-10)
rcmod(substance-10, has-12)
det(affinity-14, an-13)
dobj(has-12, affinity-14)
det(substrate-17, the-16)
prep_to(affinity-14, substrate-17)
rel(applied-23, which-19)
nsubjpass(applied-23, it-20)
aux(applied-23, is-21)
auxpass(applied-23, being-22)
rcmod(substrate-17, applied-23)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP 460) (NNP BC) (NNP -))
    (VP (VBD died)
      (SBAR
        (S
          (VP (MD ca)
            (VP (VB 370)
              (NP (NNP BC)))))))
    (-RRB- -RRB-) (. .)))

nn(BC-2, 460-1)
nsubj(died-4, BC-2)
root(ROOT-0, died-4)
aux(370-6, ca-5)
ccomp(died-4, 370-6)
dobj(370-6, BC-7)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Dice))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT the) (NN plural))
          (PP (IN of)
            (NP
              (NP
                (NP (NNP Die))
                (, ,)
                (PP (IN from)
                  (NP (JJ Old) (JJ French) (NN dÃ) (NNP ∞) (NNP Â) (NNP ©)))
                (, ,))
              (PP (IN from)
                (NP (JJ Latin) (NN datum) ('' '') (NN something)))))
          (VP
            (VP (VBN given))
            (CC or)
            (VP (VBN played) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP
          (NP (JJ small) (JJ polyhedral) (NNS objects))
          (, ,)
          (NP (RB usually) (JJ cubic))
          (, ,))
        (VP (VBN used)
          (PP (IN for)
            (S
              (VP (VBG generating)
                (NP
                  (NP (JJ random) (NNS numbers))
                  (CC or)
                  (NP (JJ other) (NNS symbols)))))))))
    (. .)))

nsubj(objects-29, Dice-1)
det(plural-4, the-3)
dep(Dice-1, plural-4)
prep_of(plural-4, Die-6)
amod(©-14, Old-9)
amod(©-14, French-10)
nn(©-14, dÃ-11)
nn(©-14, ∞-12)
nn(©-14, Â-13)
prep_from(Die-6, ©-14)
amod(something-20, Latin-17)
nn(something-20, datum-18)
prep_from(Die-6, something-20)
dep(plural-4, given-21)
dep(plural-4, played-23)
conj_or(given-21, played-23)
cop(objects-29, are-26)
amod(objects-29, small-27)
amod(objects-29, polyhedral-28)
root(ROOT-0, objects-29)
advmod(cubic-32, usually-31)
appos(objects-29, cubic-32)
partmod(objects-29, used-34)
prepc_for(used-34, generating-36)
amod(numbers-38, random-37)
dobj(generating-36, numbers-38)
amod(symbols-41, other-40)
dobj(generating-36, symbols-41)
conj_or(numbers-38, symbols-41)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS electronics)))
    (, ,)
    (NP (DT a) (NNP Diode))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ two-terminal) (NN device))
        (PRN (-LRB- -LRB-)
          (PP (IN except)
            (SBAR (IN that)
              (S
                (NP (JJ thermionic) (NNS diodes))
                (VP (MD may)
                  (ADVP (RB also))
                  (VP (VB have)
                    (NP
                      (NP
                        (QP (CD one)
                          (CC or)
                          (CD two))
                        (JJ ancillary) (NNS terminals))
                      (PP (IN for)
                        (NP (DT a) (NN heater)))))))))
          (-RRB- -RRB-))))
    (. .)))

prep_in(device-9, electronics-2)
det(Diode-5, a-4)
nsubj(device-9, Diode-5)
cop(device-9, is-6)
det(device-9, a-7)
amod(device-9, two-terminal-8)
root(ROOT-0, device-9)
dep(device-9, except-11)
complm(have-17, that-12)
amod(diodes-14, thermionic-13)
nsubj(have-17, diodes-14)
aux(have-17, may-15)
advmod(have-17, also-16)
pcomp(except-11, have-17)
num(terminals-22, one-18)
conj_or(one-18, two-20)
num(terminals-22, two-20)
amod(terminals-22, ancillary-21)
dobj(have-17, terminals-22)
det(heater-25, a-24)
prep_for(terminals-22, heater-25)

(ROOT
  (S
    (S
      (NP (NNP Doom))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN series))
          (PP (IN of)
            (NP
              (NP (JJ video) (NNS games))
              (PP (IN by)
                (NP (NNP id) (NNP Software))))))))
    (, ,)
    (CC and)
    (S
      (NP (JJ several) (JJ licensed) (NNS properties))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBN based)
            (PP (IN on)
              (NP (DT the) (NN series)))))))
    (. .)))

nsubj(series-4, Doom-1)
cop(series-4, is-2)
det(series-4, a-3)
root(ROOT-0, series-4)
amod(games-7, video-6)
prep_of(series-4, games-7)
nn(Software-10, id-9)
prep_by(games-7, Software-10)
amod(properties-15, several-13)
amod(properties-15, licensed-14)
nsubjpass(based-18, properties-15)
aux(based-18, have-16)
auxpass(based-18, been-17)
conj_and(series-4, based-18)
det(series-21, the-20)
prep_on(based-18, series-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN vector) (NNS calculus)))
      (, ,)
      (NP (DT the) (NNP Divergence))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN operator))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ measures)
                (NP
                  (NP (DT the) (NN magnitude))
                  (PP (IN of)
                    (NP
                      (NP
                        (NP (DT a) (NN vector) (NN field) (POS 's))
                        (NN source)
                        (CC or)
                        (NN sink))
                      (PP (IN at)
                        (NP (DT a) (VBN given) (NN point))))))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN divergence))
        (PP (IN of)
          (NP (DT a) (NN vector) (NN field))))
      (VP (VBZ is)
        (NP (DT a)
          (PRN (-LRB- -LRB-)
            (NP (NNP signed))
            (-RRB- -RRB-))
          (NN scalar))))
    (. .)))

nn(calculus-3, vector-2)
prep_in(operator-9, calculus-3)
det(Divergence-6, the-5)
nsubj(operator-9, Divergence-6)
cop(operator-9, is-7)
det(operator-9, an-8)
root(ROOT-0, operator-9)
nsubj(measures-11, operator-9)
rcmod(operator-9, measures-11)
det(magnitude-13, the-12)
dobj(measures-11, magnitude-13)
det(field-17, a-15)
nn(field-17, vector-16)
poss(source-19, field-17)
prep_of(magnitude-13, source-19)
prep_of(magnitude-13, sink-21)
conj_or(source-19, sink-21)
det(point-25, a-23)
amod(point-25, given-24)
prep_at(source-19, point-25)
det(divergence-28, the-27)
nsubj(scalar-38, divergence-28)
det(field-32, a-30)
nn(field-32, vector-31)
prep_of(divergence-28, field-32)
cop(scalar-38, is-33)
det(scalar-38, a-34)
appos(scalar-38, signed-36)
parataxis(operator-9, scalar-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Dumnonii)
      (CC or)
      (NNP Dumnones))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ Celtic) (NN tribe))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBN inhabited)
              (NP
                (NP (DT the) (JJ farther) (NNS parts))
                (PP (IN of)
                  (NP
                    (NP (DT the)
                      (ADJP (NNP South) (NNP West))
                      (NN peninsula))
                    (PP (IN of)
                      (NP (NNP Britain))))))
              (, ,)
              (PP (IN during)
                (NP
                  (NP (DT the) (NNP Iron) (NNP Age))
                  (CC and)
                  (NP (DT the) (JJ early) (NNP Roman) (NN period)))))))))
    (. .)))

det(Dumnonii-2, The-1)
nsubj(tribe-8, Dumnonii-2)
conj_or(Dumnonii-2, Dumnones-4)
nsubj(tribe-8, Dumnones-4)
cop(tribe-8, were-5)
det(tribe-8, a-6)
amod(tribe-8, Celtic-7)
root(ROOT-0, tribe-8)
nsubj(inhabited-10, tribe-8)
rcmod(tribe-8, inhabited-10)
det(parts-13, the-11)
amod(parts-13, farther-12)
dobj(inhabited-10, parts-13)
det(peninsula-18, the-15)
amod(West-17, South-16)
amod(peninsula-18, West-17)
prep_of(parts-13, peninsula-18)
prep_of(peninsula-18, Britain-20)
det(Age-25, the-23)
nn(Age-25, Iron-24)
prep_during(inhabited-10, Age-25)
det(period-30, the-27)
amod(period-30, early-28)
nn(period-30, Roman-29)
prep_during(inhabited-10, period-30)
conj_and(Age-25, period-30)

(ROOT
  (S
    (NP (DT A)
      (NP
        (NP (NNP Draugr))
        (PRN (-LRB- -LRB-)
          (NP
            (NP
              (NP (JJ original) (NNP Old) (NNP Norse) (NN plural) (NN draugar))
              (, ,)
              (SBAR (IN as)
                (S
                  (VP (VBN used)
                    (ADVP (RB here))))))
            (, ,) (RB not)
            (NP (NNS draugrs)))
          (-RRB- -RRB-)))
      (, ,)
      (NP (NN draug)
        (CC or)
        (NN draugen)))
    (PRN (-LRB- -LRB-)
      (S
        (NP (JJ Norwegian) (, ,) (NNS Swedish)
          (CC and)
          (NNS Danish) (, ,))
        (VP (VBG meaning)
          (NP (DT the) (NN draug))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ undead) (NN creature))
        (PP (IN from)
          (NP (NNP Norse) (NN mythology)))))
    (. .)))

det(Draugr-2, A-1)
nsubj(creature-35, Draugr-2)
amod(draugar-8, original-4)
nn(draugar-8, Old-5)
nn(draugar-8, Norse-6)
nn(draugar-8, plural-7)
dep(Draugr-2, draugar-8)
mark(used-11, as-10)
dep(draugar-8, used-11)
advmod(used-11, here-12)
neg(draugar-8, not-14)
dep(draugar-8, draugrs-15)
appos(Draugr-2, draug-18)
appos(Draugr-2, draugen-20)
conj_or(draug-18, draugen-20)
amod(Swedish-24, Norwegian-22)
nsubj(meaning-28, Swedish-24)
conj_and(Swedish-24, Danish-26)
nsubj(meaning-28, Danish-26)
parataxis(creature-35, meaning-28)
det(draug-30, the-29)
dobj(meaning-28, draug-30)
cop(creature-35, is-32)
det(creature-35, an-33)
amod(creature-35, undead-34)
root(ROOT-0, creature-35)
nn(mythology-38, Norse-37)
prep_from(creature-35, mythology-38)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Day))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (SYM d)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN time) (NN equivalent))
            (PP (TO to)
              (NP (CD 24) (NNS hours)))))))
    (. .)))

det(Day-2, A-1)
nsubj(unit-10, Day-2)
dep(Day-2, symbol-4)
dep(symbol-4, d-6)
cop(unit-10, is-8)
det(unit-10, a-9)
root(ROOT-0, unit-10)
nn(equivalent-13, time-12)
prep_of(unit-10, equivalent-13)
num(hours-16, 24-15)
prep_to(equivalent-13, hours-16)

(ROOT
  (S
    (NP (DT A) (NNP Database))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ structured) (NN collection))
        (PP (IN of)
          (NP (NNS records)
            (CC or)
            (NNS data)))))
    (. .)))

det(Database-2, A-1)
nsubj(collection-6, Database-2)
cop(collection-6, is-3)
det(collection-6, a-4)
amod(collection-6, structured-5)
root(ROOT-0, collection-6)
prep_of(collection-6, records-8)
prep_of(collection-6, data-10)
conj_or(records-8, data-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Roman) (NN mythology)))
    (, ,)
    (NP (NNP Diana))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN goddess))
        (PP (IN of)
          (NP (DT the) (NN hunt))))
      (, ,)
      (PP (IN in)
        (S
          (VP (VBG literature)
            (NP
              (NP (DT the) (NN equivalent))
              (PP (IN of)
                (NP (DT the) (JJ Greek) (NN goddess) (NN Artemis)))))))
      (, ,)
      (SBAR (IN though)
        (S
          (PP (IN in)
            (NP (NN cult)))
          (NP (PRP she))
          (VP (VBD was)
            (NP
              (NP (NNP Italic))
              (PP (IN in)
                (NP (NN origin))))))))
    (. .)))

nn(mythology-3, Roman-2)
prep_in(goddess-8, mythology-3)
nsubj(goddess-8, Diana-5)
cop(goddess-8, was-6)
det(goddess-8, the-7)
root(ROOT-0, goddess-8)
det(hunt-11, the-10)
prep_of(goddess-8, hunt-11)
prepc_in(goddess-8, literature-14)
det(equivalent-16, the-15)
dobj(literature-14, equivalent-16)
det(Artemis-21, the-18)
amod(Artemis-21, Greek-19)
nn(Artemis-21, goddess-20)
prep_of(equivalent-16, Artemis-21)
mark(Italic-28, though-23)
prep_in(Italic-28, cult-25)
nsubj(Italic-28, she-26)
cop(Italic-28, was-27)
advcl(goddess-8, Italic-28)
prep_in(Italic-28, origin-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (NP
      (NP (DT the) (NNP Dimension))
      (PP (IN of)
        (NP (DT a) (NN space))))
    (VP (VBZ is)
      (ADVP (RB roughly))
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT the) (JJ minimum) (NN number))
            (PP (IN of)
              (NP
                (NP (NNP coordinates))
                (VP (VBN needed)
                  (S
                    (VP (TO to)
                      (VP (VB specify)
                        (NP (DT every) (NN point))
                        (PP (IN within)
                          (NP (PRP it)))))))))))))
    (. .)))

prep_in(defined-10, mathematics-2)
det(Dimension-4, the-3)
nsubjpass(defined-10, Dimension-4)
det(space-7, a-6)
prep_of(Dimension-4, space-7)
auxpass(defined-10, is-8)
advmod(defined-10, roughly-9)
root(ROOT-0, defined-10)
det(number-14, the-12)
amod(number-14, minimum-13)
prep_as(defined-10, number-14)
prep_of(number-14, coordinates-16)
xsubj(specify-19, coordinates-16)
partmod(coordinates-16, needed-17)
aux(specify-19, to-18)
xcomp(needed-17, specify-19)
det(point-21, every-20)
dobj(specify-19, point-21)
prep_within(specify-19, it-23)

(ROOT
  (S
    (S
      (S
        (NP (DT A) (NNP Dodecahedron))
        (VP (VBZ is)
          (NP
            (NP (DT any) (NN polyhedron))
            (PP (IN with)
              (NP (CD twelve) (NNS faces))))))
      (, ,)
      (CC but)
      (S
        (ADVP (RB usually))
        (NP (DT a) (JJ regular) (NN dodecahedron))
        (VP (VBZ is)
          (VP (VBN meant)))))
    (: :)
    (S
      (NP
        (NP (DT a) (JJ Platonic) (JJ solid) (NN composed))
        (PP (IN of)
          (NP (CD twelve) (JJ regular) (NN pentagonal))))
      (VP (VBZ faces) (, ,)
        (PP (IN with)
          (NP (CD three) (NN meeting)))
        (PP (IN at)
          (NP (DT each) (NN vertex)))))
    (. .)))

det(Dodecahedron-2, A-1)
nsubj(polyhedron-5, Dodecahedron-2)
cop(polyhedron-5, is-3)
det(polyhedron-5, any-4)
root(ROOT-0, polyhedron-5)
num(faces-8, twelve-7)
prep_with(polyhedron-5, faces-8)
advmod(meant-16, usually-11)
det(dodecahedron-14, a-12)
amod(dodecahedron-14, regular-13)
nsubjpass(meant-16, dodecahedron-14)
auxpass(meant-16, is-15)
conj_but(polyhedron-5, meant-16)
det(composed-21, a-18)
amod(composed-21, Platonic-19)
amod(composed-21, solid-20)
nsubj(faces-26, composed-21)
num(pentagonal-25, twelve-23)
amod(pentagonal-25, regular-24)
prep_of(composed-21, pentagonal-25)
parataxis(polyhedron-5, faces-26)
num(meeting-30, three-29)
prep_with(faces-26, meeting-30)
det(vertex-33, each-32)
prep_at(faces-26, vertex-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NN Decibel))
      (PRN (-LRB- -LRB-)
        (NP (NN dB))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ logarithmic) (NN unit))
        (PP (IN of)
          (NP (NN measurement)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ expresses)
              (NP
                (NP (DT the) (NN magnitude))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (DT a) (JJ physical) (NN quantity))
                      (PRN (-LRB- -LRB-)
                        (NP (RB usually) (NN power)
                          (CC or)
                          (NNS intensity))
                        (-RRB- -RRB-)))
                    (ADVP (JJ relative)
                      (PP (TO to)
                        (NP (DT a) (JJ specified)
                          (CC or)
                          (JJ implied) (NN reference) (NN level))))))))))))
    (. .)))

det(Decibel-2, The-1)
nsubj(unit-9, Decibel-2)
appos(Decibel-2, dB-4)
cop(unit-9, is-6)
det(unit-9, a-7)
amod(unit-9, logarithmic-8)
root(ROOT-0, unit-9)
nsubj(expresses-13, unit-9)
prep_of(unit-9, measurement-11)
rcmod(unit-9, expresses-13)
det(magnitude-15, the-14)
dobj(expresses-13, magnitude-15)
det(quantity-19, a-17)
amod(quantity-19, physical-18)
prep_of(magnitude-15, quantity-19)
advmod(power-22, usually-21)
appos(quantity-19, power-22)
appos(quantity-19, intensity-24)
conj_or(power-22, intensity-24)
advmod(quantity-19, relative-26)
dep(specified-29, a-28)
prep_to(relative-26, specified-29)
amod(level-33, implied-31)
nn(level-33, reference-32)
prep_to(relative-26, level-33)
conj_or(specified-29, level-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Dodo))
      (PRN (-LRB- -LRB-)
        (NP (NNP Raphus) (NNS cucullatus))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ flightless) (NN bird))
        (ADJP (JJ endemic)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ Indian) (NNP Ocean) (NN island))
              (PP (IN of)
                (NP (NNP Mauritius))))))))
    (. .)))

det(Dodo-2, The-1)
nsubj(bird-10, Dodo-2)
nn(cucullatus-5, Raphus-4)
appos(Dodo-2, cucullatus-5)
cop(bird-10, was-7)
det(bird-10, a-8)
amod(bird-10, flightless-9)
root(ROOT-0, bird-10)
amod(bird-10, endemic-11)
det(island-16, the-13)
amod(island-16, Indian-14)
nn(island-16, Ocean-15)
prep_to(endemic-11, island-16)
prep_of(island-16, Mauritius-18)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (NNP Diacritic))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP \/) (NNP daÃŸÂ) (NNP ¡) (NNP iÃ) (NNP ≈) (NNP Â˙Ã))
            (: --)
            (NP (NNP Â) (NNP √) (NNP krÃ) (NNP ≈) (NNP ÂªtÃ) (NNP ≈) (NNP Âªk) (NNP \/)))
          (-RRB- -RRB-)))
      (, ,)
      (CC or)
      (NP (JJ diacritical) (NN mark))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (NN sign))
        (VP (VBN added)
          (PP (TO to)
            (NP (DT a) (NN letter)))
          (S
            (VP
              (VP (TO to)
                (VP (VB alter)
                  (NP (NN pronunciation))))
              (CC or)
              (VP (TO to)
                (VP (VB distinguish)
                  (PP (IN between)
                    (NP (JJ similar) (NNS words))))))))))
    (. .)))

det(Diacritic-2, A-1)
nsubj(sign-28, Diacritic-2)
nn(Â˙Ã-9, \/-4)
nn(Â˙Ã-9, daÃŸÂ-5)
nn(Â˙Ã-9, ¡-6)
nn(Â˙Ã-9, iÃ-7)
nn(Â˙Ã-9, ≈-8)
dep(Diacritic-2, Â˙Ã-9)
nn(\/-18, Â-11)
nn(\/-18, √-12)
nn(\/-18, krÃ-13)
nn(\/-18, ≈-14)
nn(\/-18, ÂªtÃ-15)
nn(\/-18, ≈-16)
nn(\/-18, Âªk-17)
dep(Â˙Ã-9, \/-18)
amod(mark-23, diacritical-22)
conj_or(Diacritic-2, mark-23)
nsubj(sign-28, mark-23)
cop(sign-28, is-25)
det(sign-28, a-26)
amod(sign-28, small-27)
root(ROOT-0, sign-28)
partmod(sign-28, added-29)
det(letter-32, a-31)
prep_to(added-29, letter-32)
aux(alter-34, to-33)
ccomp(added-29, alter-34)
dobj(alter-34, pronunciation-35)
aux(distinguish-38, to-37)
ccomp(added-29, distinguish-38)
conj_or(alter-34, distinguish-38)
amod(words-41, similar-40)
prep_between(distinguish-38, words-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Didgeridoo))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (DT a)
              (ADJP (JJ didjeridu)
                (CC or)
                (JJ didge)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN wind) (NN instrument))
        (PP (IN of)
          (NP (DT the) (NNP Indigenous) (NNPS Australians)))
        (PP (IN of)
          (NP (JJ northern) (NNP Australia)))))
    (. .)))

det(Didgeridoo-2, The-1)
nsubj(instrument-15, Didgeridoo-2)
advmod(known-5, also-4)
dep(Didgeridoo-2, known-5)
det(didjeridu-8, a-7)
prep_as(known-5, didjeridu-8)
prep_as(known-5, didge-10)
conj_or(didjeridu-8, didge-10)
cop(instrument-15, is-12)
det(instrument-15, a-13)
nn(instrument-15, wind-14)
root(ROOT-0, instrument-15)
det(Australians-19, the-17)
nn(Australians-19, Indigenous-18)
prep_of(instrument-15, Australians-19)
amod(Australia-22, northern-21)
prep_of(instrument-15, Australia-22)

(ROOT
  (S
    (NP (DT A) (NNP Disaccharide))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sugar))
        (PRN (-LRB- -LRB-)
          (NP (DT a) (NN carbohydrate))
          (-RRB- -RRB-))
        (VP (VBN composed)
          (PP (IN of)
            (NP (CD two) (NNS monosaccharides))))))
    (. .)))

det(Disaccharide-2, A-1)
nsubj(sugar-5, Disaccharide-2)
cop(sugar-5, is-3)
det(sugar-5, a-4)
root(ROOT-0, sugar-5)
det(carbohydrate-8, a-7)
appos(sugar-5, carbohydrate-8)
partmod(sugar-5, composed-10)
num(monosaccharides-13, two-12)
prep_of(composed-10, monosaccharides-13)

(ROOT
  (S
    (NP
      (NP (NNP Dorado))
      (PRN (-LRB- -LRB-)
        (FRAG
          (FRAG
            (NP
              (NP (NN dÃ))
              (NP (NNP ≈) (NNP Â) (NNP ‚) (NNP Ã)))
            (: --)
            (NP
              (NP (NNP Â) (NNP √) (NNP rÃ) (NNP ≈) (NNP ÂŒÃ))
              (: --)
              (NP
                (NP (NNP Â) (NNP ∆))
                (NP (NN doÃ)))
              (: ...)
              (NP (NNP Â))))
          (: ...)
          (FRAG (, ,)
            (NP (NNS mahi-mahi)
              (CC or)
              (NN dolphin-fish))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (JJ southern) (NN constellation)))
    (. .)))

nsubj(constellation-29, Dorado-1)
dep(Dorado-1, dÃ-3)
nn(Ã-7, ≈-4)
nn(Ã-7, Â-5)
nn(Ã-7, ‚-6)
dep(dÃ-3, Ã-7)
nn(ÂŒÃ-13, Â-9)
nn(ÂŒÃ-13, √-10)
nn(ÂŒÃ-13, rÃ-11)
nn(ÂŒÃ-13, ≈-12)
dep(dÃ-3, ÂŒÃ-13)
nn(∆-16, Â-15)
dep(ÂŒÃ-13, ∆-16)
dep(∆-16, doÃ-17)
dep(ÂŒÃ-13, Â-19)
dep(dÃ-3, mahi-mahi-22)
dep(dÃ-3, dolphin-fish-24)
conj_or(mahi-mahi-22, dolphin-fish-24)
cop(constellation-29, is-26)
det(constellation-29, a-27)
amod(constellation-29, southern-28)
root(ROOT-0, constellation-29)

(ROOT
  (S
    (PP (IN In)
      (NP (NN algebra)))
    (, ,)
    (NP (DT a) (NNP Determinant))
    (VP (VBZ is)
      (NP (DT a) (NN function))
      (PP (VBG depending)
        (PP (IN on)
          (NP (NN n))))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP
                (NP (NNS associates))
                (NP (DT a) (NN scalar))
                (, ,)
                (ADVP (RB det)))
              (PRN (-LRB- -LRB-)
                (NP (NNP A))
                (-RRB- -RRB-))
              (, ,)
              (PP (TO to)
                (NP (DT every) (NNP nÃ) (NNP ∞) (NNP Â˜n) (JJ square) (NN matrix))))
            (NP (NNP A.) (NNP Doublespeak)))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ disparaging) (NN label))
              (PP (IN for)
                (NP
                  (NP (DT any) (JJ euphemistic) (NN term))
                  (VP (VBN perceived)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN uttered)
                            (PP (IN in)
                              (NP (JJ bad) (NN faith)))))))))))))))
    (. .)))

prep_in(function-8, algebra-2)
det(Determinant-5, a-4)
nsubj(function-8, Determinant-5)
cop(function-8, is-6)
det(function-8, a-7)
root(ROOT-0, function-8)
prepc_depending_on(function-8, on-10)
pobj(function-8, n-11)
complm(label-34, that-12)
nsubj(label-34, associates-13)
det(scalar-15, a-14)
dep(associates-13, scalar-15)
advmod(associates-13, det-17)
appos(associates-13, A-19)
det(matrix-28, every-23)
nn(matrix-28, nÃ-24)
nn(matrix-28, ∞-25)
nn(matrix-28, Â˜n-26)
amod(matrix-28, square-27)
prep_to(associates-13, matrix-28)
nn(Doublespeak-30, A.-29)
dep(associates-13, Doublespeak-30)
cop(label-34, is-31)
det(label-34, a-32)
amod(label-34, disparaging-33)
ccomp(function-8, label-34)
det(term-38, any-36)
amod(term-38, euphemistic-37)
prep_for(label-34, term-38)
xsubj(uttered-42, term-38)
partmod(term-38, perceived-39)
aux(uttered-42, to-40)
auxpass(uttered-42, be-41)
xcomp(perceived-39, uttered-42)
amod(faith-45, bad-44)
prep_in(uttered-42, faith-45)

(ROOT
  (S
    (NP (DT The) (NNP Dragon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mythical) (NN creature))
        (SBAR
          (WHPP (IN of)
            (WHNP (WDT which)))
          (S
            (NP (DT some) (NN interpretation)
              (CC or)
              (NN depiction))
            (VP (VBZ appears)
              (PP (IN in)
                (NP (RB almost) (DT every) (NN culture)))
              (ADVP (RB worldwide)))))))
    (. .)))

det(Dragon-2, The-1)
nsubj(creature-6, Dragon-2)
cop(creature-6, is-3)
det(creature-6, a-4)
amod(creature-6, mythical-5)
root(ROOT-0, creature-6)
rel(appears-13, which-8)
det(interpretation-10, some-9)
nsubj(appears-13, interpretation-10)
conj_or(interpretation-10, depiction-12)
nsubj(appears-13, depiction-12)
rcmod(creature-6, appears-13)
advmod(culture-17, almost-15)
det(culture-17, every-16)
prep_in(appears-13, culture-17)
advmod(appears-13, worldwide-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Diffeomorphism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN isomorphism))
            (PP (IN of)
              (NP (JJ smooth) (NNS manifolds)))))))
    (. .)))

prep_in(kind-8, mathematics-2)
det(Diffeomorphism-5, a-4)
nsubj(kind-8, Diffeomorphism-5)
cop(kind-8, is-6)
det(kind-8, a-7)
root(ROOT-0, kind-8)
prep_of(kind-8, isomorphism-10)
amod(manifolds-13, smooth-12)
prep_of(isomorphism-10, manifolds-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP
        (NP (NNP Titus) (NNPS Flavius) (NNP Domitianus))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (CD 24))
            (NP
              (NP
                (NP (NNP October) (CD 51))
                (CC &)
                (NP (NN amp)))
              (: ;)
              (NP
                (NP (NN amp))
                (: ;)
                (NP (NN ndash)))
              (: ;)
              (NP
                (NP (CD 18))
                (NP (NNP September) (CD 96)))))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB commonly))
        (VBN known)
        (PP (IN as)
          (NP (NNP Domitian))))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT a) (NNP Roman) (NNP Emperor))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD reigned)
              (PP (IN from)
                (NP (CD 14)))
              (NP (NNP September) (CD 81))
              (PP (IN until)
                (NP
                  (NP (PRP$ his) (NN death))
                  (PP (IN on)
                    (NP (CD 18)))
                  (NP (NNP September) (CD 96)))))))))
    (. .)))

nn(Domitianus-3, Titus-1)
nn(Domitianus-3, Flavius-2)
nsubj(Emperor-28, Domitianus-3)
dep(Domitianus-3, 24-5)
dep(24-5, October-6)
num(October-6, 51-7)
dep(24-5, amp-9)
conj_and(October-6, amp-9)
dep(October-6, amp-11)
dep(amp-11, ndash-13)
dep(October-6, 18-15)
dep(18-15, September-16)
num(September-16, 96-17)
advmod(known-21, commonly-20)
partmod(Domitianus-3, known-21)
prep_as(known-21, Domitian-23)
cop(Emperor-28, was-25)
det(Emperor-28, a-26)
nn(Emperor-28, Roman-27)
root(ROOT-0, Emperor-28)
nsubj(reigned-30, Emperor-28)
rcmod(Emperor-28, reigned-30)
prep_from(reigned-30, 14-32)
tmod(reigned-30, September-33)
num(September-33, 81-34)
poss(death-37, his-36)
prep_until(reigned-30, death-37)
prep_on(death-37, 18-39)
dep(death-37, September-40)
num(September-40, 96-41)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Dolmen))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP
              (NP (NN cromlech))
              (, ,)
              (NP (NN anta))
              (, ,)
              (NP (NNP HÃ) (NNP ∞) (NNP Âπnengrab))
              (, ,)
              (NP (NNP Hunebed))
              (, ,)
              (NP (NN quoit))
              (, ,)
              (CC and)
              (NP (JJ portal) (NN dolmen)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (JJ single-chamber) (JJ megalithic) (NN tomb))))
      (, ,)
      (S
        (ADVP (RB usually))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP
                (QP (CD three)
                  (CC or)
                  (JJR more))
                (JJ upright) (NNS stones))
              (VP (VBG supporting)
                (NP
                  (NP (DT a) (JJ large)
                    (ADJP (JJ flat) (JJ horizontal))
                    (NN capstone))
                  (PRN (-LRB- -LRB-)
                    (NP (NN table))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(Dolmen-2, A-1)
nsubj(type-25, Dolmen-2)
advmod(known-5, also-4)
dep(Dolmen-2, known-5)
prep_as(known-5, cromlech-7)
prep_as(known-5, anta-9)
conj_and(cromlech-7, anta-9)
nn(Âπnengrab-13, HÃ-11)
nn(Âπnengrab-13, ∞-12)
prep_as(known-5, Âπnengrab-13)
conj_and(cromlech-7, Âπnengrab-13)
prep_as(known-5, Hunebed-15)
conj_and(cromlech-7, Hunebed-15)
prep_as(known-5, quoit-17)
conj_and(cromlech-7, quoit-17)
amod(dolmen-21, portal-20)
prep_as(known-5, dolmen-21)
conj_and(cromlech-7, dolmen-21)
cop(type-25, is-23)
det(type-25, a-24)
root(ROOT-0, type-25)
amod(tomb-29, single-chamber-27)
amod(tomb-29, megalithic-28)
prep_of(type-25, tomb-29)
advmod(consisting-32, usually-31)
partmod(type-25, consisting-32)
xcomp(type-25, consisting-32)
num(stones-38, three-34)
conj_or(three-34, more-36)
quantmod(three-34, more-36)
num(stones-38, more-36)
amod(stones-38, upright-37)
prep_of(consisting-32, stones-38)
partmod(stones-38, supporting-39)
det(capstone-44, a-40)
amod(capstone-44, large-41)
amod(horizontal-43, flat-42)
amod(capstone-44, horizontal-43)
dobj(supporting-39, capstone-44)
appos(capstone-44, table-46)

(ROOT
  (FRAG
    (PP (IN In)
      (NP
        (NP (NN astronomy))
        (, ,)
        (NP (NNP Declination) (-LRB- -LRB-) (NNP abbrev))))
    (. .)))

root(ROOT-0, In-1)
pobj(In-1, astronomy-2)
nn(abbrev-6, Declination-4)
appos(astronomy-2, abbrev-6)

(ROOT
  (S
    (NP (NNP dec)
      (CC or)
      (NNP Ã) (NNP ⁄) (NNP Â) (NNP ´) (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (CD two) (NNS coordinates))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ equatorial) (JJ coordinate) (NN system))
                (, ,)
                (NP (DT the)
                  (ADJP (JJ other)
                    (S
                      (VP (VBG being)
                        (ADJP (RB either) (JJ right)))))
                  (NN ascension)
                  (CC or)
                  (NN hour) (NN angle))))))))
    (. .)))

nn(´-6, dec-1)
conj_or(dec-1, Ã-3)
nn(´-6, Ã-3)
nn(´-6, ⁄-4)
nn(´-6, Â-5)
nsubj(one-9, ´-6)
cop(one-9, is-8)
root(ROOT-0, one-9)
det(coordinates-13, the-11)
num(coordinates-13, two-12)
prep_of(one-9, coordinates-13)
det(system-18, the-15)
amod(system-18, equatorial-16)
amod(system-18, coordinate-17)
prep_of(coordinates-13, system-18)
det(ascension-25, the-20)
amod(ascension-25, other-21)
cop(right-24, being-22)
advmod(right-24, either-23)
dep(other-21, right-24)
appos(system-18, ascension-25)
nn(angle-28, hour-27)
appos(system-18, angle-28)
conj_or(ascension-25, angle-28)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NN Dhole))
      (PRN (-LRB- -LRB-)
        (NP (NNP Cuon) (NNS alpinus))
        (-RRB- -RRB-)))
    (, ,)
    (S
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT the) (NNP Asiatic) (NNP Wild) (NNP Dog)))))
    (, ,)
    (NP (NNP Indian) (NNP Wild) (NNP Dog)
      (CC or)
      (NNP Red) (NNP Dog))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN mammal))
          (PP (IN of)
            (NP (DT the) (NN order) (NN Carnivora))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ only) (NN member))
          (PP (IN of)
            (NP (DT the) (NN genus) (`` `) (NNP Cuon) ('' '))))))
    (. .)))

det(Dhole-2, The-1)
nsubj(mammal-24, Dhole-2)
nn(alpinus-5, Cuon-4)
appos(Dhole-2, alpinus-5)
advmod(known-9, also-8)
dep(mammal-24, known-9)
det(Dog-14, the-11)
nn(Dog-14, Asiatic-12)
nn(Dog-14, Wild-13)
prep_as(known-9, Dog-14)
nn(Dog-18, Indian-16)
nn(Dog-18, Wild-17)
nsubj(mammal-24, Dog-18)
nn(Dog-21, Red-20)
conj_or(Dog-18, Dog-21)
nsubj(mammal-24, Dog-21)
cop(mammal-24, is-22)
det(mammal-24, a-23)
root(ROOT-0, mammal-24)
det(Carnivora-28, the-26)
nn(Carnivora-28, order-27)
prep_of(mammal-24, Carnivora-28)
det(member-33, the-31)
amod(member-33, only-32)
conj_and(mammal-24, member-33)
det(Cuon-38, the-35)
nn(Cuon-38, genus-36)
prep_of(member-33, Cuon-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Door))
    (VP (VBZ is)
      (UCP
        (NP (DT a) (NN panel)
          (CC or)
          (NN barrier))
        (, ,)
        (ADJP (RB usually) (JJ hinged))
        (, ,)
        (ADJP (JJ sliding))
        (, ,)
        (CC or)
        (NP (JJ electronic)))
      (, ,)
      (SBAR (IN that)
        (S
          (VP (VBZ is)
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB cover)
                    (NP (DT an) (NN opening))
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN wall)
                          (CC or)
                          (NN partition))
                        (VP (VBG going)
                          (PP (IN into)
                            (NP (DT a) (NN building)
                              (CC or)
                              (NN space))))))))))))))
    (. .)))

det(Door-2, A-1)
nsubj(panel-5, Door-2)
nsubj(hinged-10, Door-2)
nsubj(sliding-12, Door-2)
nsubj(electronic-15, Door-2)
cop(panel-5, is-3)
det(panel-5, a-4)
root(ROOT-0, panel-5)
conj_or(panel-5, barrier-7)
advmod(hinged-10, usually-9)
amod(panel-5, hinged-10)
conj_or(panel-5, hinged-10)
amod(panel-5, sliding-12)
conj_or(panel-5, sliding-12)
conj_or(panel-5, electronic-15)
complm(used-19, that-17)
auxpass(used-19, is-18)
ccomp(panel-5, used-19)
aux(cover-21, to-20)
xcomp(used-19, cover-21)
det(opening-23, an-22)
dobj(cover-21, opening-23)
det(wall-26, a-25)
prep_in(cover-21, wall-26)
prep_in(cover-21, partition-28)
conj_or(wall-26, partition-28)
partmod(wall-26, going-29)
det(building-32, a-31)
prep_into(going-29, building-32)
prep_into(going-29, space-34)
conj_or(building-32, space-34)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP
      (NP (NNP Declension))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ declination))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN occurrence))
        (PP (IN of)
          (NP
            (NP (NN inflection))
            (PP (IN in)
              (NP (NNS nouns) (, ,) (NNS pronouns)
                (CC and)
                (NNS adjectives))))))
      (, ,)
      (S
        (VP (VBG indicating)
          (NP (JJ such) (NNS features))
          (PP (IN as)
            (NP
              (NP
                (NP (NN number))
                (PRN (-LRB- -LRB-)
                  (ADVP (RB typically))
                  (NP (NNS singular) (IN vs.) (NN plural))
                  (-RRB- -RRB-)))
              (, ,)
              (NP
                (NP (NN case))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NN subject))
                    (, ,)
                    (NP (NN object))
                    (, ,)
                    (CC and)
                    (NP (RB so) (RB on)))
                  (-RRB- -RRB-)))
              (, ,)
              (CC or)
              (NP (NN gender)))))))
    (. .)))

prep_in(occurrence-11, linguistics-2)
nsubj(occurrence-11, Declension-4)
dep(declination-7, or-6)
dep(Declension-4, declination-7)
cop(occurrence-11, is-9)
det(occurrence-11, the-10)
root(ROOT-0, occurrence-11)
prep_of(occurrence-11, inflection-13)
prep_in(inflection-13, nouns-15)
prep_in(inflection-13, pronouns-17)
conj_and(nouns-15, pronouns-17)
prep_in(inflection-13, adjectives-19)
conj_and(nouns-15, adjectives-19)
partmod(occurrence-11, indicating-21)
xcomp(occurrence-11, indicating-21)
amod(features-23, such-22)
dobj(indicating-21, features-23)
prep_as(indicating-21, number-25)
dep(plural-30, typically-27)
nn(plural-30, singular-28)
amod(plural-30, vs.-29)
appos(number-25, plural-30)
prep_as(indicating-21, case-33)
conj_or(number-25, case-33)
dep(case-33, subject-35)
dep(case-33, object-37)
conj_and(subject-35, object-37)
advmod(on-41, so-40)
dep(case-33, on-41)
conj_and(subject-35, on-41)
prep_as(indicating-21, gender-45)
conj_or(number-25, gender-45)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Daffynition))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP portmanteau))
          (PP (IN of)
            (NP (NN daffy)
              (CC and)
              (NN definition))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN pun) (NN format))
        (VP (VBG involving)
          (NP
            (NP (DT the) (NN reinterpretation))
            (PP (IN of)
              (NP (DT an) (VBG existing) (NN word))))
          (, ,)
          (PP (IN on)
            (NP
              (NP (DT the) (NN basis))
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ sounds)
                    (PP (IN like)
                      (NP
                        (NP (DT another) (NN word))
                        (PRN (-LRB- -LRB-)
                          (CC or)
                          (NP
                            (NP (NN group))
                            (PP (IN of)
                              (NP (NNS words))))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Daffynition-2, A-1)
nsubj(format-13, Daffynition-2)
dep(Daffynition-2, portmanteau-4)
prep_of(portmanteau-4, daffy-6)
prep_of(portmanteau-4, definition-8)
conj_and(daffy-6, definition-8)
cop(format-13, is-10)
det(format-13, a-11)
nn(format-13, pun-12)
root(ROOT-0, format-13)
partmod(format-13, involving-14)
det(reinterpretation-16, the-15)
dobj(involving-14, reinterpretation-16)
det(word-20, an-18)
amod(word-20, existing-19)
prep_of(reinterpretation-16, word-20)
det(basis-24, the-23)
prep_on(involving-14, basis-24)
dobj(sounds-27, basis-24)
complm(sounds-27, that-25)
nsubj(sounds-27, it-26)
dep(basis-24, sounds-27)
det(word-30, another-29)
prep_like(sounds-27, word-30)
dep(group-33, or-32)
dep(word-30, group-33)
prep_of(group-33, words-35)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (JJ Irish) (NN mythology))))
    (, ,)
    (NP
      (NP (NNP Donn))
      (, ,)
      (CC or)
      (NP (DT the) (JJ Dark) (CD One))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN Lord))
        (PP (IN of)
          (NP
            (NP (DT the) (NN Dead)
              (CC and)
              (NN father))
            (PP (IN of)
              (NP
                (NP (NNP Diarmuid) (NNP Ua) (NNP Duibhne))
                (, ,)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (NP (PRP he))
                    (VP (VBD gave)
                      (PP (TO to)
                        (NP (NNP Aengus) (NNP Og)))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ nurtured))))))))))))))
    (. .)))

prepc_according_to(Lord-15, to-2)
amod(mythology-4, Irish-3)
pobj(Lord-15, mythology-4)
nsubj(Lord-15, Donn-6)
det(One-11, the-9)
amod(One-11, Dark-10)
conj_or(Donn-6, One-11)
nsubj(Lord-15, One-11)
cop(Lord-15, is-13)
det(Lord-15, the-14)
root(ROOT-0, Lord-15)
det(Dead-18, the-17)
prep_of(Lord-15, Dead-18)
prep_of(Lord-15, father-20)
conj_and(Dead-18, father-20)
nn(Duibhne-24, Diarmuid-22)
nn(Duibhne-24, Ua-23)
prep_of(Dead-18, Duibhne-24)
rel(gave-28, whom-26)
nsubj(gave-28, he-27)
xsubj(nurtured-34, he-27)
rcmod(Duibhne-24, gave-28)
nn(Og-31, Aengus-30)
prep_to(gave-28, Og-31)
aux(nurtured-34, to-32)
cop(nurtured-34, be-33)
xcomp(gave-28, nurtured-34)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Dampf) (NNP Kraft) (NNP Wagen))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP German))
            (: :)
            (NP (JJ steam-driven) (NN car)))
          (-RRB- -RRB-)))
      (CC or)
      (NP (NNP DKW)))
    (VP (VBZ is)
      (NP (DT a) (JJ historic) (NN car)
        (CC and)
        (NN motorcycle) (NN marque)))
    (. .)))

nn(Wagen-3, Dampf-1)
nn(Wagen-3, Kraft-2)
nsubj(car-15, Wagen-3)
dep(Wagen-3, German-5)
amod(car-8, steam-driven-7)
dep(German-5, car-8)
conj_or(Wagen-3, DKW-11)
nsubj(car-15, DKW-11)
cop(car-15, is-12)
det(car-15, a-13)
amod(car-15, historic-14)
root(ROOT-0, car-15)
nn(marque-18, motorcycle-17)
conj_and(car-15, marque-18)

(ROOT
  (S
    (NP
      (NP (NNP Ã) (NNP ⁄) (NNP Â) (NNP ‰) (NNP T))
      (, ,)
      (NP (NNP Delta) (NNP T))
      (, ,)
      (NP (NN delta-T))
      (, ,)
      (NP (NN deltaT))
      (, ,)
      (CC or)
      (NP (NNP DT)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN time) (NN difference))
        (VP (VBN obtained)
          (PP (IN by)
            (S
              (VP (VBG subtracting)
                (NP
                  (NP (NNP Universal) (NNP Time))
                  (PP (IN from)
                    (NP (NNP Terrestrial) (NNP Time))))))))))
    (. .)))

nn(T-5, Ã-1)
nn(T-5, ⁄-2)
nn(T-5, Â-3)
nn(T-5, ‰-4)
nsubj(difference-19, T-5)
nn(T-8, Delta-7)
conj_or(T-5, T-8)
nsubj(difference-19, T-8)
conj_or(T-5, delta-T-10)
nsubj(difference-19, delta-T-10)
conj_or(T-5, deltaT-12)
nsubj(difference-19, deltaT-12)
conj_or(T-5, DT-15)
nsubj(difference-19, DT-15)
cop(difference-19, is-16)
det(difference-19, the-17)
nn(difference-19, time-18)
root(ROOT-0, difference-19)
partmod(difference-19, obtained-20)
agent(obtained-20, subtracting-22)
nn(Time-24, Universal-23)
dobj(subtracting-22, Time-24)
nn(Time-27, Terrestrial-26)
prep_from(Time-24, Time-27)

(ROOT
  (S
    (VP
      (ADVP (DT The))
      (VB Volkssturm) (-LRB- -LRB-)
      (NP (NNS lit)))
    (. .) ('' '')))

advmod(Volkssturm-2, The-1)
root(ROOT-0, Volkssturm-2)
dobj(Volkssturm-2, lit-4)

(ROOT
  (S
    (NP
      (NP (NN Folkstorm) ('' ''))
      (, ;) ('' '')
      (VP
        (VP
          (VP (VBN People)
            (NP (PRP 's)))
          ('' '')
          (CC or)
          (VP ('' '')
            (NP (NNP National) (CD Militia))))
        ('' '') (: ;)
        (VP (VBN Sturm)
          (PRN
            (NP
              (NP (NN means) ('' ''))
              (NP (JJ military) (NN assault) ('' '')))
            (-RRB- -RRB-)))))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ German) (JJ national) (NN militia))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ last) (NNS months))
            (PP (IN of)
              (NP (NNP World) (NNP War) (NNP II)))))))
    (. .)))

nsubj(militia-25, Folkstorm-1)
dep(Folkstorm-1, People-5)
dobj(People-5, 's-6)
dep(Folkstorm-1, National-10)
conj_or(People-5, National-10)
num(National-10, Militia-11)
dep(People-5, Sturm-14)
dep(Sturm-14, means-15)
amod(assault-18, military-17)
dep(means-15, assault-18)
cop(militia-25, was-21)
det(militia-25, a-22)
amod(militia-25, German-23)
amod(militia-25, national-24)
root(ROOT-0, militia-25)
det(months-29, the-27)
amod(months-29, last-28)
prep_of(militia-25, months-29)
nn(II-33, World-31)
nn(II-33, War-32)
prep_of(months-29, II-33)

(ROOT
  (S
    (NP (NNS Djbdns))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ simple)
            (CC and)
            (JJ security-aware))
          (NNP DNS) (NN implementation))
        (VP (VBN created)
          (PP (IN by)
            (NP
              (NP (NNP Daniel) (NNP J.) (NNP Bernstein))
              (ADJP (JJ due)
                (PP (TO to)
                  (NP
                    (NP (PRP$ his) (NNS frustrations))
                    (PP (IN with)
                      (NP (VBN repeated) (NNP BIND) (NN security) (NNS holes)))))))))))
    (. .)))

nsubj(implementation-8, Djbdns-1)
cop(implementation-8, is-2)
det(implementation-8, a-3)
amod(implementation-8, simple-4)
conj_and(simple-4, security-aware-6)
amod(implementation-8, security-aware-6)
nn(implementation-8, DNS-7)
root(ROOT-0, implementation-8)
partmod(implementation-8, created-9)
nn(Bernstein-13, Daniel-11)
nn(Bernstein-13, J.-12)
agent(created-9, Bernstein-13)
poss(frustrations-17, his-16)
prep_due_to(Bernstein-13, frustrations-17)
amod(holes-22, repeated-19)
nn(holes-22, BIND-20)
nn(holes-22, security-21)
prep_with(frustrations-17, holes-22)

(ROOT
  (S
    (NP (NNP Dylan))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ multi-paradigm) (NN language))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ includes)
                (NP
                  (NP (NN support))
                  (PP (IN for)
                    (NP
                      (ADJP (JJ functional)
                        (CC and)
                        (JJ object-oriented))
                      (NN programming)))))
              (, ,)
              (CC and)
              (VP (VBZ is)
                (ADJP (JJ dynamic)
                  (CC and)
                  (JJ reflective)
                  (PP (IN while)
                    (S
                      (VP (VBG providing)
                        (NP
                          (NP (DT a) (VBG programming) (NN model))
                          (VP (VBN designed)
                            (S
                              (VP (TO to)
                                (VP (VB support)
                                  (NP
                                    (NP (JJ efficient) (NN machine) (NN code) (NN generation))
                                    (, ,)
                                    (PP (VBG including)
                                      (NP
                                        (NP (JJ fine-grained) (NN control))
                                        (PP (IN over)
                                          (NP (JJ dynamic)
                                            (CC and)
                                            (JJ static) (NNS behaviors)))))))))))))))))))))
    (. .)))

nsubj(language-5, Dylan-1)
cop(language-5, is-2)
det(language-5, a-3)
amod(language-5, multi-paradigm-4)
root(ROOT-0, language-5)
nsubj(includes-7, language-5)
nsubj(dynamic-17, language-5)
rcmod(language-5, includes-7)
dobj(includes-7, support-8)
amod(programming-13, functional-10)
conj_and(functional-10, object-oriented-12)
amod(programming-13, object-oriented-12)
prep_for(support-8, programming-13)
cop(dynamic-17, is-16)
rcmod(language-5, dynamic-17)
conj_and(includes-7, dynamic-17)
conj_and(includes-7, reflective-19)
conj_and(dynamic-17, reflective-19)
prepc_while(dynamic-17, providing-21)
det(model-24, a-22)
amod(model-24, programming-23)
dobj(providing-21, model-24)
xsubj(support-27, model-24)
partmod(model-24, designed-25)
aux(support-27, to-26)
xcomp(designed-25, support-27)
amod(generation-31, efficient-28)
nn(generation-31, machine-29)
nn(generation-31, code-30)
dobj(support-27, generation-31)
amod(control-35, fine-grained-34)
prep_including(generation-31, control-35)
amod(behaviors-40, dynamic-37)
conj_and(dynamic-37, static-39)
amod(behaviors-40, static-39)
prep_over(control-35, behaviors-40)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ naval) (NN terminology)))
    (, ,)
    (NP (DT a) (NNP Destroyer))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a)
            (ADJP (JJ fast)
              (CC and)
              (JJ maneuverable))
            (ADJP (RB yet) (JJ long-endurance))
            (NN warship))
          (VP (VBN intended)
            (S
              (VP (TO to)
                (VP
                  (VP (VB escort)
                    (NP (JJR larger) (NNS vessels))
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN fleet))
                        (, ,)
                        (NP (NN convoy))
                        (CC or)
                        (NP (NN battle) (NN group)))))
                  (CC and)
                  (VP (VB defend)
                    (NP (PRP them))
                    (PP (IN against)
                      (NP
                        (NP (JJR smaller))
                        (, ,)
                        (NP
                          (ADJP (JJ short-range)
                            (CC but)
                            (JJ powerful))
                          (NNS attackers))))))))))
        (PRN (-LRB- -LRB-)
          (S
            (ADVP (RB originally))
            (VP (VB torpedo)
              (NP
                (NP (NNS boats))
                (, ,)
                (NP (JJ later) (NNS submarines))
                (CC and)
                (NP (NN aircraft)))))
          (-RRB- -RRB-))))
    (. .)))

amod(terminology-3, naval-2)
prep_in(warship-14, terminology-3)
det(Destroyer-6, a-5)
nsubj(warship-14, Destroyer-6)
cop(warship-14, is-7)
det(warship-14, a-8)
amod(warship-14, fast-9)
conj_and(fast-9, maneuverable-11)
amod(warship-14, maneuverable-11)
advmod(long-endurance-13, yet-12)
amod(warship-14, long-endurance-13)
root(ROOT-0, warship-14)
xsubj(escort-17, warship-14)
partmod(warship-14, intended-15)
aux(escort-17, to-16)
xcomp(intended-15, escort-17)
amod(vessels-19, larger-18)
dobj(escort-17, vessels-19)
det(fleet-22, a-21)
prep_in(escort-17, fleet-22)
prep_in(escort-17, convoy-24)
conj_or(fleet-22, convoy-24)
nn(group-27, battle-26)
prep_in(escort-17, group-27)
conj_or(fleet-22, group-27)
xcomp(intended-15, defend-29)
conj_and(escort-17, defend-29)
dobj(defend-29, them-30)
prep_against(defend-29, smaller-32)
amod(attackers-37, short-range-34)
conj_but(short-range-34, powerful-36)
amod(attackers-37, powerful-36)
appos(smaller-32, attackers-37)
advmod(torpedo-40, originally-39)
dep(warship-14, torpedo-40)
dobj(torpedo-40, boats-41)
amod(submarines-44, later-43)
dobj(torpedo-40, submarines-44)
conj_and(boats-41, submarines-44)
dobj(torpedo-40, aircraft-46)
conj_and(boats-41, aircraft-46)

(ROOT
  (S
    (NP (NNP Datura) (NNS species))
    (VP (VBP are)
      (VP (VBN used)
        (PP (IN as)
          (NP (NN food) (NNS plants)))
        (PP (IN by)
          (NP
            (NP (DT the) (NN larvae))
            (PP (IN of)
              (NP
                (NP (DT some) (NNP Lepidoptera)
                  (PRN (-LRB- -LRB-)
                    (NP
                      (NP (NN butterfly))
                      (CC and)
                      (NP (NN moth)))
                    (-RRB- -RRB-))
                  (NN species))
                (PP (VBG including)
                  (NP (NNP Hypercompe) (NNP indecisa)))))))))
    (. .)))

nn(species-2, Datura-1)
nsubjpass(used-4, species-2)
auxpass(used-4, are-3)
root(ROOT-0, used-4)
nn(plants-7, food-6)
prep_as(used-4, plants-7)
det(larvae-10, the-9)
agent(used-4, larvae-10)
det(species-19, some-12)
nn(species-19, Lepidoptera-13)
dep(species-19, butterfly-15)
conj_and(butterfly-15, moth-17)
dep(species-19, moth-17)
prep_of(larvae-10, species-19)
nn(indecisa-22, Hypercompe-21)
prep_including(species-19, indecisa-22)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Dandy))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (DT a)
              (ADJP (JJ beau) (, ,) (JJ gallant)
                (CC or)
                (JJ flamboyant))
              (NN person))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ places)
              (NP (JJ particular) (NN importance))
              (PP (IN upon)
                (NP
                  (NP (JJ physical) (NN appearance))
                  (, ,)
                  (NP (JJ refined) (NN language))
                  (, ,)
                  (CC and)
                  (NP (JJ leisurely) (NNS hobbies)))))))))
    (. .)))

det(Dandy-2, A-1)
nsubj(man-17, Dandy-2)
advmod(known-5, also-4)
dep(Dandy-2, known-5)
det(person-13, a-7)
amod(person-13, beau-8)
conj_or(beau-8, gallant-10)
amod(person-13, gallant-10)
conj_or(beau-8, flamboyant-12)
amod(person-13, flamboyant-12)
prep_as(known-5, person-13)
cop(man-17, is-15)
det(man-17, a-16)
root(ROOT-0, man-17)
nsubj(places-19, man-17)
rcmod(man-17, places-19)
amod(importance-21, particular-20)
dobj(places-19, importance-21)
amod(appearance-24, physical-23)
prep_upon(places-19, appearance-24)
amod(language-27, refined-26)
prep_upon(places-19, language-27)
conj_and(appearance-24, language-27)
amod(hobbies-31, leisurely-30)
prep_upon(places-19, hobbies-31)
conj_and(appearance-24, hobbies-31)

(ROOT
  (S
    (PP (IN In)
      (NP (NN filmmaking)))
    (, ,)
    (NP
      (NP (NNP Dubbing))
      (CC or)
      (NP (NN looping)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (S
            (VP (VBG recording)
              (CC or)
              (VBG replacing)
              (NP
                (NP (NNS voices))
                (PP (IN for)
                  (NP (DT a) (NN motion) (NN picture)))))))))
    (. .)))

prep_in(process-9, filmmaking-2)
nsubj(process-9, Dubbing-4)
conj_or(Dubbing-4, looping-6)
nsubj(process-9, looping-6)
cop(process-9, is-7)
det(process-9, the-8)
root(ROOT-0, process-9)
prepc_of(process-9, recording-11)
prepc_of(process-9, replacing-13)
conj_or(recording-11, replacing-13)
dobj(recording-11, voices-14)
det(picture-18, a-16)
nn(picture-18, motion-17)
prep_for(voices-14, picture-18)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNP Dryope))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN daughter))
        (PP
          (PP (IN of)
            (NP
              (NP (NNP Dryops))
              (PRN (-LRB- -LRB-)
                (NP (JJ '') (NN oak-man))
                ('' '') (-RRB- -RRB-))))
          (CC or)
          (PP (IN of)
            (NP
              (NP (NNP Eurytus))
              (PRN (-LRB- -LRB-)
                (CC and)
                (ADVP (RB hence))
                (NP
                  (NP (NN half-sister))
                  (PP (TO to)
                    (NP (NNP Iole))))
                (-RRB- -RRB-)))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(daughter-8, mythology-3)
nsubj(daughter-8, Dryope-5)
cop(daughter-8, was-6)
det(daughter-8, the-7)
root(ROOT-0, daughter-8)
prep_of(daughter-8, Dryops-10)
dep(Dryops-10, oak-man-13)
prep_of(daughter-8, Eurytus-18)
conj_or(Dryops-10, Eurytus-18)
dep(half-sister-22, and-20)
dep(half-sister-22, hence-21)
dep(Eurytus-18, half-sister-22)
prep_to(half-sister-22, Iole-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN general)))
    (, ,)
    (NP
      (NP (NNP Discrimination))
      (, ,)
      (PP (IN in)
        (NP (DT a) (JJ non-legal) (NN sense)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN discernment))
        (PP (IN of)
          (NP (NNS qualities)
            (CC and)
            (NN recognition)))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS differences))
            (PP (IN between)
              (NP (NNS things)))))))
    (. .)))

prep_in(discernment-13, general-2)
nsubj(discernment-13, Discrimination-4)
det(sense-9, a-7)
amod(sense-9, non-legal-8)
prep_in(Discrimination-4, sense-9)
cop(discernment-13, is-11)
det(discernment-13, the-12)
root(ROOT-0, discernment-13)
prep_of(discernment-13, qualities-15)
prep_of(discernment-13, recognition-17)
conj_and(qualities-15, recognition-17)
det(differences-20, the-19)
prep_of(discernment-13, differences-20)
prep_between(differences-20, things-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science) (NN theory)))
    (, ,)
    (NP (DT a)
      (NP
        (NP (NNP Deque))
        (-LRB- -LRB-)
        (NP
          (NP (JJ short))
          (PP (IN for)
            (NP (JJ double-ended) (NN queue))))
        (: -))
      (NN Deque))
    (VP (VBZ is)
      (ADVP (RB usually))
      (NP (JJ pronounced) (NN deck)))
    (. .)))

nn(theory-4, computer-2)
nn(theory-4, science-3)
prep_in(deck-18, theory-4)
det(Deque-14, a-6)
nn(Deque-14, Deque-7)
dep(Deque-7, short-9)
amod(queue-12, double-ended-11)
prep_for(short-9, queue-12)
nsubj(deck-18, Deque-14)
cop(deck-18, is-15)
advmod(deck-18, usually-16)
amod(deck-18, pronounced-17)
root(ROOT-0, deck-18)

(ROOT
  (SINV
    (S
      (VP (VBZ is)
        (NP (DT an) (JJ abstract) (NN list) (NN type) (NN data) (NN structure))))
    (, ,)
    (ADVP (RB also))
    (VP (VBD called))
    (NP
      (NP (DT a) (JJ head-tail) (JJ linked) (NN list))
      (, ,)
      (SBAR
        (WHPP (IN for)
          (WHNP (WDT which)))
        (S
          (NP (NNS elements))
          (VP (MD can)
            (VP (VB be)
              (VP
                (VP (VBN added)
                  (S
                    (VP (TO to))))
                (CC or)
                (VP (VBN removed)
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN front))
                      (PRN (-LRB- -LRB-)
                        (NP (NN head))
                        (-RRB- -RRB-))
                      (CC or)
                      (NP (NN back))
                      (PRN (-LRB- -LRB-)
                        (NP (NN tail))
                        (-RRB- -RRB-)))))))))))
    (. .)))

cop(structure-7, is-1)
det(structure-7, an-2)
amod(structure-7, abstract-3)
nn(structure-7, list-4)
nn(structure-7, type-5)
nn(structure-7, data-6)
ccomp(called-10, structure-7)
advmod(called-10, also-9)
root(ROOT-0, called-10)
det(list-14, a-11)
amod(list-14, head-tail-12)
amod(list-14, linked-13)
nsubj(called-10, list-14)
rel(added-21, which-17)
nsubjpass(added-21, elements-18)
nsubjpass(removed-24, elements-18)
aux(added-21, can-19)
auxpass(added-21, be-20)
rcmod(list-14, added-21)
xcomp(added-21, to-22)
rcmod(list-14, removed-24)
conj_or(added-21, removed-24)
det(front-27, the-26)
prep_from(removed-24, front-27)
appos(front-27, head-29)
prep_from(removed-24, back-32)
conj_or(front-27, back-32)
appos(front-27, tail-34)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Diatessaron))
      (PRN (-LRB- -LRB-)
        (FRAG
          (X
            (X
              (ADVP (RB <LST>))
              (NP (SYM c)))
            (NP (NN </LST>) (CD 150)))
          (: -)
          (NP (CD 160)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT the)
        (ADJP (RBS most) (JJ prominent))
        (NNP Gospel) (NN harmony)))
    (. .)))

det(Diatessaron-2, The-1)
nsubj(harmony-16, Diatessaron-2)
dep(c-5, <LST>-4)
dep(</LST>-6, c-5)
dep(160-9, </LST>-6)
num(</LST>-6, 150-7)
dep(Diatessaron-2, 160-9)
cop(harmony-16, is-11)
det(harmony-16, the-12)
advmod(prominent-14, most-13)
amod(harmony-16, prominent-14)
nn(harmony-16, Gospel-15)
root(ROOT-0, harmony-16)

(ROOT
  (S
    (NP
      (NP (NNP Digital) (NNP Access) (NNP Signaling) (NNP System) (CD 1))
      (PRN (-LRB- -LRB-)
        (NP (NNP DASS1))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN protocol))
        (VP (VBN defined)
          (PP (IN by)
            (NP
              (NP (NNP British) (NNP Telecom))
              (PP (IN for)
                (NP (JJ digital) (NNS links)))))
          (S
            (VP (TO to)
              (VP (VB PSTN)
                (PP (VBN based)
                  (PP (IN on)
                    (NP (NNP ISDN))))))))))
    (. .)))

nn(System-4, Digital-1)
nn(System-4, Access-2)
nn(System-4, Signaling-3)
nsubj(protocol-11, System-4)
num(System-4, 1-5)
abbrev(System-4, DASS1-7)
cop(protocol-11, is-9)
det(protocol-11, a-10)
root(ROOT-0, protocol-11)
xsubj(PSTN-20, protocol-11)
partmod(protocol-11, defined-12)
nn(Telecom-15, British-14)
agent(defined-12, Telecom-15)
amod(links-18, digital-17)
prep_for(Telecom-15, links-18)
aux(PSTN-20, to-19)
xcomp(defined-12, PSTN-20)
prepc_based_on(PSTN-20, on-22)
pobj(PSTN-20, ISDN-23)

(ROOT
  (S
    (NP (NNP DASS2))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ obsolescent) (NN protocol))
        (VP (VBN defined)
          (PP (IN by)
            (NP
              (NP (NNP British) (NNP Telecom))
              (PP (IN for)
                (NP (JJ digital) (NNS links)))))
          (S
            (VP (TO to)
              (VP (VB PSTN)
                (PP (VBN based)
                  (PP (IN on)
                    (NP (NNP ISDN))))))))))
    (. .)))

nsubj(protocol-5, DASS2-1)
cop(protocol-5, is-2)
det(protocol-5, an-3)
amod(protocol-5, obsolescent-4)
root(ROOT-0, protocol-5)
xsubj(PSTN-14, protocol-5)
partmod(protocol-5, defined-6)
nn(Telecom-9, British-8)
agent(defined-6, Telecom-9)
amod(links-12, digital-11)
prep_for(Telecom-9, links-12)
aux(PSTN-14, to-13)
xcomp(defined-6, PSTN-14)
prepc_based_on(PSTN-14, on-16)
pobj(PSTN-14, ISDN-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Dagger))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (NNP Vulgar) (NNP Latin))
            (: :)
            (NP (`` `) (NN daca) ('' '))
            (: -)
            (NP (DT a) (JJ Dacian) (NN knife))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB typically) (JJ double-edged))
          (NN blade))
        (VP (VBN used)
          (PP (IN for)
            (S
              (VP (VBG stabbing)
                (CC or)
                (VBG thrusting)))))))
    (. .)))

det(Dagger-2, A-1)
nsubj(blade-20, Dagger-2)
dep(Dagger-2, from-4)
nn(Latin-6, Vulgar-5)
pobj(from-4, Latin-6)
dep(Latin-6, daca-9)
det(knife-14, a-12)
amod(knife-14, Dacian-13)
dep(Latin-6, knife-14)
cop(blade-20, is-16)
det(blade-20, a-17)
advmod(double-edged-19, typically-18)
amod(blade-20, double-edged-19)
root(ROOT-0, blade-20)
partmod(blade-20, used-21)
prepc_for(used-21, stabbing-23)
prepc_for(used-21, thrusting-25)
conj_or(stabbing-23, thrusting-25)

(ROOT
  (S
    (NP
      (NP (NNP Dominion))
      (, ,)
      (VP
        (VP
          (ADVP (RB often))
          (VBN Dominion))
        (, ,)
        (CC and)
        (VP (VBN referred)
          (S
            (VP (TO to)
              (VP
                (PP (IN in)
                  (NP (DT the) (JJ monarchs) (NN style)))
                (PP (IN as)
                  (NP (DT the) (NNP British) (NNPS Dominions))))))
          (PP (IN beyond)
            (NP (DT the) (NNS Seas)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB particularly))
            (VP (VBD referred)
              (PP (TO to)
                (NP
                  (NP (DT an)
                    (ADJP (JJ autonomous))
                    (NN polity))
                  (PP (IN under)
                    (NP (JJ sovereign) (NN authority)))))
              (PP (IN within)
                (NP (DT the) (NNP British) (NNP Empire)
                  (CC and)
                  (NNP British) (NNP Commonwealth)))
              (PP (IN from)
                (NP (DT the) (JJ late) (JJ 19th) (NN century))))))))
    (. .)))

xsubj(in-9, Dominion-1)
nsubj(term-23, Dominion-1)
advmod(Dominion-4, often-3)
dep(Dominion-1, Dominion-4)
dep(Dominion-1, referred-7)
conj_and(Dominion-4, referred-7)
aux(in-9, to-8)
xcomp(referred-7, in-9)
det(style-12, the-10)
amod(style-12, monarchs-11)
pobj(in-9, style-12)
det(Dominions-16, the-14)
nn(Dominions-16, British-15)
prep_as(in-9, Dominions-16)
det(Seas-19, the-18)
prep_beyond(referred-7, Seas-19)
cop(term-23, is-21)
det(term-23, a-22)
root(ROOT-0, term-23)
nsubj(referred-26, term-23)
advmod(referred-26, particularly-25)
rcmod(term-23, referred-26)
det(polity-30, an-28)
amod(polity-30, autonomous-29)
prep_to(referred-26, polity-30)
amod(authority-33, sovereign-32)
prep_under(polity-30, authority-33)
det(Empire-37, the-35)
nn(Empire-37, British-36)
prep_within(referred-26, Empire-37)
nn(Commonwealth-40, British-39)
prep_within(referred-26, Commonwealth-40)
conj_and(Empire-37, Commonwealth-40)
det(century-45, the-42)
amod(century-45, late-43)
amod(century-45, 19th-44)
prep_from(referred-26, century-45)

(ROOT
  (S
    (NP (DT A) (NNP Dictatorship))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ autocratic) (NN form))
        (PP (IN of)
          (NP (NN government)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (NN government))
            (VP (VBZ is)
              (VP (VBN ruled)
                (PP (IN by)
                  (NP (DT a) (NN dictator)))))))))
    (. .)))

det(Dictatorship-2, A-1)
nsubj(form-6, Dictatorship-2)
cop(form-6, is-3)
det(form-6, an-4)
amod(form-6, autocratic-5)
root(ROOT-0, form-6)
prep_of(form-6, government-8)
rel(ruled-14, which-10)
det(government-12, the-11)
nsubjpass(ruled-14, government-12)
auxpass(ruled-14, is-13)
rcmod(form-6, ruled-14)
det(dictator-17, a-16)
agent(ruled-14, dictator-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP
      (NP (NNP Diaeresis))
      (, ,)
      (CC or)
      (NP (NNS dieresis))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN pronunciation))
        (PP (IN of)
          (NP
            (NP (CD two) (JJ adjacent) (NNS vowels))
            (PP
              (PP (IN in)
                (NP (CD two) (JJ separate) (NNS syllables)))
              (CONJP (RB rather) (IN than))
              (PP (IN as)
                (NP (DT a) (NN diphthong))))))))
    (. .)))

prep_in(pronunciation-11, linguistics-2)
nsubj(pronunciation-11, Diaeresis-4)
conj_or(Diaeresis-4, dieresis-7)
nsubj(pronunciation-11, dieresis-7)
cop(pronunciation-11, is-9)
det(pronunciation-11, the-10)
root(ROOT-0, pronunciation-11)
num(vowels-15, two-13)
amod(vowels-15, adjacent-14)
prep_of(pronunciation-11, vowels-15)
prep_of(pronunciation-11, vowels-15')
conj_negcc(vowels-15, vowels-15')
num(syllables-19, two-17)
amod(syllables-19, separate-18)
prep_in(vowels-15, syllables-19)
det(diphthong-24, a-23)
prep_as(vowels-15', diphthong-24)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Derry)
          (CC or)
          (NNP Londonderry))
        (PRN (-LRB- -LRB-)
          (NP (JJ Irish) (NN place) (NN name))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB often))
        (VBN called)
        (NP (DT the) (NNP Maiden) (NNP City)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN city))
        (PP (IN in)
          (NP (NNP Northern) (NNP Ireland)))))
    (. .)))

nsubj(city-18, Derry-1)
conj_or(Derry-1, Londonderry-3)
nsubj(city-18, Londonderry-3)
amod(name-7, Irish-5)
nn(name-7, place-6)
appos(Derry-1, name-7)
advmod(called-11, often-10)
partmod(Derry-1, called-11)
det(City-14, the-12)
nn(City-14, Maiden-13)
dobj(called-11, City-14)
cop(city-18, is-16)
det(city-18, a-17)
root(ROOT-0, city-18)
nn(Ireland-21, Northern-20)
prep_in(city-18, Ireland-21)

(ROOT
  (S
    (NP (DT A) (NNP Diuretic))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN drug))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ elevates)
              (NP
                (NP (DT the) (NN rate))
                (PP (IN of)
                  (NP
                    (NP (NN urination))
                    (PRN (-LRB- -LRB-)
                      (NP (NNS diuresis))
                      (-RRB- -RRB-))))))))))
    (. .)))

det(Diuretic-2, A-1)
nsubj(drug-5, Diuretic-2)
cop(drug-5, is-3)
det(drug-5, any-4)
root(ROOT-0, drug-5)
nsubj(elevates-7, drug-5)
rcmod(drug-5, elevates-7)
det(rate-9, the-8)
dobj(elevates-7, rate-9)
prep_of(rate-9, urination-11)
appos(urination-11, diuresis-13)

(ROOT
  (S
    (NP (DT A) (NNP Dhimmi))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ non-Muslim) (NN subject))
        (PP (IN of)
          (NP
            (NP (DT a) (NN state))
            (VP (VBN governed)
              (PP (IN in)
                (NP (NN accordance)))
              (PP (IN with)
                (NP (NN sharia) (NN law))))))))
    (. .)))

det(Dhimmi-2, A-1)
nsubj(subject-6, Dhimmi-2)
cop(subject-6, is-3)
det(subject-6, a-4)
amod(subject-6, non-Muslim-5)
root(ROOT-0, subject-6)
det(state-9, a-8)
prep_of(subject-6, state-9)
partmod(state-9, governed-10)
prep_in(governed-10, accordance-12)
nn(law-15, sharia-14)
prep_with(governed-10, law-15)

(ROOT
  (S
    (NP (DT A) (NNP Druid))
    (VP
      (VP (VBD was)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP (DT the) (NN priestly)))))
      (CC and)
      (VP (VBD learned)
        (NP (NN class))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ ancient) (JJ Celtic) (NNS societies))
            (PP (IN of)
              (NP (NNP Western) (NNP Europe) (, ,) (NNP Britain)
                (CC and)
                (NNP Ireland)))))))
    (. .)))

det(Druid-2, A-1)
nsubj(member-5, Druid-2)
nsubj(learned-10, Druid-2)
cop(member-5, was-3)
det(member-5, a-4)
root(ROOT-0, member-5)
det(priestly-8, the-7)
prep_of(member-5, priestly-8)
conj_and(member-5, learned-10)
dobj(learned-10, class-11)
det(societies-16, the-13)
amod(societies-16, ancient-14)
amod(societies-16, Celtic-15)
prep_in(learned-10, societies-16)
nn(Europe-19, Western-18)
prep_of(societies-16, Europe-19)
prep_of(societies-16, Britain-21)
conj_and(Europe-19, Britain-21)
prep_of(societies-16, Ireland-23)
conj_and(Europe-19, Ireland-23)

(ROOT
  (NP
    (NP (NNP A))
    (NP (NNP Dalek) (-LRB- -LRB-) (NNP Dalek))
    (. .)))

root(ROOT-0, A-1)
nn(Dalek-4, Dalek-2)
dep(A-1, Dalek-4)

(ROOT
  (S
    (S
      (VP (VBG ogg) ('' '')
        (NP (NN dah-leck))
        ('' '')))
    (, ,)
    (NP
      (NP (NNP Ã))
      (PRN (: --)
        (ADVP (RB Â))
        (NP
          (NP (NNP √) (NNP dÃ) (NNP ≈) (NNP ÂŒÃ))
          (: --)
          (NP (NNP Â) (NNP ∆) (NNP lÃ) (NNP ⁄) (NNP Âµk)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN member))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ fictional) (JJ extraterrestrial) (NN race))
            (PP (IN of)
              (NP
                (NP (NNS mutants))
                (PP (IN from)
                  (NP
                    (NP (DT the) (JJ British) (NN science) (NN fiction) (NN television) (NN series) (NN Doctor))
                    (SBAR
                      (WHNP (WP Who)))))))))))
    (. .)))

partmod(member-22, ogg-1)
dobj(ogg-1, dah-leck-3)
nsubj(member-22, Ã-6)
dep(ÂŒÃ-12, Â-8)
nn(ÂŒÃ-12, √-9)
nn(ÂŒÃ-12, dÃ-10)
nn(ÂŒÃ-12, ≈-11)
dep(Ã-6, ÂŒÃ-12)
nn(Âµk-18, Â-14)
nn(Âµk-18, ∆-15)
nn(Âµk-18, lÃ-16)
nn(Âµk-18, ⁄-17)
dep(ÂŒÃ-12, Âµk-18)
cop(member-22, is-20)
det(member-22, a-21)
root(ROOT-0, member-22)
det(race-27, a-24)
amod(race-27, fictional-25)
amod(race-27, extraterrestrial-26)
prep_of(member-22, race-27)
prep_of(race-27, mutants-29)
det(Doctor-37, the-31)
amod(Doctor-37, British-32)
nn(Doctor-37, science-33)
nn(Doctor-37, fiction-34)
nn(Doctor-37, television-35)
nn(Doctor-37, series-36)
prep_from(mutants-29, Doctor-37)
rcmod(Doctor-37, Who-38)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (NNP Evolution))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (NP
            (NP (NN change))
            (PP (IN in)
              (NP
                (NP (DT the) (VBN inherited) (NNS traits))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN population))
                    (PP (IN of)
                      (NP
                        (NP (NNS organisms))
                        (PP (IN from)
                          (NP
                            (NP (CD one) (NN generation))
                            (PP (TO to)
                              (NP (DT the) (JJ next)))))))))))))))
    (. .)))

prep_in(process-7, biology-2)
nsubj(process-7, Evolution-4)
cop(process-7, is-5)
det(process-7, the-6)
root(ROOT-0, process-7)
prep_of(process-7, change-9)
det(traits-13, the-11)
amod(traits-13, inherited-12)
prep_in(change-9, traits-13)
det(population-16, a-15)
prep_of(traits-13, population-16)
prep_of(population-16, organisms-18)
num(generation-21, one-20)
prep_from(organisms-18, generation-21)
det(next-24, the-23)
prep_to(generation-21, next-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Education))
    (VP (VBZ refers)
      (PP (TO to)
        (NP (PDT all) (DT the) (NNS experiences)
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (NNS children))
              (VP (MD can)
                (VP (VB learn)
                  (NP (NN something)))))))))
    (. .)))

nsubj(refers-2, Education-1)
root(ROOT-0, refers-2)
predet(experiences-6, all-4)
det(experiences-6, the-5)
prep_to(refers-2, experiences-6)
rel(learn-11, which-8)
nsubj(learn-11, children-9)
aux(learn-11, can-10)
ccomp(experiences-6, learn-11)
dobj(learn-11, something-12)

(ROOT
  (S
    (NP (DT An) (NNP Encyclopedia))
    (PRN (-LRB- -LRB-)
      (CC or)
      (S
        (VP (VBG encyclopÃ)
          (NP (NNP ∞) (NNP Âœdia))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ comprehensive) (VBN written) (NN compendium))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contains)
              (NP (NN information))
              (PP (IN on)
                (NP
                  (NP
                    (NP (RB either) (DT all) (NNS branches))
                    (PP (IN of)
                      (NP (NN knowledge))))
                  (CC or)
                  (NP
                    (NP (DT a) (JJ particular) (NN branch))
                    (PP (IN of)
                      (NP (NN knowledge)))))))))))
    (. .)))

det(Encyclopedia-2, An-1)
nsubj(compendium-13, Encyclopedia-2)
dep(encyclopÃ-5, or-4)
parataxis(compendium-13, encyclopÃ-5)
nn(Âœdia-7, ∞-6)
dobj(encyclopÃ-5, Âœdia-7)
cop(compendium-13, is-9)
det(compendium-13, a-10)
amod(compendium-13, comprehensive-11)
amod(compendium-13, written-12)
root(ROOT-0, compendium-13)
nsubj(contains-15, compendium-13)
rcmod(compendium-13, contains-15)
dobj(contains-15, information-16)
advmod(branches-20, either-18)
det(branches-20, all-19)
prep_on(contains-15, branches-20)
prep_of(branches-20, knowledge-22)
det(branch-26, a-24)
amod(branch-26, particular-25)
prep_on(contains-15, branch-26)
conj_or(branches-20, branch-26)
prep_of(branch-26, knowledge-28)

(ROOT
  (S
    (NP (NNP Entertainment))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN activity))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (NNS people))
                (NP (NN pleasure)
                  (CC or)
                  (NN relaxation))))))))
    (. .)))

nsubj(activity-4, Entertainment-1)
cop(activity-4, is-2)
det(activity-4, an-3)
root(ROOT-0, activity-4)
xsubj(give-7, activity-4)
partmod(activity-4, designed-5)
aux(give-7, to-6)
xcomp(designed-5, give-7)
iobj(give-7, people-8)
dobj(give-7, pleasure-9)
dobj(give-7, relaxation-11)
conj_or(pleasure-9, relaxation-11)

(ROOT
  (S
    (NP (DT The) (NNP Ecliptic))
    (VP (VBZ is)
      (NP (DT the) (JJ apparent) (NN path))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Sun) (NNS traces))
          (VP (VBD <PRT>)
            (PRT (RP out))
            (NP
              (NP (NNP </PRT>))
              (PP (IN in)
                (NP (DT the) (NN sky))))
            (PP (IN during)
              (NP (DT the) (NN year)))))))
    (. .)))

det(Ecliptic-2, The-1)
nsubj(path-6, Ecliptic-2)
cop(path-6, is-3)
det(path-6, the-4)
amod(path-6, apparent-5)
root(ROOT-0, path-6)
complm(<PRT>-11, that-7)
det(traces-10, the-8)
nn(traces-10, Sun-9)
nsubj(<PRT>-11, traces-10)
ccomp(path-6, <PRT>-11)
prt(<PRT>-11, out-12)
dobj(<PRT>-11, </PRT>-13)
det(sky-16, the-15)
prep_in(</PRT>-13, sky-16)
det(year-19, the-18)
prep_during(<PRT>-11, year-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Equation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mathematical) (NN statement))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NNS symbols))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (CD two) (NNS things))
                (VP (VBP are)
                  (NP
                    (NP (RB exactly) (DT the) (JJ same))
                    (PRN (-LRB- -LRB-)
                      (CC or)
                      (ADJP (JJ equivalent))
                      (-RRB- -RRB-))))))))))
    (. .)))

det(Equation-2, An-1)
nsubj(statement-6, Equation-2)
cop(statement-6, is-3)
det(statement-6, a-4)
amod(statement-6, mathematical-5)
root(ROOT-0, statement-6)
prep_in(statement-6, symbols-9)
dep(same-17, that-11)
num(things-13, two-12)
nsubj(same-17, things-13)
cop(same-17, are-14)
advmod(same-17, exactly-15)
det(same-17, the-16)
dep(symbols-9, same-17)
dep(equivalent-20, or-19)
dep(same-17, equivalent-20)

(ROOT
  (S
    (NP (NNP Erotica))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ modern) (NN word))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT the) (NN portrayal))
                  (PP (IN of)
                    (NP (DT the) (JJ human) (NN anatomy)
                      (CC and)
                      (NN sexuality))))
                (PP (IN with)
                  (NP (JJ high-art) (NNS aspirations)))
                (, ,)
                (S
                  (VP (VBG differentiating)
                    (NP (JJ such) (NN work))
                    (PP (IN from)
                      (NP (JJ commercial) (NN pornography)))))))))))
    (. .)))

nsubj(word-5, Erotica-1)
cop(word-5, is-2)
det(word-5, a-3)
amod(word-5, modern-4)
root(ROOT-0, word-5)
xsubj(describe-8, word-5)
partmod(word-5, used-6)
aux(describe-8, to-7)
xcomp(used-6, describe-8)
det(portrayal-10, the-9)
dobj(describe-8, portrayal-10)
det(anatomy-14, the-12)
amod(anatomy-14, human-13)
prep_of(portrayal-10, anatomy-14)
prep_of(portrayal-10, sexuality-16)
conj_and(anatomy-14, sexuality-16)
amod(aspirations-19, high-art-18)
prep_with(describe-8, aspirations-19)
partmod(describe-8, differentiating-21)
xcomp(describe-8, differentiating-21)
amod(work-23, such-22)
dobj(differentiating-21, work-23)
amod(pornography-26, commercial-25)
prep_from(differentiating-21, pornography-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNPS Ericales))
    (VP (VBP are)
      (NP
        (NP (DT a)
          (ADJP (JJ large)
            (CC and)
            (JJ diverse))
          (NN order))
        (PP (IN of)
          (NP (NNS dicotyledons))))
      (, ,)
      (PP (VBG including)
        (PP (IN for)
          (NP
            (NP (NN example) (NN tea))
            (, ,)
            (NP (NN persimmon))
            (, ,)
            (NP (NN blueberry))
            (, ,)
            (NP (NNP Brazil) (NNP nut))
            (, ,)
            (CC and)
            (NP (NN azalea))))))
    (. .)))

det(Ericales-2, The-1)
nsubj(order-8, Ericales-2)
cop(order-8, are-3)
det(order-8, a-4)
amod(order-8, large-5)
conj_and(large-5, diverse-7)
amod(order-8, diverse-7)
root(ROOT-0, order-8)
prep_of(order-8, dicotyledons-10)
prep(order-8, including-12)
pcomp(including-12, for-13)
nn(tea-15, example-14)
prep_for(including-12, tea-15)
prep_for(including-12, persimmon-17)
conj_and(tea-15, persimmon-17)
prep_for(including-12, blueberry-19)
conj_and(tea-15, blueberry-19)
nn(nut-22, Brazil-21)
prep_for(including-12, nut-22)
conj_and(tea-15, nut-22)
prep_for(including-12, azalea-25)
conj_and(tea-15, azalea-25)

(ROOT
  (S
    (NP (DT An) (NN Election))
    (VP (VBZ is)
      (NP
        (NP (JJ decision-making) (NN process))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (DT a) (NN population))
            (VP (VBZ chooses)
              (NP (DT an) (NN individual)
                (S
                  (VP (TO to)
                    (VP (VB hold)
                      (NP (JJ formal) (NN office)))))))))))
    (. .)))

det(Election-2, An-1)
nsubj(process-5, Election-2)
cop(process-5, is-3)
amod(process-5, decision-making-4)
root(ROOT-0, process-5)
rel(chooses-10, which-7)
det(population-9, a-8)
nsubj(chooses-10, population-9)
rcmod(process-5, chooses-10)
det(individual-12, an-11)
dobj(chooses-10, individual-12)
aux(hold-14, to-13)
infmod(individual-12, hold-14)
amod(office-16, formal-15)
dobj(hold-14, office-16)

(ROOT
  (S
    (NP (NNP Externalization))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB put)
            (NP
              (NP (NN something) (NN outside))
              (PP (IN of)
                (NP (PRP$ its) (JJ original) (NNS borders))))
            (, ,)
            (S
              (ADVP (RB especially))
              (VP (TO to)
                (VP (VB put)
                  (NP
                    (NP (DT a) (JJ human) (NN function) (NN outside))
                    (PP (IN of)
                      (NP (DT the) (JJ human) (NN body)))))))))))
    (. .)))

nsubj(means-2, Externalization-1)
xsubj(put-4, Externalization-1)
root(ROOT-0, means-2)
aux(put-4, to-3)
xcomp(means-2, put-4)
nn(outside-6, something-5)
dobj(put-4, outside-6)
poss(borders-10, its-8)
amod(borders-10, original-9)
prep_of(outside-6, borders-10)
advmod(put-14, especially-12)
aux(put-14, to-13)
xcomp(put-4, put-14)
det(outside-18, a-15)
amod(outside-18, human-16)
nn(outside-18, function-17)
dobj(put-14, outside-18)
det(body-22, the-20)
amod(body-22, human-21)
prep_of(outside-18, body-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Euro))
      (PRN (-LRB- -LRB-)
        (FRAG
          (FRAG
            (NP
              (NP (NN currency))
              (NP (NN sign)))
            (: :)
            (NP
              (NP (NNP Ã) (NNS cents) (NNP Â) (NNP ≠) (NNP Â) (NNP ¬))
              (: ;)
              (NP (NN currency) (NN code))))
          (: :)
          (FRAG (RB EUR)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ official) (NN currency))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP European) (NNP Union))
            (PRN (-LRB- -LRB-)
              (NP (NNP EU))
              (-RRB- -RRB-))))))
    (. .)))

det(Euro-2, The-1)
nsubj(currency-22, Euro-2)
dep(Euro-2, currency-4)
dep(currency-4, sign-5)
nn(¬-12, Ã-7)
nn(¬-12, cents-8)
nn(¬-12, Â-9)
nn(¬-12, ≠-10)
nn(¬-12, Â-11)
dep(currency-4, ¬-12)
nn(code-15, currency-14)
dep(¬-12, code-15)
dep(currency-4, EUR-17)
cop(currency-22, is-19)
det(currency-22, the-20)
amod(currency-22, official-21)
root(ROOT-0, currency-22)
det(Union-26, the-24)
nn(Union-26, European-25)
prep_of(currency-22, Union-26)
abbrev(Union-26, EU-28)

(ROOT
  (S
    (NP (DT The) (NNP Electron))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fundamental) (JJ subatomic) (NN particle))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ carries)
              (NP (DT a) (JJ negative) (JJ electric) (NN charge)))))))
    (. .)))

det(Electron-2, The-1)
nsubj(particle-7, Electron-2)
cop(particle-7, is-3)
det(particle-7, a-4)
amod(particle-7, fundamental-5)
amod(particle-7, subatomic-6)
root(ROOT-0, particle-7)
nsubj(carries-9, particle-7)
rcmod(particle-7, carries-9)
det(charge-13, a-10)
amod(charge-13, negative-11)
amod(charge-13, electric-12)
dobj(carries-9, charge-13)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN philosophy))
        (PP (IN of)
          (NP (NN mind)))))
    (, ,)
    (NP
      (NP (NNP Epiphenomenalism))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as) (`` `)
          (NP (NNP Type-E) (NNP Dualism))
          ('' '))))
    (VP (VBZ is)
      (NP (DT a) (NN view))
      (PP (VBG according)
        (PP (TO to)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP
                (NP (DT some))
                (CC or)
                (NP (DT all) (JJ mental) (NNS states)))
              (VP (VBP are)
                (NP
                  (NP
                    (NP (JJ mere) (NN epiphenomena))
                    (PRN (-LRB- -LRB-)
                      (NP (JJ side-effects)
                        (CC or)
                        (JJ by-products))
                      (-RRB- -RRB-)))
                  (PP (IN of)
                    (NP
                      (NP (JJ physical) (NNS states))
                      (PP (IN of)
                        (NP (DT the) (NN world))))))))))))
    (. .)))

prep_in(view-17, philosophy-2)
prep_of(philosophy-2, mind-4)
nsubj(view-17, Epiphenomenalism-6)
advmod(known-9, also-8)
partmod(Epiphenomenalism-6, known-9)
nn(Dualism-13, Type-E-12)
prep_as(known-9, Dualism-13)
cop(view-17, is-15)
det(view-17, a-16)
root(ROOT-0, view-17)
prepc_according_to(view-17, to-19)
dobj(epiphenomena-28, which-20)
nsubj(epiphenomena-28, some-21)
det(states-25, all-23)
amod(states-25, mental-24)
conj_or(some-21, states-25)
nsubj(epiphenomena-28, states-25)
cop(epiphenomena-28, are-26)
amod(epiphenomena-28, mere-27)
pcomp(view-17, epiphenomena-28)
dep(epiphenomena-28, side-effects-30)
dep(epiphenomena-28, by-products-32)
conj_or(side-effects-30, by-products-32)
amod(states-36, physical-35)
prep_of(epiphenomena-28, states-36)
det(world-39, the-38)
prep_of(states-36, world-39)

(ROOT
  (S
    (NP (DT The) (NNP Endometrium))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ inner) (NN membrane))
        (PP (IN of)
          (NP (DT the) (JJ mammalian) (NN uterus)))))
    (. .)))

det(Endometrium-2, The-1)
nsubj(membrane-6, Endometrium-2)
cop(membrane-6, is-3)
det(membrane-6, the-4)
amod(membrane-6, inner-5)
root(ROOT-0, membrane-6)
det(uterus-10, the-8)
amod(uterus-10, mammalian-9)
prep_of(membrane-6, uterus-10)

(ROOT
  (S
    (NP (DT A) (NNP Euphemism))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN substitution))
        (PP (IN of)
          (NP
            (NP (DT an)
              (ADJP
                (ADJP (JJ agreeable))
                (CC or)
                (ADJP (RBR less) (JJ offensive)))
              (NN expression))
            (PP (IN in)
              (NP
                (NP (NN place))
                (PP (IN of)
                  (NP (CD one)))))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD may)
              (VP (VB offend)
                (CC or)
                (VB suggest)
                (NP
                  (NP (NN something))
                  (ADJP (JJ unpleasant)
                    (PP
                      (PP (TO to)
                        (NP (DT the) (NN listener)))
                      (: ;)
                      (CC or)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN case))
                          (PP (IN of)
                            (NP (NN doublespeak)))))))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (S
                          (NP (PRP it))
                          (ADJP (RBR less) (JJ troublesome)
                            (PP (IN for)
                              (NP (DT the) (NN speaker)))))))))))))))
    (. .)))

det(Euphemism-2, A-1)
nsubj(substitution-5, Euphemism-2)
cop(substitution-5, is-3)
det(substitution-5, the-4)
root(ROOT-0, substitution-5)
nsubj(offend-19, substitution-5)
nsubj(suggest-21, substitution-5)
det(expression-12, an-7)
amod(expression-12, agreeable-8)
advmod(offensive-11, less-10)
conj_or(agreeable-8, offensive-11)
amod(expression-12, offensive-11)
prep_of(substitution-5, expression-12)
prep_in_place_of(expression-12, one-16)
aux(offend-19, may-18)
rcmod(substitution-5, offend-19)
rcmod(substitution-5, suggest-21)
conj_or(offend-19, suggest-21)
dobj(offend-19, something-22)
amod(something-22, unpleasant-23)
amod(something-22, unpleasant-23')
conj_or(unpleasant-23, unpleasant-23')
det(listener-26, the-25)
prep_to(unpleasant-23, listener-26)
det(case-31, the-30)
prep_in(unpleasant-23', case-31)
prep_of(case-31, doublespeak-33)
aux(make-36, to-35)
infmod(something-22, make-36)
nsubj(troublesome-39, it-37)
advmod(troublesome-39, less-38)
xcomp(make-36, troublesome-39)
det(speaker-42, the-41)
prep_for(troublesome-39, speaker-42)

(ROOT
  (S
    (NP
      (NP (NNP Everything2))
      (, ,)
      (CC or)
      (NP
        (NP (NNP E2))
        (PP (IN for)
          (NP (JJ short))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ collaborative) (JJ Web-based) (NN community))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN database))
              (PP (IN of)
                (NP (JJ interlinked) (JJ user-submitted) (JJ written) (NN material))))))))
    (. .)))

nsubj(community-12, Everything2-1)
conj_or(Everything2-1, E2-4)
nsubj(community-12, E2-4)
prep_for(E2-4, short-6)
cop(community-12, is-8)
det(community-12, a-9)
amod(community-12, collaborative-10)
amod(community-12, Web-based-11)
root(ROOT-0, community-12)
partmod(community-12, consisting-13)
det(database-16, a-15)
prep_of(consisting-13, database-16)
amod(material-21, interlinked-18)
amod(material-21, user-submitted-19)
amod(material-21, written-20)
prep_of(database-16, material-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Ericaceae))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (NP (DT the) (JJ heath) (NN family)
            (CC or)
            (NNS ericaceous) (NNS plants)))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (RB mostly) (JJ lime-hating) (-LRB- -LRB-) (JJ calcifuge) (-RRB- -RRB-) (NNS plants))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP thrive)
              (PP (IN in)
                (NP (JJ acid) (NNS soils))))))))
    (. .)))

det(Ericaceae-2, The-1)
nsubj(plants-19, Ericaceae-2)
advmod(called-5, also-4)
dep(Ericaceae-2, called-5)
det(family-8, the-6)
amod(family-8, heath-7)
dobj(called-5, family-8)
nn(plants-11, ericaceous-10)
dobj(called-5, plants-11)
conj_or(family-8, plants-11)
cop(plants-19, are-13)
advmod(plants-19, mostly-14)
amod(plants-19, lime-hating-15)
amod(plants-19, calcifuge-17)
root(ROOT-0, plants-19)
nsubj(thrive-21, plants-19)
rcmod(plants-19, thrive-21)
amod(soils-24, acid-23)
prep_in(thrive-21, soils-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT an) (NNP Endomorphism))
    (VP (VBZ is)
      (NP (DT a) (NN morphism))
      (PRN (-LRB- -LRB-)
        (CC or)
        (VP (VBP homomorphism))
        (-RRB- -RRB-))
      (PP (IN from)
        (NP
          (NP (DT a) (JJ mathematical) (NN object))
          (PP (TO to)
            (NP (PRP itself))))))
    (. .)))

prep_in(morphism-8, mathematics-2)
det(Endomorphism-5, an-4)
nsubj(morphism-8, Endomorphism-5)
cop(morphism-8, is-6)
det(morphism-8, a-7)
root(ROOT-0, morphism-8)
dep(homomorphism-11, or-10)
dep(morphism-8, homomorphism-11)
det(object-16, a-14)
amod(object-16, mathematical-15)
prep_from(morphism-8, object-16)
prep_to(object-16, itself-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Electronvolt))
      (PRN (-LRB- -LRB-)
        (NP (NN symbol) (NN eV))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN energy)))))
    (. .)))

det(Electronvolt-2, The-1)
nsubj(unit-9, Electronvolt-2)
nn(eV-5, symbol-4)
appos(Electronvolt-2, eV-5)
cop(unit-9, is-7)
det(unit-9, a-8)
root(ROOT-0, unit-9)
prep_of(unit-9, energy-11)

(ROOT
  (S
    (NP (DT An) (NNP Extremophile))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN organism))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ thrives)
                (PRT (RP in)))
              (CC and)
              (VP (MD may)
                (ADVP (RB even))
                (VP (VB require)
                  (NP
                    (NP
                      (ADJP
                        (ADJP (JJ physically))
                        (CC or)
                        (ADJP (RB geochemically) (JJ extreme)))
                      (NNS conditions))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP are)
                          (ADJP (JJ detrimental)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN majority))
                                (PP (IN of)
                                  (NP (NN life))))))
                          (PP (IN on)
                            (NP (NNP Earth))))))))))))))
    (. .)))

det(Extremophile-2, An-1)
nsubj(organism-5, Extremophile-2)
cop(organism-5, is-3)
det(organism-5, an-4)
root(ROOT-0, organism-5)
nsubj(thrives-7, organism-5)
nsubj(require-12, organism-5)
rcmod(organism-5, thrives-7)
prt(thrives-7, in-8)
aux(require-12, may-10)
advmod(require-12, even-11)
rcmod(organism-5, require-12)
conj_and(thrives-7, require-12)
amod(conditions-17, physically-13)
advmod(extreme-16, geochemically-15)
conj_or(physically-13, extreme-16)
amod(conditions-17, extreme-16)
dobj(require-12, conditions-17)
nsubj(detrimental-20, conditions-17)
cop(detrimental-20, are-19)
rcmod(conditions-17, detrimental-20)
det(majority-23, the-22)
prep_to(detrimental-20, majority-23)
prep_of(majority-23, life-25)
prep_on(detrimental-20, Earth-27)

(ROOT
  (S
    (NP (DT An) (NNP Ecosystem))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ natural) (NN unit))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT all) (NNS plants) (, ,) (NNS animals)
                (CC and)
                (NNS micro-organisms))
              (PRN (-LRB- -LRB-)
                (NP (JJ biotic) (NNS factors))
                (-RRB- -RRB-))))
          (PP (IN in)
            (NP
              (NP (DT an) (NN area))
              (VP (VBG functioning)
                (ADVP (RB together))
                (PP (IN with)
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP
                        (NP (DT the)
                          (ADJP
                            (ADJP (JJ non-living) (NN physical))
                            (PRN (-LRB- -LRB-)
                              (ADJP (JJ abiotic))
                              (-RRB- -RRB-)))
                          (NNS factors))
                        (PP (IN of)
                          (NP (DT the) (NN environment)))))))))))))
    (. .)))

det(Ecosystem-2, An-1)
nsubj(unit-6, Ecosystem-2)
cop(unit-6, is-3)
det(unit-6, a-4)
amod(unit-6, natural-5)
root(ROOT-0, unit-6)
partmod(unit-6, consisting-7)
det(plants-10, all-9)
prep_of(consisting-7, plants-10)
prep_of(consisting-7, animals-12)
conj_and(plants-10, animals-12)
prep_of(consisting-7, micro-organisms-14)
conj_and(plants-10, micro-organisms-14)
amod(factors-17, biotic-16)
appos(plants-10, factors-17)
det(area-21, an-20)
prep_in(consisting-7, area-21)
partmod(area-21, functioning-22)
prep_together_with(functioning-22, all-25)
det(factors-33, the-27)
dep(physical-29, non-living-28)
amod(factors-33, physical-29)
dep(physical-29, abiotic-31)
prep_of(all-25, factors-33)
det(environment-36, the-35)
prep_of(factors-33, environment-36)

(ROOT
  (S
    (NP (DT An) (NNP Engine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mechanical) (NN device))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ produces)
              (NP
                (NP (DT some) (NN form))
                (PP (IN of)
                  (NP (NN output))))
              (PP (IN from)
                (NP (DT a) (VBN given) (NN input))))))))
    (. .)))

det(Engine-2, An-1)
nsubj(device-6, Engine-2)
cop(device-6, is-3)
det(device-6, a-4)
amod(device-6, mechanical-5)
root(ROOT-0, device-6)
nsubj(produces-8, device-6)
rcmod(device-6, produces-8)
det(form-10, some-9)
dobj(produces-8, form-10)
prep_of(form-10, output-12)
det(input-16, a-14)
amod(input-16, given-15)
prep_from(produces-8, input-16)

(ROOT
  (S
    (NP (NNP EV))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (JJ official) (NN name))
          (PP (IN of)
            (NP (NNP Estonia))))))
    (. .)))

nsubj(refers-2, EV-1)
root(ROOT-0, refers-2)
det(name-6, the-4)
amod(name-6, official-5)
prep_to(refers-2, name-6)
prep_of(name-6, Estonia-8)

(ROOT
  (S
    (NP (NNP EV))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN species))
          (PP (IN of)
            (NP (NNP pokÃ) (NNP ∞) (NNP Â) (NNP ©) (NN mon))))))
    (. .)))

nsubj(refers-2, EV-1)
root(ROOT-0, refers-2)
det(species-5, a-4)
prep_to(refers-2, species-5)
nn(mon-11, pokÃ-7)
nn(mon-11, ∞-8)
nn(mon-11, Â-9)
nn(mon-11, ©-10)
prep_of(species-5, mon-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Electronics))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN study))
        (PP (IN of)
          (NP
            (NP (DT the) (NN flow))
            (PP (IN of)
              (NP (NN charge))))))
      (PP (IN through)
        (NP
          (NP (JJ various) (NNS materials)
            (CC and)
            (NNS devices))
          (PP (JJ such) (IN as)
            (NP (NNS semiconductors) (, ,) (NNS resistors) (, ,) (NNS inductors) (, ,) (NNS capacitors) (, ,) (NNS nano-structures)
              (CC and)
              (NN vacuum) (NNS tubes))))))
    (. .)))

nsubj(study-4, Electronics-1)
cop(study-4, is-2)
det(study-4, the-3)
root(ROOT-0, study-4)
det(flow-7, the-6)
prep_of(study-4, flow-7)
prep_of(flow-7, charge-9)
amod(materials-12, various-11)
prep_through(study-4, materials-12)
prep_through(study-4, devices-14)
conj_and(materials-12, devices-14)
nn(nano-structures-25, semiconductors-17)
dep(nano-structures-25, resistors-19)
dep(nano-structures-25, inductors-21)
dep(nano-structures-25, capacitors-23)
prep_such_as(materials-12, nano-structures-25)
nn(tubes-28, vacuum-27)
prep_such_as(materials-12, tubes-28)
conj_and(nano-structures-25, tubes-28)

(ROOT
  (S
    (PP (IN In)
      (NP (NN medicine)))
    (NP (DT an) (NNP Ectopia))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN displacement)
          (CC or)
          (NN malposition))
        (PP (IN of)
          (NP
            (NP (DT an) (NN organ))
            (PP (IN of)
              (NP (DT the) (NN body)))))))
    (. .)))

prep_in(displacement-7, medicine-2)
det(Ectopia-4, an-3)
nsubj(displacement-7, Ectopia-4)
cop(displacement-7, is-5)
det(displacement-7, a-6)
root(ROOT-0, displacement-7)
conj_or(displacement-7, malposition-9)
det(organ-12, an-11)
prep_of(displacement-7, organ-12)
det(body-15, the-14)
prep_of(organ-12, body-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP
      (NP (DT the) (NNP Entscheidungsproblem))
      (PRN (-LRB- -LRB-)
        (ADJP (JJ German)
          (PP (IN for) (`` `)
            (NP (NN decision) (NN problem))
            ('' ')))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN challenge))
        (VP (VBN posed)
          (PP (IN by)
            (NP
              (NP (NNP David) (NNP Hilbert))
              (PP (IN in)
                (NP (CD 1928))))))))
    (. .)))

prep_in(challenge-16, mathematics-2)
det(Entscheidungsproblem-5, the-4)
nsubj(challenge-16, Entscheidungsproblem-5)
dep(Entscheidungsproblem-5, German-7)
nn(problem-11, decision-10)
prep_for(German-7, problem-11)
cop(challenge-16, is-14)
det(challenge-16, a-15)
root(ROOT-0, challenge-16)
partmod(challenge-16, posed-17)
nn(Hilbert-20, David-19)
agent(posed-17, Hilbert-20)
prep_in(Hilbert-20, 1928-22)

(ROOT
  (S
    (NP (DT An) (NNP Endosymbiont))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN organism))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ lives)
              (PP (IN within)
                (NP
                  (NP (DT the) (NN body)
                    (CC or)
                    (NNS cells))
                  (PP (IN of)
                    (NP (DT another) (NN organism))))))))))
    (. .)))

det(Endosymbiont-2, An-1)
nsubj(organism-5, Endosymbiont-2)
cop(organism-5, is-3)
det(organism-5, any-4)
root(ROOT-0, organism-5)
nsubj(lives-7, organism-5)
rcmod(organism-5, lives-7)
det(body-10, the-9)
prep_within(lives-7, body-10)
prep_within(lives-7, cells-12)
conj_or(body-10, cells-12)
det(organism-15, another-14)
prep_of(body-10, organism-15)

(ROOT
  (S
    (NP (NNP Electronegativity))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ chemical) (NN property))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ describes)
              (S
                (NP
                  (NP (DT the) (NN ability))
                  (PP (IN of)
                    (NP
                      (NP (DT an) (NN atom))
                      (PRN (-LRB- -LRB-)
                        (CC or)
                        (, ,)
                        (ADVP (RBR more) (RB rarely))
                        (, ,)
                        (NP (DT a) (JJ functional) (NN group))
                        (-RRB- -RRB-)))))
                (VP (TO to)
                  (VP (VB attract)
                    (NP (NNS electrons)))))))))
      (PRN (-LRB- -LRB-)
        (CC or)
        (VP (VBN electron)
          (NP (NN density)))
        (-RRB- -RRB-))
      (PP (IN towards)
        (NP
          (NP (PRP itself))
          (PP (IN in)
            (NP (DT a) (JJ covalent) (NN bond))))))
    (. .)))

nsubj(property-5, Electronegativity-1)
cop(property-5, is-2)
det(property-5, a-3)
amod(property-5, chemical-4)
root(ROOT-0, property-5)
nsubj(describes-7, property-5)
rcmod(property-5, describes-7)
det(ability-9, the-8)
nsubj(attract-24, ability-9)
det(atom-12, an-11)
prep_of(ability-9, atom-12)
dep(group-21, or-14)
advmod(rarely-17, more-16)
dep(group-21, rarely-17)
det(group-21, a-19)
amod(group-21, functional-20)
appos(atom-12, group-21)
aux(attract-24, to-23)
xcomp(describes-7, attract-24)
dobj(attract-24, electrons-25)
dep(electron-28, or-27)
dep(property-5, electron-28)
dobj(electron-28, density-29)
prep_towards(property-5, itself-32)
det(bond-36, a-34)
amod(bond-36, covalent-35)
prep_in(itself-32, bond-36)

(ROOT
  (S
    (NP
      (NP (JJ Electronic) (NN mail))
      (, ,)
      (NP
        (ADVP (RB often))
        (JJ abbreviated)
        (UCP
          (PP (TO to)
            (NP
              (NP (NN E-mail))
              (, ,)
              (NP (NN email))
              (, ,)))
          (CC or)
          (ADVP (RB simply)))
        (NN mail))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ store-and-forward) (NN method))
        (PP (IN of)
          (NP (NN writing))))
      (, ,)
      (S
        (VP (VBG sending) (, ,) (VBG receiving)
          (CC and)
          (VBG saving)
          (S
            (NP (NNS messages))
            (VP (VB <PRT>)
              (PRT (RP over))
              (NP (JJ </PRT>) (JJ electronic) (NN communication) (NNS systems)))))))
    (. .)))

amod(mail-2, Electronic-1)
nsubj(method-18, mail-2)
advmod(mail-13, often-4)
amod(mail-13, abbreviated-5)
dep(mail-13, to-6)
pobj(to-6, E-mail-7)
appos(E-mail-7, email-9)
conj_or(to-6, simply-12)
dep(mail-13, simply-12)
appos(mail-2, mail-13)
cop(method-18, is-15)
det(method-18, a-16)
amod(method-18, store-and-forward-17)
root(ROOT-0, method-18)
prep_of(method-18, writing-20)
partmod(method-18, sending-22)
xcomp(method-18, sending-22)
partmod(method-18, receiving-24)
xcomp(method-18, receiving-24)
conj_and(sending-22, receiving-24)
partmod(method-18, saving-26)
xcomp(method-18, saving-26)
conj_and(sending-22, saving-26)
nsubj(<PRT>-28, messages-27)
ccomp(sending-22, <PRT>-28)
prt(<PRT>-28, over-29)
amod(systems-33, </PRT>-30)
amod(systems-33, electronic-31)
nn(systems-33, communication-32)
dobj(<PRT>-28, systems-33)

(ROOT
  (S
    (NP (DT An) (NNP Emoticon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN symbol)
          (CC or)
          (NN combination))
        (PP (IN of)
          (NP
            (NP (NNS symbols))
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB convey)
                    (NP (JJ emotional) (NN content))
                    (PP (IN in)
                      (NP
                        (NP (JJ written))
                        (CC or)
                        (NP (NN message) (NN form))))))))))))
    (. .)))

det(Emoticon-2, An-1)
nsubj(symbol-5, Emoticon-2)
cop(symbol-5, is-3)
det(symbol-5, a-4)
root(ROOT-0, symbol-5)
conj_or(symbol-5, combination-7)
prep_of(symbol-5, symbols-9)
xsubj(convey-12, symbols-9)
partmod(symbols-9, used-10)
aux(convey-12, to-11)
xcomp(used-10, convey-12)
amod(content-14, emotional-13)
dobj(convey-12, content-14)
prep_in(convey-12, written-16)
nn(form-19, message-18)
prep_in(convey-12, form-19)
conj_or(written-16, form-19)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNP Latter) (NNP Day) (NNP Saint) (NN movement)))
    (, ,)
    (NP (DT an) (NNP Evangelist))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ ordained) (NN office))
        (PP (IN of)
          (NP (DT the) (NN ministry)))))
    (. .)))

det(movement-6, the-2)
nn(movement-6, Latter-3)
nn(movement-6, Day-4)
nn(movement-6, Saint-5)
prep_in(office-13, movement-6)
det(Evangelist-9, an-8)
nsubj(office-13, Evangelist-9)
cop(office-13, is-10)
det(office-13, an-11)
amod(office-13, ordained-12)
root(ROOT-0, office-13)
det(ministry-16, the-15)
prep_of(office-13, ministry-16)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Exabyte))
      (PRN (-LRB- -LRB-)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (DT the) (NNP SI) (NN prefix) (NN exa))
              (: -))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN information)
            (CC or)
            (NN computer) (NN storage)))
        (ADJP (JJ equal)
          (PP (TO to)
            (NP (CD one) (CD quintillion) (NNS bytes))))))
    (. .)))

det(Exabyte-2, An-1)
nsubj(unit-14, Exabyte-2)
dep(Exabyte-2, derived-4)
det(exa-9, the-6)
nn(exa-9, SI-7)
nn(exa-9, prefix-8)
prep_from(derived-4, exa-9)
cop(unit-14, is-12)
det(unit-14, a-13)
root(ROOT-0, unit-14)
nn(storage-19, information-16)
conj_or(information-16, computer-18)
nn(storage-19, computer-18)
prep_of(unit-14, storage-19)
amod(unit-14, equal-20)
num(bytes-24, one-22)
num(bytes-24, quintillion-23)
prep_to(equal-20, bytes-24)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ general) (NN usage)))
    (, ,)
    (NP
      (NP (DT an) (NN Eon))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB sometimes))
          (VBN spelled)
          (NP (NNP Ã) (NNP ∞) (NNP Âœon)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP
            (ADVP (RB arbitrarily))
            (VBN designated))
          (NN period))
        (PP (IN of)
          (NP (NN time)))))
    (. .)))

amod(usage-3, general-2)
prep_in(period-18, usage-3)
det(Eon-6, an-5)
nsubj(period-18, Eon-6)
advmod(spelled-9, sometimes-8)
dep(Eon-6, spelled-9)
nn(Âœon-12, Ã-10)
nn(Âœon-12, ∞-11)
dobj(spelled-9, Âœon-12)
cop(period-18, is-14)
det(period-18, an-15)
advmod(designated-17, arbitrarily-16)
amod(period-18, designated-17)
root(ROOT-0, period-18)
prep_of(period-18, time-20)

(ROOT
  (S
    (NP (NNS Eridanus))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN river))
          (PP (IN in)
            (NP (JJ Greek) (NN mythology)))))
      (, ,)
      (VP (VBN associated)
        (PP (IN by)
          (NP (NNP Herodotus)))
        (PP (IN with)
          (NP (DT the) (NNP Po)))))
    (. .)))

nsubj(refers-2, Eridanus-1)
root(ROOT-0, refers-2)
det(river-5, a-4)
prep_to(refers-2, river-5)
amod(mythology-8, Greek-7)
prep_in(river-5, mythology-8)
dep(refers-2, associated-10)
prep_by(associated-10, Herodotus-12)
det(Po-15, the-14)
prep_with(associated-10, Po-15)

(ROOT
  (S
    (NP (NNS Eridanos))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ large) (NN river))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD flowed)
                (ADVP
                  (NP
                    (QP (IN between) (CD 40) (CD million)
                      (CC and)
                      (CD 700) (CD thousand))
                    (NNS years))
                  (RB ago))
                (PP (IN from)
                  (NP (NNP Lapland)))
                (PP (TO to)
                  (NP (DT the) (NNP North) (NNP Sea)))))))))
    (. .)))

nsubj(refers-2, Eridanos-1)
root(ROOT-0, refers-2)
det(river-6, a-4)
amod(river-6, large-5)
prep_to(refers-2, river-6)
nsubj(flowed-8, river-6)
rcmod(river-6, flowed-8)
quantmod(thousand-14, between-9)
number(thousand-14, 40-10)
number(thousand-14, million-11)
conj_and(thousand-14, 700-13)
num(years-15, 700-13)
num(years-15, thousand-14)
npadvmod(ago-16, years-15)
advmod(flowed-8, ago-16)
prep_from(flowed-8, Lapland-18)
det(Sea-22, the-20)
nn(Sea-22, North-21)
prep_to(flowed-8, Sea-22)

(ROOT
  (S
    (NP
      (NP (NNP Eucharist))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (NP
          (NP (NNP Holy) (NNP Communion)
            (CC or)
            (NNP Lord) (POS 's))
          (NNP Supper)
          (CC and)
          (JJ other) (NNS names)))
      (, ,))
    (VP (VBZ is)
      (PP (IN of)
        (NP
          (NP (DT the) (JJ Christian) (NNS sacraments))
          (SBAR
            (S
              (VP (VBD said)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (VP (VBN been)
                        (VP (VBN instituted)
                          (PP (IN by)
                            (NP
                              (NP (NNP Jesus))
                              (PP (IN of)
                                (NP (NNP Nazareth))))))))))))))))
    (. .)))

nsubj(is-15, Eucharist-1)
advmod(called-4, also-3)
partmod(Eucharist-1, called-4)
nn(Communion-6, Holy-5)
poss(Supper-10, Communion-6)
conj_or(Communion-6, Lord-8)
poss(Supper-10, Lord-8)
dobj(called-4, Supper-10)
amod(names-13, other-12)
dobj(called-4, names-13)
conj_and(Supper-10, names-13)
root(ROOT-0, is-15)
det(sacraments-19, the-17)
amod(sacraments-19, Christian-18)
prep_of(is-15, sacraments-19)
rcmod(sacraments-19, said-20)
aux(instituted-24, to-21)
aux(instituted-24, have-22)
auxpass(instituted-24, been-23)
xcomp(said-20, instituted-24)
agent(instituted-24, Jesus-26)
prep_of(Jesus-26, Nazareth-28)

(ROOT
  (S
    (NP (DT An) (NNP Eclipse))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ astronomical) (NN event))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ occurs)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (CD one) (JJ celestial) (NN object))
                  (VP (VBZ moves)
                    (PP (IN into)
                      (NP
                        (NP (DT the) (NN shadow))
                        (PP (IN of)
                          (NP (DT another)))))))))))))
    (. .)))

det(Eclipse-2, An-1)
nsubj(event-6, Eclipse-2)
cop(event-6, is-3)
det(event-6, an-4)
amod(event-6, astronomical-5)
root(ROOT-0, event-6)
nsubj(occurs-8, event-6)
rcmod(event-6, occurs-8)
advmod(moves-13, when-9)
num(object-12, one-10)
amod(object-12, celestial-11)
nsubj(moves-13, object-12)
advcl(occurs-8, moves-13)
det(shadow-16, the-15)
prep_into(moves-13, shadow-16)
prep_of(shadow-16, another-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Erg))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN energy)
              (CC and)
              (JJ mechanical) (NN work))
            (PP (IN in)
              (NP (DT the) (JJ centimetre-gram-second)
                (PRN (-LRB- -LRB-)
                  (NP (NNP CGS))
                  (-RRB- -RRB-))
                (NN system)))
            (PP (IN of)
              (NP (NNS units) (, ,) (NN symbol) ('' '') (NNS erg)))
            ('' '')))))
    (. .)))

det(Erg-2, An-1)
nsubj(unit-5, Erg-2)
cop(unit-5, is-3)
det(unit-5, the-4)
root(ROOT-0, unit-5)
nn(work-10, energy-7)
conj_and(energy-7, mechanical-9)
nn(work-10, mechanical-9)
prep_of(unit-5, work-10)
det(system-17, the-12)
amod(system-17, centimetre-gram-second-13)
abbrev(system-17, CGS-15)
prep_in(work-10, system-17)
nn(erg-23, units-19)
dep(erg-23, symbol-21)
prep_of(work-10, erg-23)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS thermodynamics))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (DT a) (NN branch))
            (PP (IN of)
              (NP (NN physics))))
          (-RRB- -RRB-))))
    (, ,)
    (NP (NNP Entropy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP
            (NP (DT the) (NN unavailability))
            (PP (IN of)
              (NP (DT a)
                (ADJP
                  (QP (CD systemÃ) (NNS cents)))
                (NNP Â) (NNP •) (NNP Â˙s) (NN energy)))))
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NN work)))))))
    (. .)))

prep_in(measure-13, thermodynamics-2)
det(branch-5, a-4)
dep(thermodynamics-2, branch-5)
prep_of(branch-5, physics-7)
nsubj(measure-13, Entropy-10)
cop(measure-13, is-11)
det(measure-13, a-12)
root(ROOT-0, measure-13)
det(unavailability-16, the-15)
prep_of(measure-13, unavailability-16)
det(energy-24, a-18)
number(cents-20, systemÃ-19)
num(energy-24, cents-20)
nn(energy-24, Â-21)
nn(energy-24, •-22)
nn(energy-24, Â˙s-23)
prep_of(unavailability-16, energy-24)
aux(do-26, to-25)
infmod(measure-13, do-26)
dobj(do-26, work-27)

(ROOT
  (S
    (NP (DT An) (NNP Elf))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN creature))
        (PP (IN of)
          (NP (JJ Germanic) (NN mythology)))))
    (. .)))

det(Elf-2, An-1)
nsubj(creature-5, Elf-2)
cop(creature-5, is-3)
det(creature-5, a-4)
root(ROOT-0, creature-5)
amod(mythology-8, Germanic-7)
prep_of(creature-5, mythology-8)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (JJ religious) (NNS texts))))
    (, ,)
    (NP (NNP Ezekiel))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN prophet)
          (CC and)
          (NN priest))
        (PP (IN in)
          (NP (DT the) (NNP Bible)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD prophesied)
              (PP (IN for)
                (NP (CD 22) (NNS years)))
              (ADVP (RB sometime))
              (PP (IN in)
                (NP (DT the) (JJ 6th) (NN century) (NN BCE)))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN form))
                  (PP (IN of)
                    (NP
                      (NP (NNS visions))
                      (SBAR (IN while)
                        (S
                          (VP (VBN exiled)
                            (PP (IN in)
                              (NP (NNP Babylon))))))))))
              (, ,)
              (SBAR (IN as)
                (S
                  (VP (VBN recorded)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN Book))
                        (PP (IN of)
                          (NP (NNP Ezekiel)))))))))))))
    (. .)))

prepc_according_to(prophet-9, to-2)
amod(texts-4, religious-3)
pobj(prophet-9, texts-4)
nsubj(prophet-9, Ezekiel-6)
cop(prophet-9, was-7)
det(prophet-9, a-8)
root(ROOT-0, prophet-9)
nsubj(prophesied-16, prophet-9)
nsubj(recorded-37, prophet-9)
conj_and(prophet-9, priest-11)
nsubj(prophesied-16, priest-11)
nsubj(recorded-37, priest-11)
det(Bible-14, the-13)
prep_in(prophet-9, Bible-14)
rcmod(prophet-9, prophesied-16)
num(years-19, 22-18)
prep_for(prophesied-16, years-19)
advmod(prophesied-16, sometime-20)
det(BCE-25, the-22)
amod(BCE-25, 6th-23)
nn(BCE-25, century-24)
prep_in(prophesied-16, BCE-25)
det(form-28, the-27)
prep_in(prophesied-16, form-28)
prep_of(form-28, visions-30)
mark(exiled-32, while-31)
dep(visions-30, exiled-32)
prep_in(exiled-32, Babylon-34)
mark(recorded-37, as-36)
advcl(prophesied-16, recorded-37)
det(Book-40, the-39)
prep_in(recorded-37, Book-40)
prep_of(Book-40, Ezekiel-42)

(ROOT
  (S
    (NP (DT The) (NNP Equator))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN intersection))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NN Earth) (POS 's))
              (NN surface))
            (PP (IN with)
              (NP
                (NP (DT the) (NN plane) (NN perpendicular))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN Earth) (POS 's))
                    (NNS axis)))))))
        (PP (IN of)
          (S
            (VP (VBG rotation)
              (CC and)
              (VBG containing)
              (NP
                (NP
                  (NP (DT the) (NN Earth) (POS 's))
                  (NN center))
                (PP (IN of)
                  (NP (NN mass)))))))))
    (. .)))

det(Equator-2, The-1)
nsubj(intersection-5, Equator-2)
cop(intersection-5, is-3)
det(intersection-5, the-4)
root(ROOT-0, intersection-5)
det(Earth-8, the-7)
poss(surface-10, Earth-8)
prep_of(intersection-5, surface-10)
det(perpendicular-14, the-12)
nn(perpendicular-14, plane-13)
prep_with(surface-10, perpendicular-14)
det(Earth-17, the-16)
poss(axis-19, Earth-17)
prep_to(perpendicular-14, axis-19)
prepc_of(intersection-5, rotation-21)
prepc_of(intersection-5, containing-23)
conj_and(rotation-21, containing-23)
det(Earth-25, the-24)
poss(center-27, Earth-25)
dobj(rotation-21, center-27)
prep_of(center-27, mass-29)

(ROOT
  (S (CC or)
    (NP
      (NP (NNP ETA))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (NP
              (NP (JJ Basque))
              (PP (IN for) ('' '')
                (NP (JJ Basque) (NNP Homeland)
                  (CC and)
                  (NNP Freedom))))
            ('' '')
            (PRN (: ;)
              (NP (NNP Ã))
              (: --))
            (NP
              (NP (NNP Â) (NNP √) (NNP Ã) (NNP ≈) (NNP Â˝Ã))
              (PRN (: --)
                (NP (NNP Â) (NNP ∆)))))
          (NP (NN ta)))
        (-RRB- -RRB-))
      (, ,))
    (VP (VBZ is)
      (NP (DT an) (JJ armed) (JJ Basque) (JJ nationalist) (JJ separatist) (NN organization)))
    (. .)))

cc(organization-32, or-1)
nsubj(organization-32, ETA-2)
dep(ETA-2, Basque-4)
amod(Homeland-8, Basque-7)
prep_for(Basque-4, Homeland-8)
prep_for(Basque-4, Freedom-10)
conj_and(Homeland-8, Freedom-10)
dep(Basque-4, Ã-13)
nn(Â˝Ã-19, Â-15)
nn(Â˝Ã-19, √-16)
nn(Â˝Ã-19, Ã-17)
nn(Â˝Ã-19, ≈-18)
dep(Basque-4, Â˝Ã-19)
nn(∆-22, Â-21)
dep(Â˝Ã-19, ∆-22)
dep(Basque-4, ta-23)
cop(organization-32, is-26)
det(organization-32, an-27)
amod(organization-32, armed-28)
amod(organization-32, Basque-29)
amod(organization-32, nationalist-30)
amod(organization-32, separatist-31)
root(ROOT-0, organization-32)

(ROOT
  (S
    (NP (DT The) (NNPS Essenes))
    (VP (VBD were)
      (PRN (, ,)
        (ADVP (RB strictly)
          (S
            (VP (VBG speaking))))
        (, ,))
      (NP
        (NP (DT an) (JJ ascetic) (JJ Jewish) (JJ religious) (NN group))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBN flourished)
              (PP (IN from)
                (NP (DT the) (JJ 2nd) (NN century) (NN BC)))
              (PP (TO to)
                (NP (DT the) (CD 1st) (NN century) (NNP AD))))))))
    (. .)))

det(Essenes-2, The-1)
nsubj(group-12, Essenes-2)
cop(group-12, were-3)
dep(group-12, strictly-5)
dep(strictly-5, speaking-6)
det(group-12, an-8)
amod(group-12, ascetic-9)
amod(group-12, Jewish-10)
amod(group-12, religious-11)
root(ROOT-0, group-12)
nsubj(flourished-14, group-12)
rcmod(group-12, flourished-14)
det(BC-19, the-16)
amod(BC-19, 2nd-17)
nn(BC-19, century-18)
prep_from(flourished-14, BC-19)
det(AD-24, the-21)
num(AD-24, 1st-22)
nn(AD-24, century-23)
prep_to(flourished-14, AD-24)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Evoluon))
      (PRN (-LRB- -LRB-)
        (NP (NN coor) (NN dms))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN conference) (NN center)
          (CC and)
          (JJ former) (NN science) (NN museum))
        (SBAR
          (S
            (VP (VBD erected)
              (PP (IN by)
                (NP (DT the)
                  (UCP (NNS electronics)
                    (CC and)
                    (JJ electrical))
                  (NN company) (NNS Philips)))
              (PP (IN in)
                (NP
                  (NP (NNP Eindhoven))
                  (, ,)
                  (NP (DT the) (NNPS Netherlands))
                  (, ,)))
              (PP (IN in)
                (NP (CD 1966))))))))
    (. .)))

det(Evoluon-2, The-1)
nsubj(center-10, Evoluon-2)
nn(dms-5, coor-4)
appos(Evoluon-2, dms-5)
cop(center-10, is-7)
det(center-10, a-8)
nn(center-10, conference-9)
root(ROOT-0, center-10)
amod(museum-14, former-12)
nn(museum-14, science-13)
conj_and(center-10, museum-14)
rcmod(center-10, erected-15)
det(Philips-22, the-17)
nn(Philips-22, electronics-18)
conj_and(electronics-18, electrical-20)
nn(Philips-22, electrical-20)
nn(Philips-22, company-21)
prep_by(erected-15, Philips-22)
prep_in(erected-15, Eindhoven-24)
det(Netherlands-27, the-26)
appos(Eindhoven-24, Netherlands-27)
prep_in(erected-15, 1966-30)

(ROOT
  (S
    (NP (DT An) (NNP Electrode))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ electrical) (NN conductor))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (NN contact))
                (PP (IN with)
                  (NP
                    (NP (DT a) (JJ nonmetallic) (NN part))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN circuit))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (NN e.) (NN g.))
                            (NP
                              (NP (DT a) (NN semiconductor))
                              (, ,)
                              (NP (DT an) (NN electrolyte))
                              (CC or)
                              (NP (DT a) (NN vacuum))))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Electrode-2, An-1)
nsubj(conductor-6, Electrode-2)
cop(conductor-6, is-3)
det(conductor-6, an-4)
amod(conductor-6, electrical-5)
root(ROOT-0, conductor-6)
xsubj(make-9, conductor-6)
partmod(conductor-6, used-7)
aux(make-9, to-8)
xcomp(used-7, make-9)
dobj(make-9, contact-10)
det(part-14, a-12)
amod(part-14, nonmetallic-13)
prep_with(make-9, part-14)
det(circuit-17, a-16)
prep_of(part-14, circuit-17)
nn(g.-20, e.-19)
dep(circuit-17, g.-20)
det(semiconductor-22, a-21)
dep(g.-20, semiconductor-22)
det(electrolyte-25, an-24)
dep(g.-20, electrolyte-25)
conj_or(semiconductor-22, electrolyte-25)
det(vacuum-28, a-27)
dep(g.-20, vacuum-28)
conj_or(semiconductor-22, vacuum-28)

(ROOT
  (S
    (NP (NNP Eurasia))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP
        (ADVP (RB sometimes))
        (VBN used)
        (PP (IN in)
          (NP
            (NP (NNS geopolitics))
            (PP (IN as)
              (NP (DT a) (JJ neutral) (NN way)))))
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP
                  (NP (NNS organizations))
                  (PP (IN of)
                    (NP
                      (NP
                        (NP (NNS affairs))
                        (PP (VBG concerning)
                          (NP
                            (NP (DT the) (JJ post-Soviet) (NNS states))
                            (, ,)
                            (PP (IN in)
                              (NP (JJ particular) (NNP Russia))))))
                      (, ,)
                      (NP (DT the)
                        (ADJP (JJ Central) (JJ Asian))
                        (NNS republics))
                      (, ,)
                      (CC and)
                      (NP (DT the) (JJ Transcaucasian) (NNS republics)))))))))))
    (. .)))

nsubjpass(used-5, Eurasia-1)
xsubj(refer-13, Eurasia-1)
auxpass(used-5, is-2)
advmod(used-5, also-3)
advmod(used-5, sometimes-4)
root(ROOT-0, used-5)
prep_in(used-5, geopolitics-7)
det(way-11, a-9)
amod(way-11, neutral-10)
prep_as(geopolitics-7, way-11)
aux(refer-13, to-12)
xcomp(used-5, refer-13)
prep_to(refer-13, organizations-15)
prep_of(organizations-15, affairs-17)
det(states-21, the-19)
amod(states-21, post-Soviet-20)
prep_concerning(affairs-17, states-21)
amod(Russia-25, particular-24)
prep_in(states-21, Russia-25)
det(republics-30, the-27)
amod(Asian-29, Central-28)
amod(republics-30, Asian-29)
prep_of(organizations-15, republics-30)
conj_and(affairs-17, republics-30)
det(republics-35, the-33)
amod(republics-35, Transcaucasian-34)
prep_of(organizations-15, republics-35)
conj_and(affairs-17, republics-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Epigram))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ short) (NN poem))
          (, ,)
          (ADVP (RB often)
            (PP (IN with)
              (NP
                (NP (DT a) (JJ clever) (NN twist))
                (PP (IN at)
                  (NP (DT the) (NN end)))))))
        (CC or)
        (NP
          (NP (DT a) (NN concise))
          (CC and)
          (NP (JJ witty) (NN statement)))))
    (. .)))

det(Epigram-2, An-1)
nsubj(poem-6, Epigram-2)
cop(poem-6, is-3)
det(poem-6, a-4)
amod(poem-6, short-5)
root(ROOT-0, poem-6)
advmod(poem-6, often-8)
det(twist-12, a-10)
amod(twist-12, clever-11)
prep_with(often-8, twist-12)
det(end-15, the-14)
prep_at(twist-12, end-15)
det(concise-18, a-17)
conj_or(poem-6, concise-18)
amod(statement-21, witty-20)
conj_or(poem-6, statement-21)
conj_and(concise-18, statement-21)

(ROOT
  (S
    (NP (DT An) (NNP Escalator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN conveyor) (NN transport) (NN device))
        (PP (IN for)
          (S
            (VP
              (VP (VBG transporting)
                (NP (NNS people)))
              (, ,)
              (VP (VBG consisting)
                (PP (IN of)
                  (NP
                    (NP (NN individual))
                    (, ,)
                    (NP
                      (NP (VBN linked) (NNS steps))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP move)
                            (S
                              (VP (VBG <PRT>)
                                (PRT (RP up))
                                (NP (NNS </PRT>)))))))))))
              (CC or)
              (VP (VBG <PRT>)
                (PRT (RP down))
                (NP (NNS </PRT>))
                (PP (IN on)
                  (NP
                    (NP (NNS tracks))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBP keep)
                          (NP (DT the) (JJ treads) (NN horizontal)))))))))))))
    (. .)))

det(Escalator-2, An-1)
nsubj(device-7, Escalator-2)
cop(device-7, is-3)
det(device-7, a-4)
nn(device-7, conveyor-5)
nn(device-7, transport-6)
root(ROOT-0, device-7)
prepc_for(device-7, transporting-9)
dobj(transporting-9, people-10)
prepc_for(device-7, consisting-12)
conj_or(transporting-9, consisting-12)
prep_of(consisting-12, individual-14)
amod(steps-17, linked-16)
appos(individual-14, steps-17)
nsubj(move-19, steps-17)
rcmod(steps-17, move-19)
xcomp(move-19, <PRT>-20)
prt(<PRT>-20, up-21)
dobj(<PRT>-20, </PRT>-22)
prepc_for(device-7, <PRT>-24)
conj_or(transporting-9, <PRT>-24)
prt(<PRT>-24, down-25)
dobj(<PRT>-24, </PRT>-26)
prep_on(<PRT>-24, tracks-28)
nsubj(keep-31, tracks-28)
rcmod(tracks-28, keep-31)
det(horizontal-34, the-32)
amod(horizontal-34, treads-33)
dobj(keep-31, horizontal-34)

(ROOT
  (S
    (NP (DT An) (NN Elevator)
      (CC or)
      (NN lift))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN transport) (NN device))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB move)
                (NP (NNS goods)
                  (CC or)
                  (NNS people))
                (ADVP (RB vertically))
                (, ,)
                (PP (IN from)
                  (NP
                    (NP (CD one) (NN floor))
                    (PP (TO to)
                      (NP (DT another)))))))))))
    (. .)))

det(Elevator-2, An-1)
nsubj(device-8, Elevator-2)
conj_or(Elevator-2, lift-4)
nsubj(device-8, lift-4)
cop(device-8, is-5)
det(device-8, a-6)
nn(device-8, transport-7)
root(ROOT-0, device-8)
xsubj(move-11, device-8)
partmod(device-8, used-9)
aux(move-11, to-10)
xcomp(used-9, move-11)
dobj(move-11, goods-12)
dobj(move-11, people-14)
conj_or(goods-12, people-14)
advmod(move-11, vertically-15)
num(floor-19, one-18)
prep_from(move-11, floor-19)
prep_to(floor-19, another-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN astronomy)))
    (, ,)
    (NP (NNP Equinox))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP
            (NP (DT the) (NNP Sun))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (VP (VBN positioned)
                    (ADVP (RB directly))
                    (PP (IN over)
                      (NP
                        (NP
                          (NP
                            (NP (DT the) (NN Earth) (POS 's))
                            (NN equator))
                          (CC and)
                          (PRN (, ,)
                            (PP (IN by)
                              (NP (NN extension)))
                            (, ,))
                          (NP (DT the) (JJ apparent) (NN position)))
                        (PP (IN of)
                          (NP (DT the) (NNP Sun)))))
                    (PP (IN at)
                      (NP (DT that) (NN moment))))))))
          (, ,)
          (CC or)
          (NP
            (NP (DT the) (NN time))
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ happens))))))))
    (. .)))

prep_in(refers-5, astronomy-2)
nsubj(refers-5, Equinox-4)
root(ROOT-0, refers-5)
det(Sun-8, the-7)
prep_to(refers-5, Sun-8)
nsubjpass(positioned-11, Sun-8)
auxpass(positioned-11, is-10)
rcmod(Sun-8, positioned-11)
advmod(positioned-11, directly-12)
det(Earth-15, the-14)
poss(equator-17, Earth-15)
prep_over(positioned-11, equator-17)
dep(equator-17, by-20)
pobj(by-20, extension-21)
det(position-25, the-23)
amod(position-25, apparent-24)
prep_over(positioned-11, position-25)
conj_and(equator-17, position-25)
det(Sun-28, the-27)
prep_of(equator-17, Sun-28)
det(moment-31, that-30)
prep_at(positioned-11, moment-31)
det(time-35, the-34)
prep_to(refers-5, time-35)
conj_or(Sun-8, time-35)
nsubjpass(positioned-11, time-35)
dobj(happens-38, time-35)
complm(happens-38, that-36)
nsubj(happens-38, it-37)
dep(time-35, happens-38)

(ROOT
  (S
    (NP (DT An) (NN Earthquake))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN result))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ sudden) (NN release))
            (PP (IN of)
              (NP
                (NP (NN energy))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN Earth) (POS 's))
                    (NN crust)))))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ creates)
              (NP (JJ seismic) (NNS waves)))))))
    (. .)))

det(Earthquake-2, An-1)
nsubj(result-5, Earthquake-2)
cop(result-5, is-3)
det(result-5, the-4)
root(ROOT-0, result-5)
nsubj(creates-18, result-5)
det(release-9, a-7)
amod(release-9, sudden-8)
prep_of(result-5, release-9)
prep_of(release-9, energy-11)
det(Earth-14, the-13)
poss(crust-16, Earth-14)
prep_in(energy-11, crust-16)
rcmod(result-5, creates-18)
amod(waves-20, seismic-19)
dobj(creates-18, waves-20)

(ROOT
  (S
    (NP (DT An) (NN Emperor))
    (VP (VBZ is)
      (NP (DT a)
        (PRN (-LRB- -LRB-)
          (ADJP (NN male))
          (-RRB- -RRB-))
        (NN monarch))
      (, ,)
      (ADVP (RB usually))
      (NP
        (NP
          (NP (DT the) (JJ sovereign) (NN ruler))
          (PP (IN of)
            (NP (DT an) (NN empire))))
        (CC or)
        (NP
          (NP (DT another) (NN type))
          (PP (IN of)
            (NP (JJ imperial) (NN realm))))))
    (. .)))

det(Emperor-2, An-1)
nsubj(monarch-8, Emperor-2)
cop(monarch-8, is-3)
det(monarch-8, a-4)
dep(monarch-8, male-6)
root(ROOT-0, monarch-8)
advmod(monarch-8, usually-10)
det(ruler-13, the-11)
amod(ruler-13, sovereign-12)
attr(monarch-8, ruler-13)
det(empire-16, an-15)
prep_of(ruler-13, empire-16)
det(type-19, another-18)
attr(monarch-8, type-19)
conj_or(ruler-13, type-19)
amod(realm-22, imperial-21)
prep_of(type-19, realm-22)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT An) (NN Empire))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (DT the) (NNP Latin) ('' '') (NN imperium))
            ('' '') (, ,)
            (NP
              (NP (JJ denoting) (JJ military) (NN command))
              (PP (IN within)
                (NP (DT the) (JJ ancient) (NNP Roman) (NN government))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN state))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ extends)
                (NP (NN dominion))
                (PP (IN over)
                  (NP
                    (NP (NNS populations))
                    (ADJP (JJ distinct) (JJ culturally)))))
              (CC and)
              (VP
                (ADJP (RB ethnically)
                  (PP (IN from)
                    (NP (DT the) (NN culture) (NN \/) (NN ethnicity))))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN center))
                    (PP (IN of)
                      (NP (NN power)))))))))))
    (. .)))

det(Empire-2, An-1)
nsubj(state-22, Empire-2)
dep(Empire-2, from-4)
det(imperium-8, the-5)
nn(imperium-8, Latin-6)
pobj(from-4, imperium-8)
amod(command-13, denoting-11)
amod(command-13, military-12)
appos(imperium-8, command-13)
det(government-18, the-15)
amod(government-18, ancient-16)
nn(government-18, Roman-17)
prep_within(command-13, government-18)
cop(state-22, is-20)
det(state-22, a-21)
root(ROOT-0, state-22)
nsubj(extends-24, state-22)
rcmod(state-22, extends-24)
dobj(extends-24, dominion-25)
prep_over(extends-24, populations-27)
amod(culturally-29, distinct-28)
amod(populations-27, culturally-29)
rcmod(state-22, ethnically-31)
conj_and(extends-24, ethnically-31)
det(ethnicity-36, the-33)
nn(ethnicity-36, culture-34)
nn(ethnicity-36, \/-35)
prep_from(ethnically-31, ethnicity-36)
det(center-39, the-38)
prep_at(ethnically-31, center-39)
prep_of(center-39, power-41)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (JJ Greek) (NN mythology)))
      (, ,)
      (NP (NNP Eurystheus))
      (VP (VBD was)
        (NP
          (NP (NN king))
          (PP (IN of)
            (NP
              (NP (NNP Tiryns))
              (, ,)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (CD three) (JJ Mycenaean) (NNS strongholds))
                    (PP (IN in)
                      (NP (DT the) (NNP Argolid)))))))))))
    (: :)
    (S
      (S
        (NP (NNP Sthenelus))
        (VP (VBD was)
          (NP (PRP$ his) (NN father)
            (CC and)
            (JJ the) ('' '') (NNS horsewoman))
          ('' '')
          (VP (VBG Nicippe)
            (NP (PRP$ his) (NN mother)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN grandson))
            (PP (IN of)
              (NP (DT the) (NN hero) (NNS Perseus))))
          (, ,)
          (SBAR (IN as)
            (S
              (VP (VBD was)
                (NP (PRP$ his) (NN opponent) (NNS Heracles))))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(king-7, mythology-3)
nsubj(king-7, Eurystheus-5)
cop(king-7, was-6)
root(ROOT-0, king-7)
prep_of(king-7, Tiryns-9)
appos(Tiryns-9, one-11)
num(strongholds-15, three-13)
amod(strongholds-15, Mycenaean-14)
prep_of(one-11, strongholds-15)
det(Argolid-18, the-17)
prep_in(strongholds-15, Argolid-18)
nsubj(Nicippe-29, Sthenelus-20)
cop(Nicippe-29, was-21)
poss(father-23, his-22)
attr(Nicippe-29, father-23)
amod(horsewoman-27, the-25)
conj_and(father-23, horsewoman-27)
attr(Nicippe-29, horsewoman-27)
parataxis(king-7, Nicippe-29)
poss(mother-31, his-30)
dobj(Nicippe-29, mother-31)
nsubj(grandson-37, he-34)
cop(grandson-37, was-35)
det(grandson-37, a-36)
parataxis(king-7, grandson-37)
conj_and(Nicippe-29, grandson-37)
det(Perseus-41, the-39)
nn(Perseus-41, hero-40)
prep_of(grandson-37, Perseus-41)
mark(Heracles-47, as-43)
cop(Heracles-47, was-44)
poss(Heracles-47, his-45)
nn(Heracles-47, opponent-46)
advcl(grandson-37, Heracles-47)

(ROOT
  (S
    (PP (IN In)
      (NP (NN philosophy)))
    (, ,)
    (NP (NNP Empiricism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN theory))
        (PP (IN of)
          (NP (NN knowledge)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is)
                (ADJP (JJ practical)
                  (PP (RB rather) (IN than)
                    (ADJP (JJ abstract)))))
              (, ,)
              (CC and)
              (VP (VBZ asserts)
                (SBAR (IN that)
                  (S
                    (NP (NN knowledge))
                    (VP (VBZ arises)
                      (PP (IN from)
                        (NP
                          (NP (NN experience))
                          (CONJP (RB rather) (IN than))
                          (NP (NN revelation)))))))))))))
    (. .)))

prep_in(theory-7, philosophy-2)
nsubj(theory-7, Empiricism-4)
cop(theory-7, is-5)
det(theory-7, a-6)
root(ROOT-0, theory-7)
nsubj(practical-12, theory-7)
nsubj(asserts-18, theory-7)
prep_of(theory-7, knowledge-9)
cop(practical-12, is-11)
rcmod(theory-7, practical-12)
advmod(practical-12, rather-13)
prep_than(practical-12, abstract-15)
rcmod(theory-7, asserts-18)
conj_and(practical-12, asserts-18)
complm(arises-21, that-19)
nsubj(arises-21, knowledge-20)
ccomp(asserts-18, arises-21)
prep_from(arises-21, experience-23)
prep_from(arises-21, revelation-26)
conj_negcc(experience-23, revelation-26)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NNS thermodynamics)))
      (, ,)
      (NP (DT the) (NN word) (NNP Exothermic))
      (VP (VBZ describes)
        (NP
          (NP (DT a) (NN process)
            (CC or)
            (NN reaction))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ releases)
                (NP (NN energy))
                (PP (RB usually) (IN in)
                  (NP
                    (NP (DT the) (NN form))
                    (PP (IN of)
                      (NP (NN heat)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD can)
        (ADVP (RB also))
        (VP (VB release)
          (NP (NN energy))
          (PP (IN in)
            (NP
              (NP (NN form))
              (PP (IN of)
                (NP
                  (NP
                    (NP (NN light))
                    (PRN (-LRB- -LRB-)
                      (NP (NN e.) (NN g.) (NNS explosions))
                      (-RRB- -RRB-)))
                  (, ,)
                  (NP (NN sound))
                  (, ,)
                  (CC or)
                  (NP
                    (NP (NN electricity))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (NN e.) (NN g.))
                        (NP (DT a) (NN battery)))
                      (-RRB- -RRB-))))))))))
    (. .)))

prep_in(describes-7, thermodynamics-2)
det(Exothermic-6, the-4)
nn(Exothermic-6, word-5)
nsubj(describes-7, Exothermic-6)
root(ROOT-0, describes-7)
det(process-9, a-8)
dobj(describes-7, process-9)
nsubj(releases-13, process-9)
dobj(describes-7, reaction-11)
conj_or(process-9, reaction-11)
nsubj(releases-13, reaction-11)
rcmod(process-9, releases-13)
dobj(releases-13, energy-14)
advmod(releases-13, usually-15)
det(form-18, the-17)
prep_in(releases-13, form-18)
prep_of(form-18, heat-20)
nsubj(release-26, it-23)
aux(release-26, can-24)
advmod(release-26, also-25)
conj_but(describes-7, release-26)
dobj(release-26, energy-27)
prep_in(release-26, form-29)
prep_of(form-29, light-31)
nn(explosions-35, e.-33)
nn(explosions-35, g.-34)
appos(light-31, explosions-35)
prep_of(form-29, sound-38)
conj_or(light-31, sound-38)
prep_of(form-29, electricity-41)
conj_or(light-31, electricity-41)
nn(g.-44, e.-43)
dep(electricity-41, g.-44)
det(battery-46, a-45)
dep(g.-44, battery-46)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Euphrates))
      (PRN (-LRB- -LRB-)
        (FRAG
          (NP
            (NP (NNP Arabic))
            (: :)
            (NP (NN lang))
            (, ,)
            (NP
              (NP
                (NP (NN transl))
                (: ;)
                (NP (JJ Turkish)))
              (: :)
              (NP
                (NP (NN lang))
                (: ;)
                (NP (NNP Syriac)))
              (: :)
              (NP
                (NP (NN lang))
                (, ,)
                (NP (NN transl)))
              (: ;)
              (NP
                (NP (NNP Hebrew))
                (: :)
                (NP (NN lang))))
            (, ,))
          (ADJP (JJ transl)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ western))
        (PP (IN of)
          (NP
            (NP (DT the) (CD two) (JJ great) (NNS rivers))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VB define)
                  (NP
                    (NP (NNP Mesopotamia))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (DT the) (JJ other) (NN being))
                        (NP (DT the) (NNPS Tigris)))
                      (-RRB- -RRB-))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ flows)
                          (PP (IN from)
                            (NP (NNP Anatolia))))))))))))))
    (. .)))

det(Euphrates-2, The-1)
nsubj(western-28, Euphrates-2)
dep(Euphrates-2, Arabic-4)
dep(Arabic-4, lang-6)
appos(Arabic-4, transl-8)
dep(transl-8, Turkish-10)
dep(transl-8, lang-12)
dep(lang-12, Syriac-14)
dep(transl-8, lang-16)
appos(lang-16, transl-18)
dep(transl-8, Hebrew-20)
dep(Hebrew-20, lang-22)
dep(Arabic-4, transl-24)
cop(western-28, is-26)
det(western-28, the-27)
root(ROOT-0, western-28)
det(rivers-33, the-30)
num(rivers-33, two-31)
amod(rivers-33, great-32)
prep_of(western-28, rivers-33)
nsubj(define-35, rivers-33)
rcmod(rivers-33, define-35)
dobj(define-35, Mesopotamia-36)
nsubj(flows-45, Mesopotamia-36)
det(being-40, the-38)
amod(being-40, other-39)
dep(Mesopotamia-36, being-40)
det(Tigris-42, the-41)
dep(being-40, Tigris-42)
rcmod(Mesopotamia-36, flows-45)
prep_from(flows-45, Anatolia-47)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP (NNP E-Prime))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (VBN modified) (JJ English) (NN syntax))
          (CC and)
          (NP
            (NP (NN vocabulary))
            (VP (VBG lacking)
              (NP
                (NP (DT all) (NNS forms))
                (PP (IN of)
                  (NP (DT the) (NN verb)
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB be))
                          (: :)
                          (VP (VB be) (, ,)
                            (SBAR
                              (S
                                (VP
                                  (VP (VBZ is))
                                  (, ,)
                                  (VP (VBP am))
                                  (, ,)
                                  (VP (VBP are))
                                  (, ,)
                                  (VP (VBD was))
                                  (, ,)
                                  (VP (VBD were))
                                  (, ,)
                                  (S
                                    (VP
                                      (VP (VBN been))
                                      (CC and)
                                      (VP (VBG being))))))))))))))))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB also))
        (NP (PRP$ their) (NNS contractions))))
    (. .)))

prep_in(syntax-9, linguistics-2)
nsubj(syntax-9, E-Prime-4)
cop(syntax-9, is-5)
det(syntax-9, a-6)
amod(syntax-9, modified-7)
amod(syntax-9, English-8)
root(ROOT-0, syntax-9)
conj_and(syntax-9, vocabulary-11)
partmod(vocabulary-11, lacking-12)
det(forms-14, all-13)
dobj(lacking-12, forms-14)
det(verb-17, the-16)
prep_of(forms-14, verb-17)
aux(be-19, to-18)
infmod(verb-17, be-19)
dep(be-19, be-21)
ccomp(be-21, is-23)
dep(is-23, am-25)
dep(is-23, are-27)
dep(is-23, was-29)
dep(is-23, were-31)
ccomp(is-23, been-33)
ccomp(is-23, being-35)
conj_and(been-33, being-35)
advmod(contractions-40, also-38)
poss(contractions-40, their-39)
conj_and(syntax-9, contractions-40)

(ROOT
  (S
    (PP (IN In)
      (NP (NN psychology)))
    (, ,)
    (NP (NNP Egolessness))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ emotional) (NN state))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP one))
            (VP (VBZ feels)
              (NP
                (NP (DT no) (NN ego))
                (PRN (-LRB- -LRB-)
                  (NP
                    (QP (CC or)
                      (CD self)))
                  (-RRB- -RRB-))
                (: ;)
                (PP (IN of)
                  (S
                    (VP (VBG having)
                      (NP (DT no) (JJ distinct) (NN being))
                      (PP (RB apart) (IN from)
                        (NP
                          (NP (DT the) (NN world))
                          (PP (IN around)
                            (NP (PRP oneself))))))))))))))
    (. .)))

prep_in(state-8, psychology-2)
nsubj(state-8, Egolessness-4)
cop(state-8, is-5)
det(state-8, an-6)
amod(state-8, emotional-7)
root(ROOT-0, state-8)
advmod(feels-11, where-9)
nsubj(feels-11, one-10)
rcmod(state-8, feels-11)
det(ego-13, no-12)
dobj(feels-11, ego-13)
cc(self-16, or-15)
dep(ego-13, self-16)
prepc_of(ego-13, having-20)
det(being-23, no-21)
amod(being-23, distinct-22)
dobj(having-20, being-23)
det(world-27, the-26)
prep_apart_from(having-20, world-27)
prep_around(world-27, oneself-29)

(ROOT
  (S
    (NP (DT The) (NNP Enterobacteriaceae))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ large) (NN family))
        (PP (IN of)
          (NP (NNS bacteria)))
        (, ,)
        (PP (VBG including)
          (NP
            (NP (JJ many))
            (PP (IN of)
              (NP (DT the)
                (ADJP (RBR more) (JJ familiar))
                (NNS pathogens)))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (NNP Salmonella)
                (CC and)
                (NNP Escherichia) (NNS coli)))))))
    (. .)))

det(Enterobacteriaceae-2, The-1)
nsubj(family-6, Enterobacteriaceae-2)
cop(family-6, are-3)
det(family-6, a-4)
amod(family-6, large-5)
root(ROOT-0, family-6)
prep_of(family-6, bacteria-8)
prep_including(family-6, many-11)
det(pathogens-16, the-13)
advmod(familiar-15, more-14)
amod(pathogens-16, familiar-15)
prep_of(many-11, pathogens-16)
nn(coli-23, Salmonella-20)
conj_and(Salmonella-20, Escherichia-22)
nn(coli-23, Escherichia-22)
prep_such_as(many-11, coli-23)

(ROOT
  (S
    (FRAG
      (NP
        (NP (DT The) (NNP Epipaleolithic))
        (ADVP (CC or))))
    ('' '')
    (NP (JJ peripheral) (JJ old) (NN stone) (NNS age) ('' ''))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (VP (VBN used)
          (PP (IN for)
            (NP
              (NP (DT the) (JJ hunter-gatherer) (NNS cultures))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD existed)
                    (PP (IN after)
                      (NP
                        (NP (DT the) (NN end))
                        (PP (IN of)
                          (NP (DT the) (JJ last) (NN Ice) (NN Age)))))
                    (, ,)
                    (PP (IN before)
                      (NP (DT the) (NNP Neolithic)))))))))))
    (. .)))

det(Epipaleolithic-2, The-1)
dep(term-12, Epipaleolithic-2)
advmod(Epipaleolithic-2, or-3)
amod(age-8, peripheral-5)
amod(age-8, old-6)
nn(age-8, stone-7)
nsubj(term-12, age-8)
cop(term-12, is-10)
det(term-12, a-11)
root(ROOT-0, term-12)
partmod(term-12, used-13)
det(cultures-17, the-15)
amod(cultures-17, hunter-gatherer-16)
prep_for(used-13, cultures-17)
nsubj(existed-19, cultures-17)
rcmod(cultures-17, existed-19)
det(end-22, the-21)
prep_after(existed-19, end-22)
det(Age-27, the-24)
amod(Age-27, last-25)
nn(Age-27, Ice-26)
prep_of(end-22, Age-27)
det(Neolithic-31, the-30)
prep_before(existed-19, Neolithic-31)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ political) (NN science))
        (CC and)
        (NP (JJ constitutional) (NN law))))
    (, ,)
    (NP (DT the) (NNP Executive))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN branch))
        (PP (IN of)
          (NP
            (NP (NN government))
            (ADJP (JJ responsible)
              (PP (IN for)
                (NP
                  (NP (DT the) (JJ day-to-day) (NN management))
                  (PP (IN of)
                    (NP (DT the) (NN state))))))))))
    (. .)))

amod(science-3, political-2)
prep_in(branch-12, science-3)
amod(law-6, constitutional-5)
conj_and(science-3, law-6)
prep_in(branch-12, law-6)
det(Executive-9, the-8)
nsubj(branch-12, Executive-9)
cop(branch-12, is-10)
det(branch-12, the-11)
root(ROOT-0, branch-12)
prep_of(branch-12, government-14)
amod(government-14, responsible-15)
det(management-19, the-17)
amod(management-19, day-to-day-18)
prep_for(responsible-15, management-19)
det(state-22, the-21)
prep_of(management-19, state-22)

(ROOT
  (S
    (NP (DT An) (NNP Emulsion))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mixture))
        (PP (IN of)
          (NP
            (ADJP
              (NP (CD two))
              (JJ immiscible))
            (PRN (-LRB- -LRB-)
              (NP (NN unblendable))
              (-RRB- -RRB-))
            (NNS substances)))))
    (. .)))

det(Emulsion-2, An-1)
nsubj(mixture-5, Emulsion-2)
cop(mixture-5, is-3)
det(mixture-5, a-4)
root(ROOT-0, mixture-5)
npadvmod(immiscible-8, two-7)
amod(substances-12, immiscible-8)
appos(substances-12, unblendable-10)
prep_of(mixture-5, substances-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP (NNP Encryption))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (NP
            (NP (JJ transforming) (NN information))
            (PRN (-LRB- -LRB-)
              (VP (VBN referred)
                (PP (TO to)
                  (NP (RB as) (NN plaintext))))
              (-RRB- -RRB-))
            (VP (VBG using)
              (NP (DT an) (NN algorithm)
                (PRN (-LRB- -LRB-)
                  (VP (VBN called)
                    (NP (NN cipher)))
                  (-RRB- -RRB-))
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (S
                        (NP (PRP it))
                        (ADJP (JJ unreadable)
                          (PP (TO to)
                            (NP
                              (NP (NN anyone))
                              (PP (IN except)
                                (NP (DT those))))))
                        (S
                          (VP (VBG possessing)
                            (NP
                              (NP (JJ special) (NN knowledge))
                              (, ,)
                              (VP
                                (ADVP (RB usually))
                                (VBN referred)
                                (PP (TO to)
                                  (NP (RB as) (DT a) (NN key)))))))))))))))))
    (. .)))

prep_in(process-7, cryptography-2)
nsubj(process-7, Encryption-4)
cop(process-7, is-5)
det(process-7, the-6)
root(ROOT-0, process-7)
amod(information-10, transforming-9)
prep_of(process-7, information-10)
dep(information-10, referred-12)
advmod(plaintext-15, as-14)
prep_to(referred-12, plaintext-15)
partmod(information-10, using-17)
det(algorithm-19, an-18)
dobj(using-17, algorithm-19)
dep(algorithm-19, called-21)
dobj(called-21, cipher-22)
aux(make-25, to-24)
infmod(algorithm-19, make-25)
nsubj(possessing-32, it-26)
dep(possessing-32, unreadable-27)
prep_to(unreadable-27, anyone-29)
prep_except(anyone-29, those-31)
xcomp(make-25, possessing-32)
amod(knowledge-34, special-33)
dobj(possessing-32, knowledge-34)
advmod(referred-37, usually-36)
partmod(knowledge-34, referred-37)
advmod(key-41, as-39)
det(key-41, a-40)
prep_to(referred-37, key-41)

(ROOT
  (S
    (NP (DT An) (NNP Esbat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN ritual) (NN observance))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (JJ full) (NN moon))
              (PP (IN within)
                (NP (NNP Wicca))))
            (CC and)
            (NP
              (NP (JJ other) (JJ Wiccan-influenced) (NNS forms))
              (PP (IN of)
                (NP (NNP Neopaganism))))))))
    (. .)))

det(Esbat-2, An-1)
nsubj(observance-6, Esbat-2)
cop(observance-6, is-3)
det(observance-6, a-4)
nn(observance-6, ritual-5)
root(ROOT-0, observance-6)
det(moon-10, the-8)
amod(moon-10, full-9)
prep_of(observance-6, moon-10)
prep_within(moon-10, Wicca-12)
amod(forms-16, other-14)
amod(forms-16, Wiccan-influenced-15)
prep_of(observance-6, forms-16)
conj_and(moon-10, forms-16)
prep_of(forms-16, Neopaganism-18)

(ROOT
  (S
    (NP (DT The) (NNP Embouchure))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN use))
          (PP (IN of)
            (NP (JJ facial) (NNS muscles))))
        (CC and)
        (NP
          (NP (DT the) (NN shaping))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS lips))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN mouthpiece))
                  (PP (IN of)
                    (NP (DT a) (NN wind) (NN instrument))))))))))
    (. .)))

det(Embouchure-2, The-1)
nsubj(use-5, Embouchure-2)
cop(use-5, is-3)
det(use-5, the-4)
root(ROOT-0, use-5)
amod(muscles-8, facial-7)
prep_of(use-5, muscles-8)
det(shaping-11, the-10)
conj_and(use-5, shaping-11)
det(lips-14, the-13)
prep_of(shaping-11, lips-14)
det(mouthpiece-17, the-16)
prep_to(lips-14, mouthpiece-17)
det(instrument-21, a-19)
nn(instrument-21, wind-20)
prep_of(mouthpiece-17, instrument-21)

(ROOT
  (S
    (NP (DT The) (NNP Euphonium))
    (VP (VBZ is)
      (NP (DT a) (JJ conical-bore) (, ,) (JJ baritone-voiced) (NN brass) (NN instrument)))
    (. .)))

det(Euphonium-2, The-1)
nsubj(instrument-9, Euphonium-2)
cop(instrument-9, is-3)
det(instrument-9, a-4)
amod(instrument-9, conical-bore-5)
amod(instrument-9, baritone-voiced-7)
nn(instrument-9, brass-8)
root(ROOT-0, instrument-9)

(ROOT
  (S
    (NP (DT An) (NNP Essay))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ short) (NN piece))
        (PP (IN of)
          (S
            (VP (VBG writing))))))
    (. .)))

det(Essay-2, An-1)
nsubj(piece-6, Essay-2)
cop(piece-6, is-3)
det(piece-6, a-4)
amod(piece-6, short-5)
root(ROOT-0, piece-6)
prepc_of(piece-6, writing-8)

(ROOT
  (S
    (NP (DT An) (NNP Emotion))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ mental)
            (CC and)
            (JJ physiological))
          (NN state))
        (VP (VBN associated)
          (PP (IN with)
            (NP
              (NP (DT a) (JJ wide) (NN variety))
              (PP (IN of)
                (NP (NNS feelings) (, ,) (NNS thoughts) (, ,)
                  (CC and)
                  (NNS behaviors))))))))
    (. .)))

det(Emotion-2, An-1)
nsubj(state-8, Emotion-2)
cop(state-8, is-3)
det(state-8, a-4)
amod(state-8, mental-5)
conj_and(mental-5, physiological-7)
amod(state-8, physiological-7)
root(ROOT-0, state-8)
partmod(state-8, associated-9)
det(variety-13, a-11)
amod(variety-13, wide-12)
prep_with(associated-9, variety-13)
prep_of(variety-13, feelings-15)
prep_of(variety-13, thoughts-17)
conj_and(feelings-15, thoughts-17)
prep_of(variety-13, behaviors-20)
conj_and(feelings-15, behaviors-20)

(ROOT
  (S
    (NP
      (NP (NNP Murakami))
      (PRN (-LRB- -LRB-)
        (VP (VBN ÃƒÅ) (`` ``)
          (S
            (NP (NNP Ã) (NNP ‚))
            (NP
              (NP (NNP Ë) (NNP ‡) (NNP Ã))
              (VP (VBG ‚)
                (NP
                  (NP
                    (NP (NNP Å) (POS '))
                    (NNP Ãƒâ) (NNP ‚) (NNP ¬) (NNP Ã) (NNP ‚) (NNP Â) (NNP ¸) (NNP Ã) (NNP ‚) (NNPS â))
                  (ADJP ($ $) (JJ ¦)))
                ('' '')
                (NP (JJ upper) (NN village)))))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (JJ Japanese) (NN surname)))
    (. .)))

nsubj(surname-33, Murakami-1)
dep(Murakami-1, ÃƒÅ-3)
nn(‚-6, Ã-5)
nsubj(Ã-9, ‚-6)
nn(Ã-9, Ë-7)
nn(Ã-9, ‡-8)
xcomp(ÃƒÅ-3, Ã-9)
partmod(Ã-9, ‚-10)
poss(â-22, Å-11)
nn(â-22, Ãƒâ-13)
nn(â-22, ‚-14)
nn(â-22, ¬-15)
nn(â-22, Ã-16)
nn(â-22, ‚-17)
nn(â-22, Â-18)
nn(â-22, ¸-19)
nn(â-22, Ã-20)
nn(â-22, ‚-21)
dobj(‚-10, â-22)
amod(â-22, $-23)
dep($-23, ¦-24)
amod(village-27, upper-26)
dobj(‚-10, village-27)
cop(surname-33, is-30)
det(surname-33, a-31)
amod(surname-33, Japanese-32)
root(ROOT-0, surname-33)

(ROOT
  (S
    (NP (DT The) (NNP Flute))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN of)
          (NP (DT the) (NN woodwind) (NN family)))))
    (. .)))

det(Flute-2, The-1)
nsubj(instrument-6, Flute-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(family-10, the-8)
nn(family-10, woodwind-9)
prep_of(instrument-6, family-10)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ abstract) (NN algebra)))
    (, ,)
    (NP (DT a) (NNP Field))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT an) (JJ algebraic) (NN structure))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (DT the) (NNS operations))
                (PP (IN of)
                  (NP (NN addition) (, ,) (NN subtraction) (, ,) (NN multiplication)
                    (CC and)
                    (NN division))))
              (PRN (-LRB- -LRB-)
                (PP (IN except)
                  (NP
                    (NP (NN division))
                    (PP (IN by)
                      (NP (CD zero)))))
                (-RRB- -RRB-))
              (VP (MD may)
                (VP (VB be)
                  (VP (VBN performed)))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJ same) (NNS rules) (NN hold))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP are)
                (ADJP (JJ familiar)
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN arithmetic))
                      (PP (IN of)
                        (NP (JJ ordinary) (NNS numbers))))))))))))
    (. .)))

amod(algebra-3, abstract-2)
prep_in(structure-10, algebra-3)
det(Field-6, a-5)
nsubj(structure-10, Field-6)
cop(structure-10, is-7)
det(structure-10, an-8)
amod(structure-10, algebraic-9)
root(ROOT-0, structure-10)
rel(performed-31, which-12)
det(operations-14, the-13)
nsubjpass(performed-31, operations-14)
prep_of(operations-14, addition-16)
prep_of(operations-14, subtraction-18)
conj_and(addition-16, subtraction-18)
prep_of(operations-14, multiplication-20)
conj_and(addition-16, multiplication-20)
prep_of(operations-14, division-22)
conj_and(addition-16, division-22)
dep(performed-31, except-24)
pobj(except-24, division-25)
prep_by(division-25, zero-27)
aux(performed-31, may-29)
auxpass(performed-31, be-30)
rcmod(structure-10, performed-31)
det(hold-37, the-34)
amod(hold-37, same-35)
nn(hold-37, rules-36)
conj_and(structure-10, hold-37)
nsubj(familiar-40, hold-37)
cop(familiar-40, are-39)
rcmod(hold-37, familiar-40)
det(arithmetic-43, the-42)
prep_from(familiar-40, arithmetic-43)
amod(numbers-46, ordinary-45)
prep_of(arithmetic-43, numbers-46)

(ROOT
  (S
    (S
      (NP (DT The) (NN term) (NN Fiddle))
      (VP (VBZ refers)
        (PP (TO to)
          (NP (DT a) (NN violin)))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ colloquial) (NN term))
          (PP (IN for)
            (NP
              (NP (DT the) (NN instrument))
              (VP (VBN used)
                (PP (IN by)
                  (NP
                    (NP (NNS players))
                    (PP (IN in)
                      (NP (DT all) (NNS genres))))))
              (, ,)
              (PP (VBG including)
                (NP (JJ classical) (NN music))))))))
    (. .)))

det(Fiddle-3, The-1)
nn(Fiddle-3, term-2)
nsubj(refers-4, Fiddle-3)
root(ROOT-0, refers-4)
det(violin-7, a-6)
prep_to(refers-4, violin-7)
nsubj(term-13, it-9)
cop(term-13, is-10)
det(term-13, a-11)
amod(term-13, colloquial-12)
parataxis(refers-4, term-13)
det(instrument-16, the-15)
prep_for(term-13, instrument-16)
partmod(instrument-16, used-17)
agent(used-17, players-19)
det(genres-22, all-21)
prep_in(players-19, genres-22)
amod(music-26, classical-25)
prep_including(instrument-16, music-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Flugelhorn))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN spelled)
          (NP
            (NP (NN fluegelhorn))
            (CC or)
            (NP
              (NP (NNP flÃƒâˆžÃ) (NNP ‚) (NNP Ï))
              (NP ($ $) (CD gelhorn)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN brass) (NN instrument))
        (VP (VBG resembling)
          (NP (DT a) (NN trumpet))
          (PP (CC but)
            (PP (IN with)
              (NP (DT a) (JJR wider) (, ,) (JJ conical) (NNS bore)))))))
    (. .)))

det(Flugelhorn-2, The-1)
nsubj(instrument-17, Flugelhorn-2)
advmod(spelled-5, also-4)
dep(Flugelhorn-2, spelled-5)
dobj(spelled-5, fluegelhorn-6)
nn(Ï-10, flÃƒâˆžÃ-8)
nn(Ï-10, ‚-9)
dobj(spelled-5, Ï-10)
conj_or(fluegelhorn-6, Ï-10)
dep(Ï-10, $-11)
num($-11, gelhorn-12)
cop(instrument-17, is-14)
det(instrument-17, a-15)
nn(instrument-17, brass-16)
root(ROOT-0, instrument-17)
partmod(instrument-17, resembling-18)
det(trumpet-20, a-19)
attr(resembling-18, trumpet-20)
cc(resembling-18, but-21)
det(bore-27, a-23)
amod(bore-27, wider-24)
amod(bore-27, conical-26)
prep_with(resembling-18, bore-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NN currency)))
    (, ,)
    (NP
      (NP (NNP Frank))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (NN franc))
        (-RRB- -RRB-)))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN currency))
          (PP (IN of)
            (NP (NNP Switzerland)))))
      (PP (IN since)
        (NP (CD 1850))))
    (. .)))

prep_in(refers-9, currency-2)
nsubj(refers-9, Frank-4)
dep(franc-7, or-6)
dep(Frank-4, franc-7)
root(ROOT-0, refers-9)
det(currency-12, the-11)
prep_to(refers-9, currency-12)
prep_of(currency-12, Switzerland-14)
prep_since(refers-9, 1850-16)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ mathematical) (NNS terms)))
    (, ,)
    (NP (DT a) (NNP Fullerene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ trivalent) (NN convex) (NN polyhedron))
        (PP (IN with)
          (NP
            (ADJP (JJ pentagonal)
              (CC and)
              (JJ hexagonal))
            (NNS faces)))))
    (. .)))

amod(terms-3, mathematical-2)
prep_in(polyhedron-11, terms-3)
det(Fullerene-6, a-5)
nsubj(polyhedron-11, Fullerene-6)
cop(polyhedron-11, is-7)
det(polyhedron-11, a-8)
amod(polyhedron-11, trivalent-9)
nn(polyhedron-11, convex-10)
root(ROOT-0, polyhedron-11)
amod(faces-16, pentagonal-13)
conj_and(pentagonal-13, hexagonal-15)
amod(faces-16, hexagonal-15)
prep_with(polyhedron-11, faces-16)

(ROOT
  (S
    (NP (DT The) (NN order) (NNS Falconiformes))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN group))
        (PP (IN of)
          (NP
            (NP
              (QP (RB about) (CD 290))
              (NNS species))
            (PP (IN of)
              (NP
                (NP (NNS birds))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP include)
                      (NP
                        (NP (DT the) (JJ diurnal) (NNS birds))
                        (PP (IN of)
                          (NP (NN prey)))))))))))))
    (. .)))

det(Falconiformes-3, The-1)
nn(Falconiformes-3, order-2)
nsubj(group-6, Falconiformes-3)
cop(group-6, is-4)
det(group-6, a-5)
root(ROOT-0, group-6)
quantmod(290-9, about-8)
num(species-10, 290-9)
prep_of(group-6, species-10)
prep_of(species-10, birds-12)
nsubj(include-14, birds-12)
rcmod(birds-12, include-14)
det(birds-17, the-15)
amod(birds-17, diurnal-16)
dobj(include-14, birds-17)
prep_of(birds-17, prey-19)

(ROOT
  (S
    (NP (DT The) (NNPS Fagales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (PP (VBG including)
              (NP
                (NP (DT some))
                (PP (IN of)
                  (NP (DT the)
                    (ADJP (JJS best) (VBN known))
                    (NNS trees)))))))))
    (. .)))

det(Fagales-2, The-1)
nsubj(order-5, Fagales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
prep_including(plants-8, some-11)
det(trees-16, the-13)
dep(known-15, best-14)
amod(trees-16, known-15)
prep_of(some-11, trees-16)

(ROOT
  (S
    (NP (DT A) (NNP Fantasy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN situation))
        (VP (VBN imagined)
          (PP (IN by)
            (NP
              (NP (DT an) (NN individual)
                (CC or)
                (NN group))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP
                    (VP (VBZ does) (RB not)
                      (VP (VB correspond)
                        (PP (IN with)
                          (NP (NN reality)))))
                    (CC but)
                    (VP (VBZ expresses)
                      (NP
                        (NP (JJ certain) (NNS desires)
                          (CC or)
                          (NNS aims))
                        (PP (IN of)
                          (NP (PRP$ its) (NN creator)))))))))))))
    (. .)))

det(Fantasy-2, A-1)
nsubj(situation-5, Fantasy-2)
cop(situation-5, is-3)
det(situation-5, a-4)
root(ROOT-0, situation-5)
partmod(situation-5, imagined-6)
det(individual-9, an-8)
agent(imagined-6, individual-9)
nsubj(correspond-16, individual-9)
nsubj(expresses-20, individual-9)
agent(imagined-6, group-11)
conj_or(individual-9, group-11)
nsubj(correspond-16, group-11)
aux(correspond-16, does-14)
neg(correspond-16, not-15)
rcmod(individual-9, correspond-16)
prep_with(correspond-16, reality-18)
rcmod(individual-9, expresses-20)
conj_but(correspond-16, expresses-20)
amod(desires-22, certain-21)
dobj(expresses-20, desires-22)
dobj(expresses-20, aims-24)
conj_or(desires-22, aims-24)
poss(creator-27, its-26)
prep_of(desires-22, creator-27)

(ROOT
  (S
    (NP (DT A) (NN Stage))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP
            (ADVP (RB stratigraphy))
            (DT the) (NN succession))
          (PP (IN of)
            (NP
              (NP (NN rock) (NN strata))
              (VP (VBN laid)
                (S
                  (VP (VBG <PRT>)
                    (PRT (RP down))
                    (NP
                      (NP (NNP </PRT>))
                      (PP (IN in)
                        (NP
                          (NP (DT an) (NN age))
                          (PP (IN of)
                            (NP (DT the) (JJ geologic) (NN timescale))))))))))))))
    (. .)))

det(Stage-2, A-1)
nsubj(is-3, Stage-2)
root(ROOT-0, is-3)
advmod(succession-7, stratigraphy-5)
det(succession-7, the-6)
prep_in(is-3, succession-7)
nn(strata-10, rock-9)
prep_of(succession-7, strata-10)
partmod(strata-10, laid-11)
xcomp(laid-11, <PRT>-12)
prt(<PRT>-12, down-13)
dobj(<PRT>-12, </PRT>-14)
det(age-17, an-16)
prep_in(</PRT>-14, age-17)
det(timescale-21, the-19)
amod(timescale-21, geologic-20)
prep_of(age-17, timescale-21)

(ROOT
  (S
    (NP (DT A) (NNPS Fetus))
    (PRN (-LRB- -LRB-)
      (CC or)
      (S
        (VP
          (VP (VBZ foetus))
          (CC or)
          (VP (VBZ fÃƒâˆ) (`` `)
            (S
              (NP (NNP Ã) (NNP ‚))
              (VP (VB â)
                (NP ($ $) (CD žtus)))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (UCP
        (NP (DT a) (VBG developing) (NN mammal))
        (CC or)
        (ADJP
          (NP (JJ other) (NNS viviparous))
          (JJ vertebrate)))
      (, ,)
      (PP
        (PP (IN after)
          (NP (DT the) (JJ embryonic) (NN stage)))
        (CC and)
        (PP (IN before)
          (NP (NN birth)))))
    (. .)))

det(Fetus-2, A-1)
nsubj(mammal-18, Fetus-2)
nsubj(vertebrate-22, Fetus-2)
dep(foetus-5, or-4)
parataxis(mammal-18, foetus-5)
conj_or(foetus-5, fÃƒâˆ-7)
parataxis(mammal-18, fÃƒâˆ-7)
nn(‚-10, Ã-9)
nsubj(â-11, ‚-10)
ccomp(fÃƒâˆ-7, â-11)
dobj(â-11, $-12)
num($-12, žtus-13)
cop(mammal-18, is-15)
det(mammal-18, a-16)
amod(mammal-18, developing-17)
root(ROOT-0, mammal-18)
conj_and(mammal-18, mammal-18')
amod(viviparous-21, other-20)
npadvmod(vertebrate-22, viviparous-21)
conj_or(mammal-18, vertebrate-22)
det(stage-27, the-25)
amod(stage-27, embryonic-26)
prep_after(mammal-18, stage-27)
prep_before(mammal-18', birth-30)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the)
        (ADJP (JJS broadest) (JJ possible))
        (NN sense)))
    (, ,)
    (NP (NNP Fencing))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN art))
        (PP (IN of)
          (NP
            (NP (JJ armed) (NN combat))
            (VP (VBG involving)
              (S
                (VP
                  (VP (VBG cutting))
                  (, ,)
                  (VP (VBG stabbing))
                  (, ,)
                  (CC or)
                  (VP (VBG bludgeoning)
                    (NP
                      (NP (NNS weapons))
                      (VP
                        (VP
                          (ADVP (RB directly))
                          (VBN manipulated)
                          (PP (IN by)
                            (NP (NN hand))))
                        (, ,)
                        (CONJP (RB rather) (IN than))
                        (VP (VBN shot) (, ,) (VBN thrown)
                          (CC or)
                          (VBN positioned))))))))))))
    (. .)))

det(sense-5, the-2)
dep(possible-4, broadest-3)
amod(sense-5, possible-4)
prep_in(art-10, sense-5)
nsubj(art-10, Fencing-7)
cop(art-10, is-8)
det(art-10, the-9)
root(ROOT-0, art-10)
amod(combat-13, armed-12)
prep_of(art-10, combat-13)
partmod(combat-13, involving-14)
ccomp(involving-14, cutting-15)
ccomp(involving-14, stabbing-17)
conj_or(cutting-15, stabbing-17)
ccomp(involving-14, bludgeoning-20)
conj_or(cutting-15, bludgeoning-20)
dobj(bludgeoning-20, weapons-21)
advmod(manipulated-23, directly-22)
dep(weapons-21, manipulated-23)
prep_by(manipulated-23, hand-25)
dep(weapons-21, shot-29)
conj_negcc(manipulated-23, shot-29)
conj_negcc(manipulated-23, thrown-31)
conj_or(shot-29, thrown-31)
conj_negcc(manipulated-23, positioned-33)
conj_or(shot-29, positioned-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP
      (NP (DT a) (NN Fugue))
      (PRN (-LRB- -LRB-)
        (S
          (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
          (VP (VBP ‚)
            (VP (VBG âˆšfjuÃƒâ)
              (S
                (NP
                  (QP ($ $) (CD '') (CD Ã)))
                (VP (SYM ‚)
                  (NP (FW âˆ) (FW †) (FW g)))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (JJ contrapuntal) (NN composition)
            (CC or)
            (NN technique)))
        (PP (IN of)
          (NP
            (NP (NN composition))
            (PP (IN for)
              (NP
                (NP (DT a) (VBN fixed) (NN number))
                (PP (IN of)
                  (NP
                    (NP (NNS parts))
                    (, ,)
                    (VP
                      (ADVP (RB normally))
                      (VBN referred)
                      (S
                        (VP (TO to)))
                      (PP (IN as) ('' '')
                        (NP (NNS voices))))))))
            ('' '')))))
    (. .)))

prep_in(type-23, music-2)
det(Fugue-5, a-4)
nsubj(type-23, Fugue-5)
nn(Ã-10, Ãƒâ-7)
nn(Ã-10, $-8)
nsubj(‚-11, Ã-10)
dep(Fugue-5, ‚-11)
dep(‚-11, âˆšfjuÃƒâ-12)
nsubj(g-19, $-13)
number($-13, Ã-15)
dep(g-19, ‚-16)
nn(g-19, âˆ-17)
nn(g-19, †-18)
ccomp(âˆšfjuÃƒâ-12, g-19)
cop(type-23, is-21)
det(type-23, a-22)
root(ROOT-0, type-23)
amod(composition-26, contrapuntal-25)
prep_of(type-23, composition-26)
prep_of(type-23, technique-28)
conj_or(composition-26, technique-28)
prep_of(type-23, composition-30)
det(number-34, a-32)
amod(number-34, fixed-33)
prep_for(composition-30, number-34)
prep_of(number-34, parts-36)
xsubj(to-40, parts-36)
advmod(referred-39, normally-38)
partmod(parts-36, referred-39)
xcomp(referred-39, to-40)
prep_as(referred-39, voices-43)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (DT a) (NNP Force))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN push)
          (CC or)
          (NN pull))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB cause)
                (NP
                  (NP (DT an) (NN object))
                  (PP (IN with)
                    (NP (NN mass))))
                (S
                  (VP (TO to)
                    (VP (VB accelerate))))))))))
    (. .)))

prep_in(push-8, physics-2)
det(Force-5, a-4)
nsubj(push-8, Force-5)
cop(push-8, is-6)
det(push-8, a-7)
root(ROOT-0, push-8)
nsubj(cause-13, push-8)
conj_or(push-8, pull-10)
nsubj(cause-13, pull-10)
aux(cause-13, can-12)
rcmod(push-8, cause-13)
det(object-15, an-14)
dobj(cause-13, object-15)
prep_with(object-15, mass-17)
aux(accelerate-19, to-18)
xcomp(cause-13, accelerate-19)

(ROOT
  (S
    (NP (DT A) (NNP Fractal))
    (VP (VBZ is)
      (ADVP (RB generally))
      ('' '')
      (S
        (NP
          (NP (DT a)
            (ADJP (JJ rough)
              (CC or)
              (JJ fragmented))
            (NN geometric) (NN shape))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN split)
                    (PP (IN into)
                      (NP
                        (NP (NNS parts))
                        (, ,)
                        (SBAR
                          (WHNP
                            (NP (DT each))
                            (WHPP (IN of)
                              (WHNP (WDT which))))
                          (S
                            (VP (VBZ is)
                              (PRN (-LRB- -LRB-)
                                (ADVP
                                  (ADVP (IN at) (JJS least))
                                  (RB approximately))
                                (-RRB- -RRB-))
                              (NP
                                (NP
                                  (NP (DT a) (JJ reduced-size) (NN copy))
                                  (PP (IN of)
                                    (NP (DT the) (NN whole))))
                                (, ,) ('' '')
                                (NP
                                  (NP (DT a) (NN property))
                                  (VP (VBN called)
                                    (ADVP (RB self-similarity))))))))))))))))))
    (. .)))

det(Fractal-2, A-1)
nsubj(is-3, Fractal-2)
root(ROOT-0, is-3)
advmod(is-3, generally-4)
det(shape-11, a-6)
amod(shape-11, rough-7)
conj_or(rough-7, fragmented-9)
amod(shape-11, fragmented-9)
nn(shape-11, geometric-10)
dep(is-3, shape-11)
nsubjpass(split-15, shape-11)
aux(split-15, can-13)
auxpass(split-15, be-14)
rcmod(shape-11, split-15)
prep_into(split-15, parts-17)
prep_of(each-19, parts-17)
nsubj(copy-30, each-19)
cop(copy-30, is-22)
dep(copy-30, at-24)
pobj(at-24, least-25)
advmod(at-24, approximately-26)
det(copy-30, a-28)
amod(copy-30, reduced-size-29)
rcmod(parts-17, copy-30)
det(whole-33, the-32)
prep_of(copy-30, whole-33)
det(property-37, a-36)
dep(copy-30, property-37)
partmod(property-37, called-38)
advmod(called-38, self-similarity-39)

(ROOT
  (S
    (NP (DT A) (NNP Fluid))
    (VP (VBZ is)
      (VP (VBN defined)
        (SBAR (IN as)
          (S
            (NP
              (NP (DT a) (NN substance))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB continually))
                  (VP (VBZ deforms)
                    (NP (-LRB- -LRB-) (NNS flows) (-RRB- -RRB-))
                    (PP (IN under)
                      (NP (DT an) (JJ applied) (NN shear)))))))
            (VP (VBP stress)
              (ADVP (RB regardless)
                (PP (IN of)
                  (NP (WRB how) (JJ small))))
              (NP (DT the) (JJ applied) (NN stress)))))))
    (. .)))

det(Fluid-2, A-1)
nsubjpass(defined-4, Fluid-2)
auxpass(defined-4, is-3)
root(ROOT-0, defined-4)
mark(stress-18, as-5)
det(substance-7, a-6)
nsubj(deforms-10, substance-7)
nsubj(stress-18, substance-7)
advmod(deforms-10, continually-9)
rcmod(substance-7, deforms-10)
dobj(deforms-10, flows-12)
det(shear-17, an-15)
amod(shear-17, applied-16)
prep_under(deforms-10, shear-17)
advcl(defined-4, stress-18)
advmod(small-22, how-21)
prep_regardless_of(stress-18, small-22)
det(stress-25, the-23)
amod(stress-25, applied-24)
dobj(stress-18, stress-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP (NNP Fenrir)
      (CC or)
      (NNP Fenrisulfr))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN wolf))
        (, ,)
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NNP Loki))))
        (CC and)
        (NP
          (NP (DT the) (NNS giantess))
          (NP (NNP AngrboÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP °) (NNP a)))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(wolf-10, mythology-3)
nsubj(wolf-10, Fenrir-5)
conj_or(Fenrir-5, Fenrisulfr-7)
nsubj(wolf-10, Fenrisulfr-7)
cop(wolf-10, is-8)
det(wolf-10, a-9)
root(ROOT-0, wolf-10)
det(son-13, the-12)
conj_and(wolf-10, son-13)
prep_of(son-13, Loki-15)
det(giantess-18, the-17)
conj_and(wolf-10, giantess-18)
nn(a-23, AngrboÃƒâˆžÃ-19)
nn(a-23, ‚-20)
nn(a-23, Â-21)
nn(a-23, °-22)
dep(giantess-18, a-23)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN category) (NN theory))
        (, ,)
        (NP
          (NP (DT a) (NN branch))
          (PP (IN of)
            (NP (NNS mathematics))))))
    (, ,)
    (NP (DT a) (NNP Functor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN type))
        (PP (IN of)
          (NP
            (NP (NN mapping))
            (PP (IN between)
              (NP (NNS categories)))))))
    (. .)))

nn(theory-3, category-2)
prep_in(type-15, theory-3)
det(branch-6, a-5)
appos(theory-3, branch-6)
prep_of(branch-6, mathematics-8)
det(Functor-11, a-10)
nsubj(type-15, Functor-11)
cop(type-15, is-12)
det(type-15, a-13)
amod(type-15, special-14)
root(ROOT-0, type-15)
prep_of(type-15, mapping-17)
prep_between(mapping-17, categories-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP Fimbulwinter))
      (PRN (-LRB- -LRB-)
        (NP (NNP Old) (NNP Norse) (NNP Fimbulvetr))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ immediate) (NN prelude))
        (PP (TO to)
          (NP
            (NP (DT the) (NN end))
            (PP (IN of)
              (NP
                (NP (DT the) (NN world))
                (, ,)
                (NP (NNP RagnarÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ¶) (NNP k))))))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(prelude-14, mythology-3)
nsubj(prelude-14, Fimbulwinter-5)
nn(Fimbulvetr-9, Old-7)
nn(Fimbulvetr-9, Norse-8)
appos(Fimbulwinter-5, Fimbulvetr-9)
cop(prelude-14, is-11)
det(prelude-14, the-12)
amod(prelude-14, immediate-13)
root(ROOT-0, prelude-14)
det(end-17, the-16)
prep_to(prelude-14, end-17)
det(world-20, the-19)
prep_of(end-17, world-20)
nn(k-26, RagnarÃƒâˆžÃ-22)
nn(k-26, ‚-23)
nn(k-26, Â-24)
nn(k-26, ¶-25)
appos(world-20, k-26)

(ROOT
  (S
    (NP (DT A) (NNP Formant))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN peak))
        (PP (IN in)
          (NP
            (NP (DT the) (NN frequency) (NN spectrum))
            (PP (IN of)
              (NP
                (NP (DT a) (NN sound))
                (VP (VBN caused)
                  (PP (IN by)
                    (NP (JJ acoustic) (NN resonance))))))))))
    (. .)))

det(Formant-2, A-1)
nsubj(peak-5, Formant-2)
cop(peak-5, is-3)
det(peak-5, a-4)
root(ROOT-0, peak-5)
det(spectrum-9, the-7)
nn(spectrum-9, frequency-8)
prep_in(peak-5, spectrum-9)
det(sound-12, a-11)
prep_of(spectrum-9, sound-12)
partmod(sound-12, caused-13)
amod(resonance-16, acoustic-15)
agent(caused-13, resonance-16)

(ROOT
  (S
    (NP (DT A) (NNP Fin))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN surface))
        (VP (VBN used)
          (S
            (VP
              (VP (TO to)
                (VP (VB produce)
                  (NP (NN lift)
                    (CC and)
                    (NN thrust))))
              (CC or)
              (VP (TO to)
                (VP (VB steer)
                  (SBAR (IN while)
                    (S
                      (VP (VBG traveling)
                        (PP (IN in)
                          (NP
                            (NP (NN water))
                            (, ,)
                            (NP (NN air))
                            (, ,)
                            (CC or)
                            (NP (JJ other) (NN fluid) (NNS media))))))))))))))
    (. .)))

det(Fin-2, A-1)
nsubj(surface-5, Fin-2)
cop(surface-5, is-3)
det(surface-5, a-4)
root(ROOT-0, surface-5)
partmod(surface-5, used-6)
aux(produce-8, to-7)
ccomp(used-6, produce-8)
dobj(produce-8, lift-9)
dobj(produce-8, thrust-11)
conj_and(lift-9, thrust-11)
aux(steer-14, to-13)
ccomp(used-6, steer-14)
conj_or(produce-8, steer-14)
mark(traveling-16, while-15)
advcl(steer-14, traveling-16)
prep_in(traveling-16, water-18)
prep_in(traveling-16, air-20)
conj_or(water-18, air-20)
amod(media-25, other-23)
nn(media-25, fluid-24)
prep_in(traveling-16, media-25)
conj_or(water-18, media-25)

(ROOT
  (S
    (NP (NNP Frankenstein))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN novel))
        (VP (VBN infused)
          (PP (IN with)
            (NP
              (NP (DT some) (NNS elements))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ Gothic) (NN novel))
                  (CC and)
                  (NP (DT the) (JJ Romantic) (NN movement)))))))))
    (. .)))

nsubj(novel-4, Frankenstein-1)
cop(novel-4, is-2)
det(novel-4, a-3)
root(ROOT-0, novel-4)
partmod(novel-4, infused-5)
det(elements-8, some-7)
prep_with(infused-5, elements-8)
det(novel-12, the-10)
amod(novel-12, Gothic-11)
prep_of(elements-8, novel-12)
det(movement-16, the-14)
amod(movement-16, Romantic-15)
prep_of(elements-8, movement-16)
conj_and(novel-12, movement-16)

(ROOT
  (S
    (NP (DT A) (NNP Forge))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN workplace))
        (PP (IN of)
          (NP
            (NP (DT a) (NN smith))
            (CC or)
            (NP (DT a) (NN blacksmith))))))
    (. .)))

det(Forge-2, A-1)
nsubj(workplace-5, Forge-2)
cop(workplace-5, is-3)
det(workplace-5, the-4)
root(ROOT-0, workplace-5)
det(smith-8, a-7)
prep_of(workplace-5, smith-8)
det(blacksmith-11, a-10)
prep_of(workplace-5, blacksmith-11)
conj_or(smith-8, blacksmith-11)

(ROOT
  (S
    (NP (DT A) (NN Forest))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN area))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ high) (NN density))
            (PP (IN of)
              (NP (NNS trees)))))))
    (. .)))

det(Forest-2, A-1)
nsubj(area-5, Forest-2)
cop(area-5, is-3)
det(area-5, an-4)
root(ROOT-0, area-5)
det(density-9, a-7)
amod(density-9, high-8)
prep_with(area-5, density-9)
prep_of(density-9, trees-11)

(ROOT
  (S
    (NP (DT A) (NNP Kite))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBG flying) (JJ tethered) (NN object))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ depends)
              (PP (IN upon)
                (NP
                  (NP (DT the) (NN tension))
                  (PP (IN of)
                    (NP (DT a) (VBG tethering) (NN system))))))))))
    (. .)))

det(Kite-2, A-1)
nsubj(object-7, Kite-2)
cop(object-7, is-3)
det(object-7, a-4)
amod(object-7, flying-5)
amod(object-7, tethered-6)
root(ROOT-0, object-7)
nsubj(depends-9, object-7)
rcmod(object-7, depends-9)
det(tension-12, the-11)
prep_upon(depends-9, tension-12)
det(system-16, a-14)
amod(system-16, tethering-15)
prep_of(tension-12, system-16)

(ROOT
  (S
    (NP (DT A) (NNP Fanzine))
    (PRN (-LRB- -LRB-)
      (VP (VB see)
        (ADVP (RB also))
        (: :)
        (ADVP (RB zine)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ nonprofessional) (NN publication))
        (VP (VBN produced)
          (PP (IN by)
            (NP
              (NP (NNS fans))
              (PP (IN of)
                (NP
                  (NP (DT a)
                    (ADJP (JJ particular) (JJ cultural))
                    (NN phenomenon))
                  (PRN (-LRB- -LRB-)
                    (PP (JJ such) (IN as)
                      (NP (DT a) (JJ literary)
                        (CC or)
                        (JJ musical) (NN genre)))
                    (-RRB- -RRB-))))))
          (PP (IN for)
            (NP
              (NP (DT the) (NN pleasure))
              (PP (IN of)
                (NP
                  (NP (NNS others))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP share)
                        (NP (PRP$ their) (NN interest))))))))))))
    (. .)))

det(Fanzine-2, A-1)
nsubj(publication-12, Fanzine-2)
dep(publication-12, see-4)
advmod(see-4, also-5)
advmod(see-4, zine-7)
cop(publication-12, is-9)
det(publication-12, a-10)
amod(publication-12, nonprofessional-11)
root(ROOT-0, publication-12)
partmod(publication-12, produced-13)
agent(produced-13, fans-15)
det(phenomenon-20, a-17)
amod(cultural-19, particular-18)
amod(phenomenon-20, cultural-19)
prep_of(fans-15, phenomenon-20)
det(genre-28, a-24)
amod(genre-28, literary-25)
conj_or(literary-25, musical-27)
amod(genre-28, musical-27)
prep_such_as(phenomenon-20, genre-28)
det(pleasure-32, the-31)
prep_for(produced-13, pleasure-32)
prep_of(pleasure-32, others-34)
nsubj(share-36, others-34)
rcmod(others-34, share-36)
poss(interest-38, their-37)
dobj(share-36, interest-38)

(ROOT
  (S
    (S
      (NP (DT The) (NN name) ('' '') (NNS Fudge))
      ('' '')
      (VP (VBD was)
        (ADVP (RB once)
          (NP (DT an) (NN acronym))
          (PP (IN for)
            (NP
              (NP (NNP Freeform) (NNP Universal) (NNP Donated))
              (PRN (-LRB- -LRB-)
                (ADVP (RB later))
                (, ,)
                (NP (NNP Do-it-yourself))
                (-RRB- -RRB-)))))
        (NP (NNP Gaming) (NNP Engine))))
    (CC and)
    (, ,)
    (S
      (SBAR (IN though)
        (S
          (NP (DT the) (NN acronym))
          (VP (VBZ has)
            (ADVP (IN since))
            (VP (VBN been)
              (VP (VBN dropped))))))
      (, ,)
      (NP (DT that) (NN phrase))
      (VP (VBZ remains)
        (NP
          (NP (DT a) (JJ good) (NN summation))
          (PP (IN of)
            (NP
              (NP (DT the) (NN game) (POS 's))
              (NN design) (NNS goals))))))
    (. .)))

det(Fudge-4, The-1)
nn(Fudge-4, name-2)
nsubj(Engine-20, Fudge-4)
cop(Engine-20, was-6)
advmod(Engine-20, once-7)
det(acronym-9, an-8)
pobj(once-7, acronym-9)
nn(Donated-13, Freeform-11)
nn(Donated-13, Universal-12)
prep_for(once-7, Donated-13)
dep(Do-it-yourself-17, later-15)
appos(Donated-13, Do-it-yourself-17)
nn(Engine-20, Gaming-19)
root(ROOT-0, Engine-20)
mark(dropped-29, though-23)
det(acronym-25, the-24)
nsubjpass(dropped-29, acronym-25)
aux(dropped-29, has-26)
advmod(dropped-29, since-27)
auxpass(dropped-29, been-28)
advcl(summation-36, dropped-29)
det(phrase-32, that-31)
nsubj(summation-36, phrase-32)
cop(summation-36, remains-33)
det(summation-36, a-34)
amod(summation-36, good-35)
ccomp(Engine-20, summation-36)
conj_and(Engine-20, summation-36)
det(game-39, the-38)
poss(goals-42, game-39)
nn(goals-42, design-41)
prep_of(summation-36, goals-42)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNP J.) (NNP R.) (NNP R.) (NNP Tolkien) (POS 's))
        (JJ Middle-earth) (NN legendarium)))
    (, ,)
    (NP (NNP Faramir))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fictional) (NN character))
        (VP (VBG appearing)
          (PP (IN in)
            (NP
              (NP (DT The) (NN Lord))
              (PP (IN of)
                (NP (DT the) (NNPS Rings))))))))
    (. .)))

nn(Tolkien-5, J.-2)
nn(Tolkien-5, R.-3)
nn(Tolkien-5, R.-4)
poss(legendarium-8, Tolkien-5)
amod(legendarium-8, Middle-earth-7)
prep_in(character-14, legendarium-8)
nsubj(character-14, Faramir-10)
cop(character-14, is-11)
det(character-14, a-12)
amod(character-14, fictional-13)
root(ROOT-0, character-14)
partmod(character-14, appearing-15)
det(Lord-18, The-17)
prep_in(appearing-15, Lord-18)
det(Rings-21, the-20)
prep_of(Lord-18, Rings-21)

(ROOT
  (S
    (NP (NNP Fortran))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ general-purpose) (, ,) (JJ procedural) (, ,) (JJ imperative) (NN programming) (NN language))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADVP (RB especially))
              (VP (VBN suited)
                (PP (TO to)
                  (NP
                    (NP (JJ numeric) (NN computation))
                    (CC and)
                    (NP (JJ scientific) (NN computing))))))))))
    (. .)))

nsubj(language-10, Fortran-1)
cop(language-10, is-2)
det(language-10, a-3)
amod(language-10, general-purpose-4)
amod(language-10, procedural-6)
amod(language-10, imperative-8)
nn(language-10, programming-9)
root(ROOT-0, language-10)
nsubjpass(suited-14, language-10)
auxpass(suited-14, is-12)
advmod(suited-14, especially-13)
rcmod(language-10, suited-14)
amod(computation-17, numeric-16)
prep_to(suited-14, computation-17)
amod(computing-20, scientific-19)
prep_to(suited-14, computing-20)
conj_and(computation-17, computing-20)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Foobar))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ common) (NN placeholder) (NN name))
        (, ,)
        (VP
          (ADVP (RB also))
          (VBN referred)
          (PP (TO to)
            (NP
              (NP
                (ADJP (RB as) (JJ metasyntactic))
                (NN variable))
              (, ,)
              (VP (VBN used)
                (PP (IN in)
                  (NP
                    (NP (NN computer) (NN programming))
                    (CC or)
                    (NP (JJ computer-related) (NN documentation))))))))))
    (. .)))

det(Foobar-3, The-1)
nn(Foobar-3, term-2)
nsubj(name-8, Foobar-3)
cop(name-8, is-4)
det(name-8, a-5)
amod(name-8, common-6)
nn(name-8, placeholder-7)
root(ROOT-0, name-8)
advmod(referred-11, also-10)
partmod(name-8, referred-11)
advmod(metasyntactic-14, as-13)
amod(variable-15, metasyntactic-14)
prep_to(referred-11, variable-15)
partmod(variable-15, used-17)
nn(programming-20, computer-19)
prep_in(used-17, programming-20)
amod(documentation-23, computer-related-22)
prep_in(used-17, documentation-23)
conj_or(programming-20, documentation-23)

(ROOT
  (S
    (NP (DT A) (NNP Funeral))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN ceremony))
        (VP (VBG marking)
          (NP
            (NP (DT a) (NN person) (POS 's))
            (NN death)))))
    (. .)))

det(Funeral-2, A-1)
nsubj(ceremony-5, Funeral-2)
cop(ceremony-5, is-3)
det(ceremony-5, a-4)
root(ROOT-0, ceremony-5)
partmod(ceremony-5, marking-6)
det(person-8, a-7)
poss(death-10, person-8)
dobj(marking-6, death-10)

(ROOT
  (NP
    (NP (NNP Friesland) (-LRB- -LRB-) (NNP 439))
    (NP (NNP Friesland))
    (. .)))

nn(439-3, Friesland-1)
root(ROOT-0, 439-3)
dep(439-3, Friesland-4)

(ROOT
  (S
    (ADVP (RB ogg))
    (, ,)
    (NP
      (NP (NNP West) (NNP Frisian))
      (: :)
      (VP (VBN FryslÃƒâˆžÃ)
        (NP
          (NP
            (NP (NNP ‚) (NNP Â) (NNS cents) (NN n))
            (, ,)
            (NP (NNP Dutch)))
          (: :)
          (NP (NNP Friesland))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN province))
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NN north))
              (PP (IN of)
                (NP (DT the) (NNPS Netherlands))))
            (CC and)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJR bigger) (NN region))
                  (VP (VBN known)
                    (PP (IN as)
                      (NP (NNP Frisia)))))))))))
    (. .)))

advmod(province-18, ogg-1)
nn(Frisian-4, West-3)
nsubj(province-18, Frisian-4)
partmod(Frisian-4, FryslÃƒâˆžÃ-6)
nn(n-10, ‚-7)
nn(n-10, Â-8)
nn(n-10, cents-9)
dobj(FryslÃƒâˆžÃ-6, n-10)
appos(n-10, Dutch-12)
dep(n-10, Friesland-14)
cop(province-18, is-16)
det(province-18, a-17)
root(ROOT-0, province-18)
det(north-21, the-20)
prep_in(province-18, north-21)
det(Netherlands-24, the-23)
prep_of(north-21, Netherlands-24)
prep_in(province-18, part-26)
conj_and(north-21, part-26)
det(region-30, the-28)
amod(region-30, bigger-29)
prep_of(part-26, region-30)
partmod(region-30, known-31)
prep_as(known-31, Frisia-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Fare))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN fee))
        (VP (VBN paid)
          (PP (IN by)
            (NP
              (NP (DT a) (NN traveler))
              (VP (VBG allowing)
                (S
                  (NP (PRP him)
                    (CC or)
                    (PRP her))
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (NN use))
                        (PP (IN of)
                          (NP
                            (NP (DT a) (JJ public) (NN transport) (NN system))
                            (: :)
                            (NP
                              (NP (NN rail))
                              (, ,)
                              (NP (NN bus))
                              (, ,)
                              (NP (NN taxi)))
                            (, ,)
                            (X (NN etc.))))))))))))))
    (. .)))

det(Fare-2, A-1)
nsubj(fee-5, Fare-2)
cop(fee-5, is-3)
det(fee-5, the-4)
root(ROOT-0, fee-5)
partmod(fee-5, paid-6)
det(traveler-9, a-8)
agent(paid-6, traveler-9)
partmod(traveler-9, allowing-10)
nsubj(make-15, him-11)
conj_or(him-11, her-13)
nsubj(make-15, her-13)
aux(make-15, to-14)
xcomp(allowing-10, make-15)
dobj(make-15, use-16)
det(system-21, a-18)
amod(system-21, public-19)
nn(system-21, transport-20)
prep_of(use-16, system-21)
dep(system-21, rail-23)
appos(rail-23, bus-25)
appos(rail-23, taxi-27)
dep(system-21, etc.-29)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ common) (NN law))
        (NP (JJ legal) (NNS systems))))
    (, ,)
    (NP (DT a) (NNP Felony))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ serious) (NN crime))
        (, ,)
        (VP
          (ADVP (RB often))
          (VBN contrasted)
          (PP (IN with)
            (NP (DT a) (NN misdemeanor))))))
    (. .)))

amod(law-3, common-2)
prep_in(crime-12, law-3)
amod(systems-5, legal-4)
dep(law-3, systems-5)
det(Felony-8, a-7)
nsubj(crime-12, Felony-8)
cop(crime-12, is-9)
det(crime-12, a-10)
amod(crime-12, serious-11)
root(ROOT-0, crime-12)
advmod(contrasted-15, often-14)
partmod(crime-12, contrasted-15)
det(misdemeanor-18, a-17)
prep_with(contrasted-15, misdemeanor-18)

(ROOT
  (S
    (NP (NNP Fermentation))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN process))
          (PP (IN of)
            (NP
              (NP (NN energy) (NN production))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN cell))
                  (PP (IN under)
                    (NP (JJ anaerobic) (NNS conditions)))))))))
      (PRN (-LRB- -LRB-)
        (PP (IN without)
          (NP (NN oxygen)))
        (-RRB- -RRB-)))
    (. .)))

nsubj(refers-2, Fermentation-1)
root(ROOT-0, refers-2)
det(process-5, the-4)
prep_to(refers-2, process-5)
nn(production-8, energy-7)
prep_of(process-5, production-8)
det(cell-11, a-10)
prep_in(production-8, cell-11)
amod(conditions-14, anaerobic-13)
prep_under(cell-11, conditions-14)
dep(refers-2, without-16)
pobj(without-16, oxygen-17)

(ROOT
  (S
    (NP (NNP Fermentation))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN form))
          (PP (IN of)
            (NP
              (NP (JJ anaerobic) (NN respiration))
              (VP (VBN used)
                (ADVP (RB primarily))
                (PP (IN by)
                  (NP (NNS yeasts)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NN oxygen))
                    (VP (VBZ is) (RB not)
                      (ADJP (JJ present)
                        (PP (IN in)
                          (NP
                            (NP (JJ sufficient) (NN quantity))
                            (PP (IN for)
                              (NP (JJ normal) (JJ cellular) (NN respiration)))))))))))))))
    (. .)))

nsubj(refers-2, Fermentation-1)
root(ROOT-0, refers-2)
det(form-5, a-4)
prep_to(refers-2, form-5)
amod(respiration-8, anaerobic-7)
prep_of(form-5, respiration-8)
partmod(respiration-8, used-9)
advmod(used-9, primarily-10)
agent(used-9, yeasts-12)
advmod(present-17, when-13)
nsubj(present-17, oxygen-14)
cop(present-17, is-15)
neg(present-17, not-16)
advcl(used-9, present-17)
amod(quantity-20, sufficient-19)
prep_in(present-17, quantity-20)
amod(respiration-24, normal-22)
amod(respiration-24, cellular-23)
prep_for(quantity-20, respiration-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN industry)))
    (, ,)
    (NP (NNP Fermentation))
    (ADVP (RB typically))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN breakdown)
            (CC and)
            (NN re-assembly))
          (PP (IN of)
            (NP
              (NP (NNS biochemicals))
              (PP (IN for)
                (NP (NN industry)))))))
      (, ,)
      (ADVP (RB often))
      (PP (IN in)
        (NP (JJ aerobic) (NN growth) (NNS conditions))))
    (. .)))

prep_in(refers-6, industry-2)
nsubj(refers-6, Fermentation-4)
advmod(refers-6, typically-5)
root(ROOT-0, refers-6)
det(breakdown-9, the-8)
prep_to(refers-6, breakdown-9)
prep_to(refers-6, re-assembly-11)
conj_and(breakdown-9, re-assembly-11)
prep_of(breakdown-9, biochemicals-13)
prep_for(biochemicals-13, industry-15)
advmod(refers-6, often-17)
amod(conditions-21, aerobic-19)
nn(conditions-21, growth-20)
prep_in(refers-6, conditions-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN food) (NN science)))
    (, ,)
    (NP (NNP Fermentation))
    (VP (MD may)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT the) (NN conversion))
            (PP (IN of)
              (NP (NNS carbohydrates)))))
        (PP (IN into)
          (NP (NNS alcohols)
            (CC or)
            (NNS acids)))
        (PP (IN under)
          (NP
            (NP (JJ anaerobic) (NNS conditions))
            (VP (VBN used)
              (PP (IN for)
                (S
                  (VP (VBG making)
                    (NP (JJ certain) (NNS foods))))))))))
    (. .)))

nn(science-3, food-2)
prep_in(refer-7, science-3)
nsubj(refer-7, Fermentation-5)
aux(refer-7, may-6)
root(ROOT-0, refer-7)
det(conversion-10, the-9)
prep_to(refer-7, conversion-10)
prep_of(conversion-10, carbohydrates-12)
prep_into(refer-7, alcohols-14)
prep_into(refer-7, acids-16)
conj_or(alcohols-14, acids-16)
amod(conditions-19, anaerobic-18)
prep_under(refer-7, conditions-19)
partmod(conditions-19, used-20)
prepc_for(used-20, making-22)
amod(foods-24, certain-23)
dobj(making-22, foods-24)

(ROOT
  (S
    (NP (NNP Fermentation))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN process))
          (PP (IN of)
            (NP
              (NP (NN fermentation))
              (VP
                (ADVP (RB commonly))
                (VBN used)
                (PP (IN in)
                  (NP (NN winemaking)))))))))
    (. .)))

nsubj(refers-2, Fermentation-1)
root(ROOT-0, refers-2)
det(process-5, the-4)
prep_to(refers-2, process-5)
prep_of(process-5, fermentation-7)
advmod(used-9, commonly-8)
partmod(fermentation-7, used-9)
prep_in(used-9, winemaking-11)

(ROOT
  (S
    (NP (NNP Fermentation))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (NP
            (NP (NN fermentation))
            (VP
              (ADVP (RB commonly))
              (VBN used)
              (PP (IN in)
                (NP (NN brewing) (NN beer))))))))
    (. .)))

nsubj(process-4, Fermentation-1)
cop(process-4, is-2)
det(process-4, the-3)
root(ROOT-0, process-4)
prep_of(process-4, fermentation-6)
advmod(used-8, commonly-7)
partmod(fermentation-6, used-8)
nn(beer-11, brewing-10)
prep_in(used-8, beer-11)

(ROOT
  (S
    (NP (DT A) (NN Flag))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN piece))
        (PP (IN of)
          (NP
            (NP (NN cloth))
            (, ,)
            (VP
              (ADVP (RB often))
              (VBN flown)
              (PP (IN from)
                (NP (DT a) (NN pole)
                  (CC or)
                  (NN mast))))
            (, ,)
            (VP
              (ADVP (RB generally))
              (VBN used)
              (ADVP (RB symbolically))
              (PP (IN for)
                (NP (NN signaling)
                  (CC or)
                  (NN identification))))))))
    (. .)))

det(Flag-2, A-1)
nsubj(piece-5, Flag-2)
cop(piece-5, is-3)
det(piece-5, a-4)
root(ROOT-0, piece-5)
prep_of(piece-5, cloth-7)
advmod(flown-10, often-9)
partmod(cloth-7, flown-10)
det(pole-13, a-12)
prep_from(flown-10, pole-13)
prep_from(flown-10, mast-15)
conj_or(pole-13, mast-15)
advmod(used-18, generally-17)
partmod(cloth-7, used-18)
advmod(used-18, symbolically-19)
prep_for(used-18, signaling-21)
prep_for(used-18, identification-23)
conj_or(signaling-21, identification-23)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Horn))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN brass) (NN instrument))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP
                (QP (RB about) (CD 12))
                (NNS feet))
              (PP (IN of)
                (NP
                  (NP (NN tubing))
                  (VP (VBN wrapped)
                    (PP (IN into)
                      (NP
                        (NP (DT a) (NN coil))
                        (PP (IN with)
                          (NP (DT a) (JJ flared) (NN bell)))))))))))))
    (. .)))

det(Horn-2, The-1)
nsubj(instrument-6, Horn-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
nn(instrument-6, brass-5)
root(ROOT-0, instrument-6)
partmod(instrument-6, consisting-7)
quantmod(12-10, about-9)
num(feet-11, 12-10)
prep_of(consisting-7, feet-11)
prep_of(feet-11, tubing-13)
partmod(tubing-13, wrapped-14)
det(coil-17, a-16)
prep_into(wrapped-14, coil-17)
det(bell-21, a-19)
amod(bell-21, flared-20)
prep_with(coil-17, bell-21)

(ROOT
  (S
    (NP (DT A) (NNP Frigate))
    (VP (VBZ is)
      (NP (DT a) (NN warship)))
    (. .)))

det(Frigate-2, A-1)
nsubj(warship-5, Frigate-2)
cop(warship-5, is-3)
det(warship-5, a-4)
root(ROOT-0, warship-5)

(ROOT
  (S
    (NP (DT A) (NN Furlong))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP
            (NP
              (NP (NN distance))
              (PP (IN in)
                (NP (JJ imperial) (NNS units))))
            (CC and)
            (NP
              (NP (NNP U.) (NNP S.))
              (NP (JJ customary) (NNS units)))))))
    (. .)))

det(Furlong-2, A-1)
nsubj(measure-5, Furlong-2)
cop(measure-5, is-3)
det(measure-5, a-4)
root(ROOT-0, measure-5)
prep_of(measure-5, distance-7)
amod(units-10, imperial-9)
prep_in(distance-7, units-10)
nn(S.-13, U.-12)
prep_of(measure-5, S.-13)
conj_and(distance-7, S.-13)
amod(units-15, customary-14)
dep(S.-13, units-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Foot))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN structure))
        (VP (VBN found)
          (PP (IN in)
            (NP
              (NP (JJ many) (NNS animals))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (VP (VBN used)
                      (PP (IN for)
                        (NP (NN locomotion))))))))))))
    (. .)))

det(Foot-2, The-1)
nsubj(structure-5, Foot-2)
cop(structure-5, is-3)
det(structure-5, a-4)
root(ROOT-0, structure-5)
partmod(structure-5, found-6)
amod(animals-9, many-8)
prep_in(found-6, animals-9)
nsubjpass(used-12, animals-9)
auxpass(used-12, is-11)
rcmod(animals-9, used-12)
prep_for(used-12, locomotion-14)

(ROOT
  (S
    (NP (DT A) (NNP Fleming))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN inhabitant))
        (PP (IN of)
          (NP (NNP Flanders))))
      (, ,)
      (S
        (VP (VB see)
          (NP (JJ Flemish) (NNS people)))))
    (. .)))

det(Fleming-2, A-1)
nsubj(inhabitant-5, Fleming-2)
cop(inhabitant-5, is-3)
det(inhabitant-5, an-4)
root(ROOT-0, inhabitant-5)
prep_of(inhabitant-5, Flanders-7)
dep(inhabitant-5, see-9)
amod(people-11, Flemish-10)
dobj(see-9, people-11)

(ROOT
  (S
    (NP (DT The) (NNPS Futurians))
    (VP (VBD were)
      (NP
        (NP (DT an) (JJ influential) (NN group))
        (PP (IN of)
          (NP
            (NP (NN science) (NN fiction) (NNS fans))
            (, ,)
            (SBAR
              (WHNP (DT many)
                (WHPP (IN of)
                  (WHNP (WP whom))))
              (S
                (VP (VBD became)
                  (NP (NNS editors)
                    (CC and)
                    (NNS writers))
                  (ADVP (RB as) (RB well)))))))))
    (. .)))

det(Futurians-2, The-1)
nsubj(group-6, Futurians-2)
cop(group-6, were-3)
det(group-6, an-4)
amod(group-6, influential-5)
root(ROOT-0, group-6)
nn(fans-10, science-8)
nn(fans-10, fiction-9)
prep_of(group-6, fans-10)
pobj(of-13, fans-10)
dep(of-13, many-12)
nsubj(editors-16, of-13)
cop(editors-16, became-15)
rcmod(fans-10, editors-16)
rcmod(fans-10, writers-18)
conj_and(editors-16, writers-18)
advmod(well-20, as-19)
mwe(well-20, as-19)
advmod(editors-16, well-20)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Federalism))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT a) (NN system))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN government))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (NN sovereignty))
                        (VP (VBZ is)
                          (ADJP (RB constitutionally) (VBN divided)
                            (PP (IN between)
                              (NP
                                (NP (DT a) (JJ central) (VBG governing) (NN authority))
                                (CC and)
                                (NP
                                  (NP (JJ constituent) (JJ political) (NNS units))
                                  (PRN (-LRB- -LRB-)
                                    (PP (IN like)
                                      (NP (NNS states)
                                        (CC or)
                                        (NNS provinces)))
                                    (-RRB- -RRB-)))))))))))))))))
    (. .)))

det(Federalism-3, The-1)
nn(Federalism-3, term-2)
nsubjpass(used-5, Federalism-3)
xsubj(describe-7, Federalism-3)
auxpass(used-5, is-4)
root(ROOT-0, used-5)
aux(describe-7, to-6)
xcomp(used-5, describe-7)
det(system-9, a-8)
dobj(describe-7, system-9)
det(government-12, the-11)
prep_of(system-9, government-12)
rel(divided-18, which-14)
nsubjpass(divided-18, sovereignty-15)
auxpass(divided-18, is-16)
advmod(divided-18, constitutionally-17)
rcmod(government-12, divided-18)
det(authority-23, a-20)
amod(authority-23, central-21)
amod(authority-23, governing-22)
prep_between(divided-18, authority-23)
amod(units-27, constituent-25)
amod(units-27, political-26)
prep_between(divided-18, units-27)
conj_and(authority-23, units-27)
dep(units-27, like-29)
pobj(like-29, states-30)
pobj(like-29, provinces-32)
conj_or(states-30, provinces-32)

(ROOT
  (S
    (NP (DT The) (NNP Futurama))
    (VP (VBD was)
      (NP (DT an) (NN exhibit) (NN \/) (NN ride))
      (PP (IN at)
        (NP
          (NP
            (NP (DT the) (NNP 1939-40) (NNP New) (NNP York) (NNP World) (POS 's))
            (NN Fair))
          (ADJP (JJ held)
            (PP (IN in)
              (NP (DT the) (NNP USA))))
          (, ,)
          (VP (VBN designed)
            (PP (IN by)
              (NP
                (NP (NNP Norman) (NNP Bel) (NNP Geddes))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD tried)
                      (S
                        (VP (TO to)
                          (VP (VB show)
                            (NP (DT the) (NN world))
                            (PP
                              (NP (CD 20) (NNS years))
                              (PP (IN into)
                                (NP (DT the) (NN future)))
                              (PRN (-LRB- -LRB-)
                                (NP (CD 1960))
                                (-RRB- -RRB-))))))))))))))
      (, ,)
      (PP (VBG including)
        (NP
          (NP (JJ automated) (NNS highways))
          (CC and)
          (NP (JJ vast) (NNS suburbs)))))
    (. .)))

det(Futurama-2, The-1)
nsubj(ride-7, Futurama-2)
cop(ride-7, was-3)
det(ride-7, an-4)
nn(ride-7, exhibit-5)
nn(ride-7, \/-6)
root(ROOT-0, ride-7)
det(World-13, the-9)
nn(World-13, 1939-40-10)
nn(World-13, New-11)
nn(World-13, York-12)
poss(Fair-15, World-13)
prep_at(ride-7, Fair-15)
amod(Fair-15, held-16)
det(USA-19, the-18)
prep_in(held-16, USA-19)
partmod(Fair-15, designed-21)
nn(Geddes-25, Norman-23)
nn(Geddes-25, Bel-24)
agent(designed-21, Geddes-25)
nsubj(tried-27, Geddes-25)
rcmod(Geddes-25, tried-27)
aux(show-29, to-28)
xcomp(tried-27, show-29)
det(world-31, the-30)
dobj(show-29, world-31)
num(years-33, 20-32)
dep(show-29, years-33)
det(future-36, the-35)
prep_into(show-29, future-36)
dep(show-29, 1960-38)
amod(highways-43, automated-42)
prep_including(ride-7, highways-43)
amod(suburbs-46, vast-45)
prep_including(ride-7, suburbs-46)
conj_and(highways-43, suburbs-46)

(ROOT
  (S
    (NP (NNP Furry))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP (DT the) (JJ furry) (NN fandom))))))
    (. .)))

nsubj(refers-2, Furry-1)
root(ROOT-0, refers-2)
det(member-5, a-4)
prep_to(refers-2, member-5)
det(fandom-9, the-7)
amod(fandom-9, furry-8)
prep_of(member-5, fandom-9)

(ROOT
  (S
    (NP (NNP Furry))
    (ADVP (RB often))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP
            (NP (NNS fans))
            (PP (IN of)
              (NP (NN artwork))))
          (, ,)
          (NP (NNS stories))
          (, ,)
          (CC and)
          (NP
            (NP (JJ related) (NNS products))
            (PRN (-LRB- -LRB-)
              (NP
                (NP
                  (NP (NNS comics))
                  (, ,)
                  (NP (NNS movies)))
                (, ,)
                (NP (NNS costumes))
                (, ,) (FW etc.))
              (-RRB- -RRB-))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP feature)
                  (NP (JJ anthropomorphic) (NNS animals)))))))))
    (. .)))

nsubj(refers-3, Furry-1)
advmod(refers-3, often-2)
root(ROOT-0, refers-3)
prep_to(refers-3, fans-5)
prep_of(fans-5, artwork-7)
prep_to(refers-3, stories-9)
conj_and(fans-5, stories-9)
amod(products-13, related-12)
prep_to(refers-3, products-13)
conj_and(fans-5, products-13)
nsubj(feature-24, products-13)
dep(products-13, comics-15)
appos(comics-15, movies-17)
appos(comics-15, costumes-19)
dep(comics-15, etc.-21)
rcmod(products-13, feature-24)
amod(animals-26, anthropomorphic-25)
dobj(feature-24, animals-26)

(ROOT
  (S
    (NP (NNP Furry))
    (VP (MD may)
      (VP (VB refer)
        (PP (TO to)
          (NP (DT an) (NN animal) (NN character)))
        (PP (IN with)
          (NP (JJ anthropomorphic) (NNS characteristics)))))
    (. .)))

nsubj(refer-3, Furry-1)
aux(refer-3, may-2)
root(ROOT-0, refer-3)
det(character-7, an-5)
nn(character-7, animal-6)
prep_to(refer-3, character-7)
amod(characteristics-10, anthropomorphic-9)
prep_with(refer-3, characteristics-10)

(ROOT
  (S
    (NP (DT A) (NNP Gun))
    (VP (VBZ is)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP
            (NP (JJ several) (NNS types))
            (PP (IN of)
              (NP (NN object)))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ propels)
              (NP (DT another) (NN object)
                (CC or)
                (NN projectile)))))))
    (. .)))

det(Gun-2, A-1)
nsubj(any-4, Gun-2)
cop(any-4, is-3)
root(ROOT-0, any-4)
nsubj(propels-11, any-4)
amod(types-7, several-6)
prep_of(any-4, types-7)
prep_of(types-7, object-9)
rcmod(any-4, propels-11)
det(object-13, another-12)
dobj(propels-11, object-13)
dobj(propels-11, projectile-15)
conj_or(object-13, projectile-15)

(ROOT
  (S
    (NP (DT A) (NNP Factoid))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP
            (ADJP
              (ADJP (RB possibly) (JJ spurious))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (NN unverified))
                  (, ,)
                  (NP (JJ incorrect))
                  (, ,)
                  (CC or)
                  (NP (NNP invented)))
                (-RRB- -RRB-)))
            (CC and)
            (ADJP (RB often) (RB allegedly) (JJ counterintuitive)))
          ('' '') (NN fact))
        ('' '')
        (PP (IN with)
          (NP (JJ little) (NN significance)))
        (PP (IN outside)
          (NP
            (NP (DT the) (NN possibility))
            (PP (IN of)
              (NP (PRP$ its) (JJ own) (NN statement)))))))
    (. .)))

det(Factoid-2, A-1)
nsubj(fact-20, Factoid-2)
cop(fact-20, is-3)
det(fact-20, a-4)
advmod(spurious-6, possibly-5)
amod(fact-20, spurious-6)
dep(spurious-6, unverified-8)
dep(spurious-6, incorrect-10)
conj_or(unverified-8, incorrect-10)
dep(spurious-6, invented-13)
conj_or(unverified-8, invented-13)
advmod(counterintuitive-18, often-16)
advmod(counterintuitive-18, allegedly-17)
conj_and(spurious-6, counterintuitive-18)
amod(fact-20, counterintuitive-18)
root(ROOT-0, fact-20)
amod(significance-24, little-23)
prep_with(fact-20, significance-24)
det(possibility-27, the-26)
prep_outside(fact-20, possibility-27)
poss(statement-31, its-29)
amod(statement-31, own-30)
prep_of(possibility-27, statement-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ digital) (NNS circuits)))
    (, ,)
    (NP (DT a) (NN Flip-flop))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ onomatopoeic) (NN term))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ refers)
              (NP
                (NP (DT a) (NN kind))
                (PP (IN of)
                  (NP
                    (NP (JJ bistable) (NN multivibrator))
                    (, ,)
                    (NP
                      (NP (DT an) (JJ electronic) (NN circuit))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP
                            (VP (VBZ has)
                              (NP (CD two) (JJ stable) (NNS states)))
                            (CC and)
                            (ADVP (RB thereby))
                            (VP (VBZ is)
                              (ADJP (JJ capable)
                                (PP (IN of)
                                  (S
                                    (VP (VBG serving)
                                      (PP (IN as)
                                        (NP
                                          (NP (CD one) (NN bit))
                                          (PP (IN of)
                                            (NP (NN memory))))))))))))))))))))))
    (. .)))

amod(circuits-3, digital-2)
prep_in(term-10, circuits-3)
det(Flip-flop-6, a-5)
nsubj(term-10, Flip-flop-6)
cop(term-10, is-7)
det(term-10, an-8)
amod(term-10, onomatopoeic-9)
root(ROOT-0, term-10)
nsubj(refers-12, term-10)
rcmod(term-10, refers-12)
det(kind-14, a-13)
dobj(refers-12, kind-14)
amod(multivibrator-17, bistable-16)
prep_of(kind-14, multivibrator-17)
det(circuit-21, an-19)
amod(circuit-21, electronic-20)
appos(multivibrator-17, circuit-21)
nsubj(has-23, circuit-21)
nsubj(capable-30, circuit-21)
rcmod(circuit-21, has-23)
num(states-26, two-24)
amod(states-26, stable-25)
dobj(has-23, states-26)
rcmod(circuit-21, thereby-28)
advmod(has-23, thereby-28)
conj_and(has-23, thereby-28)
cop(capable-30, is-29)
rcmod(circuit-21, capable-30)
conj_and(has-23, capable-30)
prepc_of(capable-30, serving-32)
num(bit-35, one-34)
prep_as(serving-32, bit-35)
prep_of(bit-35, memory-37)

(ROOT
  (S
    (NP (DT The) (NNPS Frisians))
    (VP (VBP are)
      (NP
        (NP (DT an) (JJ ethnic) (NN group))
        (PP (IN of)
          (NP
            (NP (JJ Germanic) (NNS people))
            (VP (VBG living)
              (PP (IN in)
                (NP
                  (NP (JJ coastal) (NNS parts))
                  (PP (IN of)
                    (NP (DT The) (NNP Netherlands)
                      (CC and)
                      (NNP Germany))))))))))
    (. .)))

det(Frisians-2, The-1)
nsubj(group-6, Frisians-2)
cop(group-6, are-3)
det(group-6, an-4)
amod(group-6, ethnic-5)
root(ROOT-0, group-6)
amod(people-9, Germanic-8)
prep_of(group-6, people-9)
partmod(people-9, living-10)
amod(parts-13, coastal-12)
prep_in(living-10, parts-13)
det(Netherlands-16, The-15)
prep_of(parts-13, Netherlands-16)
prep_of(parts-13, Germany-18)
conj_and(Netherlands-16, Germany-18)

(ROOT
  (S
    (NP (DT The) (NNP Guitar))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN with)
          (NP (JJ ancient) (NNS roots)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN used)
                (PP (IN in)
                  (NP
                    (NP (DT a) (JJ wide) (NN variety))
                    (PP (IN of)
                      (NP (JJ musical) (NNS styles)))))))))))
    (. .)))

det(Guitar-2, The-1)
nsubj(instrument-6, Guitar-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
nsubjpass(used-12, instrument-6)
amod(roots-9, ancient-8)
prep_with(instrument-6, roots-9)
auxpass(used-12, is-11)
rcmod(instrument-6, used-12)
det(variety-16, a-14)
amod(variety-16, wide-15)
prep_in(used-12, variety-16)
amod(styles-19, musical-18)
prep_of(variety-16, styles-19)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Jewish) (NN folklore)))
    (, ,)
    (NP
      (NP (DT a) (NNP Golem))
      (PRN (-LRB- -LRB-)
        (S
          (NP (NNP ÃƒËœÃ) (NNP ‚))
          (VP (VBP â)
            (NP
              (NP
                (QP ($ $) (CD šÃƒËœÃ) (CD ‚))
                (JJ ï)
                (QP (# #) (CD ¿) (CD ÃƒËœÃ))
                (NNS ‚))
              (SBAR
                (S
                  (NP
                    (NP (NNP Ë) (POS '))
                    (NNP ÃƒËœÃ) (NNP ‚) (NNP Ë))
                  (VP (VBD ‡) (, ,)
                    (ADVP (RB sometimes))
                    (, ,)
                    (SBAR (IN as)
                      (FRAG
                        (PP (IN in)
                          (NP (JJ Yiddish) (, ,) (JJ pronounced) (NN goilem)))))))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN animated))
        (VP (VBG being)
          (VP (VBN created)
            (ADVP (RB entirely))
            (PP (IN from)
              (NP (JJ inanimate) (NN matter)))))))
    (. .)))

amod(folklore-3, Jewish-2)
prep_in(animated-37, folklore-3)
det(Golem-6, a-5)
nsubj(animated-37, Golem-6)
nn(‚-9, ÃƒËœÃ-8)
nsubj(â-10, ‚-9)
dep(Golem-6, â-10)
num(‚-18, $-11)
number($-11, šÃƒËœÃ-12)
number($-11, ‚-13)
amod(‚-18, ï-14)
number(ÃƒËœÃ-17, #-15)
number(ÃƒËœÃ-17, ¿-16)
num(‚-18, ÃƒËœÃ-17)
dobj(â-10, ‚-18)
poss(Ë-23, Ë-19)
nn(Ë-23, ÃƒËœÃ-21)
nn(Ë-23, ‚-22)
nsubj(‡-24, Ë-23)
rcmod(‚-18, ‡-24)
advmod(‡-24, sometimes-26)
mark(in-29, as-28)
advcl(‡-24, in-29)
amod(goilem-33, Yiddish-30)
amod(goilem-33, pronounced-32)
pobj(in-29, goilem-33)
cop(animated-37, is-35)
det(animated-37, an-36)
root(ROOT-0, animated-37)
auxpass(created-39, being-38)
partmod(animated-37, created-39)
advmod(created-39, entirely-40)
amod(matter-43, inanimate-42)
prep_from(created-39, matter-43)

(ROOT
  (S
    (NP (DT A) (NNP Firearm))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN used)
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN weapon))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ fires)
                            (SBAR
                              (S
                                (NP (DT either) (JJ single)
                                  (CC or)
                                  (JJ multiple) (NNS projectiles))
                                (VP (VBD propelled)
                                  (PP (IN at)
                                    (NP (JJ high) (NN velocity)))
                                  (PP (IN by)
                                    (NP
                                      (NP (DT the) (NNS gases))
                                      (VP (VBN produced)
                                        (PP (IN through)
                                          (NP
                                            (NP (JJ rapid) (, ,) (JJ confined) (NN burning))
                                            (PP (IN of)
                                              (NP (DT a) (NN propellant)))))))))))))))))))))))
    (. .)))

det(Firearm-2, A-1)
nsubj(device-5, Firearm-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
nsubjpass(used-9, device-5)
aux(used-9, can-7)
auxpass(used-9, be-8)
rcmod(device-5, used-9)
det(weapon-12, a-11)
prep_as(used-9, weapon-12)
nsubj(fires-14, weapon-12)
rcmod(weapon-12, fires-14)
det(projectiles-19, either-15)
amod(projectiles-19, single-16)
conj_or(single-16, multiple-18)
amod(projectiles-19, multiple-18)
nsubj(propelled-20, projectiles-19)
ccomp(fires-14, propelled-20)
amod(velocity-23, high-22)
prep_at(propelled-20, velocity-23)
det(gases-26, the-25)
prep_by(propelled-20, gases-26)
partmod(gases-26, produced-27)
amod(burning-32, rapid-29)
amod(burning-32, confined-31)
prep_through(produced-27, burning-32)
det(propellant-35, a-34)
prep_of(burning-32, propellant-35)

(ROOT
  (S
    (NP (DT A) (NN Game))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ structured)
            (CC or)
            (JJ semi-structured))
          (NN activity))
        (, ,)
        (VP
          (VP
            (ADVP (RB usually))
            (VBN undertaken)
            (PP (IN for)
              (NP (NN enjoyment))))
          (CC and)
          (ADVP (RB sometimes))
          (VP
            (ADVP (RB also))
            (VBN used)
            (PP (IN as)
              (NP (DT an) (JJ educational) (NN tool)))))))
    (. .)))

det(Game-2, A-1)
nsubj(activity-8, Game-2)
cop(activity-8, is-3)
det(activity-8, a-4)
amod(activity-8, structured-5)
conj_or(structured-5, semi-structured-7)
amod(activity-8, semi-structured-7)
root(ROOT-0, activity-8)
advmod(undertaken-11, usually-10)
dep(activity-8, undertaken-11)
prep_for(undertaken-11, enjoyment-13)
dep(activity-8, sometimes-15)
advmod(undertaken-11, sometimes-15)
conj_and(undertaken-11, sometimes-15)
advmod(used-17, also-16)
dep(activity-8, used-17)
conj_and(undertaken-11, used-17)
det(tool-21, an-19)
amod(tool-21, educational-20)
prep_as(used-17, tool-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Girth))
      (PP (IN of)
        (NP (DT an) (NN object))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measurement))
        (PP (IN around)
          (NP (PRP it)))))
    (. .)))

det(Girth-2, The-1)
nsubj(measurement-8, Girth-2)
det(object-5, an-4)
prep_of(Girth-2, object-5)
cop(measurement-8, is-6)
det(measurement-8, a-7)
root(ROOT-0, measurement-8)
prep_around(measurement-8, it-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (DT the) (NNP Graviton))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hypothetical) (JJ elementary) (NN particle))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ mediates)
              (NP
                (NP (DT the) (NN force))
                (PP (IN of)
                  (NP (NN gravity))))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN framework))
                  (PP (IN of)
                    (NP (NN quantum) (NN field) (NN theory))))))))))
    (. .)))

prep_in(particle-10, physics-2)
det(Graviton-5, the-4)
nsubj(particle-10, Graviton-5)
cop(particle-10, is-6)
det(particle-10, a-7)
amod(particle-10, hypothetical-8)
amod(particle-10, elementary-9)
root(ROOT-0, particle-10)
nsubj(mediates-12, particle-10)
rcmod(particle-10, mediates-12)
det(force-14, the-13)
dobj(mediates-12, force-14)
prep_of(force-14, gravity-16)
det(framework-19, the-18)
prep_in(mediates-12, framework-19)
nn(theory-23, quantum-21)
nn(theory-23, field-22)
prep_of(framework-19, theory-23)

(ROOT
  (S
    (NP (DT A) (NNP Geologist))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN contributor))
        (PP (TO to)
          (NP
            (NP (DT the) (NN science))
            (PP (IN of)
              (NP (NN geology)))))
        (, ,)
        (VP (VBG studying)
          (NP
            (NP
              (NP (DT the) (JJ physical) (NN structure))
              (CC and)
              (NP
                (NP (NNS processes))
                (PP (IN of)
                  (NP (DT the) (NN Earth)))))
            (CC and)
            (NP
              (NP (NNS planets))
              (PP (IN of)
                (NP (DT the) (JJ solar) (NN system))))
            (PRN (-LRB- -LRB-)
              (S
                (VP (VB see)
                  (NP (JJ planetary) (NN geology))))
              (-RRB- -RRB-))))))
    (. .)))

det(Geologist-2, A-1)
nsubj(contributor-5, Geologist-2)
cop(contributor-5, is-3)
det(contributor-5, a-4)
root(ROOT-0, contributor-5)
det(science-8, the-7)
prep_to(contributor-5, science-8)
prep_of(science-8, geology-10)
partmod(contributor-5, studying-12)
det(structure-15, the-13)
amod(structure-15, physical-14)
dobj(studying-12, structure-15)
dobj(studying-12, processes-17)
conj_and(structure-15, processes-17)
det(Earth-20, the-19)
prep_of(processes-17, Earth-20)
dobj(studying-12, planets-22)
conj_and(structure-15, planets-22)
det(system-26, the-24)
amod(system-26, solar-25)
prep_of(planets-22, system-26)
dep(structure-15, see-28)
amod(geology-30, planetary-29)
dobj(see-28, geology-30)

(ROOT
  (S
    (NP (DT The) (`` `) (NNP Generic) (NNP Universal) (NNP RolePlaying) (NNP System) ('' '))
    (, ,)
    (ADVP (RB commonly))
    (VP (VBN known)
      (SBAR (IN as)
        (S
          (NP (NNS GURPS))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN role-playing) (NN game) (NN system))
              (VP (VBN designed)
                (S
                  (VP (TO to)
                    (VP (VB adapt)
                      (PP (TO to)
                        (NP (DT any) (JJ imaginary) (NN gaming) (NN environment))))))))))))
    (. .)))

det(System-6, The-1)
nn(System-6, Generic-3)
nn(System-6, Universal-4)
nn(System-6, RolePlaying-5)
nsubj(known-10, System-6)
advmod(known-10, commonly-9)
root(ROOT-0, known-10)
mark(system-17, as-11)
nsubj(system-17, GURPS-12)
cop(system-17, is-13)
det(system-17, a-14)
nn(system-17, role-playing-15)
nn(system-17, game-16)
advcl(known-10, system-17)
xsubj(adapt-20, system-17)
partmod(system-17, designed-18)
aux(adapt-20, to-19)
xcomp(designed-18, adapt-20)
det(environment-25, any-22)
amod(environment-25, imaginary-23)
nn(environment-25, gaming-24)
prep_to(adapt-20, environment-25)

(ROOT
  (S
    (NP (DT A) (NN Government))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN organization))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (VBG governing) (NN authority))
                (PP (IN of)
                  (NP (DT a) (JJ political) (NN unit)))
                (, ,)
                (NP
                  (NP (DT the) (VBG ruling) (NN power))
                  (PP (IN in)
                    (NP (DT a) (JJ political) (NN society))))
                (, ,)
                (CC and)
                (NP
                  (NP (DT the) (NN apparatus))
                  (SBAR
                    (WHPP (IN through)
                      (WHNP (WDT which)))
                    (S
                      (NP (DT a) (VBG governing) (NN body))
                      (VP (VBZ functions)
                        (CC and)
                        (VBZ exercises)
                        (NP (NN authority))))))))))))
    (. .)))

det(Government-2, A-1)
nsubj(organization-5, Government-2)
cop(organization-5, is-3)
det(organization-5, the-4)
root(ROOT-0, organization-5)
nsubj(authority-11, organization-5)
cop(authority-11, is-8)
det(authority-11, the-9)
amod(authority-11, governing-10)
rcmod(organization-5, authority-11)
det(unit-15, a-13)
amod(unit-15, political-14)
prep_of(authority-11, unit-15)
det(power-19, the-17)
amod(power-19, ruling-18)
rcmod(organization-5, power-19)
conj_and(authority-11, power-19)
det(society-23, a-21)
amod(society-23, political-22)
prep_in(power-19, society-23)
det(apparatus-27, the-26)
rcmod(organization-5, apparatus-27)
conj_and(authority-11, apparatus-27)
rel(functions-33, which-29)
det(body-32, a-30)
amod(body-32, governing-31)
nsubj(functions-33, body-32)
nsubj(exercises-35, body-32)
rcmod(apparatus-27, functions-33)
rcmod(apparatus-27, exercises-35)
conj_and(functions-33, exercises-35)
dobj(functions-33, authority-36)

(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (DT A) (NN Goitre))
          (PRN (-LRB- -LRB-)
            (NP (NNP BrE))
            (-RRB- -RRB-)))
        (, ,)
        (CC or)
        (NP
          (NP
            (NP (NN goiter))
            (PRN (-LRB- -LRB-)
              (NP (NNP AmE))
              (-RRB- -RRB-)))
          (PRN (-LRB- -LRB-)
            (NP (NNP Latin) (NNP struma))
            (-RRB- -RRB-))))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (NP (DT a) (NN bronchocele)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBG swelling))
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NN neck))
              (PRN (-LRB- -LRB-)
                (PP
                  (ADVP (RB just))
                  (IN below)
                  (NP
                    (NP (DT the) (NNP Adam) (POS 's))
                    (NN apple)
                    (CC or)
                    (NN larynx)))
                (-RRB- -RRB-)))
            (ADJP (JJ due)
              (PP (TO to)
                (NP (DT an) (JJ enlarged) (NN thyroid) (NN gland))))))))
    (. .)))

det(Goitre-2, A-1)
nsubj(a-23, Goitre-2)
appos(Goitre-2, BrE-4)
conj_or(Goitre-2, goiter-8)
nsubj(a-23, goiter-8)
appos(goiter-8, AmE-10)
nn(struma-14, Latin-13)
appos(goiter-8, struma-14)
advmod(called-18, also-17)
partmod(Goitre-2, called-18)
det(bronchocele-20, a-19)
dobj(called-18, bronchocele-20)
cop(a-23, is-22)
root(ROOT-0, a-23)
amod(a-23, swelling-24)
det(neck-27, the-26)
prep_in(a-23, neck-27)
advmod(below-30, just-29)
dep(neck-27, below-30)
det(Adam-32, the-31)
poss(apple-34, Adam-32)
pobj(below-30, apple-34)
pobj(below-30, larynx-36)
conj_or(apple-34, larynx-36)
det(gland-43, an-40)
amod(gland-43, enlarged-41)
nn(gland-43, thyroid-42)
prep_due_to(neck-27, gland-43)

(ROOT
  (S
    (PP (IN In)
      (NP (NN anatomy)))
    (, ,)
    (VP
      (ADVP (DT a))
      (VB Ganglion) (-LRB- -LRB-)
      (NP (NN pl)))
    (. .)))

prep_in(Ganglion-5, anatomy-2)
advmod(Ganglion-5, a-4)
root(ROOT-0, Ganglion-5)
dobj(Ganglion-5, pl-7)

(ROOT
  (S
    (NP (NNP ganglia) (NNP -RRB-))
    (VP (VBZ is)
      (NP (DT a) (NN tissue) (NN mass)))
    (. .)))

nsubj(mass-6, ganglia-1)
cop(mass-6, is-3)
det(mass-6, a-4)
nn(mass-6, tissue-5)
root(ROOT-0, mass-6)

(ROOT
  (S
    (NP (DT A) (NNP Grimoire))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN textbook))
        (PP (IN of)
          (NP (NN magic)))))
    (. .)))

det(Grimoire-2, A-1)
nsubj(textbook-5, Grimoire-2)
cop(textbook-5, is-3)
det(textbook-5, a-4)
root(ROOT-0, textbook-5)
prep_of(textbook-5, magic-7)

(ROOT
  (S
    (NP (NNP Gazpacho))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ cold) (JJ Spanish) (NN soup))
          (VP (VBG originating)
            (PP (IN in)
              (NP
                (NP (DT the) (JJ Southern) (NN region))
                (PP (IN of)
                  (NP (NNP Andalusia)))))))))
    (. .)))

nsubj(refers-2, Gazpacho-1)
root(ROOT-0, refers-2)
det(soup-7, a-4)
amod(soup-7, cold-5)
amod(soup-7, Spanish-6)
prep_to(refers-2, soup-7)
partmod(soup-7, originating-8)
det(region-12, the-10)
amod(region-12, Southern-11)
prep_in(originating-8, region-12)
prep_of(region-12, Andalusia-14)

(ROOT
  (S
    (NP (DT A) (NNP Gnome))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mythical) (NN creature))
        (VP (VBN characterized)
          (PP (IN by)
            (NP (PRP$ its)
              (ADJP (RB extremely) (JJ small))
              (NN size)
              (CC and)
              (JJ subterranean) (NN lifestyle))))))
    (. .)))

det(Gnome-2, A-1)
nsubj(creature-6, Gnome-2)
cop(creature-6, is-3)
det(creature-6, a-4)
amod(creature-6, mythical-5)
root(ROOT-0, creature-6)
partmod(creature-6, characterized-7)
poss(size-12, its-9)
advmod(small-11, extremely-10)
amod(size-12, small-11)
agent(characterized-7, size-12)
amod(lifestyle-15, subterranean-14)
agent(characterized-7, lifestyle-15)
conj_and(size-12, lifestyle-15)

(ROOT
  (S
    (NP (DT A) (NN Guild))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN association))
        (PP (IN of)
          (NP
            (NP (NNS craftsmen))
            (PP (IN in)
              (NP (DT a) (JJ particular) (NN trade)))))))
    (. .)))

det(Guild-2, A-1)
nsubj(association-5, Guild-2)
cop(association-5, is-3)
det(association-5, an-4)
root(ROOT-0, association-5)
prep_of(association-5, craftsmen-7)
det(trade-11, a-9)
amod(trade-11, particular-10)
prep_in(craftsmen-7, trade-11)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Gamemaster)
        (CC or)
        (NNP Game) (NNP Master))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB often))
          (VBN abbreviated)
          (PP (IN as)
            (NP (NNP GM))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN player))
        (PP (IN in)
          (NP (DT a) (NN multiplayer) (NN game)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ acts)
              (PP (IN as)
                (NP
                  (NP (NN organizer) (, ,) (NN arbitrator) (, ,)
                    (CC and)
                    (NN officiant))
                  (PP (IN in)
                    (NP (NNS rules) (NNS situations))))))))))
    (. .)))

det(Master-5, A-1)
nn(Master-5, Gamemaster-2)
conj_or(Gamemaster-2, Game-4)
nn(Master-5, Game-4)
nsubj(player-14, Master-5)
advmod(abbreviated-8, often-7)
dep(Master-5, abbreviated-8)
prep_as(abbreviated-8, GM-10)
cop(player-14, is-12)
det(player-14, a-13)
root(ROOT-0, player-14)
nsubj(acts-20, player-14)
det(game-18, a-16)
nn(game-18, multiplayer-17)
prep_in(player-14, game-18)
rcmod(player-14, acts-20)
prep_as(acts-20, organizer-22)
prep_as(acts-20, arbitrator-24)
conj_and(organizer-22, arbitrator-24)
prep_as(acts-20, officiant-27)
conj_and(organizer-22, officiant-27)
nn(situations-30, rules-29)
prep_in(organizer-22, situations-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (DT a) (NNP Gas))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN state))
        (PP (IN of)
          (NP (NN matter)))
        (, ,)
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN collection))
              (PP (IN of)
                (NP
                  (NP (NNS particles))
                  (PRN (-LRB- -LRB-)
                    (NP
                      (NP
                        (NP (NNS molecules))
                        (, ,)
                        (NP (NNS atoms)))
                      (, ,)
                      (NP (NNS ions))
                      (, ,)
                      (NP (NNS electrons))
                      (, ,) (FW etc.))
                    (-RRB- -RRB-))))))
          (PP (IN without)
            (NP
              (NP (DT a) (JJ definite) (NN shape)
                (CC or)
                (NN volume))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (PP (IN in)
                      (NP
                        (ADJP
                          (ADJP (JJR more))
                          (CC or)
                          (ADJP (RBR less) (JJ random)))
                        (NN motion)))))))))))
    (. .)))

prep_in(state-8, physics-2)
det(Gas-5, a-4)
nsubj(state-8, Gas-5)
cop(state-8, is-6)
det(state-8, a-7)
root(ROOT-0, state-8)
prep_of(state-8, matter-10)
partmod(state-8, consisting-12)
det(collection-15, a-14)
prep_of(consisting-12, collection-15)
prep_of(collection-15, particles-17)
dep(particles-17, molecules-19)
appos(molecules-19, atoms-21)
appos(molecules-19, ions-23)
appos(molecules-19, electrons-25)
dep(molecules-19, etc.-27)
det(shape-32, a-30)
amod(shape-32, definite-31)
prep_without(consisting-12, shape-32)
nsubj(are-36, shape-32)
prep_without(consisting-12, volume-34)
conj_or(shape-32, volume-34)
nsubj(are-36, volume-34)
rcmod(shape-32, are-36)
amod(motion-42, more-38)
advmod(random-41, less-40)
conj_or(more-38, random-41)
amod(motion-42, random-41)
prep_in(are-36, motion-42)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (NP
      (NP (DT the) (NNP Genome))
      (PP (IN of)
        (NP (DT an) (NN organism))))
    (VP
      (VP (VBZ is)
        (NP (PRP$ its) (JJ whole) (JJ hereditary) (NN information)))
      (CC and)
      (VP (VBZ is)
        (VP (VBN encoded)
          (PP (IN in)
            (NP
              (NP (DT the) (NN DNA))
              (PRN (-LRB- -LRB-)
                (CC or)
                (, ,)
                (PP (IN for)
                  (NP (DT some) (NNS viruses)))
                (, ,)
                (NP (NNP RNA))
                (-RRB- -RRB-)))))))
    (. .)))

prep_in(information-12, biology-2)
det(Genome-4, the-3)
nsubj(information-12, Genome-4)
nsubjpass(encoded-15, Genome-4)
det(organism-7, an-6)
prep_of(Genome-4, organism-7)
cop(information-12, is-8)
poss(information-12, its-9)
amod(information-12, whole-10)
amod(information-12, hereditary-11)
root(ROOT-0, information-12)
auxpass(encoded-15, is-14)
conj_and(information-12, encoded-15)
det(DNA-18, the-17)
prep_in(encoded-15, DNA-18)
dep(RNA-26, or-20)
dep(RNA-26, for-22)
det(viruses-24, some-23)
pobj(for-22, viruses-24)
appos(DNA-18, RNA-26)

(ROOT
  (S
    (NP (DT A) (NN Genius))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (PP (IN of)
          (NP
            (NP (JJ great) (NN intelligence))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ shows)
                  (NP
                    (NP (DT an) (JJ exceptional) (JJ natural) (NN capacity))
                    (PP (IN of)
                      (NP (NN intellect))))
                  (, ,)
                  (SBAR
                    (ADVP (RB especially))
                    (RB as)
                    (FRAG
                      (VP (VBN shown)
                        (PP (IN in)
                          (NP (JJ creative)
                            (CC and)
                            (JJ original) (NN work)))))))))))))
    (. .)))

det(Genius-2, A-1)
nsubj(person-5, Genius-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
amod(intelligence-8, great-7)
prep_of(person-5, intelligence-8)
nsubj(shows-11, intelligence-8)
rcmod(intelligence-8, shows-11)
det(capacity-15, an-12)
amod(capacity-15, exceptional-13)
amod(capacity-15, natural-14)
dobj(shows-11, capacity-15)
prep_of(capacity-15, intellect-17)
advmod(shown-21, especially-19)
advmod(shown-21, as-20)
dep(shows-11, shown-21)
amod(work-26, creative-23)
conj_and(creative-23, original-25)
amod(work-26, original-25)
prep_in(shown-21, work-26)

(ROOT
  (S
    (NP (DT A) (NN Grape))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ non-climacteric) (NN fruit))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ grows)
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ perennial)
                    (CC and)
                    (JJ deciduous) (NN woody) (NNS vines))
                  (PP (IN of)
                    (NP (DT the) (JJ genus) (NNS Vitis))))))))))
    (. .)))

det(Grape-2, A-1)
nsubj(fruit-6, Grape-2)
cop(fruit-6, is-3)
det(fruit-6, the-4)
amod(fruit-6, non-climacteric-5)
root(ROOT-0, fruit-6)
nsubj(grows-8, fruit-6)
rcmod(fruit-6, grows-8)
dep(perennial-11, the-10)
prep_on(grows-8, perennial-11)
amod(vines-15, deciduous-13)
nn(vines-15, woody-14)
prep_on(grows-8, vines-15)
conj_and(perennial-11, vines-15)
det(Vitis-19, the-17)
amod(Vitis-19, genus-18)
prep_of(perennial-11, Vitis-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ Germanic) (NN mythology)))
    (, ,)
    (NP (NNP Ginnungagap))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ vast) (, ,) (JJ primordial) (NN void))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD existed)
              (PP (RB prior)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN creation))
                    (PP (IN of)
                      (NP (DT the) (JJ manifest) (NN universe)))))))))))
    (. .)))

amod(mythology-3, Germanic-2)
prep_in(void-11, mythology-3)
nsubj(void-11, Ginnungagap-5)
cop(void-11, was-6)
det(void-11, the-7)
amod(void-11, vast-8)
amod(void-11, primordial-10)
root(ROOT-0, void-11)
nsubj(existed-13, void-11)
rcmod(void-11, existed-13)
det(creation-17, the-16)
prep_prior_to(existed-13, creation-17)
det(universe-21, the-19)
amod(universe-21, manifest-20)
prep_of(creation-17, universe-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN vector) (NNS calculus)))
    (, ,)
    (NP
      (NP (DT the) (NN Gradient))
      (PP (IN of)
        (NP (DT a) (NN scalar) (NN field))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vector) (NN field))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ points)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN direction))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJS greatest) (NN rate))
                      (PP (IN of)
                        (NP
                          (NP (NN increase))
                          (PP (IN of)
                            (NP (DT the) (NN scalar) (NN field))))))))))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WP$ whose) (NNS magnitude))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (JJS greatest) (NN rate))
                (PP (IN of)
                  (NP (NN change)))))))))
    (. .)))

nn(calculus-3, vector-2)
prep_in(field-14, calculus-3)
det(Gradient-6, the-5)
nsubj(field-14, Gradient-6)
det(field-10, a-8)
nn(field-10, scalar-9)
prep_of(Gradient-6, field-10)
cop(field-14, is-11)
det(field-14, a-12)
nn(field-14, vector-13)
root(ROOT-0, field-14)
nsubj(points-16, field-14)
rcmod(field-14, points-16)
det(direction-19, the-18)
prep_in(points-16, direction-19)
det(rate-23, the-21)
amod(rate-23, greatest-22)
prep_of(direction-19, rate-23)
prep_of(rate-23, increase-25)
det(field-29, the-27)
nn(field-29, scalar-28)
prep_of(increase-25, field-29)
poss(magnitude-33, whose-32)
nsubj(rate-37, magnitude-33)
cop(rate-37, is-34)
det(rate-37, the-35)
amod(rate-37, greatest-36)
conj_and(field-14, rate-37)
rcmod(field-14, rate-37)
nsubj(points-16, rate-37)
prep_of(rate-37, change-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Gauss))
      (, ,)
      (NP
        (NP (JJ abbreviated))
        (PP (IN as)
          (NP (NNP G))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN cgs) (NN unit))
        (PP (IN of)
          (NP
            (NP (JJ magnetic) (NN flux) (NN density))
            (PP (IN in)
              (NP
                (NP
                  (NP (DT a) (JJ magnetic) (NN field))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP B))
                    (-RRB- -RRB-)))
                (, ,)
                (VP (VBN named)
                  (PP (IN after)
                    (NP
                      (NP (DT the) (JJ German) (NN mathematician))
                      (CC and)
                      (NP (NNP physicist) (NNP Carl) (NNP Friedrich) (NNP Gauss)))))))))))
    (. .)))

det(Gauss-2, The-1)
nsubj(unit-11, Gauss-2)
appos(Gauss-2, abbreviated-4)
prep_as(abbreviated-4, G-6)
cop(unit-11, is-8)
det(unit-11, the-9)
nn(unit-11, cgs-10)
root(ROOT-0, unit-11)
amod(density-15, magnetic-13)
nn(density-15, flux-14)
prep_of(unit-11, density-15)
det(field-19, a-17)
amod(field-19, magnetic-18)
prep_in(density-15, field-19)
appos(field-19, B-21)
partmod(field-19, named-24)
det(mathematician-28, the-26)
amod(mathematician-28, German-27)
prep_after(named-24, mathematician-28)
nn(Gauss-33, physicist-30)
nn(Gauss-33, Carl-31)
nn(Gauss-33, Friedrich-32)
prep_after(named-24, Gauss-33)
conj_and(mathematician-28, Gauss-33)

(ROOT
  (S
    (NP (DT A) (NNP Glacier))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (, ,) (JJ slow-moving) (NN river))
        (PP (IN of)
          (NP (NN ice)))
        (, ,)
        (VP (VBN formed)
          (PP (IN from)
            (NP
              (NP (JJ compacted) (NNS layers))
              (PP (IN of)
                (NP (NN snow))))))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB slowly))
            (VP (VBZ deforms)
              (CC and)
              (VBZ flows)
              (PP (IN in)
                (NP
                  (NP (NN response))
                  (PP (TO to)
                    (NP (NN gravity)
                      (CC and)
                      (JJ high) (NN pressure))))))))))
    (. .)))

det(Glacier-2, A-1)
nsubj(river-8, Glacier-2)
cop(river-8, is-3)
det(river-8, a-4)
amod(river-8, large-5)
amod(river-8, slow-moving-7)
root(ROOT-0, river-8)
prep_of(river-8, ice-10)
partmod(river-8, formed-12)
amod(layers-15, compacted-14)
prep_from(formed-12, layers-15)
prep_of(layers-15, snow-17)
nsubj(deforms-21, that-19)
nsubj(flows-23, that-19)
advmod(deforms-21, slowly-20)
rcmod(river-8, deforms-21)
rcmod(river-8, flows-23)
conj_and(deforms-21, flows-23)
prep_in(deforms-21, response-25)
nn(pressure-30, gravity-27)
conj_and(gravity-27, high-29)
nn(pressure-30, high-29)
prep_to(response-25, pressure-30)

(ROOT
  (S
    (NP (DT The) (NN Gylfaginning))
    (VP (VBZ deals)
      (PP (IN with)
        (NP
          (NP (DT the) (NN creation)
            (CC and)
            (NN destruction))
          (PP (IN of)
            (NP
              (NP
                (NP (DT the) (NN world))
                (PP (IN of)
                  (NP (DT the) (NNP Norse) (NNS gods))))
              (, ,)
              (CC and)
              (NP
                (NP (JJ many) (JJ other) (NNS aspects))
                (PP (IN of)
                  (NP (NNP Norse) (NN mythology)))))))))
    (. .)))

det(Gylfaginning-2, The-1)
nsubj(deals-3, Gylfaginning-2)
root(ROOT-0, deals-3)
det(creation-6, the-5)
prep_with(deals-3, creation-6)
prep_with(deals-3, destruction-8)
conj_and(creation-6, destruction-8)
det(world-11, the-10)
prep_of(creation-6, world-11)
det(gods-15, the-13)
nn(gods-15, Norse-14)
prep_of(world-11, gods-15)
amod(aspects-20, many-18)
amod(aspects-20, other-19)
prep_of(creation-6, aspects-20)
conj_and(world-11, aspects-20)
nn(mythology-23, Norse-22)
prep_of(aspects-20, mythology-23)

(ROOT
  (S
    (NP (DT A) (NN Ghost))
    (VP (VBZ is)
      (ADVP (RB typically))
      (NP
        (NP (DT the) (NN apparition))
        (PP (IN of)
          (NP (DT a) (JJ deceased) (NN person))))
      (, ,)
      (ADVP (RB frequently))
      (ADJP (JJ similar)
        (PP (IN in)
          (NP (NN appearance)))
        (PP
          (PP (TO to)
            (SBAR
              (WHNP
                (WHNP (WDT that) (NN person))
                (PRN (, ,)
                  (CC and)
                  (ADVP (RB usually))))
              (S
                (VP (VBD encountered)
                  (SBAR
                    (S
                      (PP (IN in)
                        (NP (NNS places)))
                      (NP (PRP she)
                        (CC or)
                        (PRP he))
                      (VP (VBD frequented))))))))
          (, ,)
          (CC or)
          (PP (IN in)
            (NP
              (NP (NN association))
              (PP (IN with)
                (NP
                  (NP (DT the) (NN person) (POS 's))
                  (JJ former) (NNS belongings))))))))
    (. .)))

det(Ghost-2, A-1)
nsubj(similar-13, Ghost-2)
nsubj(similar-13', Ghost-2)
cop(similar-13, is-3)
advmod(similar-13, typically-4)
det(apparition-6, the-5)
attr(similar-13, apparition-6)
det(person-10, a-8)
amod(person-10, deceased-9)
prep_of(apparition-6, person-10)
advmod(similar-13, frequently-12)
root(ROOT-0, similar-13)
conj_or(similar-13, similar-13')
prep_in(similar-13, appearance-15)
det(person-18, that-17)
nsubj(encountered-22, person-18)
dep(usually-21, and-20)
dep(person-18, usually-21)
prepc_to(similar-13, encountered-22)
prep_in(frequented-28, places-24)
nsubj(frequented-28, she-25)
conj_or(she-25, he-27)
nsubj(frequented-28, he-27)
ccomp(encountered-22, frequented-28)
prep_in(similar-13', association-32)
det(person-35, the-34)
poss(belongings-38, person-35)
amod(belongings-38, former-37)
prep_with(association-32, belongings-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Galliard))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN gaillarde))
          (, ,)
          (PP (IN in)
            (NP (NNP French))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP
            (NP (NNP Renaissance) (NN dance)
              (CC and)
              (NN music))
            (ADJP (JJ popular) (DT all))
            (PP (IN over)
              (NP
                (NP (NNP Europe))
                (PP (IN in)
                  (NP (DT the) (JJ 16th) (NN century)))))))))
    (. .)))

det(Galliard-2, The-1)
nsubj(form-11, Galliard-2)
dep(Galliard-2, gaillarde-4)
prep_in(gaillarde-4, French-7)
cop(form-11, was-9)
det(form-11, a-10)
root(ROOT-0, form-11)
nn(dance-14, Renaissance-13)
prep_of(form-11, dance-14)
prep_of(form-11, music-16)
conj_and(dance-14, music-16)
amod(dance-14, popular-17)
dep(popular-17, all-18)
prep_over(dance-14, Europe-20)
det(century-24, the-22)
amod(century-24, 16th-23)
prep_in(Europe-20, century-24)

(ROOT
  (S
    (NP (DT A) (NNP Galaxy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ massive) (, ,)
          (ADJP (RB gravitationally) (VBN bound))
          (NN system))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (NNS stars))
              (, ,)
              (NP
                (NP (DT an) (NN interstellar) (NN medium))
                (PP (IN of)
                  (NP (NN gas)
                    (CC and)
                    (NN dust))))
              (, ,)
              (CC and)
              (NP (JJ dark) (NN matter)))))))
    (. .)))

det(Galaxy-2, A-1)
nsubj(system-9, Galaxy-2)
cop(system-9, is-3)
det(system-9, a-4)
amod(system-9, massive-5)
advmod(bound-8, gravitationally-7)
amod(system-9, bound-8)
root(ROOT-0, system-9)
partmod(system-9, consisting-10)
prep_of(consisting-10, stars-12)
det(medium-16, an-14)
nn(medium-16, interstellar-15)
prep_of(consisting-10, medium-16)
conj_and(stars-12, medium-16)
prep_of(medium-16, gas-18)
prep_of(medium-16, dust-20)
conj_and(gas-18, dust-20)
amod(matter-24, dark-23)
prep_of(consisting-10, matter-24)
conj_and(stars-12, matter-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Giga) (NNP -))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP G)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN prefix))
          (PP (IN in)
            (NP
              (NP (DT the) (NNP SI) (NN system))
              (PP (IN of)
                (NP
                  (NP (NNS units))
                  (VP (VBG denoting)
                    (NP
                      (NP (CD 10) (NNS -LRB-))
                      (: ;)
                      (ADJP (CD 9) (NN -LRB-))
                      (: ;))))))))
        (, ,)
        (CC or)
        (NP
          (NP (CD 1,000,000,000))
          (PRN (-LRB- -LRB-)
            (VP (VBN <LST>)
              (NP (CD 1) (NNS </LST>)
                (QP (CD thousand) (CD million))))
            (-RRB- -RRB-)))))
    (. .)))

nsubj(prefix-10, Giga-1)
dep(Giga-1, symbol-4)
dep(symbol-4, G-6)
cop(prefix-10, is-8)
det(prefix-10, a-9)
root(ROOT-0, prefix-10)
det(system-14, the-12)
nn(system-14, SI-13)
prep_in(prefix-10, system-14)
prep_of(system-14, units-16)
partmod(units-16, denoting-17)
dobj(denoting-17, 10-18)
amod(10-18, 9-21)
conj_or(prefix-10, 1,000,000,000-26)
dep(1,000,000,000-26, <LST>-28)
num(</LST>-30, 1-29)
dobj(<LST>-28, </LST>-30)
number(million-32, thousand-31)
num(</LST>-30, million-32)

(ROOT
  (S
    (PP (IN In)
      (NP (NN typography)))
    (, ,)
    (NP (DT a) (NNP Grapheme))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ fundamental) (NN unit))
        (PP (IN in)
          (NP (VBN written) (NN language)))))
    (. .)))

prep_in(unit-9, typography-2)
det(Grapheme-5, a-4)
nsubj(unit-9, Grapheme-5)
cop(unit-9, is-6)
det(unit-9, the-7)
amod(unit-9, fundamental-8)
root(ROOT-0, unit-9)
amod(language-12, written-11)
prep_in(unit-9, language-12)

(ROOT
  (S
    (NP
      (NP (NNP General) (NNP Telephone)
        (CC and)
        (NNP Electronics))
      (PRN (-LRB- -LRB-)
        (NP (NNP GTE))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJS largest))
        (PP (IN of)
          (NP (DT the)))
        ('' '')
        (ADJP (JJ independent) ('' '')
          (PP (IN US)
            (NP (NN telephone) (NNS companies)))))
      (PP (IN during)
        (NP
          (NP (DT the) (NNS days))
          (PP (IN of)
            (NP (DT the) (NNP Bell) (NNP System))))))
    (. .)))

nn(Telephone-2, General-1)
nsubj(largest-10, Telephone-2)
conj_and(Telephone-2, Electronics-4)
nsubj(largest-10, Electronics-4)
abbrev(Telephone-2, GTE-6)
cop(largest-10, was-8)
det(largest-10, the-9)
root(ROOT-0, largest-10)
prep_of(largest-10, the-12)
amod(largest-10, independent-14)
nn(companies-18, telephone-17)
prep_us(independent-14, companies-18)
det(days-21, the-20)
prep_during(largest-10, days-21)
det(System-25, the-23)
nn(System-25, Bell-24)
prep_of(days-21, System-25)

(ROOT
  (S
    (ADVP (RB Properly))
    (, ,)
    (NP (DT the) (NN term) (NN Gliding))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (VBG descending) (NN flight))
          (PP (IN of)
            (NP (DT a) (JJ heavier-than-air) (NN craft)))))
      (, ,)
      (SBAR (IN whereas)
        (S
          (NP (VBG soaring))
          (VP (VBZ is)
            (NP (DT the) (JJ correct) (NN term)
              (S
                (VP (TO to)
                  (VP (VB use)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (DT the) (NN craft))
                        (VP (VBZ gains)
                          (NP (NN altitude)
                            (CC or)
                            (NN speed))
                          (PP (IN from)
                            (NP (VBG rising) (NN air))))))))))))))
    (. .)))

advmod(refers-6, Properly-1)
det(Gliding-5, the-3)
nn(Gliding-5, term-4)
nsubj(refers-6, Gliding-5)
root(ROOT-0, refers-6)
amod(flight-9, descending-8)
prep_to(refers-6, flight-9)
det(craft-13, a-11)
amod(craft-13, heavier-than-air-12)
prep_of(flight-9, craft-13)
mark(term-20, whereas-15)
nsubj(term-20, soaring-16)
cop(term-20, is-17)
det(term-20, the-18)
amod(term-20, correct-19)
advcl(refers-6, term-20)
aux(use-22, to-21)
infmod(term-20, use-22)
advmod(gains-26, when-23)
det(craft-25, the-24)
nsubj(gains-26, craft-25)
advcl(use-22, gains-26)
dobj(gains-26, altitude-27)
dobj(gains-26, speed-29)
conj_or(altitude-27, speed-29)
amod(air-32, rising-31)
prep_from(gains-26, air-32)

(ROOT
  (S
    (NP (DT A) (NNP Guitarist))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN musician))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ plays)
              (NP (DT the) (NN guitar)))))))
    (. .)))

det(Guitarist-2, A-1)
nsubj(musician-5, Guitarist-2)
cop(musician-5, is-3)
det(musician-5, a-4)
root(ROOT-0, musician-5)
nsubj(plays-7, musician-5)
rcmod(musician-5, plays-7)
det(guitar-9, the-8)
dobj(plays-7, guitar-9)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Christianity)))
    (, ,)
    (NP
      (NP (DT a) (NN Gospel))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (NNP Old) (NNP English))
            (, ,) ('' '')
            (NP (JJ good) (NN news) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (ADVP (RB generally))
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (CD four) (JJ canonical) (NNS books))
            (PP (IN of)
              (NP (DT the) (NNP New) (NN Testament)))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP describe)
              (NP
                (NP (DT the) (NN birth) (, ,) (NN life) (, ,) (NN ministry) (, ,) (NN crucifixion) (, ,)
                  (CC and)
                  (NN resurrection))
                (PP (IN of)
                  (NP (NNP Jesus)))))))))
    (. .)))

prep_in(one-18, Christianity-2)
det(Gospel-5, a-4)
nsubj(one-18, Gospel-5)
dep(Gospel-5, from-7)
nn(English-9, Old-8)
pobj(from-7, English-9)
amod(news-13, good-12)
dep(English-9, news-13)
cop(one-18, is-16)
advmod(one-18, generally-17)
root(ROOT-0, one-18)
nsubj(describe-28, one-18)
num(books-22, four-20)
amod(books-22, canonical-21)
prep_of(one-18, books-22)
det(Testament-26, the-24)
nn(Testament-26, New-25)
prep_of(books-22, Testament-26)
rcmod(one-18, describe-28)
det(birth-30, the-29)
dobj(describe-28, birth-30)
dobj(describe-28, life-32)
conj_and(birth-30, life-32)
dobj(describe-28, ministry-34)
conj_and(birth-30, ministry-34)
dobj(describe-28, crucifixion-36)
conj_and(birth-30, crucifixion-36)
dobj(describe-28, resurrection-39)
conj_and(birth-30, resurrection-39)
prep_of(birth-30, Jesus-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP GNU) (NNP Image) (NNP Manipulation) (NN Program))
      (PRN (, ,)
        (CC or)
        (NP (NNP GIMP))
        (, ,)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN raster) (NNS graphics) (NN editor))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB process)
                (NP (JJ digital) (NNS graphics)
                  (CC and)
                  (NNS photographs))))))))
    (. .)))

det(Program-5, The-1)
nn(Program-5, GNU-2)
nn(Program-5, Image-3)
nn(Program-5, Manipulation-4)
nsubj(editor-14, Program-5)
dep(GIMP-8, or-7)
dep(Program-5, GIMP-8)
cop(editor-14, is-10)
det(editor-14, a-11)
nn(editor-14, raster-12)
nn(editor-14, graphics-13)
root(ROOT-0, editor-14)
xsubj(process-17, editor-14)
partmod(editor-14, used-15)
aux(process-17, to-16)
xcomp(used-15, process-17)
amod(graphics-19, digital-18)
dobj(process-17, graphics-19)
dobj(process-17, photographs-21)
conj_and(graphics-19, photographs-21)

(ROOT
  (S
    (NP (DT The) (NNPS Goths))
    (VP (VBD were)
      (NP
        (NP (NNP East) (NNP Germanic) (NNS tribes))
        (SBAR
          (WHNP (WP who))
          (S (, ,)
            (PP (IN in)
              (NP (DT the) (JJ 3rd)
                (CC and)
                (JJ 4th) (NNS centuries)))
            (, ,)
            (VP
              (VP (VBZ harried)
                (NP (DT the) (NNP Roman) (NNP Empire)))
              (CC and)
              (VP
                (ADVP (RB later))
                (VBD adopted)
                (NP (NNP Arianism))))))))
    (. .)))

det(Goths-2, The-1)
nsubj(tribes-6, Goths-2)
cop(tribes-6, were-3)
nn(tribes-6, East-4)
nn(tribes-6, Germanic-5)
root(ROOT-0, tribes-6)
nsubj(harried-16, tribes-6)
nsubj(adopted-22, tribes-6)
det(centuries-14, the-10)
amod(centuries-14, 3rd-11)
conj_and(3rd-11, 4th-13)
amod(centuries-14, 4th-13)
prep_in(harried-16, centuries-14)
rcmod(tribes-6, harried-16)
det(Empire-19, the-17)
nn(Empire-19, Roman-18)
dobj(harried-16, Empire-19)
advmod(adopted-22, later-21)
rcmod(tribes-6, adopted-22)
conj_and(harried-16, adopted-22)
dobj(adopted-22, Arianism-23)

(ROOT
  (S
    (NP (NNS Glycolysis))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN sequence))
        (PP (IN of)
          (NP
            (NP (NNS reactions))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ converts)
                  (NP (NN glucose))
                  (PP (IN into)
                    (NP
                      (NP (NN pyruvate))
                      (PP (IN with)
                        (NP
                          (NP (DT the) (JJ concomitant) (NN production))
                          (PP (IN of)
                            (NP
                              (NP (DT a)
                                (ADJP (RB relatively) (JJ small))
                                (NN amount))
                              (PP (IN of)
                                (NP (JJ adenosine) (NN triphosphate))))))))))))
            (PRN (-LRB- -LRB-)
              (NP (NNP ATP))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(sequence-4, Glycolysis-1)
cop(sequence-4, is-2)
det(sequence-4, the-3)
root(ROOT-0, sequence-4)
prep_of(sequence-4, reactions-6)
nsubj(converts-8, reactions-6)
rcmod(reactions-6, converts-8)
dobj(converts-8, glucose-9)
prep_into(converts-8, pyruvate-11)
det(production-15, the-13)
amod(production-15, concomitant-14)
prep_with(pyruvate-11, production-15)
det(amount-20, a-17)
advmod(small-19, relatively-18)
amod(amount-20, small-19)
prep_of(production-15, amount-20)
amod(triphosphate-23, adenosine-22)
prep_of(amount-20, triphosphate-23)
abbrev(reactions-6, ATP-25)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Gambeson))
      (PRN (-LRB- -LRB-)
        (CC or)
        (NP
          (NP (NN aketon))
          (CC or)
          (NP (JJ padded) (NN jack)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (UCP
        (NP
          (NP (DT a) (JJ padded) (JJ defensive) (NN jacket))
          (, ,)
          (VP (VBN worn)
            (PP (IN as)
              (NP (NN armor)))
            (ADVP (RB separately))))
        (, ,)
        (CC or)
        (ADJP (JJ combined)
          (PP (IN with)
            (NP (NN mail)
              (CC or)
              (NN plate) (NN armor))))))
    (. .)))

det(Gambeson-2, A-1)
nsubj(jacket-14, Gambeson-2)
nsubj(combined-22, Gambeson-2)
dep(aketon-5, or-4)
dep(Gambeson-2, aketon-5)
amod(jack-8, padded-7)
dep(Gambeson-2, jack-8)
conj_or(aketon-5, jack-8)
cop(jacket-14, is-10)
det(jacket-14, a-11)
amod(jacket-14, padded-12)
amod(jacket-14, defensive-13)
root(ROOT-0, jacket-14)
partmod(jacket-14, worn-16)
prep_as(worn-16, armor-18)
advmod(worn-16, separately-19)
conj_or(jacket-14, combined-22)
nn(armor-27, mail-24)
conj_or(mail-24, plate-26)
nn(armor-27, plate-26)
prep_with(combined-22, armor-27)

(ROOT
  (S
    (NP (NNP Gauntlet))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ video) (NN game))
          (VP
            (ADVP (RB originally))
            (VBN produced)
            (PP (IN in)
              (NP (CD 1985)))
            (PP (IN by)
              (NP (NNP Atari) (NNPS Games)))))))
    (. .)))

nsubj(refers-2, Gauntlet-1)
root(ROOT-0, refers-2)
det(game-6, a-4)
amod(game-6, video-5)
prep_to(refers-2, game-6)
advmod(produced-8, originally-7)
partmod(game-6, produced-8)
prep_in(produced-8, 1985-10)
nn(Games-13, Atari-12)
agent(produced-8, Games-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Giraffe))
      (PRN (-LRB- -LRB-)
        (NP (NNP Giraffa) (NNS camelopardalis))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ African) (JJ even-toed) (NN ungulate) (NN mammal))
        (, ,)
        (NP
          (NP (DT the) (JJS tallest))
          (PP (IN of)
            (NP (DT all) (JJ land-living) (NN animal) (NN species))))
        (, ,)
        (CC and)
        (NP (DT the) (JJS largest) (NN ruminant))))
    (. .)))

det(Giraffe-2, The-1)
nsubj(mammal-12, Giraffe-2)
nsubj(tallest-15, Giraffe-2)
nn(camelopardalis-5, Giraffa-4)
appos(Giraffe-2, camelopardalis-5)
cop(mammal-12, is-7)
det(mammal-12, an-8)
amod(mammal-12, African-9)
amod(mammal-12, even-toed-10)
nn(mammal-12, ungulate-11)
root(ROOT-0, mammal-12)
det(tallest-15, the-14)
conj_and(mammal-12, tallest-15)
det(species-20, all-17)
amod(species-20, land-living-18)
nn(species-20, animal-19)
prep_of(tallest-15, species-20)
det(ruminant-25, the-23)
amod(ruminant-25, largest-24)
conj_and(mammal-12, ruminant-25)

(ROOT
  (S
    (NP (DT A) (NNP Gardener))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN person))
        (VP (VBN involved)
          (PP (IN in)
            (NP
              (NP (DT the) (NN growing)
                (CC and)
                (NN maintenance))
              (PP (IN of)
                (NP (NNS plants))))
            (, ,)
            (ADVP (RB notably)))
          (PP (IN in)
            (NP (DT a) (NN garden))))))
    (. .)))

det(Gardener-2, A-1)
nsubj(person-5, Gardener-2)
cop(person-5, is-3)
det(person-5, any-4)
root(ROOT-0, person-5)
partmod(person-5, involved-6)
det(growing-9, the-8)
prep_in(involved-6, growing-9)
prep_in(involved-6, maintenance-11)
conj_and(growing-9, maintenance-11)
prep_of(growing-9, plants-13)
advmod(involved-6, notably-15)
det(garden-18, a-17)
prep_in(involved-6, garden-18)

(ROOT
  (S
    (NP (DT A) (NNPS Goddess))
    (VP (VBZ is)
      (NP (DT a) (JJ female) (NN deity)))
    (. .)))

det(Goddess-2, A-1)
nsubj(deity-6, Goddess-2)
cop(deity-6, is-3)
det(deity-6, a-4)
amod(deity-6, female-5)
root(ROOT-0, deity-6)

(ROOT
  (S
    (NP (NNP Gramophone))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ British) (NN publication))
          (VP (VBN devoted)
            (PP (TO to)
              (NP (JJ classical) (NN music)))))))
    (. .)))

nsubj(refers-2, Gramophone-1)
root(ROOT-0, refers-2)
det(publication-6, a-4)
amod(publication-6, British-5)
prep_to(refers-2, publication-6)
partmod(publication-6, devoted-7)
amod(music-10, classical-9)
prep_to(devoted-7, music-10)

(ROOT
  (S
    (NP (DT The) (NNP Genotype))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ genetic) (NN constitution))
        (PP (IN of)
          (NP
            (NP (DT a) (NN cell))
            (, ,)
            (NP (DT an) (NN organism))
            (, ,)
            (CC or)
            (NP (DT an) (NN individual))))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (JJ specific) (NN allele) (NN makeup))
                (PP (IN of)
                  (NP (DT the) (NN individual))))
              (, ,)
              (PP (RB usually) (IN with)
                (NP
                  (NP (NN reference))
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ specific) (NN character))
                      (PP (IN under)
                        (NP (NN consideration))))))))))))
    (. .)))

det(Genotype-2, The-1)
nsubj(constitution-6, Genotype-2)
cop(constitution-6, is-3)
det(constitution-6, the-4)
amod(constitution-6, genetic-5)
root(ROOT-0, constitution-6)
nsubj(makeup-23, constitution-6)
det(cell-9, a-8)
prep_of(constitution-6, cell-9)
det(organism-12, an-11)
prep_of(constitution-6, organism-12)
conj_or(cell-9, organism-12)
det(individual-16, an-15)
prep_of(constitution-6, individual-16)
conj_or(cell-9, individual-16)
cop(makeup-23, is-19)
det(makeup-23, the-20)
amod(makeup-23, specific-21)
nn(makeup-23, allele-22)
rcmod(constitution-6, makeup-23)
det(individual-26, the-25)
prep_of(makeup-23, individual-26)
advmod(makeup-23, usually-28)
prep_with(makeup-23, reference-30)
det(character-34, a-32)
amod(character-34, specific-33)
prep_to(reference-30, character-34)
prep_under(character-34, consideration-36)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Gemstone)
        (CC or)
        (NN gem))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (NP (DT a) (JJ precious)
          (CC or)
          (JJ semi-precious) (NN stone)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN piece))
        (PP (IN of)
          (NP
            (NP (JJ attractive) (NN mineral))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (PRN (: -)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (S
                        (VP (VBN cut)))
                      (CC and)
                      (S
                        (ADJP (VBN polished)))))
                  (: -))
                (VP (VBZ is)
                  (VP (VBN used)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (NN jewelry)
                            (CC or)
                            (JJ other) (NNS adornments)))))))))))))
    (. .)))

det(Gemstone-2, A-1)
nsubj(piece-16, Gemstone-2)
conj_or(Gemstone-2, gem-4)
nsubj(piece-16, gem-4)
advmod(called-7, also-6)
partmod(Gemstone-2, called-7)
det(stone-12, a-8)
amod(stone-12, precious-9)
conj_or(precious-9, semi-precious-11)
amod(stone-12, semi-precious-11)
dobj(called-7, stone-12)
cop(piece-16, is-14)
det(piece-16, a-15)
root(ROOT-0, piece-16)
amod(mineral-19, attractive-18)
prep_of(piece-16, mineral-19)
nsubjpass(used-29, mineral-19)
advmod(cut-24, when-23)
parataxis(used-29, cut-24)
conj_and(cut-24, polished-26)
parataxis(used-29, polished-26)
auxpass(used-29, is-28)
rcmod(mineral-19, used-29)
aux(make-31, to-30)
xcomp(used-29, make-31)
nn(adornments-35, jewelry-32)
conj_or(jewelry-32, other-34)
nn(adornments-35, other-34)
dobj(make-31, adornments-35)

(ROOT
  (S
    (NP (DT A) (NN Gate))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN point))
          (PP (IN of)
            (NP
              (NP (NN entry))
              (PP (TO to)
                (NP
                  (NP (DT a) (NN space))
                  (VP (VBN enclosed)
                    (PP (IN by)
                      (NP (NNS walls)))))))))
        (, ,)
        (CC or)
        (NP
          (NP (DT an) (NN opening))
          (PP (IN in)
            (NP (DT a) (NN fence))))))
    (. .)))

det(Gate-2, A-1)
nsubj(point-5, Gate-2)
cop(point-5, is-3)
det(point-5, a-4)
root(ROOT-0, point-5)
prep_of(point-5, entry-7)
det(space-10, a-9)
prep_to(entry-7, space-10)
partmod(space-10, enclosed-11)
agent(enclosed-11, walls-13)
det(opening-17, an-16)
conj_or(point-5, opening-17)
det(fence-20, a-19)
prep_in(opening-17, fence-20)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNP Glaucus) (NNP -LRB-) ('' '') (NNP shiny))
    (, ,) ('' '') ('' '')
    (NP
      (NP (JJ bright))
      ('' '')
      (CC or)
      (NP (JJ '') (NN bluish-green) ('' ''))
      (-RRB- -RRB-))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP (JJ several) (JJ different) (NNS figures)))
        (, ,)
        (PP (VBG including)
          (NP (CD one) (NN god)))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(name-21, mythology-3)
nn(shiny-8, Glaucus-5)
nsubj(name-21, shiny-8)
nsubj(name-21, bright-12)
conj_or(bright-12, bluish-green-16)
nsubj(name-21, bluish-green-16)
cop(name-21, was-19)
det(name-21, the-20)
root(ROOT-0, name-21)
amod(figures-25, several-23)
amod(figures-25, different-24)
prep_of(name-21, figures-25)
num(god-29, one-28)
prep_including(name-21, god-29)

(ROOT
  (S
    (NP (DT A) (NNP Gallon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP (NN volume)))))
    (. .)))

det(Gallon-2, A-1)
nsubj(measure-5, Gallon-2)
cop(measure-5, is-3)
det(measure-5, a-4)
root(ROOT-0, measure-5)
prep_of(measure-5, volume-7)

(ROOT
  (S
    (NP (DT A) (NNP Glyph))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN element))
        (PP (IN of)
          (S
            (VP (VBG writing))))))
    (. .)))

det(Glyph-2, A-1)
nsubj(element-5, Glyph-2)
cop(element-5, is-3)
det(element-5, an-4)
root(ROOT-0, element-5)
prepc_of(element-5, writing-7)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Game.com))
      (PRN (-LRB- -LRB-)
        (VP
          (VP (VBN pronounced)
            (PP (IN in)
              (NP
                (NP
                  (NP (NN TV) (NNS commercials))
                  (PP (IN as) ('' '')
                    (NP (NN game) (NN com)))
                  ('' ''))
                (, ,)
                (ADVP (RB not) ('' ''))
                (NP (NN game) (NN dot) (NN com)))))
          ('' '')
          (CC and)
          (VP (RB not) (VBN capitalized)
            (PP (IN in)
              (NP (NN marketing) (NN material)))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ handheld) (NN game) (NN console))
        (VP (VBN released)
          (PP (IN by)
            (NP
              (NP (NNP Tiger) (NNP Electronics))
              (PP (IN in)
                (NP (NNP September) (CD 1997))))))))
    (. .)))

det(Game.com-2, The-1)
nsubj(console-31, Game.com-2)
dep(Game.com-2, pronounced-4)
nn(commercials-7, TV-6)
prep_in(pronounced-4, commercials-7)
nn(com-11, game-10)
prep_as(commercials-7, com-11)
advmod(commercials-7, not-14)
nn(com-18, game-16)
nn(com-18, dot-17)
dep(commercials-7, com-18)
neg(capitalized-22, not-21)
dep(Game.com-2, capitalized-22)
conj_and(pronounced-4, capitalized-22)
nn(material-25, marketing-24)
prep_in(capitalized-22, material-25)
cop(console-31, was-27)
det(console-31, a-28)
amod(console-31, handheld-29)
nn(console-31, game-30)
root(ROOT-0, console-31)
partmod(console-31, released-32)
nn(Electronics-35, Tiger-34)
agent(released-32, Electronics-35)
prep_in(Electronics-35, September-37)
num(September-37, 1997-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Greyhound))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN breed))
        (PP (IN of)
          (NP (NN dog)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (VP (VBN been)
                (VP
                  (ADVP (RB primarily))
                  (VBN bred)
                  (PP (IN for)
                    (S
                      (VP (VBG coursing)
                        (NP (NN game)
                          (CC and)
                          (NN racing))))))))))))
    (. .)))

det(Greyhound-2, The-1)
nsubj(breed-5, Greyhound-2)
cop(breed-5, is-3)
det(breed-5, a-4)
root(ROOT-0, breed-5)
nsubjpass(bred-12, breed-5)
prep_of(breed-5, dog-7)
aux(bred-12, has-9)
auxpass(bred-12, been-10)
advmod(bred-12, primarily-11)
rcmod(breed-5, bred-12)
prepc_for(bred-12, coursing-14)
dobj(coursing-14, game-15)
dobj(coursing-14, racing-17)
conj_and(game-15, racing-17)

(ROOT
  (S
    (NP (DT The) (NNP Gulag))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN government) (NN agency))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBN administered)
              (NP
                (NP (DT the) (JJ penal) (NN labor) (NNS camps))
                (PP (IN of)
                  (NP (DT the) (NNP Soviet) (NNP Union)))))))))
    (. .)))

det(Gulag-2, The-1)
nsubj(agency-6, Gulag-2)
cop(agency-6, was-3)
det(agency-6, the-4)
nn(agency-6, government-5)
root(ROOT-0, agency-6)
nsubj(administered-8, agency-6)
rcmod(agency-6, administered-8)
det(camps-12, the-9)
amod(camps-12, penal-10)
nn(camps-12, labor-11)
dobj(administered-8, camps-12)
det(Union-16, the-14)
nn(Union-16, Soviet-15)
prep_of(camps-12, Union-16)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Arabian) (NN folklore)))
    (, ,)
    (NP (DT a) (NNP Genie))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fiery) (NN creature))
        (PP (IN with)
          (NP (JJ free) (NN will)))))
    (. .)))

amod(folklore-3, Arabian-2)
prep_in(creature-10, folklore-3)
det(Genie-6, a-5)
nsubj(creature-10, Genie-6)
cop(creature-10, is-7)
det(creature-10, a-8)
amod(creature-10, fiery-9)
root(ROOT-0, creature-10)
amod(will-13, free-12)
prep_with(creature-10, will-13)

(ROOT
  (S
    (NP (DT A) (NNP Geyser))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hot) (NN spring))
        (VP (VBN characterized)
          (PP (IN by)
            (NP
              (NP (JJ intermittent) (NN discharge))
              (PP (IN of)
                (NP
                  (NP (NN water))
                  (VP
                    (VP (VBN ejected)
                      (ADVP (RB turbulently)))
                    (CC and)
                    (VP (VBN accomplished)
                      (PP (IN by)
                        (NP (DT a) (NN vapor) (NN phase))))))))))))
    (. .)))

det(Geyser-2, A-1)
nsubj(spring-6, Geyser-2)
cop(spring-6, is-3)
det(spring-6, a-4)
amod(spring-6, hot-5)
root(ROOT-0, spring-6)
partmod(spring-6, characterized-7)
amod(discharge-10, intermittent-9)
agent(characterized-7, discharge-10)
prep_of(discharge-10, water-12)
dep(water-12, ejected-13)
advmod(ejected-13, turbulently-14)
dep(water-12, accomplished-16)
conj_and(ejected-13, accomplished-16)
det(phase-20, a-18)
nn(phase-20, vapor-19)
prep_by(accomplished-16, phase-20)

(ROOT
  (S
    (NP (DT A) (NNP Gimlet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN hand) (NN tool))
        (PP (IN for)
          (S
            (VP (VBG drilling)
              (NP (JJ small) (NNS holes))
              (, ,)
              (PP
                (ADVP (RB mainly))
                (IN in)
                (NP (NN wood)))
              (, ,)
              (PP (IN without)
                (NP (NN splitting))))))))
    (. .)))

det(Gimlet-2, A-1)
nsubj(tool-6, Gimlet-2)
cop(tool-6, is-3)
det(tool-6, a-4)
nn(tool-6, hand-5)
root(ROOT-0, tool-6)
prepc_for(tool-6, drilling-8)
amod(holes-10, small-9)
dobj(drilling-8, holes-10)
advmod(drilling-8, mainly-12)
prep_in(drilling-8, wood-14)
prep_without(drilling-8, splitting-17)

(ROOT
  (S
    (NP (NNP Gent))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ shortened) (NN form))
          (PP (IN of)
            (NP (NN gentleman))))))
    (. .)))

nsubj(refers-2, Gent-1)
root(ROOT-0, refers-2)
det(form-6, a-4)
amod(form-6, shortened-5)
prep_to(refers-2, form-6)
prep_of(form-6, gentleman-8)

(ROOT
  (S
    (NP (DT The) (NNPS Glottis))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT the) (NN combination))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ vocal) (NNS folds))
                (CC and)
                (NP (DT the) (NN space))))))
        (PP (IN in)
          (PP (IN between)
            (NP
              (NP (DT the) (NNS folds))
              (PRN (-LRB- -LRB-)
                (NP (DT the) (JJ rima) (NNS glottidis))
                (-RRB- -RRB-)))))))
    (. .)))

det(Glottis-2, The-1)
nsubjpass(defined-4, Glottis-2)
auxpass(defined-4, is-3)
root(ROOT-0, defined-4)
det(combination-7, the-6)
prep_as(defined-4, combination-7)
det(folds-11, the-9)
amod(folds-11, vocal-10)
prep_of(combination-7, folds-11)
det(space-14, the-13)
prep_of(combination-7, space-14)
conj_and(folds-11, space-14)
prep(defined-4, in-15)
pcomp(in-15, between-16)
det(folds-18, the-17)
prep_between(in-15, folds-18)
det(glottidis-22, the-20)
amod(glottidis-22, rima-21)
appos(folds-18, glottidis-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Goldfish))
      (, ,)
      (NP (NNP Carassius) (NNS auratus))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (JJS earliest) (NN fish)))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP
                (VP (VBN domesticated))
                (, ,)
                (CC and)
                (VP (VBZ is)
                  (ADVP (RB still))
                  (NP
                    (NP (CD one))
                    (PP (IN of)
                      (NP (DT the)
                        (ADJP (RBS most) (RB commonly) (JJ kept))
                        (NN aquarium) (NN fish)
                        (CC and)
                        (NN water) (NN garden) (NN fish)))))))))))
    (. .)))

det(Goldfish-2, The-1)
nsubj(one-8, Goldfish-2)
nn(auratus-5, Carassius-4)
appos(Goldfish-2, auratus-5)
cop(one-8, was-7)
root(ROOT-0, one-8)
det(fish-12, the-10)
amod(fish-12, earliest-11)
prep_of(one-8, fish-12)
aux(domesticated-15, to-13)
auxpass(domesticated-15, be-14)
infmod(one-8, domesticated-15)
cop(one-20, is-18)
advmod(one-20, still-19)
infmod(one-8, one-20)
conj_and(domesticated-15, one-20)
det(fish-27, the-22)
advmod(kept-25, most-23)
advmod(kept-25, commonly-24)
amod(fish-27, kept-25)
nn(fish-27, aquarium-26)
prep_of(one-20, fish-27)
nn(fish-31, water-29)
nn(fish-31, garden-30)
prep_of(one-20, fish-31)
conj_and(fish-27, fish-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (DT the) (NNP Sumerian) (NN king) (NN list))))
    (, ,)
    (NP (NNP Gilgamesh))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NNP Lugalbanda))))
        (CC and)
        (NP
          (NP (DT the) (JJ fifth) (NN king))
          (PP (IN of)
            (NP
              (NP (NNP Uruk))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP
                    (NP (NNP Early) (NNP Dynastic) (NNP II))
                    (, ,)
                    (NP (JJ first) (NN dynasty)))
                  (PP (IN of)
                    (NP (NNP Uruk))))
                (-RRB- -RRB-)))))))
    (. .)))

prepc_according_to(son-11, to-2)
det(list-6, the-3)
nn(list-6, Sumerian-4)
nn(list-6, king-5)
pobj(son-11, list-6)
nsubj(son-11, Gilgamesh-8)
cop(son-11, was-9)
det(son-11, the-10)
root(ROOT-0, son-11)
prep_of(son-11, Lugalbanda-13)
det(king-17, the-15)
amod(king-17, fifth-16)
conj_and(son-11, king-17)
prep_of(king-17, Uruk-19)
nn(II-23, Early-21)
nn(II-23, Dynastic-22)
dep(Uruk-19, II-23)
amod(dynasty-26, first-25)
appos(II-23, dynasty-26)
prep_of(II-23, Uruk-28)

(ROOT
  (S
    (NP
      (NP (NNP Helium))
      (PRN (-LRB- -LRB-)
        (NP (PRP He))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ colorless) (, ,) (JJ odorless) (, ,) (JJ tasteless) (, ,) (JJ non-toxic) (, ,) (JJ inert) (JJ monatomic) (NN chemical) (NN element))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ heads)
              (NP
                (NP
                  (NP (DT the) (JJ noble) (NN gas) (NN series))
                  (PP (IN in)
                    (NP (DT the) (JJ periodic) (NN table))))
                (CC and)
                (SBAR
                  (WHNP (WP$ whose) (JJ atomic) (NN number))
                  (S
                    (VP (VBZ is)
                      (NP (CD 2)))))))))))
    (. .)))

nsubj(element-18, Helium-1)
dep(Helium-1, He-3)
cop(element-18, is-5)
det(element-18, a-6)
amod(element-18, colorless-7)
amod(element-18, odorless-9)
amod(element-18, tasteless-11)
amod(element-18, non-toxic-13)
amod(element-18, inert-15)
amod(element-18, monatomic-16)
nn(element-18, chemical-17)
root(ROOT-0, element-18)
nsubj(heads-20, element-18)
rcmod(element-18, heads-20)
det(series-24, the-21)
amod(series-24, noble-22)
nn(series-24, gas-23)
dobj(heads-20, series-24)
det(table-28, the-26)
amod(table-28, periodic-27)
prep_in(series-24, table-28)
poss(number-32, whose-30)
amod(number-32, atomic-31)
nsubj(2-34, number-32)
cop(2-34, is-33)
dobj(heads-20, 2-34)
conj_and(series-24, 2-34)
rcmod(series-24, 2-34)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ organic) (NN chemistry)))
    (, ,)
    (NP (DT a) (NNP Hydrocarbon))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ organic) (NN compound))
        (VP (VBG consisting)
          (ADVP (RB entirely))
          (PP (IN of)
            (NP (NN hydrogen)
              (CC and)
              (NN carbon))))))
    (. .)))

amod(chemistry-3, organic-2)
prep_in(compound-10, chemistry-3)
det(Hydrocarbon-6, a-5)
nsubj(compound-10, Hydrocarbon-6)
cop(compound-10, is-7)
det(compound-10, an-8)
amod(compound-10, organic-9)
root(ROOT-0, compound-10)
partmod(compound-10, consisting-11)
advmod(consisting-11, entirely-12)
prep_of(consisting-11, hydrogen-14)
prep_of(consisting-11, carbon-16)
conj_and(hydrogen-14, carbon-16)

(ROOT
  (S
    (S
      (NP (DT The)
        (NP
          (NP (NNP Homepage))
          (PRN (-LRB- -LRB-)
            (VP
              (ADVP (RB often))
              (VBN written)
              (PP (IN as)
                (NP (NN home) (NN page))))
            (-RRB- -RRB-)))
        (CC or)
        (NP (JJ main) (NN page)))
      (VP (VBZ is)
        (NP (DT the)
          (ADJP (JJ URL)
            (CC or)
            (JJ local))
          (NN file)
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB automatically))
              (VP (VBZ loads)
                (SBAR
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT a) (NN web) (NN browser))
                      (VP (VBZ starts))))
                  (CC and)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT the) (NN browser))
                      (VP (VBZ 's)
                        (VP ('' '')
                          (NP (RB home))))))))))
          ('' ''))))
    (NP (NN button))
    (VP (VBZ is)
      (VP (VBN pressed)))
    (. .)))

dep(Homepage-2, The-1)
nsubj(file-18, Homepage-2)
advmod(written-5, often-4)
dep(Homepage-2, written-5)
nn(page-8, home-7)
prep_as(written-5, page-8)
amod(page-12, main-11)
conj_or(Homepage-2, page-12)
nsubj(file-18, page-12)
cop(file-18, is-13)
det(file-18, the-14)
amod(file-18, URL-15)
conj_or(URL-15, local-17)
amod(file-18, local-17)
dep(pressed-37, file-18)
nsubj(loads-21, that-19)
advmod(loads-21, automatically-20)
ccomp(file-18, loads-21)
advmod(starts-26, when-22)
det(browser-25, a-23)
nn(browser-25, web-24)
nsubj(starts-26, browser-25)
dep(loads-21, starts-26)
advmod(home-33, when-28)
det(browser-30, the-29)
nsubj(home-33, browser-30)
aux(home-33, 's-31)
dep(loads-21, home-33)
conj_and(starts-26, home-33)
nsubjpass(pressed-37, button-35)
auxpass(pressed-37, is-36)
root(ROOT-0, pressed-37)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)
        (CC and)
        (NN computer) (NN science)))
    (, ,)
    (NP
      (NP (NNP Hexadecimal))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (RB also) (JJ base-16))
          (, ,)
          (NP (NN hexa))
          (, ,)
          (CC or)
          (NP (NN hex)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN numeral) (NN system))
        (PP (IN with)
          (NP
            (NP (DT a) (NN radix) (, ,)
              (CC or)
              (NN base) (, ,))
            (PP (IN of)
              (NP (CD 16)))))))
    (. .)))

prep_in(system-20, mathematics-2)
nn(science-5, computer-4)
conj_and(mathematics-2, science-5)
prep_in(system-20, science-5)
nsubj(system-20, Hexadecimal-7)
advmod(base-16-10, also-9)
dep(Hexadecimal-7, base-16-10)
dep(Hexadecimal-7, hexa-12)
conj_or(base-16-10, hexa-12)
dep(Hexadecimal-7, hex-15)
conj_or(base-16-10, hex-15)
cop(system-20, is-17)
det(system-20, a-18)
nn(system-20, numeral-19)
root(ROOT-0, system-20)
det(radix-23, a-22)
prep_with(system-20, radix-23)
prep_with(system-20, base-26)
conj_or(radix-23, base-26)
prep_of(radix-23, 16-29)

(ROOT
  (S
    (NP (DT A) (NNP Hex))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a)
            (ADJP (JJ curse)
              (CC or)
              (JJ magical))
            (NN spell))
          (CC or)
          (NP
            (NP (DT a) (JJ female) (NN caster))
            (PP (IN of)
              (NP (JJ such)))))))
    (. .)))

det(Hex-2, A-1)
nsubj(refers-3, Hex-2)
root(ROOT-0, refers-3)
det(spell-9, a-5)
amod(spell-9, curse-6)
conj_or(curse-6, magical-8)
amod(spell-9, magical-8)
prep_to(refers-3, spell-9)
det(caster-13, a-11)
amod(caster-13, female-12)
prep_to(refers-3, caster-13)
conj_or(spell-9, caster-13)
prep_of(caster-13, such-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS statistics)))
    (, ,)
    (NP (DT a) (NNP Histogram))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ graphical) (NN display))
        (PP (IN of)
          (NP (JJ tabulated) (NNS frequencies)))))
    (. .)))

prep_in(display-9, statistics-2)
det(Histogram-5, a-4)
nsubj(display-9, Histogram-5)
cop(display-9, is-6)
det(display-9, a-7)
amod(display-9, graphical-8)
root(ROOT-0, display-9)
amod(frequencies-12, tabulated-11)
prep_of(display-9, frequencies-12)

(ROOT
  (S
    (NP (DT A) (NNP Hearse))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ funeral) (NN vehicle))
        (, ,)
        (NP
          (NP (DT a) (NN conveyance))
          (PP (IN for)
            (NP (DT the) (NN coffin))))))
    (. .)))

det(Hearse-2, A-1)
nsubj(vehicle-6, Hearse-2)
cop(vehicle-6, is-3)
det(vehicle-6, a-4)
amod(vehicle-6, funeral-5)
root(ROOT-0, vehicle-6)
det(conveyance-9, a-8)
appos(vehicle-6, conveyance-9)
det(coffin-12, the-11)
prep_for(conveyance-9, coffin-12)

(ROOT
  (S
    (NP (DT A) (NNP Hobby))
    (VP (VBZ is)
      (NP (DT a) (JJ spare-time) (JJ recreational) (NN pursuit)))
    (. .)))

det(Hobby-2, A-1)
nsubj(pursuit-7, Hobby-2)
cop(pursuit-7, is-3)
det(pursuit-7, a-4)
amod(pursuit-7, spare-time-5)
amod(pursuit-7, recreational-6)
root(ROOT-0, pursuit-7)

(ROOT
  (S
    (NP (DT A) (NNP Herb))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN plant))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN valued)
                (PP (IN for)
                  (NP
                    (NP (NNS qualities))
                    (PP (JJ such) (IN as)
                      (NP
                        (NP (JJ medicinal) (NNS properties))
                        (, ,)
                        (NP (NN flavor))
                        (, ,)
                        (NP (NN scent))
                        (, ,)
                        (CC or)
                        (NP (DT the) (JJ like))))))))))))
    (. .)))

det(Herb-2, A-1)
nsubj(plant-5, Herb-2)
cop(plant-5, is-3)
det(plant-5, a-4)
root(ROOT-0, plant-5)
nsubjpass(valued-8, plant-5)
auxpass(valued-8, is-7)
rcmod(plant-5, valued-8)
prep_for(valued-8, qualities-10)
amod(properties-14, medicinal-13)
prep_such_as(qualities-10, properties-14)
prep_such_as(qualities-10, flavor-16)
conj_or(properties-14, flavor-16)
prep_such_as(qualities-10, scent-18)
conj_or(properties-14, scent-18)
det(like-22, the-21)
prep_such_as(qualities-10, like-22)
conj_or(properties-14, like-22)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Holocene))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ geological) (NN epoch))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD began)
                (ADVP
                  (NP
                    (QP (RB approximately) (CD 10,000))
                    (NNS years))
                  (RB ago))))))
        (PRN (-LRB- -LRB-)
          (NP
            (QP (RB about) (CD 8000) (CD BC)))
          (-RRB- -RRB-))))
    (. .)))

det(Holocene-2, The-1)
nsubj(epoch-6, Holocene-2)
cop(epoch-6, is-3)
det(epoch-6, a-4)
amod(epoch-6, geological-5)
root(ROOT-0, epoch-6)
nsubj(began-9, epoch-6)
rcmod(epoch-6, began-9)
quantmod(10,000-11, approximately-10)
num(years-12, 10,000-11)
npadvmod(ago-13, years-12)
advmod(began-9, ago-13)
quantmod(BC-17, about-15)
number(BC-17, 8000-16)
dep(epoch-6, BC-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Harbor))
      (CC or)
      (NP
        (NP (NN harbor))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB see)
              (NP (NN spelling) (NNS differences))))
          (-RRB- -RRB-)))
      (, ,)
      (CC or)
      (NP (NN haven)))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN place))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNS ships))
            (VP
              (VP (MD may)
                (VP (VB shelter)
                  (PP (IN from)
                    (NP (DT the) (NN weather)))))
              (CC or)
              (VP (VBP are)
                (VP (VBN stored))))))))
    (. .)))

det(Harbor-2, A-1)
nsubj(place-16, Harbor-2)
conj_or(Harbor-2, harbor-4)
nsubj(place-16, harbor-4)
dep(harbor-4, see-6)
nn(differences-8, spelling-7)
dobj(see-6, differences-8)
conj_or(Harbor-2, haven-12)
nsubj(place-16, haven-12)
cop(place-16, is-14)
det(place-16, a-15)
root(ROOT-0, place-16)
advmod(shelter-20, where-17)
nsubj(shelter-20, ships-18)
nsubjpass(stored-26, ships-18)
aux(shelter-20, may-19)
rcmod(place-16, shelter-20)
det(weather-23, the-22)
prep_from(shelter-20, weather-23)
auxpass(stored-26, are-25)
rcmod(place-16, stored-26)
conj_or(shelter-20, stored-26)

(ROOT
  (S
    (S
      (ADJP (JJ German)))
    (, ,)
    (NP (NNP H))
    (VP (VBZ is)
      (ADVP (RB typically))
      (VP (VBN used)
        (PP (IN as)
          (NP
            (NP (DT a) (NN vowel) (NN lengthener))
            (, ,)
            (CONJP (RB as) (RB well) (IN as))
            (NP (DT the) (JJ phoneme) (JJ \/) (NN h) (NN \/))))))
    (. .)))

ccomp(used-6, German-1)
nsubjpass(used-6, H-3)
auxpass(used-6, is-4)
advmod(used-6, typically-5)
root(ROOT-0, used-6)
det(lengthener-10, a-8)
nn(lengthener-10, vowel-9)
prep_as(used-6, lengthener-10)
det(\/-19, the-15)
amod(\/-19, phoneme-16)
amod(\/-19, \/-17)
nn(\/-19, h-18)
prep_as(used-6, \/-19)
conj_and(lengthener-10, \/-19)

(ROOT
  (S
    (NP (DT A) (NNP Horseshoe))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ U-shaped) (NN item))
        (VP
          (VP (VBN made)
            (PP
              (PP (IN of)
                (NP (NN metal)))
              (CC or)
              (PP (IN of)
                (NP (JJ modern) (JJ synthetic) (NNS materials)))))
          (, ,)
          (VP (VBN nailed))
          (CC or)
          (VP (VBN glued)
            (PP (TO to)
              (NP
                (NP (DT the) (NNS hooves))
                (PP (IN of)
                  (NP
                    (NP (NNS horses))
                    (CC and)
                    (NP (DT some) (JJ other) (NN draught) (NNS animals))))))))))
    (. .)))

det(Horseshoe-2, A-1)
nsubj(item-6, Horseshoe-2)
cop(item-6, is-3)
det(item-6, a-4)
amod(item-6, U-shaped-5)
root(ROOT-0, item-6)
dep(item-6, made-7)
prep_of(made-7, metal-9)
amod(materials-14, modern-12)
amod(materials-14, synthetic-13)
prep_of(made-7, materials-14)
conj_or(metal-9, materials-14)
dep(item-6, nailed-16)
conj_or(made-7, nailed-16)
dep(item-6, glued-18)
conj_or(made-7, glued-18)
det(hooves-21, the-20)
prep_to(glued-18, hooves-21)
prep_of(hooves-21, horses-23)
det(animals-28, some-25)
amod(animals-28, other-26)
nn(animals-28, draught-27)
prep_of(hooves-21, animals-28)
conj_and(horses-23, animals-28)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (, ,)
    (NP (NNP Transclusion))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN inclusion))
          (PP (IN of)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP (DT a) (NN document)))))))
      (PP (IN into)
        (NP
          (NP (DT another) (NN document))
          (PP (IN by)
            (NP (NN reference))))))
    (. .)))

nn(science-3, computer-2)
prep_in(refers-6, science-3)
nsubj(refers-6, Transclusion-5)
root(ROOT-0, refers-6)
det(inclusion-9, the-8)
prep_to(refers-6, inclusion-9)
prep_of(inclusion-9, part-11)
det(document-14, a-13)
prep_of(part-11, document-14)
det(document-17, another-16)
prep_into(refers-6, document-17)
prep_by(document-17, reference-19)

(ROOT
  (S
    (NP (DT The) (NNPS Huns))
    (VP (VBD were)
      (NP
        (NP (DT an) (JJ early) (NN confederation))
        (PP (IN of)
          (NP (JJ Central) (JJ Asian) (NN equestrian) (NNS nomads)
            (CC or)
            (NNS semi-nomads))))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT a) (JJ Turkic) (NN core))
          (PP (IN of)
            (NP (NN aristocracy))))))
    (. .)))

det(Huns-2, The-1)
nsubj(confederation-6, Huns-2)
cop(confederation-6, were-3)
det(confederation-6, an-4)
amod(confederation-6, early-5)
root(ROOT-0, confederation-6)
amod(nomads-11, Central-8)
amod(nomads-11, Asian-9)
nn(nomads-11, equestrian-10)
prep_of(confederation-6, nomads-11)
prep_of(confederation-6, semi-nomads-13)
conj_or(nomads-11, semi-nomads-13)
det(core-18, a-16)
amod(core-18, Turkic-17)
prep_with(confederation-6, core-18)
prep_of(core-18, aristocracy-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (NNP Hacker))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (NNS people))
          (VP (VBN engaged)
            (PP (IN in)
              (NP
                (NP (NN circumvention))
                (PP (IN of)
                  (NP (NN computer) (NN security)))))))))
    (. .)))

prep_in(refers-5, computing-2)
nsubj(refers-5, Hacker-4)
root(ROOT-0, refers-5)
prep_to(refers-5, people-7)
partmod(people-7, engaged-8)
prep_in(engaged-8, circumvention-10)
nn(security-13, computer-12)
prep_of(circumvention-10, security-13)

(ROOT
  (S
    (NP (NNP Huckleberry))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN name))
        (VP (VBN used)
          (PP (IN in)
            (NP
              (NP (NNP North) (NNP America))
              (PP (IN for)
                (NP (JJ several) (NNS plants)))))
          (PP (IN in)
            (NP
              (NP (CD two)
                (ADJP (RB closely) (JJ related))
                (NN genera))
              (PP (IN in)
                (NP (DT the) (NN family) (NN Ericaceae))))))
        (: :)
        (NP (NNP Gaylussacia)
          (CC and)
          (NNP Vaccinium))))
    (. .)))

nsubj(name-4, Huckleberry-1)
cop(name-4, is-2)
det(name-4, a-3)
root(ROOT-0, name-4)
partmod(name-4, used-5)
nn(America-8, North-7)
prep_in(used-5, America-8)
amod(plants-11, several-10)
prep_for(America-8, plants-11)
num(genera-16, two-13)
advmod(related-15, closely-14)
amod(genera-16, related-15)
prep_in(used-5, genera-16)
det(Ericaceae-20, the-18)
nn(Ericaceae-20, family-19)
prep_in(genera-16, Ericaceae-20)
dep(name-4, Gaylussacia-22)
dep(name-4, Vaccinium-24)
conj_and(Gaylussacia-22, Vaccinium-24)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ abstract) (NN algebra)))
    (, ,)
    (NP (DT a) (NNP Homomorphism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ structure-preserving) (NN map))
        (PP (IN between)
          (NP
            (NP (CD two) (JJ algebraic) (NNS structures))
            (PRN (-LRB- -LRB-)
              (PP (JJ such) (IN as)
                (NP (NNS groups) (, ,) (NNS rings) (, ,)
                  (CC or)
                  (NN vector) (NNS spaces)))
              (-RRB- -RRB-))))))
    (. .)))

amod(algebra-3, abstract-2)
prep_in(map-10, algebra-3)
det(Homomorphism-6, a-5)
nsubj(map-10, Homomorphism-6)
cop(map-10, is-7)
det(map-10, a-8)
amod(map-10, structure-preserving-9)
root(ROOT-0, map-10)
num(structures-14, two-12)
amod(structures-14, algebraic-13)
prep_between(map-10, structures-14)
nn(rings-20, groups-18)
prep_such_as(structures-14, rings-20)
nn(spaces-24, vector-23)
prep_such_as(structures-14, spaces-24)
conj_or(rings-20, spaces-24)

(ROOT
  (S
    (NP (NNP Horror))
    (VP
      (VP (VBZ refers)
        (PP (TO to)
          (NP (DT an) (NN album)))
        (PP (IN by)
          (NP
            (NP (NNP Cannae) (NNP A) (NNP Historian))
            (SBAR
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT an) (NN individual))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ studies)
                          (CC and)
                          (VBZ writes)
                          (PP (IN about)
                            (NP (NN history)))))))))))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (VP (VBN regarded)
          (PP (IN as)
            (NP
              (NP (DT an) (NN authority))
              (PP (IN on)
                (NP (PRP it))))))))
    (. .)))

nsubj(refers-2, Horror-1)
nsubjpass(regarded-22, Horror-1)
root(ROOT-0, refers-2)
det(album-5, an-4)
prep_to(refers-2, album-5)
nn(Historian-9, Cannae-7)
nn(Historian-9, A-8)
prep_by(refers-2, Historian-9)
cop(individual-12, is-10)
det(individual-12, an-11)
rcmod(Historian-9, individual-12)
nsubj(studies-14, individual-12)
nsubj(writes-16, individual-12)
rcmod(individual-12, studies-14)
rcmod(individual-12, writes-16)
conj_and(studies-14, writes-16)
prep_about(studies-14, history-18)
auxpass(regarded-22, is-21)
conj_and(refers-2, regarded-22)
det(authority-25, an-24)
prep_as(regarded-22, authority-25)
prep_on(authority-25, it-27)

(ROOT
  (S
    (NP (NNP Homeschooling))
    (VP (MD may)
      (ADVP (RB also))
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (NN instruction))
            (PP (IN in)
              (NP (DT the) (NN home)))))
        (PP (IN under)
          (NP
            (NP (DT the) (NN supervision))
            (PP (IN of)
              (NP (NN correspondence) (NNS schools)
                (CC or)
                (NN umbrella) (NNS schools)))))))
    (. .)))

nsubj(refer-4, Homeschooling-1)
aux(refer-4, may-2)
advmod(refer-4, also-3)
root(ROOT-0, refer-4)
prep_to(refer-4, instruction-6)
det(home-9, the-8)
prep_in(instruction-6, home-9)
det(supervision-12, the-11)
prep_under(refer-4, supervision-12)
nn(schools-15, correspondence-14)
prep_of(supervision-12, schools-15)
nn(schools-18, umbrella-17)
prep_of(supervision-12, schools-18)
conj_or(schools-15, schools-18)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN nomenclature))
        (PP (IN of)
          (NP (JJ organic) (NN chemistry)))))
    (, ,)
    (NP
      (NP (DT a) (NNP Heteroatom))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Ancient) (JJ Greek) (NNS heteros))
            (, ,)
            (NP (JJ different) (, ,) (JJ +) (NNS atomos))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN atom))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (RB not)
              (NP (NN carbon)
                (CC or)
                (NN hydrogen)))))))
    (. .)))

det(nomenclature-3, the-2)
prep_in(atom-23, nomenclature-3)
amod(chemistry-6, organic-5)
prep_of(nomenclature-3, chemistry-6)
det(Heteroatom-9, a-8)
nsubj(atom-23, Heteroatom-9)
dep(Heteroatom-9, from-11)
amod(heteros-14, Ancient-12)
amod(heteros-14, Greek-13)
pobj(from-11, heteros-14)
amod(atomos-19, different-16)
amod(atomos-19, +-18)
appos(heteros-14, atomos-19)
cop(atom-23, is-21)
det(atom-23, any-22)
root(ROOT-0, atom-23)
nsubj(carbon-27, atom-23)
cop(carbon-27, is-25)
neg(carbon-27, not-26)
rcmod(atom-23, carbon-27)
rcmod(atom-23, hydrogen-29)
conj_or(carbon-27, hydrogen-29)

(ROOT
  (S
    (S
      (VP (VBG Using)
        (NP (DT a) (VBN modified) (NN Doom) (NN engine))))
    (, ,)
    (NP (NNP Heretic))
    (VP (VBD was)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (JJ first) (NN first-person) (NNS games)))
        (S
          (VP (TO to)
            (VP (VB feature)
              (S
                (NP
                  (NP (NN inventory) (NN manipulation))
                  (CC and)
                  (NP (DT the) (NN ability)))
                (VP (TO to)
                  (VP (VB look)
                    (S
                      (VP
                        (VP (VBG <PRT>)
                          (PRT (RP up))
                          (ADVP (RB </PRT>)))
                        (CC and)
                        (VP (VBG <PRT>)
                          (PRT (RP down))
                          (ADVP (RB </PRT>)))))))))))))
    (. .)))

partmod(one-9, Using-1)
det(engine-5, a-2)
amod(engine-5, modified-3)
nn(engine-5, Doom-4)
dobj(Using-1, engine-5)
nsubj(one-9, Heretic-7)
cop(one-9, was-8)
root(ROOT-0, one-9)
det(games-14, the-11)
amod(games-14, first-12)
nn(games-14, first-person-13)
prep_of(one-9, games-14)
aux(feature-16, to-15)
infmod(one-9, feature-16)
nn(manipulation-18, inventory-17)
nsubj(look-23, manipulation-18)
det(ability-21, the-20)
conj_and(manipulation-18, ability-21)
nsubj(look-23, ability-21)
aux(look-23, to-22)
xcomp(feature-16, look-23)
ccomp(look-23, <PRT>-24)
prt(<PRT>-24, up-25)
advmod(<PRT>-24, </PRT>-26)
ccomp(look-23, <PRT>-28)
conj_and(<PRT>-24, <PRT>-28)
prt(<PRT>-28, down-29)
advmod(<PRT>-28, </PRT>-30)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (JJ Greek) (NN mythology)))
      (, ,)
      (NP (NNP Hypnos))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN personification))
          (PP (IN of)
            (NP (NN sleep))))))
    (: ;)
    (S
      (NP (DT the) (NNP Roman) (NN equivalent))
      (VP (VBD was)
        (VP (VBN known)
          (PP (IN as)
            (NP (NNP Somnus))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(personification-8, mythology-3)
nsubj(personification-8, Hypnos-5)
cop(personification-8, was-6)
det(personification-8, the-7)
root(ROOT-0, personification-8)
prep_of(personification-8, sleep-10)
det(equivalent-14, the-12)
nn(equivalent-14, Roman-13)
nsubjpass(known-16, equivalent-14)
auxpass(known-16, was-15)
parataxis(personification-8, known-16)
prep_as(known-16, Somnus-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP
      (NP (NNP Heat))
      (, ,)
      (VP (VBN symbolized)
        (PP (IN by)
          (NP (NNP Q))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (NN energy))
        (VP (VBN transferred)
          (PP (IN from)
            (NP
              (NP (CD one) (NN body))
              (CC or)
              (NP (NN system))))
          (PP (TO to)
            (NP (DT another)
              (ADJP (JJ due)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN difference))
                    (PP (IN in)
                      (NP (NN temperature)))))))))))
    (. .)))

prep_in(energy-11, physics-2)
nsubj(energy-11, Heat-4)
partmod(Heat-4, symbolized-6)
agent(symbolized-6, Q-8)
cop(energy-11, is-10)
root(ROOT-0, energy-11)
partmod(energy-11, transferred-12)
num(body-15, one-14)
prep_from(transferred-12, body-15)
prep_from(transferred-12, system-17)
conj_or(body-15, system-17)
det(due-20, another-19)
prep_to(transferred-12, due-20)
det(difference-23, a-22)
prep_to(due-20, difference-23)
prep_in(difference-23, temperature-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Horse))
      (PRN (-LRB- -LRB-)
        (NP (NNP Equus) (NNS caballus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (JJ odd-toed) (NN ungulate) (NN mammal))
        (, ,)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (CD ten) (VBG living) (NNS species))
              (PP (IN of)
                (NP (DT the) (NN family) (NN Equidae))))))))
    (. .)))

det(Horse-2, The-1)
nsubj(mammal-12, Horse-2)
nn(caballus-5, Equus-4)
appos(Horse-2, caballus-5)
cop(mammal-12, is-7)
det(mammal-12, a-8)
amod(mammal-12, large-9)
amod(mammal-12, odd-toed-10)
nn(mammal-12, ungulate-11)
root(ROOT-0, mammal-12)
appos(mammal-12, one-14)
num(species-18, ten-16)
amod(species-18, living-17)
prep_of(one-14, species-18)
det(Equidae-22, the-20)
nn(Equidae-22, family-21)
prep_of(species-18, Equidae-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP Hel))
      (PRN (-LRB- -LRB-)
        (ADVP (RB sometimes))
        (NP
          (NP (NNP Anglicized)
            (CC or)
            (NNP Latinized))
          (PP (IN as)
            (NP (NNP Hela))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN ruler))
        (PP (IN of)
          (NP
            (NP (NNP Hel))
            (, ,)
            (NP (DT the) (JJ Norse) (NN underworld))))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(ruler-16, mythology-3)
nsubj(ruler-16, Hel-5)
dep(Anglicized-8, sometimes-7)
dep(Hel-5, Anglicized-8)
dep(Hel-5, Latinized-10)
conj_or(Anglicized-8, Latinized-10)
prep_as(Anglicized-8, Hela-12)
cop(ruler-16, is-14)
det(ruler-16, the-15)
root(ROOT-0, ruler-16)
prep_of(ruler-16, Hel-18)
det(underworld-22, the-20)
amod(underworld-22, Norse-21)
appos(Hel-18, underworld-22)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (NNS economics))
          (PRN (, ,)
            (S
              (NP (NNP Hyperinflation))
              (VP (VBZ is)
                (NP
                  (NP (NN inflation))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)))))))))
        ('' '')
        (PP (RB out) (IN of)
          (NP (NN control)))
        (, ,) ('' '')
        (NP
          (NP (DT a) (NN condition))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (NNS prices))
              (VP (VB increase)
                (ADVP (RB rapidly) (RB as))))))))
    (NP (DT a) (NN currency))
    (VP (VBZ loses)
      (NP (PRP$ its) (NN value)))
    (. .)))

prep_in(loses-25, economics-2)
nsubj(inflation-6, Hyperinflation-4)
cop(inflation-6, is-5)
dep(economics-2, inflation-6)
nsubj(is-8, inflation-6)
rcmod(inflation-6, is-8)
prep_out_of(economics-2, control-12)
det(condition-16, a-15)
dep(economics-2, condition-16)
rel(increase-20, which-18)
nsubj(increase-20, prices-19)
rcmod(condition-16, increase-20)
advmod(as-22, rapidly-21)
advmod(increase-20, as-22)
det(currency-24, a-23)
nsubj(loses-25, currency-24)
root(ROOT-0, loses-25)
poss(value-27, its-26)
dobj(loses-25, value-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (NNP Hydroxide))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ common))
          (NN name))
        (PP (IN for)
          (NP
            (NP
              (NP (DT the) (JJ diatomic) (NN anion) (NN OH))
              (-LRB- -LRB-)
              (NP
                (NP
                  (PRN (: ;)
                    (NP (NNP ÃƒÂ)))
                  (NNS cents))
                (NP (NNP Ã) (NNP ‚) (NNP âˆšÃ) (NNP ‚) (NNP â))))
            (NP
              (NP ($ $) (CD š))
              (-LRB- -LRB-)
              (NP (: ;)
                (NP
                  (NP
                    (PRN (, ,)
                      (ADVP (RB consisting))
                      (PP (IN of)
                        (NP (NN oxygen)
                          (CC and)
                          (NN hydrogen))))
                    (NNS atoms))
                  (, ,)
                  (ADVP (RB usually)))
                (CC derived)
                (NP
                  (PP (IN from)
                    (NP (DT the) (NN dissociation)))
                  (PP (IN of)
                    (NP (DT a) (NN base))))))))))
    (. .)))

prep_in(name-9, chemistry-2)
nsubj(name-9, Hydroxide-4)
cop(name-9, is-5)
det(name-9, the-6)
advmod(common-8, most-7)
amod(name-9, common-8)
root(ROOT-0, name-9)
det(OH-14, the-11)
amod(OH-14, diatomic-12)
nn(OH-14, anion-13)
prep_for(name-9, OH-14)
dep(cents-18, ÃƒÂ-17)
dep(OH-14, cents-18)
nn(â-23, Ã-19)
nn(â-23, ‚-20)
nn(â-23, âˆšÃ-21)
nn(â-23, ‚-22)
dep(cents-18, â-23)
dep(OH-14, $-24)
num($-24, š-25)
dep(of-30, consisting-29)
dep(atoms-34, of-30)
pobj(of-30, oxygen-31)
pobj(of-30, hydrogen-33)
conj_and(oxygen-31, hydrogen-33)
dep($-24, atoms-34)
advmod(atoms-34, usually-36)
det(dissociation-40, the-39)
prep_from(of-41, dissociation-40)
dep($-24, of-41)
conj_derived(atoms-34, of-41)
det(base-43, a-42)
pobj(of-41, base-43)

(ROOT
  (S
    (NP (DT A) (NNP Hogshead))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN cask))
        (PP (IN of)
          (NP
            (NP (NN liquid))
            (-LRB- -LRB-)
            (NP (JJR less))
            (ADVP (RB often))))
        (, ,)
        (PP (IN of)
          (NP (DT a) (NN food) (NN commodity)))
        (-RRB- -RRB-)))
    (. .)))

det(Hogshead-2, A-1)
nsubj(cask-6, Hogshead-2)
cop(cask-6, is-3)
det(cask-6, a-4)
amod(cask-6, large-5)
root(ROOT-0, cask-6)
prep_of(cask-6, liquid-8)
dep(liquid-8, less-10)
advmod(liquid-8, often-11)
det(commodity-16, a-14)
nn(commodity-16, food-15)
prep_of(cask-6, commodity-16)

(ROOT
  (S
    (NP (DT A) (NNP Hull))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN body))
        (PP (IN of)
          (NP (DT a) (NN ship)
            (CC or)
            (NN boat)))))
    (. .)))

det(Hull-2, A-1)
nsubj(body-5, Hull-2)
cop(body-5, is-3)
det(body-5, the-4)
root(ROOT-0, body-5)
det(ship-8, a-7)
prep_of(body-5, ship-8)
prep_of(body-5, boat-10)
conj_or(ship-8, boat-10)

(ROOT
  (SINV
    (S
      (NP (DT A) (NNP Hymn))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN type))
          (PP (IN of)
            (NP (NN song))))))
    (, ,)
    (VP
      (ADVP (RB usually))
      (VBD religious) (, ,)
      (S
        (S
          (ADVP (RB specifically))
          (VP (VBN written)
            (PP (IN for)
              (NP
                (NP (DT the) (NN purpose))
                (PP (IN of)
                  (NP (NN praise) (, ,) (NN adoration)
                    (CC or)
                    (NN prayer)))))))
        (, ,)
        (CC and)
        (S
          (ADVP (RB typically))
          (VP (VBN addressed)
            (PP (TO to)
              (NP (DT a) (NN deity)))))))
    (NP
      (NP (JJ \/) (NNS deities))
      (, ,)
      (NP
        (NP (DT a) (JJ prominent) (NN figure))
        (CC or)
        (NP (DT an) (NN epic) (NN tale))))
    (. .)))

det(Hymn-2, A-1)
nsubj(type-5, Hymn-2)
cop(type-5, is-3)
det(type-5, a-4)
ccomp(religious-10, type-5)
prep_of(type-5, song-7)
advmod(religious-10, usually-9)
root(ROOT-0, religious-10)
advmod(written-13, specifically-12)
dep(religious-10, written-13)
det(purpose-16, the-15)
prep_for(written-13, purpose-16)
prep_of(purpose-16, praise-18)
prep_of(purpose-16, adoration-20)
conj_or(praise-18, adoration-20)
prep_of(purpose-16, prayer-22)
conj_or(praise-18, prayer-22)
advmod(addressed-26, typically-25)
dep(religious-10, addressed-26)
conj_and(written-13, addressed-26)
det(deity-29, a-28)
prep_to(addressed-26, deity-29)
amod(deities-31, \/-30)
nsubj(religious-10, deities-31)
det(figure-35, a-33)
amod(figure-35, prominent-34)
appos(deities-31, figure-35)
det(tale-39, an-37)
nn(tale-39, epic-38)
appos(deities-31, tale-39)
conj_or(figure-35, tale-39)

(ROOT
  (S
    (NP (DT A) (NNP Hydrofoil))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN boat))
        (PP (IN with)
          (NP
            (NP (JJ wing-like) (NNS foils))
            (VP (VBN mounted)
              (PP (IN on)
                (NP (NNS struts)))
              (PP (IN below)
                (NP (DT the) (NN hull))))))))
    (. .)))

det(Hydrofoil-2, A-1)
nsubj(boat-5, Hydrofoil-2)
cop(boat-5, is-3)
det(boat-5, a-4)
root(ROOT-0, boat-5)
amod(foils-8, wing-like-7)
prep_with(boat-5, foils-8)
partmod(foils-8, mounted-9)
prep_on(mounted-9, struts-11)
det(hull-14, the-13)
prep_below(mounted-9, hull-14)

(ROOT
  (S
    (NP (NNP Hydra))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (NN animal))
        (PP (IN with)
          (NP
            (NP (DT a) (NN body) (NN length))
            (VP (VBG ranging)
              (PP (IN from)
                (NP
                  (NP (CD 1) (NN mm))
                  (PP (TO to)
                    (NP (CD 20) (NN mm)))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP
                    (ADVP (RB fully))
                    (VBN extended)))))))))
    (. .)))

nsubj(animal-5, Hydra-1)
cop(animal-5, is-2)
det(animal-5, a-3)
amod(animal-5, small-4)
root(ROOT-0, animal-5)
det(length-9, a-7)
nn(length-9, body-8)
prep_with(animal-5, length-9)
partmod(length-9, ranging-10)
num(mm-13, 1-12)
prep_from(ranging-10, mm-13)
num(mm-16, 20-15)
prep_to(mm-13, mm-16)
advmod(extended-19, when-17)
advmod(extended-19, fully-18)
advcl(ranging-10, extended-19)

(ROOT
  (S
    (NP (DT A) (NNP Hammer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tool))
        (VP (VBN meant)
          (S
            (VP (TO to)
              (VP (VB deliver)
                (NP (DT an) (NN impact))
                (PP (TO to)
                  (NP (DT an) (NN object)))))))))
    (. .)))

det(Hammer-2, A-1)
nsubj(tool-5, Hammer-2)
cop(tool-5, is-3)
det(tool-5, a-4)
root(ROOT-0, tool-5)
xsubj(deliver-8, tool-5)
partmod(tool-5, meant-6)
aux(deliver-8, to-7)
xcomp(meant-6, deliver-8)
det(impact-10, an-9)
dobj(deliver-8, impact-10)
det(object-13, an-12)
prep_to(deliver-8, object-13)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNPS Heracles)
      (CC or)
      (NNPS Herakles))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT a) (JJ divine) (NN hero))
          (, ,)
          (NP
            (NP (DT the) (NN son))
            (PP (IN of)
              (NP (NNP Zeus)
                (CC and)
                (NNP Alcmene)))))
        (, ,)
        (NP
          (NP (NN nephew))
          (PP (IN of)
            (NP (NNP Amphitryon))))
        (CC and)
        (NP
          (NP
            (NP (NN great-grandson))
            (PRN (-LRB- -LRB-)
              (CC and)
              (ADJP (JJ half-brother))
              (-RRB- -RRB-)))
          (PP (IN of)
            (NP (NNP Perseus))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(hero-11, mythology-3)
nsubj(hero-11, Heracles-5)
conj_or(Heracles-5, Herakles-7)
nsubj(hero-11, Herakles-7)
cop(hero-11, was-8)
det(hero-11, a-9)
amod(hero-11, divine-10)
root(ROOT-0, hero-11)
det(son-14, the-13)
appos(hero-11, son-14)
prep_of(son-14, Zeus-16)
prep_of(son-14, Alcmene-18)
conj_and(Zeus-16, Alcmene-18)
conj_and(hero-11, nephew-20)
prep_of(nephew-20, Amphitryon-22)
conj_and(hero-11, great-grandson-24)
dep(half-brother-27, and-26)
dep(great-grandson-24, half-brother-27)
prep_of(great-grandson-24, Perseus-30)

(ROOT
  (S
    (NP (DT A) (NNP Hadron))
    (, ,)
    (PP (IN in)
      (NP (NN particle) (NNS physics)))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB any) (RB strongly))
      (VP (VBG interacting)
        (NP (JJ composite) (JJ subatomic) (NN particle))))
    (. .)))

det(Hadron-2, A-1)
nsubj(interacting-11, Hadron-2)
nn(physics-6, particle-5)
prep_in(interacting-11, physics-6)
aux(interacting-11, is-8)
advmod(strongly-10, any-9)
advmod(interacting-11, strongly-10)
root(ROOT-0, interacting-11)
amod(particle-14, composite-12)
amod(particle-14, subatomic-13)
dobj(interacting-11, particle-14)

(ROOT
  (S
    (NP (NNP Historically) (, ,) (NNP Handloading))
    (VP (VBD referred)
      (PP (TO to)
        (NP
          (NP (DT the) (JJ private) (NN manufacture))
          (PP (IN of)
            (NP (NNS cartridges)
              (CC and)
              (NNS shells)))))
      (S
        (VP (VBG using)
          (NP (DT all) (JJ newly-manufactured) (NNS components))))
      (, ,)
      (SBAR (IN whereas)
        (S
          (NP (NN reloading))
          (VP (VBD referred)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ private) (NN manufacture))
                (PP (IN of)
                  (NP (NNS cartridges)
                    (CC and)
                    (NNS shells)))))
            (S
              (VP (VBG using)
                (NP
                  (NP (JJ previously-fired) (NN cartridge) (NN brass))
                  (CC and)
                  (NP (NNS shells)))
                (PP (IN with)
                  (NP
                    (NP (JJ new) (NNS bullets))
                    (, ,)
                    (NP (NN shot))
                    (, ,)
                    (NP (NNS primers))
                    (, ,)
                    (CC and)
                    (NP (NN powder))))))))))
    (. .)))

nn(Handloading-3, Historically-1)
nsubj(referred-4, Handloading-3)
root(ROOT-0, referred-4)
det(manufacture-8, the-6)
amod(manufacture-8, private-7)
prep_to(referred-4, manufacture-8)
prep_of(manufacture-8, cartridges-10)
prep_of(manufacture-8, shells-12)
conj_and(cartridges-10, shells-12)
xcomp(referred-4, using-13)
det(components-16, all-14)
amod(components-16, newly-manufactured-15)
dobj(using-13, components-16)
mark(referred-20, whereas-18)
nsubj(referred-20, reloading-19)
advcl(referred-4, referred-20)
det(manufacture-24, the-22)
amod(manufacture-24, private-23)
prep_to(referred-20, manufacture-24)
prep_of(manufacture-24, cartridges-26)
prep_of(manufacture-24, shells-28)
conj_and(cartridges-26, shells-28)
xcomp(referred-20, using-29)
amod(brass-32, previously-fired-30)
nn(brass-32, cartridge-31)
dobj(using-29, brass-32)
dobj(using-29, shells-34)
conj_and(brass-32, shells-34)
amod(bullets-37, new-36)
prep_with(using-29, bullets-37)
prep_with(using-29, shot-39)
conj_and(bullets-37, shot-39)
prep_with(using-29, primers-41)
conj_and(bullets-37, primers-41)
prep_with(using-29, powder-44)
conj_and(bullets-37, powder-44)

(ROOT
  (S
    (NP (DT The) (NNP Helvetii))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ Celtic) (NN tribe))
        (CC and)
        (NP
          (NP (DT the) (JJ main) (NNS occupants))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ Swiss) (NN plateau))
              (PP (IN in)
                (NP (DT the) (CD 1st) (NN century) (NNP BC))))))))
    (. .)))

det(Helvetii-2, The-1)
nsubj(tribe-6, Helvetii-2)
cop(tribe-6, were-3)
det(tribe-6, a-4)
amod(tribe-6, Celtic-5)
root(ROOT-0, tribe-6)
det(occupants-10, the-8)
amod(occupants-10, main-9)
conj_and(tribe-6, occupants-10)
det(plateau-14, the-12)
amod(plateau-14, Swiss-13)
prep_of(occupants-10, plateau-14)
det(BC-19, the-16)
num(BC-19, 1st-17)
nn(BC-19, century-18)
prep_in(plateau-14, BC-19)

(ROOT
  (S
    (NP (DT The) (NNP Harp))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ stringed) (NN instrument))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (NP
                (NP (DT the) (NN plane))
                (PP (IN of)
                  (NP
                    (NP (PRP$ its) (NNS strings))
                    (VP (VBN positioned)
                      (NP (NN perpendicular))
                      (PP (TO to)
                        (NP (DT the) (NN soundboard))))))))))))
    (. .)))

det(Harp-2, The-1)
nsubj(instrument-6, Harp-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, stringed-5)
root(ROOT-0, instrument-6)
nsubj(has-8, instrument-6)
rcmod(instrument-6, has-8)
det(plane-10, the-9)
dobj(has-8, plane-10)
poss(strings-13, its-12)
prep_of(plane-10, strings-13)
partmod(strings-13, positioned-14)
dobj(positioned-14, perpendicular-15)
det(soundboard-18, the-17)
prep_to(positioned-14, soundboard-18)

(ROOT
  (NP
    (NP (NNP A))
    (NP (NNP Homeland) (-LRB- -LRB-) (NNP rel))
    (. .)))

root(ROOT-0, A-1)
nn(rel-4, Homeland-2)
dep(A-1, rel-4)

(ROOT
  (S
    (NP
      (NP (NN country))
      (PP (IN of)
        (NP (NN origin)
          (CC and)
          (JJ native) (NN land) (-RRB- -RRB-))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN concept))
        (PP (IN of)
          (NP
            (NP (DT the) (NN territory))
            (PRN (-LRB- -LRB-)
              (NP (JJ cultural) (NN geography))
              (-RRB- -RRB-))
            (SBAR
              (WHPP (TO to)
                (WHNP (WDT which)))
              (S
                (NP (DT an) (JJ ethnic) (NN group))
                (VP (VBZ holds)
                  (NP
                    (NP (DT a) (JJ long) (NN history))
                    (CC and)
                    (NP (DT a) (JJ deep) (JJ cultural) (NN association)))
                  (PP (IN with) (: -)
                    (NP
                      (NP (DT the) (NN country))
                      (SBAR
                        (WHPP (IN in)
                          (WHNP (WDT which)))
                        (S
                          (NP (DT a) (JJ particular) (JJ national) (NN identity))
                          (VP (VBD began)))))))))))))
    (. .)))

nsubj(concept-10, country-1)
nn(land-6, origin-3)
conj_and(origin-3, native-5)
nn(land-6, native-5)
prep_of(country-1, land-6)
cop(concept-10, is-8)
det(concept-10, the-9)
root(ROOT-0, concept-10)
det(territory-13, the-12)
prep_of(concept-10, territory-13)
amod(geography-16, cultural-15)
appos(territory-13, geography-16)
rel(holds-23, which-19)
det(group-22, an-20)
amod(group-22, ethnic-21)
nsubj(holds-23, group-22)
rcmod(territory-13, holds-23)
det(history-26, a-24)
amod(history-26, long-25)
dobj(holds-23, history-26)
det(association-31, a-28)
amod(association-31, deep-29)
amod(association-31, cultural-30)
dobj(holds-23, association-31)
conj_and(history-26, association-31)
det(country-35, the-34)
prep_with(holds-23, country-35)
rel(began-42, which-37)
det(identity-41, a-38)
amod(identity-41, particular-39)
amod(identity-41, national-40)
nsubj(began-42, identity-41)
rcmod(country-35, began-42)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ dominant) (NN version))
      (PP (IN of)
        (NP
          (NP (NN hockey))
          (PP (IN in)
            (NP (DT a) (JJ particular) (NN region))))))
    (VP (VBZ tends)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN known)
              (ADVP (RB simply))
              (PP (IN as)))))))
    (. !)))

det(version-3, The-1)
amod(version-3, dominant-2)
nsubj(tends-10, version-3)
xsubj(known-13, version-3)
prep_of(version-3, hockey-5)
det(region-9, a-7)
amod(region-9, particular-8)
prep_in(hockey-5, region-9)
root(ROOT-0, tends-10)
aux(known-13, to-11)
auxpass(known-13, be-12)
xcomp(tends-10, known-13)
advmod(known-13, simply-14)
prep(known-13, as-15)

(ROOT
  (NP
    (NP (NN Hockey))
    (, ,)
    (NP
      (NP (JJ other) (NNS forms))
      (VP (VBG being)
        (ADJP
          (ADJP (RBR more) (RB fully) (JJ qualified))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NN e.) (NN g.) (NN hockey))
              (PP (IN for)
                (NP
                  (NP (NN field) (NN hockey))
                  (PP (IN in)
                    (NP (NNP Germany)))))
              (, ,)
              (PP (IN for)
                (NP
                  (NP (NN ice) (NN hockey))
                  (PP (IN in)
                    (NP (NNP North) (NNP America))))))
            (-RRB- -RRB-)))))
    (. .)))

root(ROOT-0, Hockey-1)
amod(forms-4, other-3)
appos(Hockey-1, forms-4)
cop(qualified-8, being-5)
advmod(qualified-8, more-6)
advmod(qualified-8, fully-7)
partmod(forms-4, qualified-8)
nn(hockey-12, e.-10)
nn(hockey-12, g.-11)
dep(qualified-8, hockey-12)
nn(hockey-15, field-14)
prep_for(hockey-12, hockey-15)
prep_in(hockey-15, Germany-17)
nn(hockey-21, ice-20)
prep_for(hockey-12, hockey-21)
nn(America-24, North-23)
prep_in(hockey-21, America-24)

(ROOT
  (S
    (NP (DT A) (NNP Honeymoon))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ traditional) (NN holiday))
        (VP (VBN taken)
          (PP (IN by)
            (NP (NNS newlyweds)))
          (S
            (VP (TO to)
              (VP (VB celebrate)
                (NP (PRP$ their) (NN marriage))
                (PP (IN in)
                  (NP (NN intimacy)
                    (CC and)
                    (NN seclusion)))))))))
    (. .)))

det(Honeymoon-2, A-1)
nsubj(holiday-6, Honeymoon-2)
cop(holiday-6, is-3)
det(holiday-6, the-4)
amod(holiday-6, traditional-5)
root(ROOT-0, holiday-6)
xsubj(celebrate-11, holiday-6)
partmod(holiday-6, taken-7)
agent(taken-7, newlyweds-9)
aux(celebrate-11, to-10)
xcomp(taken-7, celebrate-11)
poss(marriage-13, their-12)
dobj(celebrate-11, marriage-13)
prep_in(celebrate-11, intimacy-15)
prep_in(celebrate-11, seclusion-17)
conj_and(intimacy-15, seclusion-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (, ,)
    (S
      (NP (DT a) (NNP Heap))
      (VP (VBZ is)
        (NP
          (NP (DT a) (VBN specialized) (JJ tree-based) (NN data) (NN structure))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ satisfies)
                (NP (DT the) (NN heap) (NN property))))))
        (: :)
        (SBAR (IN if)
          (S
            (NP (NNP B))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN child) (NN node))
                (PP (IN of)
                  (NP
                    (NP (NNP A))
                    (, ,)
                    (ADVP (RB then))
                    (NP
                      (NP
                        (NP (NN key))
                        (PRN (-LRB- -LRB-)
                          (NP (NNP A))
                          (-RRB- -RRB-)))
                      (CC &)
                      (NP (NN amp)))
                    (: ;)))))))))
    (: ;)
    (S
      (NP (NN ge))
      (: ;)
      (NP
        (NP (NN key))
        (PRN (-LRB- -LRB-)
          (NP (NNP B))
          (-RRB- -RRB-))))
    (. .)))

nn(science-3, computer-2)
prep_in(structure-12, science-3)
det(Heap-6, a-5)
nsubj(structure-12, Heap-6)
cop(structure-12, is-7)
det(structure-12, a-8)
amod(structure-12, specialized-9)
amod(structure-12, tree-based-10)
nn(structure-12, data-11)
root(ROOT-0, structure-12)
nsubj(satisfies-14, structure-12)
rcmod(structure-12, satisfies-14)
det(property-17, the-15)
nn(property-17, heap-16)
dobj(satisfies-14, property-17)
mark(node-24, if-19)
nsubj(node-24, B-20)
cop(node-24, is-21)
det(node-24, a-22)
nn(node-24, child-23)
advcl(structure-12, node-24)
parataxis(structure-12, node-24)
prep_of(node-24, A-26)
advmod(A-26, then-28)
dep(A-26, key-29)
appos(key-29, A-31)
dep(A-26, amp-34)
conj_and(key-29, amp-34)
dep(key-39, ge-37)
parataxis(structure-12, key-39)
appos(key-39, B-41)

(ROOT
  (S
    (NP (DT A) (NNP Hierarchy))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN arrangement))
        (PP (IN of)
          (NP (NNS objects) (, ,) (NNS people) (, ,) (NNS elements) (, ,) (NNS values) (, ,) (NNS grades) (, ,) (NNS orders) (, ,) (NNS classes) (, ,) (FW etc.)))))
    (. .)))

det(Hierarchy-2, A-1)
nsubj(arrangement-5, Hierarchy-2)
cop(arrangement-5, is-3)
det(arrangement-5, an-4)
root(ROOT-0, arrangement-5)
nn(classes-19, objects-7)
dep(classes-19, people-9)
dep(classes-19, elements-11)
dep(classes-19, values-13)
dep(classes-19, grades-15)
dep(classes-19, orders-17)
prep_of(arrangement-5, classes-19)
dep(classes-19, etc.-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Hour))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NN h)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN time)))))
    (. .)))

det(Hour-2, The-1)
nsubj(unit-10, Hour-2)
dep(Hour-2, symbol-4)
dep(symbol-4, h-6)
cop(unit-10, is-8)
det(unit-10, a-9)
root(ROOT-0, unit-10)
prep_of(unit-10, time-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Halfbakery))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ community-based) (NNS ideas) (NN bank))
        (VP (VBN used)
          (PP (IN by)
            (NP
              (NP (NNS people))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP wish)
                    (S
                      (VP (TO to)
                        (VP (VB propose)
                          (CC and)
                          (VB develop)
                          (PRN (-LRB- -LRB-)
                            (FRAG (RB not)
                              (ADVP (RB always))
                              (ADJP (JJ serious)))
                            (-RRB- -RRB-))
                          (S
                            (VP (VBG half-baked)
                              (NP (NNS inventions)))))))))))))))
    (. .)))

det(Halfbakery-2, The-1)
nsubj(bank-7, Halfbakery-2)
cop(bank-7, is-3)
det(bank-7, a-4)
amod(bank-7, community-based-5)
nn(bank-7, ideas-6)
root(ROOT-0, bank-7)
partmod(bank-7, used-8)
agent(used-8, people-10)
nsubj(wish-12, people-10)
rcmod(people-10, wish-12)
aux(propose-14, to-13)
xcomp(wish-12, propose-14)
xcomp(wish-12, develop-16)
conj_and(propose-14, develop-16)
dep(propose-14, not-18)
dep(not-18, always-19)
dep(not-18, serious-20)
xcomp(wish-12, half-baked-22)
conj_and(propose-14, half-baked-22)
xcomp(propose-14, half-baked-22)
dobj(half-baked-22, inventions-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Hertz))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP Hz)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (NP
            (NP (NNP International) (NNP System))
            (PP (IN of)
              (NP (NNS Units)))
            (PRN (-LRB- -LRB-)
              (NP (NNP SI))
              (-RRB- -RRB-)))
          (NN base) (NN unit))
        (PP (IN of)
          (NP (NN frequency)))))
    (. .)))

det(Hertz-2, The-1)
nsubj(unit-18, Hertz-2)
dep(Hertz-2, symbol-4)
dep(symbol-4, Hz-6)
cop(unit-18, is-8)
det(unit-18, the-9)
nn(System-11, International-10)
nn(unit-18, System-11)
prep_of(System-11, Units-13)
abbrev(System-11, SI-15)
nn(unit-18, base-17)
root(ROOT-0, unit-18)
prep_of(unit-18, frequency-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Hebrides))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP HEB-ri-deez) (, ,) (NNP Gaelic))
          (: :)
          (NP (NNP Innse) (NNP Gall)))
        (-RRB- -RRB-)))
    (VP (VBP comprise)
      (SBAR
        (S
          (NP
            (NP (DT a)
              (ADJP (JJ widespread)
                (CC and)
                (JJ diverse))
              (NN archipelago))
            (PP
              (PP (IN off)
                (NP
                  (NP (DT the) (JJ west) (NN coast))
                  (PP (IN of)
                    (NP (NNP Scotland)))))
              (, ,)
              (CC and)
              (PP (IN in)
                (NP (JJ geological) (NNS terms)))))
          (VP (VBP are)
            (VP (VBN composed)
              (PP (IN of)
                (NP
                  (NP (DT the) (JJS oldest) (NNS rocks))
                  (PP (IN in)
                    (NP (NNP Europe))))))))))
    (. .)))

det(Hebrides-2, The-1)
nsubj(comprise-11, Hebrides-2)
nn(Gaelic-6, HEB-ri-deez-4)
dep(Hebrides-2, Gaelic-6)
nn(Gall-9, Innse-8)
dep(Gaelic-6, Gall-9)
root(ROOT-0, comprise-11)
det(archipelago-16, a-12)
amod(archipelago-16, widespread-13)
conj_and(widespread-13, diverse-15)
amod(archipelago-16, diverse-15)
conj_and(archipelago-16, archipelago-16')
nsubjpass(composed-29, archipelago-16)
nsubjpass(composed-29, archipelago-16')
det(coast-20, the-18)
amod(coast-20, west-19)
prep_off(archipelago-16, coast-20)
prep_of(coast-20, Scotland-22)
amod(terms-27, geological-26)
prep_in(archipelago-16', terms-27)
auxpass(composed-29, are-28)
ccomp(comprise-11, composed-29)
det(rocks-33, the-31)
amod(rocks-33, oldest-32)
prep_of(composed-29, rocks-33)
prep_in(rocks-33, Europe-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (JJ Human) (NN immunodeficiency) (NN virus))
      (PRN (-LRB- -LRB-)
        (NP (NNP HIV))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (NNS lentivirus)
        (PRN (-LRB- -LRB-)
          (NP
            (NP (DT a) (NN member))
            (PP (IN of)
              (NP (DT the) (JJ retrovirus) (NN family))))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB lead)
                (PP (TO to)
                  (NP
                    (NP
                      (NP (VBN acquired) (JJ immunodeficiency) (NN syndrome))
                      (PRN (-LRB- -LRB-)
                        (NP (NNP AIDS))
                        (-RRB- -RRB-)))
                    (, ,)
                    (NP
                      (NP (DT a) (NN condition))
                      (PP (IN in)
                        (NP
                          (NP (NNS humans))
                          (SBAR
                            (WHPP (IN in)
                              (WHNP (WDT which)))
                            (S
                              (NP (DT the) (JJ immune) (NN system))
                              (VP (VBZ begins)
                                (S
                                  (VP (TO to)
                                    (VP (VB fail))))
                                (, ,)
                                (S
                                  (VP (VBG leading)
                                    (PP (TO to)
                                      (NP
                                        (ADJP (JJ life-threatening) (JJ opportunistic))
                                        (NNS infections)))))))))))))))))))
    (. .)))

amod(virus-3, Human-1)
nn(virus-3, immunodeficiency-2)
nsubj(lentivirus-9, virus-3)
abbrev(virus-3, HIV-5)
cop(lentivirus-9, is-7)
det(lentivirus-9, a-8)
root(ROOT-0, lentivirus-9)
det(member-12, a-11)
dep(lentivirus-9, member-12)
det(family-16, the-14)
amod(family-16, retrovirus-15)
prep_of(member-12, family-16)
nsubj(lead-20, that-18)
aux(lead-20, can-19)
ccomp(lentivirus-9, lead-20)
amod(syndrome-24, acquired-22)
amod(syndrome-24, immunodeficiency-23)
prep_to(lead-20, syndrome-24)
abbrev(syndrome-24, AIDS-26)
det(condition-30, a-29)
appos(syndrome-24, condition-30)
prep_in(condition-30, humans-32)
rel(begins-38, which-34)
det(system-37, the-35)
amod(system-37, immune-36)
nsubj(begins-38, system-37)
xsubj(fail-40, system-37)
rcmod(humans-32, begins-38)
aux(fail-40, to-39)
xcomp(begins-38, fail-40)
xcomp(begins-38, leading-42)
amod(opportunistic-45, life-threatening-44)
amod(infections-46, opportunistic-45)
prep_to(leading-42, infections-46)

(ROOT
  (S
    (NP (NNP HOL))
    (VP (MD can)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (NNP House))
              (PP (IN of)
                (NP (NNPS Lords))))
            (: -)
            (NP
              (NP (DT the) (JJ upper) (NN house))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP Parliament))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNP United) (NNP Kingdom))
                      (PP (IN of)
                        (NP
                          (NP (NNP Great) (NNP Britain))
                          (CC and)
                          (NP (NNP Northern) (NNP Ireland)))))))))))))
    (. .)))

nsubj(refer-3, HOL-1)
aux(refer-3, can-2)
root(ROOT-0, refer-3)
det(House-6, the-5)
prep_to(refer-3, House-6)
prep_of(House-6, Lords-8)
det(house-12, the-10)
amod(house-12, upper-11)
dep(House-6, house-12)
det(Parliament-15, the-14)
prep_of(house-12, Parliament-15)
det(Kingdom-19, the-17)
nn(Kingdom-19, United-18)
prep_of(Parliament-15, Kingdom-19)
nn(Britain-22, Great-21)
prep_of(Kingdom-19, Britain-22)
nn(Ireland-25, Northern-24)
prep_of(Kingdom-19, Ireland-25)
conj_and(Britain-22, Ireland-25)

(ROOT
  (S
    (NP (NNP HOL))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN abbreviation))
        (PP (IN for)
          (NP
            (NP (JJ higher-order) (NN language))
            (, ,)
            (NP (NN aka))
            (, ,)
            (NP (JJ High-level) (NN programming) (NN language))
            (, ,)
            (PP (JJ such) (IN as)
              (NP
                (NP (NNP Fortran) (, ,) (NNP COBOL) (, ,) (NNP ALGOL) (, ,) (NNP PL) (NNP \/) (CD 1))
                (, ,)
                (CC or)
                (NP (NNP SNOBOL))))))
        (S
          (VP (TO to)
            (VP (VB distinguish)
              (NP (JJ such) (NN programming) (NNS languages))
              (PP (IN from)
                (NP (NN assembly) (NN language))))))))
    (. .)))

nsubj(abbreviation-4, HOL-1)
cop(abbreviation-4, is-2)
det(abbreviation-4, an-3)
root(ROOT-0, abbreviation-4)
amod(language-7, higher-order-6)
prep_for(abbreviation-4, language-7)
appos(language-7, aka-9)
amod(language-13, High-level-11)
nn(language-13, programming-12)
appos(language-7, language-13)
nn(\/-24, Fortran-17)
appos(\/-24, COBOL-19)
appos(\/-24, ALGOL-21)
appos(\/-24, PL-23)
prep_such_as(language-7, \/-24)
num(\/-24, 1-25)
prep_such_as(language-7, SNOBOL-28)
conj_or(\/-24, SNOBOL-28)
aux(distinguish-30, to-29)
infmod(abbreviation-4, distinguish-30)
amod(languages-33, such-31)
nn(languages-33, programming-32)
dobj(distinguish-30, languages-33)
nn(language-36, assembly-35)
prep_from(distinguish-30, language-36)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN hair) (NN pin))
      (CC or)
      (NP (NNP Hairpin)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long) (NN device))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB hold)
                (NP
                  (NP
                    (NP (DT a) (NN person) (POS 's))
                    (NN hair))
                  (PP (IN in)
                    (NP (NN place))))))))))
    (. .)))

det(pin-3, A-1)
nn(pin-3, hair-2)
nsubj(device-9, pin-3)
conj_or(pin-3, Hairpin-5)
nsubj(device-9, Hairpin-5)
cop(device-9, is-6)
det(device-9, a-7)
amod(device-9, long-8)
root(ROOT-0, device-9)
xsubj(hold-12, device-9)
partmod(device-9, used-10)
aux(hold-12, to-11)
xcomp(used-10, hold-12)
det(person-14, a-13)
poss(hair-16, person-14)
dobj(hold-12, hair-16)
prep_in(hair-16, place-18)

(ROOT
  (S
    (NP (DT A) (NNP Hotel))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN establishment))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ provides)
              (VP (VBN paid)
                (S
                  (VP (VBG lodging) (, ,)
                    (ADVP (RB usually))
                    (PP (IN on)
                      (NP (DT a) (JJ short-term) (NN basis)))))))))))
    (. .)))

det(Hotel-2, A-1)
nsubj(establishment-5, Hotel-2)
cop(establishment-5, is-3)
det(establishment-5, an-4)
root(ROOT-0, establishment-5)
nsubj(provides-7, establishment-5)
rcmod(establishment-5, provides-7)
dep(provides-7, paid-8)
xcomp(paid-8, lodging-9)
advmod(lodging-9, usually-11)
det(basis-15, a-13)
amod(basis-15, short-term-14)
prep_on(lodging-9, basis-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Harpsichord))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (VP (VBN played)
          (PP (IN by)
            (NP
              (NP (NNS means))
              (PP (IN of)
                (NP (DT a) (NN keyboard))))))))
    (. .)))

det(Harpsichord-2, A-1)
nsubj(instrument-6, Harpsichord-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
partmod(instrument-6, played-7)
det(keyboard-12, a-11)
prep_by_means_of(played-7, keyboard-12)

(ROOT
  (S
    (NP (DT A) (NNP Harmonica))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ free) (JJ reed) (NN wind) (NN instrument))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (VP (VBN played)
                (PP (IN by)
                  (S
                    (VP
                      (VP (VBG blowing)
                        (NP (NN air))
                        (PP (IN into)))
                      (CC or)
                      (VP (VBG drawing)
                        (NP (NN air) (NNS <PRT>))
                        (PP (IN out)
                          (S
                            (VP (VBG </PRT>)
                              (PP (IN by)
                                (S
                                  (VP (VBG placing)
                                    (NP (NNS lips))
                                    (PP (IN over)
                                      (NP
                                        (NP
                                          (NP (JJ individual) (NNS holes))
                                          (PRN (-LRB- -LRB-)
                                            (NP (JJ reed) (NNS chambers))
                                            (-RRB- -RRB-)))
                                        (CC or)
                                        (NP (JJ multiple) (NNS holes))))))))))))))))))))
    (. .)))

det(Harmonica-2, A-1)
nsubj(instrument-8, Harmonica-2)
cop(instrument-8, is-3)
det(instrument-8, a-4)
amod(instrument-8, free-5)
amod(instrument-8, reed-6)
nn(instrument-8, wind-7)
root(ROOT-0, instrument-8)
nsubjpass(played-11, instrument-8)
auxpass(played-11, is-10)
rcmod(instrument-8, played-11)
agent(played-11, blowing-13)
dobj(blowing-13, air-14)
prep(blowing-13, into-15)
agent(played-11, drawing-17)
conj_or(blowing-13, drawing-17)
nn(<PRT>-19, air-18)
dobj(drawing-17, <PRT>-19)
prepc_out(drawing-17, </PRT>-21)
prepc_by(</PRT>-21, placing-23)
dobj(placing-23, lips-24)
amod(holes-27, individual-26)
prep_over(placing-23, holes-27)
amod(chambers-30, reed-29)
appos(holes-27, chambers-30)
amod(holes-34, multiple-33)
prep_over(placing-23, holes-34)
conj_or(holes-27, holes-34)

(ROOT
  (S
    (NP
      (NP (NNP Helium-3))
      (PRN (-LRB- -LRB-)
        (NP (NNP He-3))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ light) (, ,) (JJ non-radioactive) (NN isotope))
        (PP (IN of)
          (NP
            (NP (NNP helium))
            (PP (IN with)
              (NP
                (NP (CD two) (NNS protons))
                (CC and)
                (NP (CD one) (NN neutron))))
            (, ,)
            (ADJP (JJ rare)
              (PP (IN on)
                (NP (NNP Earth))))
            (, ,)
            (VP (VBN sought)
              (PP (IN for)
                (NP
                  (NP (NN use))
                  (PP (IN in)
                    (NP (JJ nuclear) (NN fusion) (NN research))))))))))
    (. .)))

nsubj(isotope-10, Helium-3-1)
appos(Helium-3-1, He-3-3)
cop(isotope-10, is-5)
det(isotope-10, a-6)
amod(isotope-10, light-7)
amod(isotope-10, non-radioactive-9)
root(ROOT-0, isotope-10)
prep_of(isotope-10, helium-12)
num(protons-15, two-14)
prep_with(helium-12, protons-15)
num(neutron-18, one-17)
prep_with(helium-12, neutron-18)
conj_and(protons-15, neutron-18)
amod(helium-12, rare-20)
prep_on(rare-20, Earth-22)
partmod(helium-12, sought-24)
prep_for(sought-24, use-26)
amod(research-30, nuclear-28)
nn(research-30, fusion-29)
prep_in(use-26, research-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NN quantum) (NNS mechanics)))
    (, ,)
    (NP (DT the) (NNP Hamiltonian) (NNP H))
    (VP (VBZ is)
      (NP (DT the) (JJ observable) (JJ corresponding))
      (PP (TO to)
        (NP
          (NP (DT the) (JJ total) (NN energy))
          (PP (IN of)
            (NP (DT the) (NN system))))))
    (. .)))

nn(mechanics-3, quantum-2)
prep_in(corresponding-11, mechanics-3)
det(H-7, the-5)
nn(H-7, Hamiltonian-6)
nsubj(corresponding-11, H-7)
cop(corresponding-11, is-8)
det(corresponding-11, the-9)
amod(corresponding-11, observable-10)
root(ROOT-0, corresponding-11)
det(energy-15, the-13)
amod(energy-15, total-14)
prep_to(corresponding-11, energy-15)
det(system-18, the-17)
prep_of(energy-15, system-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NN addition))
      (PP (IN of)
        (NP
          (NP (DT a) (NN molecule))
          (PP (IN of)
            (NP
              (NP (NN water))
              (PP (TO to)
                (NP (DT a) (NN chemical) (NN compound)))))
          (, ,)
          (PP (IN without)
            (S
              (VP (VBG forming)
                (NP (DT any) (JJ other) (NNS products))))))))
    (VP (VBZ is)
      (ADVP (RB usually))
      (VP (VBN known)
        (PP
          (PP (IN as)
            (NP (NN hydration)))
          (, ,) (RB rather)
          (PP (IN than)))))
    (. !)))

det(addition-2, The-1)
nsubjpass(known-20, addition-2)
det(molecule-5, a-4)
prep_of(addition-2, molecule-5)
prep_of(molecule-5, water-7)
det(compound-11, a-9)
nn(compound-11, chemical-10)
prep_to(water-7, compound-11)
prepc_without(molecule-5, forming-14)
det(products-17, any-15)
amod(products-17, other-16)
dobj(forming-14, products-17)
auxpass(known-20, is-18)
advmod(known-20, usually-19)
root(ROOT-0, known-20)
prep_as(known-20, hydration-22)
advmod(known-20, rather-24)
prep(known-20, than-25)

(ROOT
  (NP (NNS Hydrolysis) (. .)))

root(ROOT-0, Hydrolysis-1)

(ROOT
  (S
    (NP
      (NP (NNP Hydroxyl))
      (PP (IN in)
        (NP (NN chemistry))))
    (VP (VBZ stands)
      (PP (IN for)
        (NP
          (NP (DT a) (NN molecule))
          (VP (VBG consisting)
            (PP (IN of)
              (NP
                (NP (DT an) (NN oxygen) (NN atom))
                (CC and)
                (NP
                  (NP (DT a) (NN hydrogen) (NN atom))
                  (VP (VBN connected)
                    (PP (IN by)
                      (NP (DT a) (JJ covalent) (NN bond)))))))))))
    (. .)))

nsubj(stands-4, Hydroxyl-1)
prep_in(Hydroxyl-1, chemistry-3)
root(ROOT-0, stands-4)
det(molecule-7, a-6)
prep_for(stands-4, molecule-7)
partmod(molecule-7, consisting-8)
det(atom-12, an-10)
nn(atom-12, oxygen-11)
prep_of(consisting-8, atom-12)
det(atom-16, a-14)
nn(atom-16, hydrogen-15)
prep_of(consisting-8, atom-16)
conj_and(atom-12, atom-16)
partmod(atom-16, connected-17)
det(bond-21, a-19)
amod(bond-21, covalent-20)
agent(connected-17, bond-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (DT a) (JJ Warm-blooded) (NN animal) (NN species))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WP$ whose) (NNS members))
          (S
            (VP (VBP maintain)
              (NP (JJ thermal) (NNS homeostasis)))))
        (: ;)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (, ,)
              (S
                (NP (PRP they))
                (VP (VB keep)
                  (NP (PRP$ their) (NN body) (NN temperature))
                  (PP (IN at)
                    (NP
                      (NP (DT a)
                        (ADJP (RB roughly) (JJ constant))
                        (NN level))
                      (, ,)
                      (ADVP (RB regardless)
                        (PP (IN of)
                          (NP (DT the) (JJ ambient) (NN temperature)))))))))))))
    (. .)))

prep_in(one-9, biology-2)
det(species-7, a-4)
amod(species-7, Warm-blooded-5)
nn(species-7, animal-6)
nsubj(one-9, species-7)
cop(one-9, is-8)
root(ROOT-0, one-9)
poss(members-11, one-9)
nsubj(maintain-12, members-11)
rcmod(one-9, maintain-12)
amod(homeostasis-14, thermal-13)
dobj(maintain-12, homeostasis-14)
nsubj(is-17, that-16)
rcmod(one-9, is-17)
nsubj(keep-20, they-19)
ccomp(is-17, keep-20)
poss(temperature-23, their-21)
nn(temperature-23, body-22)
dobj(keep-20, temperature-23)
det(level-28, a-25)
advmod(constant-27, roughly-26)
amod(level-28, constant-27)
prep_at(keep-20, level-28)
det(temperature-34, the-32)
amod(temperature-34, ambient-33)
prep_regardless_of(level-28, temperature-34)

(ROOT
  (S
    (NP (DT A) (NNP Howitzer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (NN artillery) (NN piece)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN characterized)
                (PP (IN by)
                  (NP
                    (NP (DT a)
                      (ADJP (RB relatively) (JJ short))
                      (NN barrel))
                    (CC and)
                    (NP
                      (NP (DT the) (NN use))
                      (PP (IN of)
                        (NP
                          (ADJP (RB comparatively) (JJ small))
                          (JJ explosive) (NNS charges))))))
                (S
                  (VP (TO to)
                    (VP (VB propel)
                      (NP (NNS projectiles))
                      (PP (IN at)
                        (NP
                          (NP (NNS trajectories))
                          (PP (IN with)
                            (NP
                              (NP (DT a) (JJ steep) (NN angle))
                              (PP (IN of)
                                (NP (NN descent))))))))))))))))
    (. .)))

det(Howitzer-2, A-1)
nsubj(type-5, Howitzer-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
nsubjpass(characterized-11, type-5)
nn(piece-8, artillery-7)
prep_of(type-5, piece-8)
auxpass(characterized-11, is-10)
rcmod(type-5, characterized-11)
det(barrel-16, a-13)
advmod(short-15, relatively-14)
amod(barrel-16, short-15)
agent(characterized-11, barrel-16)
det(use-19, the-18)
agent(characterized-11, use-19)
conj_and(barrel-16, use-19)
advmod(small-22, comparatively-21)
amod(charges-24, small-22)
amod(charges-24, explosive-23)
prep_of(use-19, charges-24)
aux(propel-26, to-25)
xcomp(characterized-11, propel-26)
dobj(propel-26, projectiles-27)
prep_at(propel-26, trajectories-29)
det(angle-33, a-31)
amod(angle-33, steep-32)
prep_with(trajectories-29, angle-33)
prep_of(angle-33, descent-35)

(ROOT
  (S
    (NP (NNP Hummer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN brand))
        (PP (IN of)
          (NP
            (NP (JJ off-road) (NNS vehicles))
            (VP (VBN sold)
              (PP (IN by)
                (NP
                  (NP (NNP General) (NNPS Motors))
                  (, ,)
                  (VP
                    (ADVP (RB also))
                    (VBN known)
                    (PP (IN as)
                      (NP (NNP GM)))))))))))
    (. .)))

nsubj(brand-4, Hummer-1)
cop(brand-4, is-2)
det(brand-4, a-3)
root(ROOT-0, brand-4)
amod(vehicles-7, off-road-6)
prep_of(brand-4, vehicles-7)
partmod(vehicles-7, sold-8)
nn(Motors-11, General-10)
agent(sold-8, Motors-11)
advmod(known-14, also-13)
partmod(Motors-11, known-14)
prep_as(known-14, GM-16)

(ROOT
  (S
    (NP (DT The) (NNP Hasdingi))
    (VP (VBD were)
      (NP
        (NP (DT the) (JJ southern) (NNS tribes))
        (PP (IN of)
          (NP
            (NP (DT the) (NNPS Vandals))
            (, ,)
            (NP (DT an) (NNP East) (NNP Germanic) (NN tribe))))))
    (. .)))

det(Hasdingi-2, The-1)
nsubj(tribes-6, Hasdingi-2)
cop(tribes-6, were-3)
det(tribes-6, the-4)
amod(tribes-6, southern-5)
root(ROOT-0, tribes-6)
det(Vandals-9, the-8)
prep_of(tribes-6, Vandals-9)
det(tribe-14, an-11)
nn(tribe-14, East-12)
nn(tribe-14, Germanic-13)
appos(Vandals-9, tribe-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Hellbender))
      (PRN (-LRB- -LRB-)
        (NP (NNP Cryptobranchus) (NNS alleganiensis))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN salamander))
        (, ,)
        (ADJP (JJ native)
          (PP (TO to)
            (NP (NNP North) (NNP America))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ inhabits)
              (ADJP (JJ large))
              (, ,)
              (S
                (VP
                  (ADVP (RB swiftly))
                  (VBG flowing)
                  (ADVP (RB streams))
                  (PP (IN with)
                    (NP (JJ rocky) (NNS bottoms))))))))))
    (. .)))

det(Hellbender-2, The-1)
nsubj(salamander-10, Hellbender-2)
nn(alleganiensis-5, Cryptobranchus-4)
appos(Hellbender-2, alleganiensis-5)
cop(salamander-10, is-7)
det(salamander-10, a-8)
amod(salamander-10, large-9)
root(ROOT-0, salamander-10)
amod(salamander-10, native-12)
nn(America-15, North-14)
prep_to(native-12, America-15)
nsubj(inhabits-18, which-17)
rcmod(salamander-10, inhabits-18)
acomp(inhabits-18, large-19)
advmod(flowing-22, swiftly-21)
ccomp(inhabits-18, flowing-22)
xcomp(inhabits-18, flowing-22)
advmod(flowing-22, streams-23)
amod(bottoms-26, rocky-25)
prep_with(flowing-22, bottoms-26)

(ROOT
  (S
    (NP (DT The) (NN Internet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ worldwide) (, ,)
          (ADJP (RB publicly) (JJ accessible))
          (NN series))
        (PP (IN of)
          (NP (VBN interconnected) (NN computer) (NNS networks)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VB transmit)
              (NP (NNS data))
              (PP (IN by)
                (NP
                  (NP (NN packet))
                  (VP (VBG switching)
                    (S
                      (VP (VBG using)
                        (NP
                          (NP (DT the) (JJ standard) (NNP Internet) (NNP Protocol))
                          (PRN (-LRB- -LRB-)
                            (NP (NNP IP))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

det(Internet-2, The-1)
nsubj(series-9, Internet-2)
cop(series-9, is-3)
det(series-9, a-4)
amod(series-9, worldwide-5)
advmod(accessible-8, publicly-7)
amod(series-9, accessible-8)
root(ROOT-0, series-9)
nsubj(transmit-15, series-9)
amod(networks-13, interconnected-11)
nn(networks-13, computer-12)
prep_of(series-9, networks-13)
rcmod(series-9, transmit-15)
dobj(transmit-15, data-16)
prep_by(transmit-15, packet-18)
partmod(packet-18, switching-19)
xcomp(switching-19, using-20)
det(Protocol-24, the-21)
amod(Protocol-24, standard-22)
nn(Protocol-24, Internet-23)
dobj(using-20, Protocol-24)
abbrev(Protocol-24, IP-26)

(ROOT
  (S
    (NP
      (NP (DT An) (NN Industry)
        (CC or)
        (NN sector))
      (PRN (-LRB- -LRB-)
        (FRAG
          (PP (IN from)
            (NP
              (NP (JJ Latin) (NNS industrius))
              (, ,) ('' '')
              (NP (NN diligent))))
          (, ,)
          (NP (NNS industrious))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN manufacturing))
        (PP (IN of)
          (NP
            (NP (DT a) (NN good)
              (CC or)
              (NN service))
            (PP (IN within)
              (NP (DT a) (NN category)))))))
    (. .)))

det(Industry-2, An-1)
nsubj(manufacturing-18, Industry-2)
conj_or(Industry-2, sector-4)
nsubj(manufacturing-18, sector-4)
dep(industrious-13, from-6)
amod(industrius-8, Latin-7)
pobj(from-6, industrius-8)
dep(industrius-8, diligent-11)
dep(Industry-2, industrious-13)
cop(manufacturing-18, is-16)
det(manufacturing-18, the-17)
root(ROOT-0, manufacturing-18)
det(good-21, a-20)
prep_of(manufacturing-18, good-21)
prep_of(manufacturing-18, service-23)
conj_or(good-21, service-23)
det(category-26, a-25)
prep_within(good-21, category-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Indridae))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN spelled)
          (NP (NNP Indriidae)))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP (JJ strepsirrhine) (NNS primates)))))
    (. .)))

det(Indridae-2, The-1)
nsubj(family-10, Indridae-2)
advmod(spelled-5, also-4)
dep(Indridae-2, spelled-5)
dobj(spelled-5, Indriidae-6)
cop(family-10, are-8)
det(family-10, a-9)
root(ROOT-0, family-10)
amod(primates-13, strepsirrhine-12)
prep_of(family-10, primates-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ common) (NN law) (JJ legal) (NN system)))
    (, ,)
    (NP
      (NP (DT an) (NN Indictment))
      (PRN (-LRB- -LRB-)
        (FRAG
          (FRAG
            (ADJP (JJ Ãƒâ))
            (: ‰))
          (: ˆÃ)
          (FRAG (: ‚)
            (ADVP (RB ÂªnÃƒâ))
            (NP
              (NP ($ $) (CD ''))
              (NP
                (NP
                  (NP (NNP Ã))
                  (PRN (: ‚)
                    (FRAG
                      (FRAG (RB âˆšdaÃƒâ))
                      (: ‰)
                      (FRAG
                        (FRAG
                          (X (SYM ˆÃ))
                          (: ‚)
                          (NP (NNP ÂªtmÃƒâ)))
                        (: ‰)
                        (FRAG
                          (FRAG
                            (X (SYM ˆÃ))
                            (: ‚)
                            (NP (NNP Ë)))
                          (: ™)
                          (FRAG (RB nt)))))))
                (PRN (-LRB- -LRB-)
                  (NP (NN in-DITE-mint))
                  (-RRB- -RRB-))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ formal) (NN accusation))
        (PP (IN of)
          (S
            (VP (VBG having)
              (VP (VBN committed)
                (NP (DT a) (JJ criminal) (NN offense))))))))
    (. .)))

det(system-6, the-2)
amod(system-6, common-3)
nn(system-6, law-4)
amod(system-6, legal-5)
prep_in(accusation-38, system-6)
det(Indictment-9, an-8)
nsubj(accusation-38, Indictment-9)
dep(Indictment-9, Ãƒâ-11)
punct(Ãƒâ-11, ‰-12)
punct(Ãƒâ-11, ˆÃ-13)
punct($-16, ‚-14)
dep($-16, ÂªnÃƒâ-15)
dep(Ãƒâ-11, $-16)
dep($-16, Ã-18)
punct(âˆšdaÃƒâ-20, ‚-19)
dep(Ã-18, âˆšdaÃƒâ-20)
punct(âˆšdaÃƒâ-20, ‰-21)
dep(ÂªtmÃƒâ-24, ˆÃ-22)
punct(ÂªtmÃƒâ-24, ‚-23)
dep(âˆšdaÃƒâ-20, ÂªtmÃƒâ-24)
punct(ÂªtmÃƒâ-24, ‰-25)
dep(Ë-28, ˆÃ-26)
punct(Ë-28, ‚-27)
dep(ÂªtmÃƒâ-24, Ë-28)
punct(Ë-28, ™-29)
dep(Ë-28, nt-30)
appos(Ã-18, in-DITE-mint-32)
cop(accusation-38, is-35)
det(accusation-38, a-36)
amod(accusation-38, formal-37)
root(ROOT-0, accusation-38)
aux(committed-41, having-40)
prepc_of(accusation-38, committed-41)
det(offense-44, a-42)
amod(offense-44, criminal-43)
dobj(committed-41, offense-44)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ mathematical) (NN subfield))
        (PP (IN of)
          (NP (JJ numerical) (NN analysis)))))
    (, ,)
    (NP (NNP Interpolation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN method))
        (PP (IN of)
          (S
            (VP (VBG constructing)
              (NP (JJ new) (NN data) (NNS points))
              (PP (IN within)
                (NP
                  (NP (DT the) (NN range))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ discrete) (NN set))
                      (PP (IN of)
                        (NP (VBN known) (NN data) (NNS points))))))))))))
    (. .)))

det(subfield-4, the-2)
amod(subfield-4, mathematical-3)
prep_in(method-12, subfield-4)
amod(analysis-7, numerical-6)
prep_of(subfield-4, analysis-7)
nsubj(method-12, Interpolation-9)
cop(method-12, is-10)
det(method-12, a-11)
root(ROOT-0, method-12)
prepc_of(method-12, constructing-14)
amod(points-17, new-15)
nn(points-17, data-16)
dobj(constructing-14, points-17)
det(range-20, the-19)
prep_within(constructing-14, range-20)
det(set-24, a-22)
amod(set-24, discrete-23)
prep_of(range-20, set-24)
amod(points-28, known-26)
nn(points-28, data-27)
prep_of(set-24, points-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS linguistics))
        (, ,)
        (NP (NN logic))
        (, ,)
        (NP (NN philosophy))
        (, ,)
        (CC and)
        (NP (JJ other) (NNS fields))))
    (, ,)
    (NP (DT an) (NNP Intension))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN property)
          (CC or)
          (NN quality))
        (VP (VBN connoted)
          (PP (IN by)
            (NP
              (NP (DT a) (NN word))
              (, ,)
              (NP (NN phrase))
              (CC or)
              (NP (JJ other) (NN symbol)))))))
    (. .)))

prep_in(property-16, linguistics-2)
conj_and(linguistics-2, logic-4)
prep_in(property-16, logic-4)
conj_and(linguistics-2, philosophy-6)
prep_in(property-16, philosophy-6)
amod(fields-10, other-9)
conj_and(linguistics-2, fields-10)
prep_in(property-16, fields-10)
det(Intension-13, an-12)
nsubj(property-16, Intension-13)
cop(property-16, is-14)
det(property-16, any-15)
root(ROOT-0, property-16)
conj_or(property-16, quality-18)
partmod(property-16, connoted-19)
det(word-22, a-21)
agent(connoted-19, word-22)
agent(connoted-19, phrase-24)
conj_or(word-22, phrase-24)
amod(symbol-27, other-26)
agent(connoted-19, symbol-27)
conj_or(word-22, symbol-27)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN film)))
    (, ,)
    (NP (DT an) (NNP Insert))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN shot))
        (PP (IN of)
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP (DT a) (NN scene))))))
      (SBAR (IN as)
        (S
          (VP (VBN filmed)
            (PP (IN from)
              (NP
                (NP (DT a) (JJ different) (NN angle)
                  (CC and)
                  (NN \/))
                (CC or)
                (NP (JJ focal) (NN length))))
            (PP (IN from)
              (NP (DT the) (NN master) (NN shot)))))))
    (. .)))

prep_in(shot-8, film-2)
det(Insert-5, an-4)
nsubj(shot-8, Insert-5)
cop(shot-8, is-6)
det(shot-8, a-7)
root(ROOT-0, shot-8)
prep_of(shot-8, part-10)
det(scene-13, a-12)
prep_of(part-10, scene-13)
mark(filmed-15, as-14)
advcl(shot-8, filmed-15)
det(angle-19, a-17)
amod(angle-19, different-18)
prep_from(filmed-15, angle-19)
prep_from(filmed-15, \/-21)
conj_and(angle-19, \/-21)
amod(length-24, focal-23)
prep_from(filmed-15, length-24)
conj_or(angle-19, length-24)
det(shot-28, the-26)
nn(shot-28, master-27)
prep_from(filmed-15, shot-28)

(ROOT
  (S
    (NP (DT An) (NNP Inventor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ creates)
              (CC or)
              (VBZ discovers)
              (NP
                (NP (DT a) (JJ new) (NN method))
                (, ,)
                (NP (NN form))
                (, ,)
                (NP (NN device))
                (CC or)
                (NP (JJ other) (JJ useful) (NNS means))))))))
    (. .)))

det(Inventor-2, An-1)
nsubj(person-5, Inventor-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
nsubj(creates-7, person-5)
nsubj(discovers-9, person-5)
rcmod(person-5, creates-7)
rcmod(person-5, discovers-9)
conj_or(creates-7, discovers-9)
det(method-12, a-10)
amod(method-12, new-11)
dobj(creates-7, method-12)
dobj(creates-7, form-14)
conj_or(method-12, form-14)
dobj(creates-7, device-16)
conj_or(method-12, device-16)
amod(means-20, other-18)
amod(means-20, useful-19)
dobj(creates-7, means-20)
conj_or(method-12, means-20)

(ROOT
  (S
    (NP (DT The) (NNP Undernet))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS largest) (NN Internet))
            (NP (NNP Relay) (NNP Chat)
              (PRN (-LRB- -LRB-)
                (NP (NNP IRC))
                (-RRB- -RRB-))
              (NNS networks))))))
    (. .)))

det(Undernet-2, The-1)
nsubj(one-4, Undernet-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
det(Internet-8, the-6)
amod(Internet-8, largest-7)
prep_of(one-4, Internet-8)
nn(networks-14, Relay-9)
nn(networks-14, Chat-10)
abbrev(networks-14, IRC-12)
dep(Internet-8, networks-14)

(ROOT
  (S
    (NP
      (NP (NNP XChat))
      (, ,)
      (VP
        (ADVP (RB commonly))
        (VBN written)
        (S
          (NP (NNP X-Chat)
            (CC or)
            (NNP XChat))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the)
            (ADJP (RBS most) (JJ popular))
            (NNP IRC) (NNS clients)))
        (PP (IN for)
          (NP (JJ Unix-like) (NNS systems)))))
    (. .)))

nsubj(one-10, XChat-1)
advmod(written-4, commonly-3)
partmod(XChat-1, written-4)
dep(written-4, X-Chat-5)
dep(written-4, XChat-7)
conj_or(X-Chat-5, XChat-7)
cop(one-10, is-9)
root(ROOT-0, one-10)
det(clients-16, the-12)
advmod(popular-14, most-13)
amod(clients-16, popular-14)
nn(clients-16, IRC-15)
prep_of(one-10, clients-16)
amod(systems-19, Unix-like-18)
prep_for(one-10, systems-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Ion))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN atom)
          (CC or)
          (NN molecule))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (VP (VBN lost)
                (CC or)
                (VBN gained)
                (NP
                  (QP (CD one)
                    (CC or)
                    (JJR more))
                  (JJ valence) (NNS electrons))
                (, ,)
                (S
                  (VP (VBG giving)
                    (NP (PRP it))
                    (NP (DT a)
                      (ADJP (JJ positive)
                        (CC or)
                        (JJ negative))
                      (JJ electrical) (NN charge))))))))))
    (. .)))

det(Ion-2, An-1)
nsubj(atom-5, Ion-2)
cop(atom-5, is-3)
det(atom-5, an-4)
root(ROOT-0, atom-5)
nsubj(lost-10, atom-5)
nsubj(gained-12, atom-5)
nsubj(giving-19, atom-5)
conj_or(atom-5, molecule-7)
nsubj(lost-10, molecule-7)
aux(lost-10, has-9)
rcmod(atom-5, lost-10)
rcmod(atom-5, gained-12)
conj_or(lost-10, gained-12)
num(electrons-17, one-13)
conj_or(one-13, more-15)
quantmod(one-13, more-15)
num(electrons-17, more-15)
amod(electrons-17, valence-16)
dobj(lost-10, electrons-17)
rcmod(atom-5, giving-19)
conj_or(lost-10, giving-19)
partmod(lost-10, giving-19)
xcomp(lost-10, giving-19)
iobj(giving-19, it-20)
det(charge-26, a-21)
amod(charge-26, positive-22)
conj_or(positive-22, negative-24)
amod(charge-26, negative-24)
amod(charge-26, electrical-25)
dobj(giving-19, charge-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (, ,)
    (NP (DT the) (NN term) (NN Integer))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP
                  (NP (DT a) (NN data) (NN type))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ represents)
                        (NP
                          (NP (DT some) (JJ finite) (NN subset))
                          (PP (IN of)
                            (NP (DT the) (JJ mathematical) (NNS integers))))))))))))))
    (. .)))

nn(science-3, computer-2)
prep_in(used-9, science-3)
det(Integer-7, the-5)
nn(Integer-7, term-6)
nsubjpass(used-9, Integer-7)
xsubj(refer-11, Integer-7)
auxpass(used-9, is-8)
root(ROOT-0, used-9)
aux(refer-11, to-10)
xcomp(used-9, refer-11)
det(type-15, a-13)
nn(type-15, data-14)
prep_to(refer-11, type-15)
nsubj(represents-17, type-15)
rcmod(type-15, represents-17)
det(subset-20, some-18)
amod(subset-20, finite-19)
dobj(represents-17, subset-20)
det(integers-24, the-22)
amod(integers-24, mathematical-23)
prep_of(subset-20, integers-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT The) (NNP Iliad))
      (VP (VBZ is)
        (ADVP (RB together))
        (PP (IN with)
          (NP (DT the) (NN Odyssey)))))
    (, ,)
    (NP
      (NP (CD one))
      (PP (IN of)
        (NP (CD two) (JJ ancient) (JJ Greek) (NN epic) (NNS poems))))
    (ADVP (RB traditionally))
    (VP (VBD attributed)
      (PP (TO to)
        (NP (NNP Homer))))
    (. .)))

det(Iliad-2, The-1)
nsubj(is-3, Iliad-2)
ccomp(attributed-17, is-3)
det(Odyssey-7, the-6)
prep_together_with(is-3, Odyssey-7)
nsubj(attributed-17, one-9)
num(poems-15, two-11)
amod(poems-15, ancient-12)
amod(poems-15, Greek-13)
nn(poems-15, epic-14)
prep_of(one-9, poems-15)
advmod(attributed-17, traditionally-16)
root(ROOT-0, attributed-17)
prep_to(attributed-17, Homer-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT An) (NNP Incunabulum))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN book))
        (, ,)
        (NP (JJ single) (NN sheet))
        (, ,)
        (CC or)
        (NP
          (NP (NN image))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (VP (VBN printed)
                  (PRN (: -)
                    (ADJP (RB not) (VBN handwritten))
                    (: -))
                  (PP (IN before)
                    (NP (DT the) (NN year) (CD 1501)))
                  (PP (IN in)
                    (NP (NNP Europe))))))))))
    (. .)))

det(Incunabulum-2, An-1)
nsubj(book-5, Incunabulum-2)
cop(book-5, is-3)
det(book-5, a-4)
root(ROOT-0, book-5)
amod(sheet-8, single-7)
conj_or(book-5, sheet-8)
conj_or(book-5, image-11)
nsubjpass(printed-14, image-11)
auxpass(printed-14, was-13)
rcmod(image-11, printed-14)
neg(handwritten-17, not-16)
dep(printed-14, handwritten-17)
det(year-21, the-20)
prep_before(printed-14, year-21)
num(year-21, 1501-22)
prep_in(printed-14, Europe-24)

(ROOT
  (S
    (NP (DT An) (NNP Inductor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ passive) (JJ electrical) (NN device))
        (VP (VBN employed)
          (PP (IN in)
            (NP
              (NP (JJ electrical) (NNS circuits))
              (PP (IN for)
                (NP
                  (NP (PRP$ its) (NN property))
                  (PP (IN of)
                    (NP (NN inductance))))))))))
    (. .)))

det(Inductor-2, An-1)
nsubj(device-7, Inductor-2)
cop(device-7, is-3)
det(device-7, a-4)
amod(device-7, passive-5)
amod(device-7, electrical-6)
root(ROOT-0, device-7)
partmod(device-7, employed-8)
amod(circuits-11, electrical-10)
prep_in(employed-8, circuits-11)
poss(property-14, its-13)
prep_for(circuits-11, property-14)
prep_of(property-14, inductance-16)

(ROOT
  (S
    (S
      (NP (DT An) (NNP Instrumental))
      (VP (VBZ is) (, ,)
        (PP (IN in)
          (NP
            (NP (NN contrast))
            (PP (TO to)
              (NP
                (NP (DT a) (NN song))
                (, ,)
                (NP (DT a) (JJ musical) (NN composition))
                (CC or)
                (NP (NN recording))))))
        (PP (IN without)
          (NP
            (NP (NNS lyrics))
            (CC or)
            (NP
              (NP (DT any) (JJ other) (NN sort))
              (PP (IN of)
                (NP (JJ vocal) (NN music))))))))
    (: ;)
    (S
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (DT the) (NN music))))
      (VP (VBZ is)
        (VP (VBN produced)
          (PP (IN by)
            (NP (JJ musical) (NNS instruments))))))
    (. .)))

det(Instrumental-2, An-1)
nsubj(is-3, Instrumental-2)
root(ROOT-0, is-3)
prep_in(is-3, contrast-6)
det(song-9, a-8)
prep_to(contrast-6, song-9)
det(composition-13, a-11)
amod(composition-13, musical-12)
prep_to(contrast-6, composition-13)
conj_or(song-9, composition-13)
prep_to(contrast-6, recording-15)
conj_or(song-9, recording-15)
prep_without(is-3, lyrics-17)
det(sort-21, any-19)
amod(sort-21, other-20)
prep_without(is-3, sort-21)
conj_or(lyrics-17, sort-21)
amod(music-24, vocal-23)
prep_of(sort-21, music-24)
nsubjpass(produced-31, all-26)
det(music-29, the-28)
prep_of(all-26, music-29)
auxpass(produced-31, is-30)
parataxis(is-3, produced-31)
amod(instruments-34, musical-33)
agent(produced-31, instruments-34)

(ROOT
  (NP
    (NP (DT An) (NNP Icosahedron)
      (PRN (-LRB- -LRB-)
        (ADVP (RB Greek) (: :))
        (NP
          (NP (NN eikosaedron))
          (, ,)
          (PP (IN from)
            (NP (NNP eikosi) (CD twenty))))
        (: +))
      (NN hedron) (NN seat))
    (: ;)
    (NP (`` \/)
      (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
      ('' ‚)
      (VP (VBN â)
        (NP
          (NP ($ $) (CD ˜aÃƒâ))
          (PRN (: ‰)
            (FRAG
              (X (SYM ˆÃ))
              (: ‚)
              (NP (NNP Âª)))))))
    (. .)))

det(seat-13, An-1)
nn(seat-13, Icosahedron-2)
dep(eikosaedron-6, Greek-4)
dep(seat-13, eikosaedron-6)
prep_from(eikosaedron-6, eikosi-9)
num(eikosi-9, twenty-10)
punct(eikosaedron-6, +-11)
nn(seat-13, hedron-12)
root(ROOT-0, seat-13)
punct(Ã-19, \/-15)
nn(Ã-19, Ãƒâ-16)
nn(Ã-19, $-17)
dep(seat-13, Ã-19)
punct(Ã-19, ‚-20)
partmod(Ã-19, â-21)
dobj(â-21, $-22)
num($-22, ˜aÃƒâ-23)
punct(Âª-27, ‰-24)
dep(Âª-27, ˆÃ-25)
punct(Âª-27, ‚-26)
dep($-22, Âª-27)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP kÃƒâ) (NNP ‰) (NNP ˆÃ) (NNP ‚) (NNP Ë) (NNP ™) (NNP Ãƒâ))
        (NP ($ $) (CD ¦)))
      (NP (NNP Ã) (NNP ‚)))
    (VP (VBP â)
      (NP ($ $) (CD ¦)))
    (. .)))

nn(Ãƒâ-7, kÃƒâ-1)
nn(Ãƒâ-7, ‰-2)
nn(Ãƒâ-7, ˆÃ-3)
nn(Ãƒâ-7, ‚-4)
nn(Ãƒâ-7, Ë-5)
nn(Ãƒâ-7, ™-6)
nsubj(â-12, Ãƒâ-7)
dep(Ãƒâ-7, $-8)
num($-8, ¦-9)
nn(‚-11, Ã-10)
dep(Ãƒâ-7, ‚-11)
root(ROOT-0, â-12)
dobj(â-12, $-13)
num($-13, ¦-14)

(ROOT
  (S
    (NP (NNP sÃƒâ) (NNP ‰) (NNP ˆÃ) (NNP ‚) (NNP Ë))
    (VP (VBZ ™))
    (. .)))

nn(Ë-5, sÃƒâ-1)
nn(Ë-5, ‰-2)
nn(Ë-5, ˆÃ-3)
nn(Ë-5, ‚-4)
nsubj(™-6, Ë-5)
root(ROOT-0, ™-6)

(ROOT
  (S
    (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
    (VP (SYM ‚)
      (NP (NNS âˆšhi)))
    (. .)))

nn(Ã-4, Ãƒâ-1)
nn(Ã-4, $-2)
nsubj(âˆšhi-6, Ã-4)
dep(âˆšhi-6, ‚-5)
root(ROOT-0, âˆšhi-6)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNS ISIS))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (`` `) (NNP Image))
          (CC and)
          (NP (NNP Scanner) (NNP Interface) (NNP Specification)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN industry) (NN standard) (NN interface))
        (PP (IN for)
          (NP
            (NP (NN image))
            (VP (VBG scanning)
              (NP
                (NP (NNS technologies))
                (, ,)
                (VP (VBN developed)
                  (PP (IN by)
                    (NP
                      (NP (NNP Pixel) (NNP Translations))
                      (PP (IN in)
                        (NP
                          (NP (CD 1990))
                          (PRN (-LRB- -LRB-)
                            (NP
                              (NP (NN today))
                              (: :)
                              (NP (NNP EMC) (NNP captiva)))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

nsubj(interface-14, ISIS-1)
dep(ISIS-1, Image-4)
nn(Specification-8, Scanner-6)
nn(Specification-8, Interface-7)
dep(ISIS-1, Specification-8)
conj_and(Image-4, Specification-8)
cop(interface-14, is-10)
det(interface-14, an-11)
nn(interface-14, industry-12)
nn(interface-14, standard-13)
root(ROOT-0, interface-14)
prep_for(interface-14, image-16)
partmod(image-16, scanning-17)
dobj(scanning-17, technologies-18)
partmod(technologies-18, developed-20)
nn(Translations-23, Pixel-22)
agent(developed-20, Translations-23)
prep_in(Translations-23, 1990-25)
abbrev(1990-25, today-27)
nn(captiva-30, EMC-29)
dep(today-27, captiva-30)

(ROOT
  (S
    (NP (DT An) (NNP Insulator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN material))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ resists)
              (NP
                (NP (DT the) (NN flow))
                (PP (IN of)
                  (NP (JJ electric) (NN current)))))))))
    (. .)))

det(Insulator-2, An-1)
nsubj(material-5, Insulator-2)
cop(material-5, is-3)
det(material-5, a-4)
root(ROOT-0, material-5)
nsubj(resists-7, material-5)
rcmod(material-5, resists-7)
det(flow-9, the-8)
dobj(resists-7, flow-9)
amod(current-12, electric-11)
prep_of(flow-9, current-12)

(ROOT
  (S
    (NP (DT The) (NNP Infantry))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NNS soldiers))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (ADVP (RB primarily))
                  (VP (VBN trained)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN role))
                        (PP (IN of)
                          (S
                            (VP (VBG fighting)
                              (PP (IN on)
                                (NP (NN foot))))))))))))))))
    (. .)))

det(Infantry-2, The-1)
nsubj(type-5, Infantry-2)
cop(type-5, are-3)
det(type-5, a-4)
root(ROOT-0, type-5)
prep_of(type-5, soldiers-7)
nsubjpass(trained-11, soldiers-7)
auxpass(trained-11, are-9)
advmod(trained-11, primarily-10)
rcmod(soldiers-7, trained-11)
det(role-14, the-13)
prep_for(trained-11, role-14)
prepc_of(role-14, fighting-16)
prep_on(fighting-16, foot-18)

(ROOT
  (S
    (NP (DT The) (NNP Ionosphere))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ uppermost) (NN part))
        (PP (IN of)
          (NP (DT the) (NN atmosphere))))
      (, ,)
      (S
        (ADJP (JJ distinguished))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBN ionized)
                (PP (IN by)
                  (NP (JJ solar) (NN radiation)))))))))
    (. .)))

det(Ionosphere-2, The-1)
nsubj(part-6, Ionosphere-2)
cop(part-6, is-3)
det(part-6, the-4)
amod(part-6, uppermost-5)
root(ROOT-0, part-6)
det(atmosphere-9, the-8)
prep_of(part-6, atmosphere-9)
dep(ionized-15, distinguished-11)
mark(ionized-15, because-12)
nsubjpass(ionized-15, it-13)
auxpass(ionized-15, is-14)
dep(part-6, ionized-15)
amod(radiation-18, solar-17)
agent(ionized-15, radiation-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Interference))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN addition))
        (PRN (-LRB- -LRB-)
          (NP (NN superposition))
          (-RRB- -RRB-))
        (PP (IN of)
          (NP
            (NP
              (QP (CD two)
                (CC or)
                (JJR more))
              (NNS waves))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP result)
                  (PP (IN in)
                    (NP (DT a) (JJ new) (NN wave) (NN pattern))))))))))
    (. .)))

prep_in(addition-7, physics-2)
nsubj(addition-7, Interference-4)
cop(addition-7, is-5)
det(addition-7, the-6)
root(ROOT-0, addition-7)
appos(addition-7, superposition-9)
num(waves-15, two-12)
conj_or(two-12, more-14)
quantmod(two-12, more-14)
num(waves-15, more-14)
prep_of(addition-7, waves-15)
nsubj(result-17, waves-15)
rcmod(waves-15, result-17)
det(pattern-22, a-19)
amod(pattern-22, new-20)
nn(pattern-22, wave-21)
prep_in(result-17, pattern-22)

(ROOT
  (S
    (NP (DT The) (NN name) (NN ICQ))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN initialism))
        (PP (IN on)
          (NP
            (NP (DT the) (NN phrase))
            ('' '')
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP seek)
                  (NP (PRP you) ('' '')))))))))
    (. .)))

det(ICQ-3, The-1)
nn(ICQ-3, name-2)
nsubj(initialism-6, ICQ-3)
cop(initialism-6, is-4)
det(initialism-6, an-5)
root(ROOT-0, initialism-6)
det(phrase-9, the-8)
prep_on(initialism-6, phrase-9)
nsubj(seek-12, I-11)
rcmod(phrase-9, seek-12)
dobj(seek-12, you-13)

(ROOT
  (S
    (NP (DT An) (NNP Impi))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ isiZulu) (NN word))
        (PP (IN for)
          (NP
            (NP (DT any) (VBN armed) (NN body))
            (PP (IN of)
              (NP (NNS men)))))))
    (. .)))

det(Impi-2, An-1)
nsubj(word-6, Impi-2)
cop(word-6, is-3)
det(word-6, an-4)
amod(word-6, isiZulu-5)
root(ROOT-0, word-6)
det(body-10, any-8)
amod(body-10, armed-9)
prep_for(word-6, body-10)
prep_of(body-10, men-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP ITU) (NNP Radiocommunication) (NNP Sector))
      (PRN (-LRB- -LRB-)
        (NP (NNP ITU-R))
        (-RRB- -RRB-)))
    (VP
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP
                (NP (DT the) (CD three) (NNS sectors))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NNS divisions))
                    (CC or)
                    (NP (NNS units)))
                  (-RRB- -RRB-)))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP International) (NNP Telecommunication) (NNP Union))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP ITU))
                    (-RRB- -RRB-))))))))
      (CC and)
      (VP (VBZ is)
        (ADJP (JJ responsible)
          (PP (IN for)
            (NP (NN radio) (NN communication))))))
    (. .)))

det(Sector-4, The-1)
nn(Sector-4, ITU-2)
nn(Sector-4, Radiocommunication-3)
nsubj(one-9, Sector-4)
nsubj(responsible-29, Sector-4)
abbrev(Sector-4, ITU-R-6)
cop(one-9, is-8)
root(ROOT-0, one-9)
det(sectors-13, the-11)
num(sectors-13, three-12)
prep_of(one-9, sectors-13)
dep(sectors-13, divisions-15)
dep(sectors-13, units-17)
conj_or(divisions-15, units-17)
det(Union-23, the-20)
nn(Union-23, International-21)
nn(Union-23, Telecommunication-22)
prep_of(sectors-13, Union-23)
abbrev(Union-23, ITU-25)
cop(responsible-29, is-28)
conj_and(one-9, responsible-29)
nn(communication-32, radio-31)
prep_for(responsible-29, communication-32)

(ROOT
  (S
    (NP (DT An) (NNP Invertebrate))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN animal))
        (VP (VBG lacking)
          (NP (DT a) (JJ vertebral) (NN column)))))
    (. .)))

det(Invertebrate-2, An-1)
nsubj(animal-5, Invertebrate-2)
cop(animal-5, is-3)
det(animal-5, an-4)
root(ROOT-0, animal-5)
partmod(animal-5, lacking-6)
det(column-9, a-7)
amod(column-9, vertebral-8)
dobj(lacking-6, column-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN grammar)))
    (, ,)
    (NP (NNP Infinitive))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (IN for)
          (NP (JJ certain) (NN verb) (NNS forms)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP exist)
              (PP (IN in)
                (NP (JJ many) (NNS languages))))))))
    (. .)))

prep_in(name-7, grammar-2)
nsubj(name-7, Infinitive-4)
cop(name-7, is-5)
det(name-7, the-6)
root(ROOT-0, name-7)
nsubj(exist-13, name-7)
amod(forms-11, certain-9)
nn(forms-11, verb-10)
prep_for(name-7, forms-11)
rcmod(name-7, exist-13)
amod(languages-16, many-15)
prep_in(exist-13, languages-16)

(ROOT
  (S
    (NP (DT An) (NNP Index))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN system))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (VP (VBG finding)
                    (S
                      (NP (NN information))
                      (ADJP (RBR easier)))))))))))
    (. .)))

det(Index-2, An-1)
nsubj(system-5, Index-2)
cop(system-5, is-3)
det(system-5, a-4)
root(ROOT-0, system-5)
xsubj(make-8, system-5)
partmod(system-5, used-6)
aux(make-8, to-7)
xcomp(used-6, make-8)
xcomp(make-8, finding-9)
nsubj(easier-11, information-10)
xcomp(finding-9, easier-11)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT an) (NNP Interrupt))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ asynchronous) (NN signal))
        (PP (IN from)
          (NP
            (NP (NN hardware))
            (VP (VBG indicating)
              (NP
                (NP (DT the) (NN need))
                (PP (IN for)
                  (NP
                    (NP (NN attention))
                    (CC or)
                    (NP (DT a) (JJ synchronous) (NN event)))))
              (PP (IN in)
                (NP (NN software)))
              (S
                (VP (VBG indicating)
                  (NP (DT the) (NN need))
                  (PP (IN for)
                    (NP
                      (NP (DT a) (NN change))
                      (PP (IN in)
                        (NP (NN execution))))))))))))
    (. .)))

prep_in(signal-9, computing-2)
det(Interrupt-5, an-4)
nsubj(signal-9, Interrupt-5)
cop(signal-9, is-6)
det(signal-9, an-7)
amod(signal-9, asynchronous-8)
root(ROOT-0, signal-9)
prep_from(signal-9, hardware-11)
partmod(hardware-11, indicating-12)
det(need-14, the-13)
dobj(indicating-12, need-14)
prep_for(need-14, attention-16)
det(event-20, a-18)
amod(event-20, synchronous-19)
prep_for(need-14, event-20)
conj_or(attention-16, event-20)
prep_in(indicating-12, software-22)
xcomp(indicating-12, indicating-23)
det(need-25, the-24)
dobj(indicating-23, need-25)
det(change-28, a-27)
prep_for(indicating-23, change-28)
prep_in(change-28, execution-30)

(ROOT
  (S
    (NP (DT An) (NNP Ink))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN liquid))
          (VP (VBG containing)
            (NP (JJ various) (NNS pigments)
              (CC and)
              (NNS \/))))
        (CC or)
        (NP
          (NP (NNS dyes))
          (VP (VBN used)
            (PP (IN for)
              (S
                (VP (VBG coloring)
                  (NP (DT a) (NN surface)
                    (S
                      (VP (TO to)
                        (VP (VB produce)
                          (NP
                            (NP (DT an) (NN image))
                            (, ,)
                            (NP (NN text))
                            (, ,)
                            (CC or)
                            (NP (NN design))))))))))))))
    (. .)))

det(Ink-2, An-1)
nsubj(liquid-5, Ink-2)
cop(liquid-5, is-3)
det(liquid-5, a-4)
root(ROOT-0, liquid-5)
partmod(liquid-5, containing-6)
amod(pigments-8, various-7)
dobj(containing-6, pigments-8)
dobj(containing-6, \/-10)
conj_and(pigments-8, \/-10)
conj_or(liquid-5, dyes-12)
partmod(dyes-12, used-13)
prepc_for(used-13, coloring-15)
det(surface-17, a-16)
dobj(coloring-15, surface-17)
aux(produce-19, to-18)
infmod(surface-17, produce-19)
det(image-21, an-20)
dobj(produce-19, image-21)
dobj(produce-19, text-23)
conj_or(image-21, text-23)
dobj(produce-19, design-26)
conj_or(image-21, design-26)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Internet) (NNP Protocol) (NN version) (CD 4))
        (PRN (-LRB- -LRB-)
          (NP (NNP IPv4))
          (-RRB- -RRB-)))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ fourth) (NN iteration))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Internet) (NNP Protocol))
              (PRN (-LRB- -LRB-)
                (NP (NNP IP))
                (-RRB- -RRB-)))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ first) (NN version))
          (PP (IN of)
            (NP (DT the) (NN protocol)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP
                      (ADVP (RB widely))
                      (VBN deployed))))))))))
    (. .)))

nn(version-3, Internet-1)
nn(version-3, Protocol-2)
nsubj(iteration-11, version-3)
num(version-3, 4-4)
abbrev(version-3, IPv4-6)
cop(iteration-11, is-8)
det(iteration-11, the-9)
amod(iteration-11, fourth-10)
root(ROOT-0, iteration-11)
det(Protocol-15, the-13)
nn(Protocol-15, Internet-14)
prep_of(iteration-11, Protocol-15)
abbrev(Protocol-15, IP-17)
nsubj(version-24, it-20)
cop(version-24, is-21)
det(version-24, the-22)
amod(version-24, first-23)
conj_and(iteration-11, version-24)
det(protocol-27, the-26)
prep_of(version-24, protocol-27)
aux(deployed-31, to-28)
auxpass(deployed-31, be-29)
advmod(deployed-31, widely-30)
infmod(protocol-27, deployed-31)

(ROOT
  (S
    (NP
      (NP (NNP Internet) (NNP Protocol) (NN version) (CD 6))
      (PRN (-LRB- -LRB-)
        (NP (NNP IPv6))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN network) (NN layer))
        (PP (IN for)
          (NP (JJ packet-switched) (NNS internetworks)))))
    (. .)))

nn(version-3, Internet-1)
nn(version-3, Protocol-2)
nsubj(layer-11, version-3)
num(version-3, 6-4)
abbrev(version-3, IPv6-6)
cop(layer-11, is-8)
det(layer-11, a-9)
nn(layer-11, network-10)
root(ROOT-0, layer-11)
amod(internetworks-14, packet-switched-13)
prep_for(layer-11, internetworks-14)

(ROOT
  (S
    (NP (NNP Inheritance))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN practice))
        (PP (IN of)
          (S
            (VP (VBG passing)
              (PP (IN on)
                (NP
                  (NP (NN property))
                  (, ,)
                  (NP (NNS titles))
                  (, ,)
                  (NP (NNS debts))
                  (, ,)
                  (CC and)
                  (NP (NNS obligations))))
              (PP (IN upon)
                (NP
                  (NP (DT the) (NN death))
                  (PP (IN of)
                    (NP (DT an) (NN individual))))))))))
    (. .)))

nsubj(practice-4, Inheritance-1)
cop(practice-4, is-2)
det(practice-4, the-3)
root(ROOT-0, practice-4)
prepc_of(practice-4, passing-6)
prep_on(passing-6, property-8)
prep_on(passing-6, titles-10)
conj_and(property-8, titles-10)
prep_on(passing-6, debts-12)
conj_and(property-8, debts-12)
prep_on(passing-6, obligations-15)
conj_and(property-8, obligations-15)
det(death-18, the-17)
prep_upon(passing-6, death-18)
det(individual-21, an-20)
prep_of(death-18, individual-21)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Infundibulum))
      (PRN (-LRB- -LRB-)
        (ADJP (JJ Latin)
          (PP (IN for)
            (NP
              (NP (NNP funnel))
              (: ;)
              (NP
                (NP (NN plural))
                (, ,)
                (NP (NN infundibula))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ funnel-shape) (NN cavity))
        (CC or)
        (NP (NN organ))))
    (. .)))

det(Infundibulum-2, An-1)
nsubj(cavity-15, Infundibulum-2)
dep(Infundibulum-2, Latin-4)
prep_for(Latin-4, funnel-6)
dep(funnel-6, plural-8)
appos(plural-8, infundibula-10)
cop(cavity-15, is-12)
det(cavity-15, a-13)
amod(cavity-15, funnel-shape-14)
root(ROOT-0, cavity-15)
conj_or(cavity-15, organ-17)

(ROOT
  (S
    (S
      (ADVP (RB Originally))
      (VP (VBN formed)
        (PP (IN as)
          (NP
            (NP (NNP International) (NNP Telecommunications) (NNP Satellite) (NNP Organization))
            (PRN (-LRB- -LRB-)
              (NP (NNP Intelsat))
              (-RRB- -RRB-))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT an) (JJ intergovernmental) (NN consortium))
        (VP (VBG owning)
          (CC and)
          (VBG managing)
          (NP
            (NP (DT a) (NN constellation))
            (PP (IN of)
              (NP (NNS communications) (NNS satellites))))
          (S
            (VP (VBG providing)
              (NP (JJ international) (NN broadcast) (NNS services)))))))
    (. .)))

advmod(formed-2, Originally-1)
partmod(consortium-16, formed-2)
nn(Organization-7, International-4)
nn(Organization-7, Telecommunications-5)
nn(Organization-7, Satellite-6)
prep_as(formed-2, Organization-7)
appos(Organization-7, Intelsat-9)
nsubj(consortium-16, it-12)
cop(consortium-16, was-13)
det(consortium-16, an-14)
amod(consortium-16, intergovernmental-15)
root(ROOT-0, consortium-16)
partmod(consortium-16, owning-17)
partmod(consortium-16, managing-19)
conj_and(owning-17, managing-19)
det(constellation-21, a-20)
dobj(owning-17, constellation-21)
nn(satellites-24, communications-23)
prep_of(constellation-21, satellites-24)
xcomp(owning-17, providing-25)
amod(services-28, international-26)
nn(services-28, broadcast-27)
dobj(providing-25, services-28)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN word))
    (VP (VBD Jabberwocky)
      (SBAR
        (S
          (NP (PRP itself))
          (VP (VBZ is)
            (ADVP (RB sometimes))
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB refer)
                    (PP (TO to)
                      (NP (JJ nonsense) (NN language)))))))))))
    (. .)))

det(word-2, The-1)
nsubj(Jabberwocky-3, word-2)
root(ROOT-0, Jabberwocky-3)
nsubjpass(used-7, itself-4)
xsubj(refer-9, itself-4)
auxpass(used-7, is-5)
advmod(used-7, sometimes-6)
ccomp(Jabberwocky-3, used-7)
aux(refer-9, to-8)
xcomp(used-7, refer-9)
amod(language-12, nonsense-11)
prep_to(refer-9, language-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (PRN (: ;)
    (S
      (VP
        (VP (VB lang))
        (, ,)
        (NP
          (NP (NNP Yehudim))
          (PRN (-LRB- -LRB-)
            (NP (NNP pl) (. .))
            (-RRB- -RRB-)))))))

root(ROOT-0, lang-2)
dobj(lang-2, Yehudim-4)
appos(Yehudim-4, pl-6)

(ROOT
  (SINV
    (VP
      (PRN (: ;)
        (NP (NNP Ladino))
        (: :))
      (VBZ ÃƒËœÃ)
      (NP
        (NP (JJ ‚) (NN â))
        (SBAR
          (S
            (NP
              (QP ($ $) (CD šÃƒËœÃ) (CD ‚))
              (JJ â)
              (QP ($ $) (CD œÃƒËœÃ) (CD ‚))
              (JJ ï)
              (QP (# #) (CD ¿) (CD ÃƒËœÃ))
              (JJ ‚) (JJ â)
              (QP ($ $) (CD žÃƒËœÃ) (CD ‚))
              (NN Ë) (NNS ™))
            (VP (VBZ ÃƒËœÃ)
              (NP (JJ ‚) (NN ï)))))))
    (NP
      (NP (# #) (CD ¿))
      (, ,)
      (NP
        (NP (NNP Djudio))
        (PRN (-LRB- -LRB-)
          (NP (NNP sl) (. .))
          (-RRB- -RRB-))))))

dep(ÃƒËœÃ-4, Ladino-2)
root(ROOT-0, ÃƒËœÃ-4)
amod(â-6, ‚-5)
dobj(ÃƒËœÃ-4, â-6)
num(™-24, $-7)
number($-7, šÃƒËœÃ-8)
number($-7, ‚-9)
amod(™-24, â-10)
num(™-24, $-11)
number($-11, œÃƒËœÃ-12)
number($-11, ‚-13)
amod(™-24, ï-14)
number(ÃƒËœÃ-17, #-15)
number(ÃƒËœÃ-17, ¿-16)
num(™-24, ÃƒËœÃ-17)
amod(™-24, ‚-18)
amod(™-24, â-19)
num(™-24, $-20)
number($-20, žÃƒËœÃ-21)
number($-20, ‚-22)
nn(™-24, Ë-23)
nsubj(ÃƒËœÃ-25, ™-24)
rcmod(â-6, ÃƒËœÃ-25)
amod(ï-27, ‚-26)
dobj(ÃƒËœÃ-25, ï-27)
dep(¿-29, #-28)
nsubj(ÃƒËœÃ-4, ¿-29)
appos(¿-29, Djudio-31)
appos(Djudio-31, sl-33)

(ROOT
  (S (CC ;)
    (NP (NNP ÃƒËœÃ) (NNP ‚))
    (VP (VBP â)
      (SBAR
        (S
          (NP
            (NP
              (QP ($ $) (CD šÃƒËœÃ) (CD ‚))
              (NN â))
            (ADJP
              (NP
                (NP
                  (QP ($ $) (CD œÃƒËœÃ) (CD ‚))
                  (NN ï))
                (QP (# #) (CD ¿) (CD ÃƒËœÃ)))
              (JJ ‚)))
          (VP (VBP â)
            (SBAR
              (S
                (NP
                  (QP ($ $) (CD žÃƒËœÃ) (CD ‚))
                  (NNP Ë) (NNP ™) (NNP ÃƒËœÃ) (NNS ‚))
                (VP (VBP ï)
                  (NP
                    (NP
                      (QP (# #) (CD ¿) (CD ÃƒËœÃ))
                      (NNP ‚) (NNP Â) (NNS ¡))
                    (, ,)
                    (NP
                      (NP (NNP Djudios))
                      (PRN (-LRB- -LRB-)
                        (NP (NNP pl) (. .))
                        (-RRB- -RRB-)))))))))))))

nn(‚-3, ÃƒËœÃ-2)
nsubj(â-4, ‚-3)
root(ROOT-0, â-4)
num(â-8, $-5)
number($-5, šÃƒËœÃ-6)
number($-5, ‚-7)
nsubj(â-17, â-8)
num(ï-12, $-9)
number($-9, œÃƒËœÃ-10)
number($-9, ‚-11)
npadvmod(‚-16, ï-12)
number(ÃƒËœÃ-15, #-13)
number(ÃƒËœÃ-15, ¿-14)
num(ï-12, ÃƒËœÃ-15)
amod(â-8, ‚-16)
ccomp(â-4, â-17)
num(‚-24, $-18)
number($-18, žÃƒËœÃ-19)
number($-18, ‚-20)
nn(‚-24, Ë-21)
nn(‚-24, ™-22)
nn(‚-24, ÃƒËœÃ-23)
nsubj(ï-25, ‚-24)
ccomp(â-17, ï-25)
number(ÃƒËœÃ-28, #-26)
number(ÃƒËœÃ-28, ¿-27)
num(¡-31, ÃƒËœÃ-28)
nn(¡-31, ‚-29)
nn(¡-31, Â-30)
dobj(ï-25, ¡-31)
appos(¡-31, Djudios-33)
appos(Djudios-33, pl-35)

(ROOT
  (PRN (: ;)
    (NP
      (NP (JJ Yiddish))
      (: :)
      (NP
        (NP
          (NP
            (QP (CD ÃƒËœÃ) (CD ‚))
            (NNP Ë) (NNP ™) (NNP ÃƒËœÃ) (NNP ‚) (NNP Ë) (NNP ™) (NNP ÃƒË) (NNP †) (NNP Ã) (NNP ‚) (NNP Â) (NNP ´) (NNP ÃƒËœÃ) (NNP ‚) (NNPS â))
          (NP ($ $) (CD ž)))
        (, ,)
        (NP
          (NP (NNP Yid))
          (PRN (-LRB- -LRB-)
            (NP (NNP sl) (. .))
            (-RRB- -RRB-)))))))

root(ROOT-0, Yiddish-2)
number(‚-5, ÃƒËœÃ-4)
num(â-20, ‚-5)
nn(â-20, Ë-6)
nn(â-20, ™-7)
nn(â-20, ÃƒËœÃ-8)
nn(â-20, ‚-9)
nn(â-20, Ë-10)
nn(â-20, ™-11)
nn(â-20, ÃƒË-12)
nn(â-20, †-13)
nn(â-20, Ã-14)
nn(â-20, ‚-15)
nn(â-20, Â-16)
nn(â-20, ´-17)
nn(â-20, ÃƒËœÃ-18)
nn(â-20, ‚-19)
dep(Yiddish-2, â-20)
dep(â-20, $-21)
num($-21, ž-22)
appos(â-20, Yid-24)
appos(Yid-24, sl-26)

(ROOT
  (SINV
    (VP (VBZ ;))
    (NP
      (NP (NN lang))
      (, ,)
      (NP
        (NP (NNP Yidn))
        (PRN (-LRB- -LRB-)
          (INTJ (UH pl))
          (. .) (-RRB- -RRB-))
        (-RRB- -RRB-)))))

nsubj(;-1, lang-2)
appos(lang-2, Yidn-4)
dep(Yidn-4, pl-6)

(ROOT
  (S
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN member))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ Jewish) (NNS people))
            (, ,)
            (NP
              (NP (DT an) (JJ ethnoreligious) (NN group))
              (VP (VBG originating)
                (PP (IN from)
                  (NP
                    (NP (DT the) (NNPS Israelites)
                      (CC or)
                      (NNPS Hebrews))
                    (PP (IN of)
                      (NP (DT the) (JJ ancient) (NNP Middle) (NNP East)))))))))))
    (. .)))

cop(member-3, is-1)
det(member-3, a-2)
root(ROOT-0, member-3)
det(people-7, the-5)
amod(people-7, Jewish-6)
prep_of(member-3, people-7)
det(group-11, an-9)
amod(group-11, ethnoreligious-10)
appos(people-7, group-11)
partmod(group-11, originating-12)
det(Israelites-15, the-14)
prep_from(originating-12, Israelites-15)
prep_from(originating-12, Hebrews-17)
conj_or(Israelites-15, Hebrews-17)
det(East-22, the-19)
amod(East-22, ancient-20)
nn(East-22, Middle-21)
prep_of(Israelites-15, East-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP
      (NP (NNP JPEG))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ pronounced) (NN JAY-peg))
          (: ;)
          (NP
            (NP
              (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
              (PRN (: ‚)
                (NP (NNP âˆšdÃƒâ)
                  (QP ($ $) (CD ¦) (CD Ã)))
                (: ‚)))
            (ADJP
              (ADJP
                (QP (RB â) ($ $) (CD šeÃƒâ)))
              (PRN (: ‰)
                (FRAG
                  (FRAG
                    (X (SYM ˆÃ))
                    (: ‚)
                    (NP (NNP ÂªpÃƒâ)))
                  (: ‰)
                  (FRAG
                    (FRAG
                      (X (SYM ˆÃ))
                      (: ‚)
                      (NP (NNP Ë) (NNP Ãƒâ)))
                    (: ‰)
                    (FRAG
                      (X (SYM ˆÃ))
                      (: ‚)
                      (NP (NNP Â)))))
                (: ¡)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB commonly) (VBN used))
          (NN method))
        (PP (IN of)
          (NP
            (NP (NN compression))
            (PP (IN for)
              (NP (JJ photographic) (NNS images)))))))
    (. .)))

prep_in(method-41, computing-2)
nsubj(method-41, JPEG-4)
amod(JAY-peg-7, pronounced-6)
dep(JPEG-4, JAY-peg-7)
nn(Ã-12, Ãƒâ-9)
nn(Ã-12, $-10)
dep(JAY-peg-7, Ã-12)
punct(âˆšdÃƒâ-14, ‚-13)
dep(Ã-12, âˆšdÃƒâ-14)
num(âˆšdÃƒâ-14, $-15)
number($-15, ¦-16)
number($-15, Ã-17)
punct(âˆšdÃƒâ-14, ‚-18)
quantmod($-20, â-19)
amod(Ã-12, $-20)
number($-20, šeÃƒâ-21)
punct(ÂªpÃƒâ-25, ‰-22)
dep(ÂªpÃƒâ-25, ˆÃ-23)
punct(ÂªpÃƒâ-25, ‚-24)
dep($-20, ÂªpÃƒâ-25)
punct(ÂªpÃƒâ-25, ‰-26)
dep(Ãƒâ-30, ˆÃ-27)
punct(Ãƒâ-30, ‚-28)
nn(Ãƒâ-30, Ë-29)
dep(ÂªpÃƒâ-25, Ãƒâ-30)
punct(Ãƒâ-30, ‰-31)
dep(Â-34, ˆÃ-32)
punct(Â-34, ‚-33)
dep(Ãƒâ-30, Â-34)
punct(ÂªpÃƒâ-25, ¡-35)
cop(method-41, is-37)
det(method-41, a-38)
advmod(used-40, commonly-39)
amod(method-41, used-40)
root(ROOT-0, method-41)
prep_of(method-41, compression-43)
amod(images-46, photographic-45)
prep_for(compression-43, images-46)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Jehoshaphat)
        (CC or)
        (NNP Jehosaphat))
      (CC or)
      (NP
        (NP (NNP Josaphat)
          (CC or)
          (NNP Yehoshafat))
        (PRN (-LRB- -LRB-)
          (NP (NNP Hebrew) (NNP Name))
          (-RRB- -RRB-))))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN successor))
        (PP (IN of)
          (NP
            (NP (NNP Asa))
            (, ,)
            (NP
              (NP (NN king))
              (PP (IN of)
                (NP (NNP Judah))))))))
    (. .)))

nsubj(successor-14, Jehoshaphat-1)
conj_or(Jehoshaphat-1, Jehosaphat-3)
nsubj(successor-14, Jehosaphat-3)
conj_or(Jehoshaphat-1, Josaphat-5)
nsubj(successor-14, Josaphat-5)
conj_or(Jehoshaphat-1, Yehoshafat-7)
conj_or(Josaphat-5, Yehoshafat-7)
nn(Name-10, Hebrew-9)
appos(Josaphat-5, Name-10)
cop(successor-14, was-12)
det(successor-14, the-13)
root(ROOT-0, successor-14)
prep_of(successor-14, Asa-16)
appos(Asa-16, king-18)
prep_of(king-18, Judah-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Jutes) (, ,) (NNP Iuti) (, ,))
      (CC or)
      (NP (NNP Iutae)))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ Germanic) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S (, ,)
            (PP (VBG according)
              (PP (TO to)
                (NP (NNP Bede))))
            (, ,)
            (VP (VBD were)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (CD three) (JJS most) (JJ powerful) (JJ Germanic) (NNS peoples))
                    (PP (IN of)
                      (NP (DT the) (NN time)))))))))))
    (. .)))

det(Iuti-4, The-1)
nn(Iuti-4, Jutes-2)
nsubj(people-11, Iuti-4)
conj_or(Iuti-4, Iutae-7)
nsubj(people-11, Iutae-7)
cop(people-11, were-8)
det(people-11, a-9)
amod(people-11, Germanic-10)
root(ROOT-0, people-11)
nsubj(one-19, people-11)
prepc_according_to(one-19, to-15)
pobj(one-19, Bede-16)
cop(one-19, were-18)
rcmod(people-11, one-19)
det(peoples-26, the-21)
num(peoples-26, three-22)
amod(peoples-26, most-23)
amod(peoples-26, powerful-24)
amod(peoples-26, Germanic-25)
prep_of(one-19, peoples-26)
det(time-29, the-28)
prep_of(peoples-26, time-29)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN context))
        (PP (IN of)
          (NP (DT the) (JJ French) (NN Revolution)))))
    (, ,)
    (S
      (NP (DT a) (NNP Jacobin))
      (ADVP (RB originally))
      (VP (VBD meant)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Jacobin) (NNP Club))
              (PRN (-LRB- -LRB-)
                (NP (CD 1789-1794))
                (-RRB- -RRB-)))))))
    (, ,)
    (CC but)
    (S
      (PP (RB even)
        (PP (IN at)
          (NP (DT that) (NN time))))
      (, ,)
      (NP (DT the) (NN term) (NNS Jacobins))
      (VP (VBD had)
        (VP (VBN been)
          (VP
            (ADVP (RB popularly))
            (VBN applied)
            (PP (TO to)
              (NP
                (NP (DT all) (NNS promulgators))
                (PP (IN of)
                  (NP (JJ revolutionary) (NNS opinions)))))))))
    (. .)))

det(context-3, the-2)
prep_in(meant-12, context-3)
det(Revolution-7, the-5)
amod(Revolution-7, French-6)
prep_of(context-3, Revolution-7)
det(Jacobin-10, a-9)
nsubj(meant-12, Jacobin-10)
advmod(meant-12, originally-11)
root(ROOT-0, meant-12)
det(member-14, a-13)
dobj(meant-12, member-14)
det(Club-18, the-16)
nn(Club-18, Jacobin-17)
prep_of(member-14, Club-18)
appos(Club-18, 1789-1794-20)
advmod(applied-35, even-24)
advcl(applied-35, at-25)
det(time-27, that-26)
prep_at(applied-35, time-27)
det(Jacobins-31, the-29)
nn(Jacobins-31, term-30)
nsubjpass(applied-35, Jacobins-31)
aux(applied-35, had-32)
auxpass(applied-35, been-33)
advmod(applied-35, popularly-34)
conj_but(meant-12, applied-35)
det(promulgators-38, all-37)
prep_to(applied-35, promulgators-38)
amod(opinions-41, revolutionary-40)
prep_of(promulgators-38, opinions-41)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Joel))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN surname))
        (PRN (-LRB- -LRB-)
          (NP (JJ last) (NN name))
          (-RRB- -RRB-))
        (PP (IN of)
          (NP
            (NP (NNP Joel) (NN family))
            (, ,)
            (NP
              (NP (DT a) (JJ British) (NN family))
              (PP (IN of)
                (NP
                  (NP (NNS brothers))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD made)
                        (NP (DT a) (NN fortune))
                        (PP (IN in)
                          (NP (NN diamond)
                            (CC and)
                            (NN gold) (NN mining)))
                        (PP (IN in)
                          (NP (NNP South) (NNP Africa)))))))))))))
    (. .)))

nsubj(surname-4, Joel-1)
cop(surname-4, is-2)
det(surname-4, the-3)
root(ROOT-0, surname-4)
amod(name-7, last-6)
appos(surname-4, name-7)
nn(family-11, Joel-10)
prep_of(surname-4, family-11)
det(family-15, a-13)
amod(family-15, British-14)
appos(family-11, family-15)
prep_of(family-15, brothers-17)
nsubj(made-19, brothers-17)
rcmod(brothers-17, made-19)
det(fortune-21, a-20)
dobj(made-19, fortune-21)
nn(mining-26, diamond-23)
conj_and(diamond-23, gold-25)
nn(mining-26, gold-25)
prep_in(made-19, mining-26)
nn(Africa-29, South-28)
prep_in(made-19, Africa-29)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT A) (NNP Joystick))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN input) (NN device))
          (VP (VBG consisting)
            (PP (IN of)
              (NP
                (NP (DT a) (NN stick))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBZ pivots)
                        (PP (IN on)
                          (NP (DT a) (NN base))))
                      (CC and)
                      (VP (VBZ reports)
                        (NP (PRP$ its) (NN angle)
                          (CC or)
                          (NN direction))
                        (PP (TO to)
                          (NP (DT the) (NN device)))))))))))))
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBG controlling)))
    (. .)))

det(Joystick-2, A-1)
nsubj(device-6, Joystick-2)
cop(device-6, is-3)
det(device-6, an-4)
nn(device-6, input-5)
dep(controlling-27, device-6)
partmod(device-6, consisting-7)
det(stick-10, a-9)
prep_of(consisting-7, stick-10)
nsubj(pivots-12, stick-10)
nsubj(reports-17, stick-10)
rcmod(stick-10, pivots-12)
det(base-15, a-14)
prep_on(pivots-12, base-15)
rcmod(stick-10, reports-17)
conj_and(pivots-12, reports-17)
poss(angle-19, its-18)
dobj(reports-17, angle-19)
dobj(reports-17, direction-21)
conj_or(angle-19, direction-21)
det(device-24, the-23)
prep_to(reports-17, device-24)
nsubj(controlling-27, it-25)
aux(controlling-27, is-26)
root(ROOT-0, controlling-27)

(ROOT
  (S
    (NP (DT A) (NNP Joke))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ short) (NN story)
          (CC or)
          (JJ ironic) (NN depiction))
        (PP (IN of)
          (NP
            (NP (DT a) (NN situation))
            (VP (VBN communicated)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN intent))
                  (PP (IN of)
                    (S
                      (VP (VBG being)
                        (NP (NNS humorous))))))))))))
    (. .)))

det(Joke-2, A-1)
nsubj(story-6, Joke-2)
cop(story-6, is-3)
det(story-6, a-4)
amod(story-6, short-5)
root(ROOT-0, story-6)
amod(depiction-9, ironic-8)
conj_or(story-6, depiction-9)
det(situation-12, a-11)
prep_of(story-6, situation-12)
partmod(situation-12, communicated-13)
det(intent-16, the-15)
prep_with(communicated-13, intent-16)
cop(humorous-19, being-18)
prepc_of(intent-16, humorous-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Jedi))
    (VP (VBP are)
      (NP
        (NP (NNS members))
        (PP (IN of)
          (NP
            (NP (DT an)
              (ADJP (JJ ancient)
                (CC and)
                (JJ noble))
              (JJ monastic) (NN order))
            (PP (IN in)
              (NP (DT the) (JJ fictional) (NNP Star) (NNPS Wars) (NN universe)))))))
    (. .)))

det(Jedi-2, The-1)
nsubj(members-4, Jedi-2)
cop(members-4, are-3)
root(ROOT-0, members-4)
det(order-11, an-6)
amod(order-11, ancient-7)
conj_and(ancient-7, noble-9)
amod(order-11, noble-9)
amod(order-11, monastic-10)
prep_of(members-4, order-11)
det(universe-17, the-13)
amod(universe-17, fictional-14)
nn(universe-17, Star-15)
nn(universe-17, Wars-16)
prep_in(order-11, universe-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP JANET))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ private) (JJ British) (JJ government-funded) (NN computer) (NN network))
        (VP (VBN dedicated)
          (PP (TO to)
            (NP (NN education)
              (CC and)
              (NN research))))))
    (. .)))

nsubj(network-8, JANET-1)
cop(network-8, is-2)
det(network-8, a-3)
amod(network-8, private-4)
amod(network-8, British-5)
amod(network-8, government-funded-6)
nn(network-8, computer-7)
root(ROOT-0, network-8)
partmod(network-8, dedicated-9)
prep_to(dedicated-9, education-11)
prep_to(dedicated-9, research-13)
conj_and(education-11, research-13)

(ROOT
  (S
    (NP (NNP Java))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ German-style) (NN board) (NN game))
        (VP
          (VP (VBN designed)
            (PP (IN by)
              (NP
                (NP (NNP Wolfgang) (NNP Kramer))
                (CC and)
                (NP (NNP Michael) (NNP Kiesling)))))
          (CC and)
          (VP (VBN published)
            (PP (IN in)
              (NP (CD 2000)))
            (PP
              (PP (IN by)
                (NP
                  (NP (NNP Ravensburger))
                  (PP (IN in)
                    (NP (NNP Germany)))))
              (CC and)
              (PP (IN by)
                (NP
                  (NP (NNP Rio) (NNP Grande) (NNPS Games))
                  (PP (IN in)
                    (NP (NNP England))))))))))
    (. .)))

nsubj(game-6, Java-1)
cop(game-6, is-2)
det(game-6, a-3)
amod(game-6, German-style-4)
nn(game-6, board-5)
root(ROOT-0, game-6)
dep(game-6, designed-7)
nn(Kramer-10, Wolfgang-9)
prep_by(designed-7, Kramer-10)
nn(Kiesling-13, Michael-12)
prep_by(designed-7, Kiesling-13)
conj_and(Kramer-10, Kiesling-13)
dep(game-6, published-15)
conj_and(designed-7, published-15)
prep_in(published-15, 2000-17)
prep_by(published-15, Ravensburger-19)
prep_in(Ravensburger-19, Germany-21)
nn(Games-26, Rio-24)
nn(Games-26, Grande-25)
prep_by(published-15, Games-26)
conj_and(Ravensburger-19, Games-26)
prep_in(Games-26, England-28)

(ROOT
  (S
    (NP (NNP Jewel))
    (VP (MD may)
      (VP (VB mean)
        (NP (NN Gemstone)
          (CC or)
          (NN jewellery))))
    (. .)))

nsubj(mean-3, Jewel-1)
aux(mean-3, may-2)
root(ROOT-0, mean-3)
dobj(mean-3, Gemstone-4)
dobj(mean-3, jewellery-6)
conj_or(Gemstone-4, jewellery-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Koto))
      (PRN (-LRB- -LRB-)
        (NP
          (QP
            (NP (NNP ÃƒÂ) (NNP §) (NNP Ã) (NNP ‚) (NNP âˆ) (NNP †) (NNP Ã) (NN ‚) (NNP Â) (NNP ´))
            (CC or)
            (NP (NNP ÃƒÂ) (NNP §) (NNP Ã) (NNP ‚) (NNP Â) (NNP ®) (NNP Ã) (NNP ‚) (NN â) (NN ‚))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ traditional) (JJ Japanese) (JJ stringed) (JJ musical) (NN instrument))
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (JJ Chinese) (NN zither))
              (PRN (-LRB- -LRB-)
                (NP (NNP Guzheng))
                (-RRB- -RRB-)))))))
    (. .)))

det(Koto-2, The-1)
nsubj(instrument-32, Koto-2)
nn(´-13, ÃƒÂ-4)
nn(´-13, §-5)
nn(´-13, Ã-6)
nn(´-13, ‚-7)
nn(´-13, âˆ-8)
nn(´-13, †-9)
nn(´-13, Ã-10)
nn(´-13, ‚-11)
nn(´-13, Â-12)
dep(Koto-2, ´-13)
nn(‚-24, ÃƒÂ-15)
nn(‚-24, §-16)
nn(‚-24, Ã-17)
nn(‚-24, ‚-18)
nn(‚-24, Â-19)
nn(‚-24, ®-20)
nn(‚-24, Ã-21)
nn(‚-24, ‚-22)
nn(‚-24, â-23)
dep(Koto-2, ‚-24)
conj_or(´-13, ‚-24)
cop(instrument-32, is-26)
det(instrument-32, a-27)
amod(instrument-32, traditional-28)
amod(instrument-32, Japanese-29)
amod(instrument-32, stringed-30)
amod(instrument-32, musical-31)
root(ROOT-0, instrument-32)
partmod(instrument-32, derived-33)
amod(zither-36, Chinese-35)
prep_from(derived-33, zither-36)
appos(zither-36, Guzheng-38)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Kludge))
      (PRN (-LRB- -LRB-)
        (CC or)
        (, ,)
        (ADVP (RB alternatively))
        (, ,)
        (NP (NN kluge))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ clumsy)
          (CC or)
          (JJ inelegant) (NN solution))
        (PP (TO to)
          (NP (DT a) (NN problem)
            (CC or)
            (NN difficulty)))))
    (. .)))

det(Kludge-2, A-1)
nsubj(solution-15, Kludge-2)
dep(kluge-8, or-4)
dep(kluge-8, alternatively-6)
appos(Kludge-2, kluge-8)
cop(solution-15, is-10)
det(solution-15, a-11)
amod(solution-15, clumsy-12)
conj_or(clumsy-12, inelegant-14)
amod(solution-15, inelegant-14)
root(ROOT-0, solution-15)
det(problem-18, a-17)
prep_to(solution-15, problem-18)
prep_to(solution-15, difficulty-20)
conj_or(problem-18, difficulty-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Kelvin))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP K)))
        (-RRB- -RRB-)))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN unit) (NN increment))
          (PP (IN of)
            (NP (NN temperature)))))
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (CD seven) (NNP SI) (NN base) (NNS units))))))
    (. .)))

det(Kelvin-2, The-1)
nsubj(increment-11, Kelvin-2)
dep(Kelvin-2, symbol-4)
dep(symbol-4, K-6)
cop(increment-11, is-8)
det(increment-11, a-9)
nn(increment-11, unit-10)
root(ROOT-0, increment-11)
prep_of(increment-11, temperature-13)
cop(one-16, is-15)
conj_and(increment-11, one-16)
det(units-22, the-18)
num(units-22, seven-19)
nn(units-22, SI-20)
nn(units-22, base-21)
prep_of(one-16, units-22)

(ROOT
  (S
    (NP (NNP Knitting))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN method))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (NN thread)
              (CC or)
              (NN yarn))
            (VP (MD may)
              (VP (VB be)
                (VP (VBN turned)
                  (PP (IN into)
                    (NP (NN cloth))))))))))
    (. .)))

nsubj(method-4, Knitting-1)
cop(method-4, is-2)
det(method-4, a-3)
root(ROOT-0, method-4)
agent(turned-12, method-4)
nsubjpass(turned-12, thread-7)
conj_or(thread-7, yarn-9)
nsubjpass(turned-12, yarn-9)
aux(turned-12, may-10)
auxpass(turned-12, be-11)
rcmod(method-4, turned-12)
prep_into(turned-12, cloth-14)

(ROOT
  (S
    (NP (DT The) (NN name) (NN KDE))
    (VP (VBD was)
      (VP (VBN intended)
        (PP (IN as)
          (NP (DT a) (NN word) (NN play)))
        (PP (IN on)
          (NP (DT the) (JJ existing) (NNP Common) (NNP Desktop) (NNP Environment)))
        (, ,)
        (ADJP (JJ available)
          (PP (IN for)
            (NP (NNP Unix) (NNS systems))))))
    (. .)))

det(KDE-3, The-1)
nn(KDE-3, name-2)
nsubjpass(intended-5, KDE-3)
auxpass(intended-5, was-4)
root(ROOT-0, intended-5)
det(play-9, a-7)
nn(play-9, word-8)
prep_as(intended-5, play-9)
det(Environment-15, the-11)
amod(Environment-15, existing-12)
nn(Environment-15, Common-13)
nn(Environment-15, Desktop-14)
prep_on(intended-5, Environment-15)
acomp(intended-5, available-17)
nn(systems-20, Unix-19)
prep_for(available-17, systems-20)

(ROOT
  (S
    (NP (DT The) (NNPS Khazars))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ semi-nomadic) (JJ Turkic) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD dominated)
              (NP
                (NP (DT the) (JJ Pontic) (NN steppe))
                (CC and)
                (NP (DT the) (NNP North) (NNP Caucasus)))
              (PP (IN from)
                (NP (DT the) (NN 7th)))
              (PP (TO to)
                (NP (DT the) (JJ 10th) (NN century) (NN CE))))))))
    (. .)))

det(Khazars-2, The-1)
nsubj(people-7, Khazars-2)
cop(people-7, were-3)
det(people-7, a-4)
amod(people-7, semi-nomadic-5)
amod(people-7, Turkic-6)
root(ROOT-0, people-7)
nsubj(dominated-9, people-7)
rcmod(people-7, dominated-9)
det(steppe-12, the-10)
amod(steppe-12, Pontic-11)
dobj(dominated-9, steppe-12)
det(Caucasus-16, the-14)
nn(Caucasus-16, North-15)
dobj(dominated-9, Caucasus-16)
conj_and(steppe-12, Caucasus-16)
det(7th-19, the-18)
prep_from(dominated-9, 7th-19)
det(CE-24, the-21)
amod(CE-24, 10th-22)
nn(CE-24, century-23)
prep_to(dominated-9, CE-24)

(ROOT
  (S
    (NP (DT The) (NN name) (NNP Kiribati))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ local) (NN pronunciation))
        (PP (IN of) ('' '')
          (NP (NNP Gilberts) ('' '')))
        (, ,)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (DT the) (JJ main) (NN island) (NN chain))
              (, ,)
              (NP (DT the) (NNP Gilbert) (NNPS Islands)))))))
    (. .)))

det(Kiribati-3, The-1)
nn(Kiribati-3, name-2)
nsubj(pronunciation-7, Kiribati-3)
cop(pronunciation-7, is-4)
det(pronunciation-7, the-5)
amod(pronunciation-7, local-6)
root(ROOT-0, pronunciation-7)
prep_of(pronunciation-7, Gilberts-10)
partmod(pronunciation-7, derived-13)
det(chain-18, the-15)
amod(chain-18, main-16)
nn(chain-18, island-17)
prep_from(derived-13, chain-18)
det(Islands-22, the-20)
nn(Islands-22, Gilbert-21)
appos(chain-18, Islands-22)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (DT The) (NN Kattegat))
          (PRN (-LRB- -LRB-)
            (NP (NNP Danish))
            (-RRB- -RRB-))
          (, ,))
        (CC or)
        (NP
          (NP (NNP Kattegatt))
          (PRN (-LRB- -LRB-)
            (NP (NNP Swedish))
            (-RRB- -RRB-))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN sea) (NN area))
          (VP (VBN bounded)
            (PP (IN by)
              (NP
                (NP (NNP Jutland))
                (PRN (-LRB- -LRB-)
                  (NP (NNP Denmark))
                  (-RRB- -RRB-))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Scania) (, ,) (NNP Halland)
        (CC and)
        (NNP BohuslÃƒâˆžÃ))
      (VP (VBZ ‚)
        (NP
          (NP (NNP â) (NNP ‚) (NNP ¬) (NNP n))
          (PRN (-LRB- -LRB-)
            (NP (NNP Sweden))
            (-RRB- -RRB-)))))
    (. .)))

det(Kattegat-2, The-1)
nsubj(area-15, Kattegat-2)
appos(Kattegat-2, Danish-4)
conj_or(Kattegat-2, Kattegatt-8)
nsubj(area-15, Kattegatt-8)
appos(Kattegatt-8, Swedish-10)
cop(area-15, is-12)
det(area-15, a-13)
nn(area-15, sea-14)
root(ROOT-0, area-15)
partmod(area-15, bounded-16)
agent(bounded-16, Jutland-18)
appos(Jutland-18, Denmark-20)
nsubj(‚-29, Scania-24)
conj_and(Scania-24, Halland-26)
nsubj(‚-29, Halland-26)
conj_and(Scania-24, BohuslÃƒâˆžÃ-28)
nsubj(‚-29, BohuslÃƒâˆžÃ-28)
conj_and(area-15, ‚-29)
nn(n-33, â-30)
nn(n-33, ‚-31)
nn(n-33, ¬-32)
dobj(‚-29, n-33)
appos(n-33, Sweden-35)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (NNS arts))
        (VP (VBN labeled))))
    (. !)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(arts-4, many-3)
nsubj(are-2, arts-4)
partmod(arts-4, labeled-5)

(ROOT
  (S
    (VP (VBG Kickboxing)
      (PP (VBG including)
        (NP
          (NP (JJ Japanese) (, ,) (JJ American) (, ,) (JJ Indian) (, ,) (JJ Burmese) (NN kickboxing))
          (, ,)
          (CONJP (RB as) (RB well) (IN as))
          (NP (JJ French) (NN savate)))))
    (. .)))

root(ROOT-0, Kickboxing-1)
amod(kickboxing-10, Japanese-3)
amod(kickboxing-10, American-5)
amod(kickboxing-10, Indian-7)
amod(kickboxing-10, Burmese-9)
prep_including(Kickboxing-1, kickboxing-10)
amod(savate-16, French-15)
prep_including(Kickboxing-1, savate-16)
conj_and(kickboxing-10, savate-16)

(ROOT
  (S
    (NP (DT The) (NNP Kalevala))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN book)
          (CC and)
          (NN epic) (NN poem))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (DT the) (NNP Finn) (NNP Elias) (NNP LÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ¶) (NN nnrot))
            (VP (VBN compiled)
              (PP (IN from)
                (NP (JJ Finnish)
                  (CC and)
                  (JJ Karelian) (NN folklore)))
              (PP (IN in)
                (NP (DT the) (JJ 19th) (NN century))))))))
    (. .)))

det(Kalevala-2, The-1)
nsubj(poem-8, Kalevala-2)
cop(poem-8, is-3)
det(poem-8, a-4)
nn(poem-8, book-5)
conj_and(book-5, epic-7)
nn(poem-8, epic-7)
root(ROOT-0, poem-8)
dobj(compiled-18, poem-8)
rel(compiled-18, which-9)
det(nnrot-17, the-10)
nn(nnrot-17, Finn-11)
nn(nnrot-17, Elias-12)
nn(nnrot-17, LÃƒâˆžÃ-13)
nn(nnrot-17, ‚-14)
nn(nnrot-17, Â-15)
nn(nnrot-17, ¶-16)
nsubj(compiled-18, nnrot-17)
rcmod(poem-8, compiled-18)
amod(folklore-23, Finnish-20)
conj_and(Finnish-20, Karelian-22)
amod(folklore-23, Karelian-22)
prep_from(compiled-18, folklore-23)
det(century-27, the-25)
amod(century-27, 19th-26)
prep_in(compiled-18, century-27)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Kenning))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Old) (NNP Norse) (NNP kenning))
          (, ,)
          (NP (NNP Modern) (NNP Icelandic) (NNP pronunciation)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN circumlocution))
        (VP (VBN used)
          (PP (RB instead) (IN of)
            (NP
              (NP (DT an) (JJ ordinary) (NN noun))
              (PP (IN in)
                (NP
                  (NP (NNP Old) (NNP Norse))
                  (CC and)
                  (NP (RB later) (JJ Icelandic) (NN poetry)))))))))
    (. .)))

det(Kenning-2, A-1)
nsubj(circumlocution-14, Kenning-2)
nn(kenning-6, Old-4)
nn(kenning-6, Norse-5)
dep(Kenning-2, kenning-6)
nn(pronunciation-10, Modern-8)
nn(pronunciation-10, Icelandic-9)
appos(kenning-6, pronunciation-10)
cop(circumlocution-14, is-12)
det(circumlocution-14, a-13)
root(ROOT-0, circumlocution-14)
partmod(circumlocution-14, used-15)
det(noun-20, an-18)
amod(noun-20, ordinary-19)
prep_instead_of(used-15, noun-20)
nn(Norse-23, Old-22)
prep_in(noun-20, Norse-23)
advmod(poetry-27, later-25)
amod(poetry-27, Icelandic-26)
prep_in(noun-20, poetry-27)
conj_and(Norse-23, poetry-27)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Kilobyte))
      (PRN (-LRB- -LRB-)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (DT the) (NNP SI) (NN prefix) (NN kilo))
              (: -)))
          (, ,)
          (S
            (VP (VBG meaning)
              (NP (CD 1,000)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN information)
            (CC or)
            (NN computer) (NN storage)))
        (ADJP (JJ equal)
          (PP (TO to)
            (NP
              (NP (DT either) (CD 1,024) (NNS bytes))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (CD 2) (NNS <sup>))
                  (NP (CD 10) (NNS </sup>)))
                (-RRB- -RRB-))
              (CC or)
              (NP (CD 1,000) (NNS bytes))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (CD 10) (NNS <sup>))
                  (NP (CD 3) (NNS </sup>)))
                (-RRB- -RRB-))))))
      (, ,)
      (PP (VBG depending)
        (PP (IN on)
          (NP (NN context)))))
    (. .)))

det(Kilobyte-2, A-1)
nsubj(unit-17, Kilobyte-2)
dep(Kilobyte-2, derived-4)
det(kilo-9, the-6)
nn(kilo-9, SI-7)
nn(kilo-9, prefix-8)
prep_from(derived-4, kilo-9)
xcomp(derived-4, meaning-12)
dobj(meaning-12, 1,000-13)
cop(unit-17, is-15)
det(unit-17, a-16)
root(ROOT-0, unit-17)
nn(storage-22, information-19)
conj_or(information-19, computer-21)
nn(storage-22, computer-21)
prep_of(unit-17, storage-22)
amod(unit-17, equal-23)
det(bytes-27, either-25)
num(bytes-27, 1,024-26)
prep_to(equal-23, bytes-27)
num(<sup>-30, 2-29)
dep(bytes-27, <sup>-30)
num(</sup>-32, 10-31)
dep(<sup>-30, </sup>-32)
num(bytes-36, 1,000-35)
prep_to(equal-23, bytes-36)
conj_or(bytes-27, bytes-36)
num(<sup>-39, 10-38)
dep(bytes-27, <sup>-39)
num(</sup>-41, 3-40)
dep(<sup>-39, </sup>-41)
prepc_depending_on(unit-17, on-45)
pobj(unit-17, context-46)

(ROOT
  (S
    (NP
      (NP (NN Kraftwerk))
      (, ,)
      (VP (VBN released)
        (PP (IN in)
          (NP
            (NP
              (NP (CD 1970))
              (, ,)
              (CC and)
              (NP (NNP Kraftwerk) (CD 2))
              (, ,))
            (VP (VBN released)
              (PP (IN in)
                (NP (CD 1972)))))))
      (, ,))
    (VP (VBD were)
      (ADVP (RB mostly))
      (NP
        (NP (JJ exploratory) (NN jam) (NN music))
        (, ,)
        (VP (VBN played)
          (PP (IN on)
            (NP
              (NP (DT a) (NN variety))
              (PP (IN of)
                (NP
                  (NP (JJ traditional) (NNS instruments))
                  (PP (VBG including)
                    (NP
                      (NP (NN guitar))
                      (, ,)
                      (NP (NN bass))
                      (, ,)
                      (NP (NNS drums))
                      (, ,)
                      (NP (JJ electric) (NN organ))
                      (, ,)
                      (NP (NN flute))
                      (CC and)
                      (NP (NN violin)))))))))))
    (. .)))

nsubj(music-19, Kraftwerk-1)
partmod(Kraftwerk-1, released-3)
prep_in(released-3, 1970-5)
prep_in(released-3, Kraftwerk-8)
conj_and(1970-5, Kraftwerk-8)
num(Kraftwerk-8, 2-9)
partmod(1970-5, released-11)
prep_in(released-11, 1972-13)
cop(music-19, were-15)
advmod(music-19, mostly-16)
amod(music-19, exploratory-17)
nn(music-19, jam-18)
root(ROOT-0, music-19)
partmod(music-19, played-21)
det(variety-24, a-23)
prep_on(played-21, variety-24)
amod(instruments-27, traditional-26)
prep_of(variety-24, instruments-27)
prep_including(instruments-27, guitar-29)
prep_including(instruments-27, bass-31)
conj_and(guitar-29, bass-31)
prep_including(instruments-27, drums-33)
conj_and(guitar-29, drums-33)
amod(organ-36, electric-35)
prep_including(instruments-27, organ-36)
conj_and(guitar-29, organ-36)
prep_including(instruments-27, flute-38)
conj_and(guitar-29, flute-38)
prep_including(instruments-27, violin-40)
conj_and(guitar-29, violin-40)

(ROOT
  (S
    (NP (NNP Ketene))
    (ADVP (RB also))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (NN ethenone))
          (, ,)
          (NP
            (NP (DT the) (JJ specific) (NN compound))
            (PP (IN of)
              (NP
                (NP (DT this) (NN class))
                (SBAR
                  (WHPP (IN in)
                    (WHNP (WDT which)))
                  (S
                    (NP (DT both) (NNP Rs))
                    (VP (VBP are)
                      (NP (NN hydrogen)))))))))))
    (. .)))

nsubj(refers-3, Ketene-1)
advmod(refers-3, also-2)
root(ROOT-0, refers-3)
prep_to(refers-3, ethenone-5)
det(compound-9, the-7)
amod(compound-9, specific-8)
appos(ethenone-5, compound-9)
det(class-12, this-11)
prep_of(compound-9, class-12)
rel(hydrogen-18, which-14)
det(Rs-16, both-15)
nsubj(hydrogen-18, Rs-16)
cop(hydrogen-18, are-17)
rcmod(class-12, hydrogen-18)

(ROOT
  (S
    (NP (DT A) (NNP Kistvaen))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN stone) (NN coffin))
        (, ,)
        (ADJP (RB usually) (JJ pre-Christian))
        (, ,)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (DT the) (JJ Celtic) (NN cist))
              (PRN (-LRB- -LRB-)
                (NP (NN chest))
                (-RRB- -RRB-))
              (CC and)
              (NP (NN maen))
              (PRN (-LRB- -LRB-)
                (NP (NN stone))
                (-RRB- -RRB-)))))))
    (. .)))

det(Kistvaen-2, A-1)
nsubj(coffin-6, Kistvaen-2)
cop(coffin-6, is-3)
det(coffin-6, a-4)
nn(coffin-6, stone-5)
root(ROOT-0, coffin-6)
advmod(pre-Christian-9, usually-8)
amod(coffin-6, pre-Christian-9)
partmod(coffin-6, derived-11)
det(cist-15, the-13)
amod(cist-15, Celtic-14)
prep_from(derived-11, cist-15)
appos(cist-15, chest-17)
prep_from(derived-11, maen-20)
conj_and(cist-15, maen-20)
appos(cist-15, stone-22)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Polish) (, ,) (JJ KrakÃƒâˆžÃ) (NNP ‚) (NN â)))
    (PRN
      (NP ($ $) (CD œw))
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ archaic) (NN possessive) (NN form))
          (PP (IN of)
            (NP
              (NP (NNP Krak))
              (CC and)
              (NP (RB essentially) (NNS means))
              ('' ''))))))
    (NP (NNP Krak))
    (VP (VBZ 's)
      (PRN (-LRB- -LRB-)
        (NP (NN town))
        (-RRB- -RRB-)))
    ('' '') (. .)))

amod(â-6, Polish-2)
amod(â-6, KrakÃƒâˆžÃ-4)
nn(â-6, ‚-5)
prep_in('s-21, â-6)
nsubj(form-13, $-7)
num($-7, œw-8)
cop(form-13, is-9)
det(form-13, an-10)
amod(form-13, archaic-11)
nn(form-13, possessive-12)
parataxis('s-21, form-13)
prep_of(form-13, Krak-15)
advmod(means-18, essentially-17)
prep_of(form-13, means-18)
conj_and(Krak-15, means-18)
nsubj('s-21, Krak-20)
root(ROOT-0, 's-21)
dep('s-21, town-23)

(ROOT
  (S
    (NP (DT The) (NNP Kora))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ 21-string) (NN harp-lute))
        (VP (VBN used)
          (ADVP (RB extensively))
          (PP (IN by)
            (NP
              (NP (NNS peoples))
              (PP (IN in)
                (NP (NNP West) (NNP Africa))))))))
    (. .)))

det(Kora-2, The-1)
nsubj(harp-lute-6, Kora-2)
cop(harp-lute-6, is-3)
det(harp-lute-6, a-4)
amod(harp-lute-6, 21-string-5)
root(ROOT-0, harp-lute-6)
partmod(harp-lute-6, used-7)
advmod(used-7, extensively-8)
agent(used-7, peoples-10)
nn(Africa-13, West-12)
prep_in(peoples-10, Africa-13)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ martial) (NNS arts))
        (, ,)
        (NP (NN combat) (NNS sports))
        (CC or)
        (NP (NN violence))))
    (, ,)
    (NP (DT a) (NNP Kick))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN strike))
        (VP (VBG using)
          (NP
            (NP (DT the) (NN foot) (, ,) (NN leg) (, ,)
              (CC or)
              (NN knee))
            (PRN (-LRB- -LRB-)
              (VP
                (ADVP (RB also))
                (VBN known)
                (PP (IN as)
                  (NP (DT a) (NN knee) (NN strike))))
              (-RRB- -RRB-))))))
    (. .)))

amod(arts-3, martial-2)
prep_in(strike-14, arts-3)
nn(sports-6, combat-5)
conj_or(arts-3, sports-6)
prep_in(strike-14, sports-6)
conj_or(arts-3, violence-8)
prep_in(strike-14, violence-8)
det(Kick-11, a-10)
nsubj(strike-14, Kick-11)
cop(strike-14, is-12)
det(strike-14, a-13)
root(ROOT-0, strike-14)
partmod(strike-14, using-15)
det(foot-17, the-16)
dobj(using-15, foot-17)
dobj(using-15, leg-19)
conj_or(foot-17, leg-19)
dobj(using-15, knee-22)
conj_or(foot-17, knee-22)
advmod(known-25, also-24)
dep(foot-17, known-25)
det(strike-29, a-27)
nn(strike-29, knee-28)
prep_as(known-25, strike-29)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Katakana) (NNS means) ('' ''))
    (VP (VBP fragmentary)
      (ADJP (JJ kana) ('' ''))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (DT the) (NN katakana) (NNS scripts))
          (VP (VBP are)
            (VP (VBN derived)
              (PP (IN from)
                (NP
                  (NP (NNS components))
                  (PP (IN of)
                    (NP
                      (ADJP (RBR more) (JJ complex))
                      (NNS kanji))))))))))
    (. .)))

det(means-4, The-1)
nn(means-4, word-2)
nn(means-4, Katakana-3)
nsubj(fragmentary-6, means-4)
root(ROOT-0, fragmentary-6)
acomp(fragmentary-6, kana-7)
mark(derived-15, as-10)
det(scripts-13, the-11)
nn(scripts-13, katakana-12)
nsubjpass(derived-15, scripts-13)
auxpass(derived-15, are-14)
advcl(fragmentary-6, derived-15)
prep_from(derived-15, components-17)
advmod(complex-20, more-19)
amod(kanji-21, complex-20)
prep_of(components-17, kanji-21)

(ROOT
  (S
    (NP (DT The) (NNP KitÃƒâˆžÃ) (NNP ‚) (NNP Â))
    (PRN (: ¡)
      (S
        (NP (NNS b-i-Aqdas))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ central) (NN book))
            (PP (IN of)
              (NP (DT the) (JJ BahÃƒâˆžÃ) (`` ‚) (NNP Â) (`` ¡) (NNP ') (FW ÃƒâˆžÃ) (FW ‚) (FW â) (NNP $) (`` ``) (NNP Faith)))
            (VP (VBN written)
              (PP (IN by)
                (NP (NNP BahÃƒâˆžÃ) (NNP ‚) (NNP Â)))))))
      (: ¡))
    (`` `)
    (NP (PRP u))
    (VP (MD 'll)
      (VP (VB ÃƒâˆžÃ)
        (NP
          (NP (`` ‚) (NNP Â) ('' ¡) (NN h))
          (, ,)
          (NP
            (NP (DT the) (NN founder))
            (PP (IN of)
              (NP (DT the) (NN religion)))))))
    (. .)))

det(Â-4, The-1)
nn(Â-4, KitÃƒâˆžÃ-2)
nn(Â-4, ‚-3)
nsubj(ÃƒâˆžÃ-33, Â-4)
punct(book-10, ¡-5)
nsubj(book-10, b-i-Aqdas-6)
cop(book-10, is-7)
det(book-10, a-8)
amod(book-10, central-9)
parataxis(ÃƒâˆžÃ-33, book-10)
det(Faith-23, the-12)
amod(Faith-23, BahÃƒâˆžÃ-13)
punct(Faith-23, ‚-14)
nn(Faith-23, Â-15)
punct(Faith-23, ¡-16)
nn(Faith-23, ÃƒâˆžÃ-18)
nn(Faith-23, ‚-19)
nn(Faith-23, â-20)
nn(Faith-23, $-21)
prep_of(book-10, Faith-23)
partmod(book-10, written-24)
nn(Â-28, BahÃƒâˆžÃ-26)
nn(Â-28, ‚-27)
agent(written-24, Â-28)
punct(book-10, ¡-29)
nsubj(ÃƒâˆžÃ-33, u-31)
aux(ÃƒâˆžÃ-33, 'll-32)
root(ROOT-0, ÃƒâˆžÃ-33)
punct(h-37, ‚-34)
nn(h-37, Â-35)
punct(h-37, ¡-36)
dobj(ÃƒâˆžÃ-33, h-37)
det(founder-40, the-39)
appos(h-37, founder-40)
det(religion-43, the-42)
prep_of(founder-40, religion-43)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Kazaa))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ peer-to-peer) (NN file) (NN sharing) (NN application))
          (VP (VBG using)
            (NP (DT the) (NNP FastTrack) (NN protocol)))))
      (CC and)
      (VP (VBZ is)
        (VP (VBN owned)
          (PP (IN by)
            (NP (NNP Sharman) (NNPS Networks))))))
    (. .)))

nsubj(application-7, Kazaa-1)
nsubjpass(owned-14, Kazaa-1)
cop(application-7, is-2)
det(application-7, a-3)
amod(application-7, peer-to-peer-4)
nn(application-7, file-5)
nn(application-7, sharing-6)
root(ROOT-0, application-7)
partmod(application-7, using-8)
det(protocol-11, the-9)
nn(protocol-11, FastTrack-10)
dobj(using-8, protocol-11)
auxpass(owned-14, is-13)
conj_and(application-7, owned-14)
nn(Networks-17, Sharman-16)
agent(owned-14, Networks-17)

(ROOT
  (S
    (NP (DT The) (NN KA-BAR))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ 12-inch) (NN fighting)
          (CC and)
          (NN utility) (NN Bowie) (NN knife))
        (VP
          (ADVP (RB first))
          (VBN used)
          (PP (IN by)
            (NP (DT the) (NNP United) (NNPS States) (NNP Marine) (NNP Corps)))
          (PP (IN in)
            (NP (NNP World) (NNP War) (NNP II))))))
    (. .)))

det(KA-BAR-2, The-1)
nsubj(fighting-6, KA-BAR-2)
cop(fighting-6, is-3)
det(fighting-6, a-4)
amod(fighting-6, 12-inch-5)
root(ROOT-0, fighting-6)
nn(knife-10, utility-8)
nn(knife-10, Bowie-9)
conj_and(fighting-6, knife-10)
advmod(used-12, first-11)
partmod(fighting-6, used-12)
det(Corps-18, the-14)
nn(Corps-18, United-15)
nn(Corps-18, States-16)
nn(Corps-18, Marine-17)
agent(used-12, Corps-18)
nn(II-22, World-20)
nn(II-22, War-21)
prep_in(used-12, II-22)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (VP (VBD guineensis) (-RRB- -RRB-)
      (NP
        (NP
          (QP (TO to) (CD tropical)))
        (NP (NN west)))
      (ADVP (VBD Africa)))
    (. .)))

root(ROOT-0, guineensis-1)
dep(tropical-4, to-3)
dobj(guineensis-1, tropical-4)
iobj(guineensis-1, tropical-4)
dobj(guineensis-1, west-5)
dep(tropical-4, west-5)
advmod(guineensis-1, Africa-6)

(ROOT
  (S
    (NP (DT The) (NN KAB-500KR))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ electro-optical) (JJ TV-guided) (NN fire)
          (CC and)
          (NN forget) (NN bomb))
        (VP (VBN developed)
          (PP (IN by)
            (NP
              (NP (DT the) (NNP Soviet) (NNP Air) (NNP Force))
              (PP (IN in)
                (NP (DT the) (NNS 1980s))))))))
    (. .)))

det(KAB-500KR-2, The-1)
nsubj(fire-7, KAB-500KR-2)
cop(fire-7, is-3)
det(fire-7, an-4)
amod(fire-7, electro-optical-5)
amod(fire-7, TV-guided-6)
root(ROOT-0, fire-7)
nn(bomb-10, forget-9)
conj_and(fire-7, bomb-10)
partmod(fire-7, developed-11)
det(Force-16, the-13)
nn(Force-16, Soviet-14)
nn(Force-16, Air-15)
agent(developed-11, Force-16)
det(1980s-19, the-18)
prep_in(Force-16, 1980s-19)

(ROOT
  (S
    (NP (DT The) (NN KAB-500L))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ laser-guided) (NN bomb))
        (VP (VBN developed)
          (PP (IN by)
            (NP (DT the) (NNP Soviet) (NNP Air) (NNP Force))))))
    (. .)))

det(KAB-500L-2, The-1)
nsubj(bomb-6, KAB-500L-2)
cop(bomb-6, is-3)
det(bomb-6, a-4)
amod(bomb-6, laser-guided-5)
root(ROOT-0, bomb-6)
partmod(bomb-6, developed-7)
det(Force-12, the-9)
nn(Force-12, Soviet-10)
nn(Force-12, Air-11)
agent(developed-7, Force-12)

(ROOT
  (S
    (NP (DT A) (NNP Katharometer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ thermal) (NN conductivity) (NN device))
        (PP (IN for)
          (S
            (VP (VBG determining)
              (NP
                (NP (CD one) (NN gas))
                (PP (IN in)
                  (NP (DT a) (JJ binary)
                    (CC or)
                    (JJ pseudo-binary) (NN mixture)))))))))
    (. .)))

det(Katharometer-2, A-1)
nsubj(device-7, Katharometer-2)
cop(device-7, is-3)
det(device-7, a-4)
amod(device-7, thermal-5)
nn(device-7, conductivity-6)
root(ROOT-0, device-7)
prepc_for(device-7, determining-9)
num(gas-11, one-10)
dobj(determining-9, gas-11)
det(mixture-17, a-13)
amod(mixture-17, binary-14)
conj_or(binary-14, pseudo-binary-16)
amod(mixture-17, pseudo-binary-16)
prep_in(gas-11, mixture-17)

(ROOT
  (S
    (NP (DT A) (NNP Knot))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN method))
        (PP (IN for)
          (S
            (VP
              (VP (VBG fastening))
              (CC or)
              (VP (VBG securing)
                (NP
                  (NP (JJ linear) (NN material))
                  (PP (JJ such) (IN as)
                    (NP (NN rope))))
                (PP (IN by)
                  (S
                    (VP (VBG tying)
                      (CC or)
                      (VBG interweaving))))))))))
    (. .)))

det(Knot-2, A-1)
nsubj(method-5, Knot-2)
cop(method-5, is-3)
det(method-5, a-4)
root(ROOT-0, method-5)
prepc_for(method-5, fastening-7)
prepc_for(method-5, securing-9)
conj_or(fastening-7, securing-9)
amod(material-11, linear-10)
dobj(securing-9, material-11)
prep_such_as(material-11, rope-14)
prepc_by(securing-9, tying-16)
prepc_by(securing-9, interweaving-18)
conj_or(tying-16, interweaving-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Orca)
        (CC or)
        (NNP Killer) (NNP Whale))
      (PRN (-LRB- -LRB-)
        (NP (NNP Orcinus) (NNP orca))
        (-RRB- -RRB-))
      (, ,)
      (PP (CC less)
        (NP (NNP commonly) (, ,) (NNP Blackfish)
          (CC or)
          (NNP Seawolf)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS largest) (NN species))
        (PP (IN of)
          (NP (DT the) (JJ oceanic) (NN dolphin) (NN family)))))
    (. .)))

det(Whale-5, The-1)
nn(Whale-5, Orca-2)
conj_or(Orca-2, Killer-4)
nn(Whale-5, Killer-4)
nsubj(species-21, Whale-5)
nn(orca-8, Orcinus-7)
appos(Whale-5, orca-8)
prep(Whale-5, less-11)
dep(less-11, commonly-12)
dep(less-11, Blackfish-14)
conj_or(commonly-12, Blackfish-14)
dep(less-11, Seawolf-16)
conj_or(commonly-12, Seawolf-16)
cop(species-21, is-18)
det(species-21, the-19)
amod(species-21, largest-20)
root(ROOT-0, species-21)
det(family-26, the-23)
amod(family-26, oceanic-24)
nn(family-26, dolphin-25)
prep_of(species-21, family-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Kaleidoscope))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tube))
        (PP (IN of)
          (NP
            (NP (NNS mirrors))
            (VP (VBG containing)
              (NP (JJ loose) (VBN colored) (NNS beads)))
            (, ,)
            (NP (NNS pebbles))
            (CC or)
            (NP (JJ other) (JJ small) (VBN colored) (NNS objects))))))
    (. .)))

det(Kaleidoscope-2, A-1)
nsubj(tube-5, Kaleidoscope-2)
cop(tube-5, is-3)
det(tube-5, a-4)
root(ROOT-0, tube-5)
prep_of(tube-5, mirrors-7)
partmod(mirrors-7, containing-8)
amod(beads-11, loose-9)
amod(beads-11, colored-10)
dobj(containing-8, beads-11)
prep_of(tube-5, pebbles-13)
conj_or(mirrors-7, pebbles-13)
amod(objects-18, other-15)
amod(objects-18, small-16)
amod(objects-18, colored-17)
prep_of(tube-5, objects-18)
conj_or(mirrors-7, objects-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN abbreviation) (NN KB)
        (CC or)
        (NN kb))
      (VP (MD can)
        (VP (VB refer)
          (PP (TO to)))))
    (: :)
    (S
      (NP
        (NP (NNP Kilobit) (-LRB- -LRB-) (NN kb) (-RRB- -RRB-))
        (, ,)
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP (NN information)))))
      (VP (VBD used) (, ,)
        (PP (IN for)
          (NP (NN example)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB quantify)
              (NP
                (NP (NN computer) (NN memory))
                (CC or)
                (NP (NN storage) (NN capacity))))))))
    (. .)))

det(KB-3, The-1)
nn(KB-3, abbreviation-2)
nsubj(refer-7, KB-3)
conj_or(KB-3, kb-5)
nsubj(refer-7, kb-5)
aux(refer-7, can-6)
root(ROOT-0, refer-7)
prep(refer-7, to-8)
nn(kb-12, Kilobit-10)
nsubj(used-19, kb-12)
xsubj(quantify-25, kb-12)
det(unit-16, a-15)
appos(kb-12, unit-16)
prep_of(unit-16, information-18)
parataxis(refer-7, used-19)
prep_for(used-19, example-22)
aux(quantify-25, to-24)
xcomp(used-19, quantify-25)
nn(memory-27, computer-26)
dobj(quantify-25, memory-27)
nn(capacity-30, storage-29)
dobj(quantify-25, capacity-30)
conj_or(memory-27, capacity-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Kangaroo))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ marsupial)
            (PP (IN from)
              (NP (DT the) (NN family))))
          (NN Macropodidae))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNS macropods))
            (, ,)
            (NP (NN meaning) (JJ large) (NN foot)))
          (-RRB- -RRB-))))
    (. .)))

det(Kangaroo-2, A-1)
nsubj(Macropodidae-9, Kangaroo-2)
cop(Macropodidae-9, is-3)
det(Macropodidae-9, a-4)
amod(Macropodidae-9, marsupial-5)
det(family-8, the-7)
prep_from(marsupial-5, family-8)
root(ROOT-0, Macropodidae-9)
dep(Macropodidae-9, macropods-11)
nn(foot-15, meaning-13)
amod(foot-15, large-14)
appos(macropods-11, foot-15)

(ROOT
  (S
    (S
      (VP (VBN Introduced)
        (PP (IN in)
          (NP (CD 1990)))))
    (, ,)
    (NP (NNP Keykode))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NNP Eastman) (NNP Kodak) (NN Company) (NN advancement))
        (PP (IN on)
          (NP
            (NP (NN edge) (NNS numbers))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP are)
                  (NP
                    (NP (NNS letters) (, ,) (NNS numbers)
                      (CC and)
                      (NNS symbols))
                    (VP (VBN placed)
                      (PP (IN at)
                        (NP
                          (NP (JJ regular) (NNS intervals))
                          (PP (IN along)
                            (NP
                              (NP (DT the) (NN edge))
                              (PP (IN of)
                                (NP
                                  (NP (CD 35) (NN mm))
                                  (CC and)
                                  (NP (CD 16) (NN mm) (NN film))))))))
                      (S
                        (VP (TO to)
                          (VP (VB allow)
                            (PP (IN for)
                              (NP (JJ frame-by-frame) (JJ specific) (NN identification)))))))))))))))
    (. .)))

partmod(advancement-11, Introduced-1)
prep_in(Introduced-1, 1990-3)
nsubj(advancement-11, Keykode-5)
cop(advancement-11, is-6)
det(advancement-11, an-7)
nn(advancement-11, Eastman-8)
nn(advancement-11, Kodak-9)
nn(advancement-11, Company-10)
root(ROOT-0, advancement-11)
nn(numbers-14, edge-13)
prep_on(advancement-11, numbers-14)
nsubj(letters-18, numbers-14)
cop(letters-18, are-17)
rcmod(numbers-14, letters-18)
xsubj(allow-38, letters-18)
rcmod(numbers-14, numbers-20)
conj_and(letters-18, numbers-20)
xsubj(allow-38, numbers-20)
rcmod(numbers-14, symbols-22)
conj_and(letters-18, symbols-22)
xsubj(allow-38, symbols-22)
partmod(letters-18, placed-23)
amod(intervals-26, regular-25)
prep_at(placed-23, intervals-26)
det(edge-29, the-28)
prep_along(intervals-26, edge-29)
num(mm-32, 35-31)
prep_of(edge-29, mm-32)
num(film-36, 16-34)
nn(film-36, mm-35)
prep_of(edge-29, film-36)
conj_and(mm-32, film-36)
aux(allow-38, to-37)
xcomp(placed-23, allow-38)
amod(identification-42, frame-by-frame-40)
amod(identification-42, specific-41)
prep_for(allow-38, identification-42)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Knout))
      (PRN (-LRB- -LRB-)
        (ADVP
          (NP
            (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
            (PRN (: ‚)
              (NP (NNP âˆšnaÃƒâ)
                (QP ($ $) (CD ¦) (CD Ã)))
              (: ‚)))
          (RB â))
        (NP
          (QP ($ $) (CD ¦) (CD t)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ heavy) (JJ scourge-like) (JJ multiple) (NN whip))
        (, ,)
        (VP
          (ADVP (RB usually))
          (VBN made)
          (PP (IN of)
            (NP
              (NP (DT a) (NN bunch))
              (PP (IN of)
                (NP
                  (NP (JJ rawhide) (NNS thongs))
                  (VP (VBN attached)
                    (PP (TO to)
                      (NP (DT a) (JJ long) (NN handle)))
                    (, ,)
                    (ADVP (RB sometimes))
                    (PP (IN with)
                      (NP
                        (NP (NN metal) (NN wire)
                          (CC or)
                          (NNS hooks))
                        (VP (VBN incorporated))))))))))))
    (. .)))

det(Knout-2, A-1)
nsubj(whip-24, Knout-2)
nn(Ã-7, Ãƒâ-4)
nn(Ã-7, $-5)
npadvmod(â-14, Ã-7)
punct(âˆšnaÃƒâ-9, ‚-8)
dep(Ã-7, âˆšnaÃƒâ-9)
num(âˆšnaÃƒâ-9, $-10)
number($-10, ¦-11)
number($-10, Ã-12)
punct(âˆšnaÃƒâ-9, ‚-13)
dep($-15, â-14)
dep(Knout-2, $-15)
number($-15, ¦-16)
number($-15, t-17)
cop(whip-24, is-19)
det(whip-24, a-20)
amod(whip-24, heavy-21)
amod(whip-24, scourge-like-22)
amod(whip-24, multiple-23)
root(ROOT-0, whip-24)
advmod(made-27, usually-26)
partmod(whip-24, made-27)
det(bunch-30, a-29)
prep_of(made-27, bunch-30)
amod(thongs-33, rawhide-32)
prep_of(bunch-30, thongs-33)
partmod(thongs-33, attached-34)
det(handle-38, a-36)
amod(handle-38, long-37)
prep_to(attached-34, handle-38)
advmod(attached-34, sometimes-40)
nn(wire-43, metal-42)
prep_with(attached-34, wire-43)
prep_with(attached-34, hooks-45)
conj_or(wire-43, hooks-45)
partmod(wire-43, incorporated-46)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN performance) (NN testing)))
    (, ,)
    (NP (NNP Khornerstone))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ multipurpose) (NN benchmark))
        (PP (IN from)
          (NP
            (NP (NNP Workstation) (NNPS Labs))
            (VP (VBN used)
              (PP (IN in)
                (NP (JJ various) (NNS periodicals))))))))
    (. .)))

nn(testing-4, computer-2)
nn(testing-4, performance-3)
prep_in(benchmark-10, testing-4)
nsubj(benchmark-10, Khornerstone-6)
cop(benchmark-10, is-7)
det(benchmark-10, a-8)
amod(benchmark-10, multipurpose-9)
root(ROOT-0, benchmark-10)
nn(Labs-13, Workstation-12)
prep_from(benchmark-10, Labs-13)
partmod(Labs-13, used-14)
amod(periodicals-17, various-16)
prep_in(used-14, periodicals-17)

(ROOT
  (S
    (NP (NNP Ket))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NNP Ket) (NNS people))
          (, ,)
          (NP
            (NP (DT a) (NNS people))
            (PP (IN of)
              (NP (NNP Siberia)))))))
    (. .)))

nsubj(refers-2, Ket-1)
root(ROOT-0, refers-2)
det(people-6, the-4)
nn(people-6, Ket-5)
prep_to(refers-2, people-6)
det(people-9, a-8)
appos(people-6, people-9)
prep_of(people-9, Siberia-11)

(ROOT
  (S
    (NP (NNP KA9Q))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT a) (NN name))
        (PP (IN for)
          (NP (DT the) (NNP IP-over-IP) (NNP Tunneling) (NN protocol)))))
    (. .)))

nsubj(name-5, KA9Q-1)
cop(name-5, is-2)
advmod(name-5, also-3)
det(name-5, a-4)
root(ROOT-0, name-5)
det(protocol-10, the-7)
nn(protocol-10, IP-over-IP-8)
nn(protocol-10, Tunneling-9)
prep_for(name-5, protocol-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP
      (NP (DT a) (JJ keyed-Hash) (NNP Message) (NNP Authentication) (NNP Code))
      (PRN (-LRB- -LRB-)
        (NP (NNP HMAC)
          (CC or)
          (NNP KHMAC))
        (-RRB- -RRB-))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NN message) (NN authentication) (NN code))
            (PRN (-LRB- -LRB-)
              (NP (NNP MAC))
              (-RRB- -RRB-))
            (VP (VBN calculated)
              (S
                (VP (VBG using)
                  (NP
                    (NP (DT a) (JJ specific) (NN algorithm))
                    (PP (VBG involving)
                      (NP
                        (NP (DT a) (JJ cryptographic) (NN hash) (NN function))
                        (PP (IN in)
                          (NP
                            (NP (NN combination))
                            (PP (IN with)
                              (NP (DT a) (JJ secret) (NN key)))))))))))))))
    (. .)))

prep_in(type-17, cryptography-2)
det(Code-8, a-4)
amod(Code-8, keyed-Hash-5)
nn(Code-8, Message-6)
nn(Code-8, Authentication-7)
nsubj(type-17, Code-8)
appos(Code-8, HMAC-10)
appos(Code-8, KHMAC-12)
conj_or(HMAC-10, KHMAC-12)
cop(type-17, is-15)
det(type-17, a-16)
root(ROOT-0, type-17)
nn(code-21, message-19)
nn(code-21, authentication-20)
prep_of(type-17, code-21)
abbrev(code-21, MAC-23)
partmod(code-21, calculated-25)
xcomp(calculated-25, using-26)
det(algorithm-29, a-27)
amod(algorithm-29, specific-28)
dobj(using-26, algorithm-29)
det(function-34, a-31)
amod(function-34, cryptographic-32)
nn(function-34, hash-33)
prep_involving(algorithm-29, function-34)
prep_in(function-34, combination-36)
det(key-40, a-38)
amod(key-40, secret-39)
prep_with(combination-36, key-40)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP KurfÃƒâˆžÃ) (NNP ‚) (NNP Ï))
        (NP ($ $) (CD rstendamm)))
      (, ,)
      (VP (VBN known)
        (ADVP (RB locally))
        (PP (IN as)
          (NP (DT the) (JJ Ku) (`` `) (NN damm))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the)
              (ADJP (RBS most) (JJ famous))
              (NNS avenues))
            (PP (IN in)
              (NP (NNP Berlin) (, ,) (NNP Germany)))))))
    (. .)))

det(Ï-4, The-1)
nn(Ï-4, KurfÃƒâˆžÃ-2)
nn(Ï-4, ‚-3)
nsubj(one-17, Ï-4)
dep(Ï-4, $-5)
num($-5, rstendamm-6)
partmod(Ï-4, known-8)
advmod(known-8, locally-9)
det(damm-14, the-11)
amod(damm-14, Ku-12)
prep_as(known-8, damm-14)
cop(one-17, is-16)
root(ROOT-0, one-17)
det(avenues-22, the-19)
advmod(famous-21, most-20)
amod(avenues-22, famous-21)
prep_of(one-17, avenues-22)
nn(Germany-26, Berlin-24)
prep_in(avenues-22, Germany-26)

(ROOT
  (S
    (NP (NNP KahlÃƒâˆžÃ) (NNP ‚) (NNP Âºa))
    (VP (VBZ is)
      (NP (DT a) (JJ well-known) (JJ Mexican) (JJ coffee-flavored) (NN liqueur)))
    (. .)))

nn(Âºa-3, KahlÃƒâˆžÃ-1)
nn(Âºa-3, ‚-2)
nsubj(liqueur-9, Âºa-3)
cop(liqueur-9, is-4)
det(liqueur-9, a-5)
amod(liqueur-9, well-known-6)
amod(liqueur-9, Mexican-7)
amod(liqueur-9, coffee-flavored-8)
root(ROOT-0, liqueur-9)

(ROOT
  (S
    (NP (DT A) (NNP Keyword))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word)
          (CC or)
          (NN concept))
        (PP (IN with)
          (NP (JJ special) (NN significance)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (JJ particular) (DT any) (NN word))
            (VP
              (VP (VBN used)
                (PP (IN as)
                  (NP (DT the) (NN key)))
                (PP (TO to)
                  (NP (DT a) (NN code))))
              (CC or)
              (VP (VBN used)
                (PP (IN in)
                  (NP (DT a) (NN reference) (NN work)))
                (S
                  (VP (TO to)
                    (VP (VB link)
                      (PP (TO to)
                        (NP
                          (NP (JJ other) (NNS words))
                          (CC or)
                          (NP (JJ other) (NN information)))))))))))))
    (. .)))

det(Keyword-2, A-1)
nsubj(word-5, Keyword-2)
cop(word-5, is-3)
det(word-5, a-4)
root(ROOT-0, word-5)
conj_or(word-5, concept-7)
amod(significance-10, special-9)
prep_with(word-5, significance-10)
amod(word-15, particular-13)
det(word-15, any-14)
prep_in(word-5, word-15)
xsubj(link-30, word-15)
dep(word-15, used-16)
det(key-19, the-18)
prep_as(used-16, key-19)
det(code-22, a-21)
prep_to(used-16, code-22)
dep(word-15, used-24)
conj_or(used-16, used-24)
det(work-28, a-26)
nn(work-28, reference-27)
prep_in(used-24, work-28)
aux(link-30, to-29)
xcomp(used-24, link-30)
amod(words-33, other-32)
prep_to(link-30, words-33)
amod(information-36, other-35)
prep_to(link-30, information-36)
conj_or(words-33, information-36)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Katal))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NN kat)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNP SI) (NN unit))
        (PP (IN of)
          (NP (JJ catalytic) (NN activity)))))
    (. .)))

det(Katal-2, The-1)
nsubj(unit-11, Katal-2)
dep(Katal-2, symbol-4)
dep(symbol-4, kat-6)
cop(unit-11, is-8)
det(unit-11, the-9)
nn(unit-11, SI-10)
root(ROOT-0, unit-11)
amod(activity-14, catalytic-13)
prep_of(unit-11, activity-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Koala))
      (PRN (-LRB- -LRB-)
        (NP (NNP Phascolarctos) (NNS cinereus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ thickset) (JJ arboreal) (JJ marsupial) (NN herbivore) (NN native))
          (PP (TO to)
            (NP (NNP Australia))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (RB only) (JJ extant) (NN representative))
          (PP (IN of)
            (NP (DT the) (NN family) (NN Phascolarctidae))))))
    (. .)))

det(Koala-2, The-1)
nsubj(native-13, Koala-2)
nn(cinereus-5, Phascolarctos-4)
appos(Koala-2, cinereus-5)
cop(native-13, is-7)
det(native-13, a-8)
amod(native-13, thickset-9)
amod(native-13, arboreal-10)
amod(native-13, marsupial-11)
nn(native-13, herbivore-12)
root(ROOT-0, native-13)
prep_to(native-13, Australia-15)
det(representative-21, the-18)
advmod(representative-21, only-19)
amod(representative-21, extant-20)
conj_and(native-13, representative-21)
det(Phascolarctidae-25, the-23)
nn(Phascolarctidae-25, family-24)
prep_of(representative-21, Phascolarctidae-25)

(ROOT
  (S
    (NP (NNP KIBO))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN acronym))
        (PP (IN for)
          (NP
            (NP (NNP Knowledge) (NNP In))
            (, ,)
            (NP (NNP Bullshit) (NNP Out))))))
    (. .)))

nsubj(acronym-4, KIBO-1)
cop(acronym-4, is-2)
det(acronym-4, an-3)
root(ROOT-0, acronym-4)
nn(In-7, Knowledge-6)
prep_for(acronym-4, In-7)
nn(Out-10, Bullshit-9)
appos(In-7, Out-10)

(ROOT
  (S
    (NP (DT A) (NNP Kilobit))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN information) (, ,) (JJ abbreviated) (NN kbit))
            (PRN (-LRB- -LRB-)
              (CC or)
              (ADJP (JJ kb))
              (-RRB- -RRB-))))))
    (. .)))

det(Kilobit-2, A-1)
nsubj(unit-5, Kilobit-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
nn(kbit-10, information-7)
amod(kbit-10, abbreviated-9)
prep_of(unit-5, kbit-10)
dep(kb-13, or-12)
dep(kbit-10, kb-13)

(ROOT
  (S
    (NP (DT A) (NNP Kipper))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ whole) (NN herring))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ has)
                (VP (VBN been)
                  (VP (VBN split)
                    (PP (IN from)
                      (NP (NN tail)))
                    (S
                      (VP (TO to)
                        (VP (VB head))))))))))
        (, ,)
        (ADJP (JJ gutted) (, ,) (JJ salted) (, ,)
          (CC and)
          (JJ cold) (JJ smoked))))
    (. .)))

det(Kipper-2, A-1)
nsubj(herring-6, Kipper-2)
cop(herring-6, is-3)
det(herring-6, a-4)
amod(herring-6, whole-5)
root(ROOT-0, herring-6)
nsubjpass(split-10, herring-6)
aux(split-10, has-8)
auxpass(split-10, been-9)
rcmod(herring-6, split-10)
prep_from(split-10, tail-12)
aux(head-14, to-13)
xcomp(split-10, head-14)
dep(smoked-22, gutted-16)
amod(herring-6, salted-18)
conj_and(smoked-22, salted-18)
amod(herring-6, cold-21)
conj_and(smoked-22, cold-21)
amod(herring-6, smoked-22)

(ROOT
  (S
    (NP (DT The) (NNPS Kipsigis))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ pastoralist) (JJ ethnic) (NN group))
        (PP (IN in)
          (NP (NNP Kenya)))
        (, ,)
        (VP (VBG speaking)
          (NP (DT the) (NNP Kipsigis) (NN language)))))
    (. .)))

det(Kipsigis-2, The-1)
nsubj(group-7, Kipsigis-2)
cop(group-7, was-3)
det(group-7, a-4)
amod(group-7, pastoralist-5)
amod(group-7, ethnic-6)
root(ROOT-0, group-7)
prep_in(group-7, Kenya-9)
partmod(group-7, speaking-11)
det(language-14, the-12)
nn(language-14, Kipsigis-13)
dobj(speaking-11, language-14)

(ROOT
  (S
    (S
      (ADVP (RB Currently))
      (NP (DT the) (NN community))
      (VP (VBZ practises)
        (NP (NN farming))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB famously))
        (VP (VBN known)
          (PP (IN for)
            (S
              (VP (VBG growing)
                (S
                  (VP (VBG Kenyan) ('' '')
                    (NP (JJ green) (NN gold))
                    ('' ''))))))
          (: -)
          (NP (NN tea)))))
    (. .)))

advmod(practises-4, Currently-1)
det(community-3, the-2)
nsubj(practises-4, community-3)
root(ROOT-0, practises-4)
dobj(practises-4, farming-5)
nsubjpass(known-10, they-7)
auxpass(known-10, are-8)
advmod(known-10, famously-9)
conj_and(practises-4, known-10)
prepc_for(known-10, growing-12)
xcomp(growing-12, Kenyan-13)
amod(gold-16, green-15)
dobj(Kenyan-13, gold-16)
dobj(known-10, tea-19)

(ROOT
  (S
    (NP (DT A) (NNP Knife))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ handheld) (JJ sharp-edged) (NN instrument))
        (VP (VBG consisting)
          (PP (IN of)
            (S
              (VP (VB handle)
                (VP (VBN attached)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (NN blade))
                      (VP (VBN used)
                        (PP (IN for)
                          (S
                            (VP (VBG cutting))))))))))))))
    (. .)))

det(Knife-2, A-1)
nsubj(instrument-7, Knife-2)
cop(instrument-7, is-3)
det(instrument-7, a-4)
amod(instrument-7, handheld-5)
amod(instrument-7, sharp-edged-6)
root(ROOT-0, instrument-7)
partmod(instrument-7, consisting-8)
prepc_of(consisting-8, handle-10)
dep(handle-10, attached-11)
det(blade-14, a-13)
prep_to(attached-11, blade-14)
partmod(blade-14, used-15)
prepc_for(used-15, cutting-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Knockout))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN referred)
          (S
            (VP (TO to)))
          (PP (IN as)
            (NP (DT a) (NNP K.) (NNP O.))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBG winning) (NN criterion))
        (PP (IN in)
          (NP
            (NP (JJ several) (JJ full-contact) (NN combat) (NNS sports))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (NN boxing)))
            (, ,)
            (VP (VBG kickboxing))
            (, ,)
            (NP (NNP Muay) (NNP Thai))
            (, ,)
            (NP (JJ mixed) (JJ martial) (NNS arts))
            (CC and)
            (NP
              (NP (NNS others) (NNS sports))
              (VP (VBG involving)
                (ADJP (JJ striking))))))))
    (. .)))

det(Knockout-2, A-1)
nsubj(criterion-15, Knockout-2)
advmod(referred-5, also-4)
dep(Knockout-2, referred-5)
xcomp(referred-5, to-6)
det(O.-10, a-8)
nn(O.-10, K.-9)
prep_as(referred-5, O.-10)
cop(criterion-15, is-12)
det(criterion-15, a-13)
amod(criterion-15, winning-14)
root(ROOT-0, criterion-15)
amod(sports-20, several-17)
amod(sports-20, full-contact-18)
nn(sports-20, combat-19)
prep_in(criterion-15, sports-20)
prep_in(criterion-15, as-23)
conj_and(sports-20, as-23)
prep_such_as(sports-20, boxing-24)
prep_in(criterion-15, kickboxing-26)
conj_and(sports-20, kickboxing-26)
partmod(sports-20, kickboxing-26)
nn(Thai-29, Muay-28)
prep_in(criterion-15, Thai-29)
conj_and(sports-20, Thai-29)
amod(arts-33, mixed-31)
amod(arts-33, martial-32)
prep_in(criterion-15, arts-33)
conj_and(sports-20, arts-33)
nn(sports-36, others-35)
prep_in(criterion-15, sports-36)
conj_and(sports-20, sports-36)
partmod(sports-36, involving-37)
acomp(involving-37, striking-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Kernel) (NNP Language) (NNP 0))
      (PRN (-LRB- -LRB-)
        (NP (NNP KL0))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ sequential) (NN logic) (NN programming) (NN language))
        (PP (VBN based)
          (PP (IN on)
            (NP
              (NP (NNP Prolog))
              (, ,)
              (VP (VBN used)
                (PP (IN in)
                  (NP (DT the) (NNP ICOT) (NNP Fifth) (NN generation) (NN computer) (NN project)))))))))
    (. .)))

nn(0-3, Kernel-1)
nn(0-3, Language-2)
nsubj(language-12, 0-3)
abbrev(0-3, KL0-5)
cop(language-12, is-7)
det(language-12, a-8)
amod(language-12, sequential-9)
nn(language-12, logic-10)
nn(language-12, programming-11)
root(ROOT-0, language-12)
prepc_based_on(language-12, on-14)
pobj(language-12, Prolog-15)
partmod(Prolog-15, used-17)
det(project-24, the-19)
nn(project-24, ICOT-20)
nn(project-24, Fifth-21)
nn(project-24, generation-22)
nn(project-24, computer-23)
prep_in(used-17, project-24)

(ROOT
  (S
    (NP (DT The) (NNP Klamath))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ Native) (JJ American) (NN tribe))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Plateau) (NN culture) (NN area))
            (PP (IN in)
              (NP (NNP Southern) (NNP Oregon)))))))
    (. .)))

det(Klamath-2, The-1)
nsubj(tribe-7, Klamath-2)
cop(tribe-7, are-3)
det(tribe-7, a-4)
amod(tribe-7, Native-5)
amod(tribe-7, American-6)
root(ROOT-0, tribe-7)
det(area-12, the-9)
nn(area-12, Plateau-10)
nn(area-12, culture-11)
prep_of(tribe-7, area-12)
nn(Oregon-15, Southern-14)
prep_in(area-12, Oregon-15)

(ROOT
  (S
    (NP (NNP KMS))
    (VP (VBZ refers)
      (PP (TO to)
        (NP (DT a) (NNP Knowledge) (NNP Management) (NN Solution))))
    (. .)))

nsubj(refers-2, KMS-1)
root(ROOT-0, refers-2)
det(Solution-7, a-4)
nn(Solution-7, Knowledge-5)
nn(Solution-7, Management-6)
prep_to(refers-2, Solution-7)

(ROOT
  (S
    (NP (DT A) (NNP Knowbot))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP (NN bot)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ collects)
              (NP (NN information))
              (PP (IN by)
                (S
                  (ADVP (RB automatically))
                  (VP (VBG gathering)
                    (NP (JJ certain) (VBN specified) (NN information))
                    (PP (IN from)
                      (NP (NN web) (NNS sites)))))))))))
    (. .)))

det(Knowbot-2, A-1)
nsubj(kind-5, Knowbot-2)
cop(kind-5, is-3)
det(kind-5, a-4)
root(ROOT-0, kind-5)
nsubj(collects-9, kind-5)
prep_of(kind-5, bot-7)
rcmod(kind-5, collects-9)
dobj(collects-9, information-10)
advmod(gathering-13, automatically-12)
prepc_by(collects-9, gathering-13)
amod(information-16, certain-14)
amod(information-16, specified-15)
dobj(gathering-13, information-16)
nn(sites-19, web-18)
prep_from(gathering-13, sites-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT the) (NN KOMPILER))
    (VP (VBD was)
      (NP
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (JJ first) (NN language) (NN compilation))))
        (CC and)
        (NP
          (NP (JJ runtime) (NNS systems))
          (PP (IN for)
            (NP
              (NP
                (NP (NNP International) (NNP Business) (NNPS Machines) (POS '))
                (NNP IBM) (CD 701))
              (, ,)
              (NP
                (NP (DT the)
                  (ADJP (JJS fastest) (JJ commercial))
                  (NNP U.) (NNP S.) (NN computer))
                (ADJP (JJ available)
                  (PP (IN in)
                    (NP (CD 1955))))))))))
    (. .)))

prep_in(one-7, computing-2)
det(KOMPILER-5, the-4)
nsubj(one-7, KOMPILER-5)
cop(one-7, was-6)
root(ROOT-0, one-7)
det(compilation-12, the-9)
amod(compilation-12, first-10)
nn(compilation-12, language-11)
prep_of(one-7, compilation-12)
amod(systems-15, runtime-14)
conj_and(one-7, systems-15)
nn(Machines-19, International-17)
nn(Machines-19, Business-18)
poss(IBM-21, Machines-19)
prep_for(systems-15, IBM-21)
num(IBM-21, 701-22)
det(computer-29, the-24)
dep(commercial-26, fastest-25)
amod(computer-29, commercial-26)
nn(computer-29, U.-27)
nn(computer-29, S.-28)
appos(IBM-21, computer-29)
amod(computer-29, available-30)
prep_in(available-30, 1955-32)

(ROOT
  (S
    (NP (DT The) (NNP Kilt))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP (DT a) (JJ traditional) (NN garment))
            (PP (IN of)
              (NP (NNP Scotland))))
          (CC and)
          (PRN (, ,)
            (ADVP (RBR more) (RB recently))
            (, ,))
          (NP (JJ Celtic)
            (PRN (-LRB- -LRB-)
              (ADJP
                (ADVP (RBR more) (RB specifically))
                (JJ Gaelic))
              (-RRB- -RRB-))
            (NN culture)))
        (VP
          (ADVP (RB typically))
          (VBN worn)
          (PP (IN by)
            (NP (NNS men))))))
    (. .)))

det(Kilt-2, The-1)
nsubj(garment-6, Kilt-2)
cop(garment-6, is-3)
det(garment-6, a-4)
amod(garment-6, traditional-5)
root(ROOT-0, garment-6)
prep_of(garment-6, Scotland-8)
advmod(recently-12, more-11)
dep(garment-6, recently-12)
amod(culture-20, Celtic-14)
advmod(specifically-17, more-16)
advmod(Gaelic-18, specifically-17)
dep(culture-20, Gaelic-18)
conj_and(garment-6, culture-20)
advmod(worn-22, typically-21)
partmod(garment-6, worn-22)
agent(worn-22, men-24)

(ROOT
  (NP
    (NP (NNP The))
    (NP (NNP Komondor) (-LRB- -LRB-) (NNP lat))
    (. .)))

root(ROOT-0, The-1)
nn(lat-4, Komondor-2)
dep(The-1, lat-4)

(ROOT
  (S
    (NP (NNS Canis))
    (VP (VBZ familiaris)
      (SBAR
        (S
          (NP (JJ pastorialis) (NN villosus) (NNS hungaricus) (-RRB- -RRB-))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN livestock) (NN guardian) (NN dog))
              (SBAR
                (S
                  (VP (VBP breed)
                    (ADVP (RB originally))
                    (PP (IN from)
                      (NP (NNP Hungary)))))))))))
    (. .)))

nsubj(familiaris-2, Canis-1)
root(ROOT-0, familiaris-2)
amod(hungaricus-5, pastorialis-3)
nn(hungaricus-5, villosus-4)
nsubj(dog-11, hungaricus-5)
cop(dog-11, is-7)
det(dog-11, a-8)
nn(dog-11, livestock-9)
nn(dog-11, guardian-10)
ccomp(familiaris-2, dog-11)
rcmod(dog-11, breed-12)
advmod(breed-12, originally-13)
prep_from(breed-12, Hungary-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Krag-JÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ¸) (NN rgensen))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ repeating) (NN bolt) (NN action) (NN rifle))
        (VP (VBN designed)
          (PP (IN by)
            (NP (DT the) (NNP Norwegians) (NNP Ole) (NNP Herman) (NNP Johannes) (NNP Krag)
              (CC and)
              (NNP Erik) (NNP JÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ¸) (NN rgensen)))
          (PP (IN in)
            (NP (DT the) (JJ late) (JJ 19th) (NN century))))))
    (. .)))

det(rgensen-6, The-1)
nn(rgensen-6, Krag-JÃƒâˆžÃ-2)
nn(rgensen-6, ‚-3)
nn(rgensen-6, Â-4)
nn(rgensen-6, ¸-5)
nsubj(rifle-12, rgensen-6)
cop(rifle-12, is-7)
det(rifle-12, a-8)
amod(rifle-12, repeating-9)
nn(rifle-12, bolt-10)
nn(rifle-12, action-11)
root(ROOT-0, rifle-12)
partmod(rifle-12, designed-13)
det(Krag-20, the-15)
nn(Krag-20, Norwegians-16)
nn(Krag-20, Ole-17)
nn(Krag-20, Herman-18)
nn(Krag-20, Johannes-19)
agent(designed-13, Krag-20)
nn(rgensen-27, Erik-22)
nn(rgensen-27, JÃƒâˆžÃ-23)
nn(rgensen-27, ‚-24)
nn(rgensen-27, Â-25)
nn(rgensen-27, ¸-26)
agent(designed-13, rgensen-27)
conj_and(Krag-20, rgensen-27)
det(century-32, the-29)
amod(century-32, late-30)
amod(century-32, 19th-31)
prep_in(designed-13, century-32)

(ROOT
  (S
    (NP (DT A) (NNP Krugerrand))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (NNP South) (JJ African))
          (NN gold) (NN coin))
        (, ,)
        (VP
          (ADVP (RB first))
          (VBN minted)
          (PP (IN in)
            (NP (CD 1967)))
          (PP (IN in)
            (NP (NN order)))
          (S
            (VP (TO to)
              (VP (VB help)
                (VP (VB market)
                  (NP
                    (ADJP (NNP South) (JJ African))
                    (NN gold)))))))))
    (. .)))

det(Krugerrand-2, A-1)
nsubj(coin-8, Krugerrand-2)
cop(coin-8, is-3)
det(coin-8, a-4)
amod(African-6, South-5)
amod(coin-8, African-6)
nn(coin-8, gold-7)
root(ROOT-0, coin-8)
xsubj(help-17, coin-8)
advmod(minted-11, first-10)
partmod(coin-8, minted-11)
prep_in(minted-11, 1967-13)
prep_in(minted-11, order-15)
aux(help-17, to-16)
xcomp(minted-11, help-17)
xcomp(help-17, market-18)
amod(African-20, South-19)
amod(gold-21, African-20)
dobj(market-18, gold-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Kiwi))
    (VP (VBZ is)
      (ADVP (RB any)
        (PP (IN of)
          (NP
            (NP (DT the) (NN species))
            (PP (IN of)
              (NP (JJ flightless) (NNS birds))))))
      (ADJP (JJ endemic)
        (PP (TO to)
          (NP
            (NP (NNP New) (NNP Zealand))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ genus) (NN Apteryx))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (DT the) (JJ only) (NNS genus))
                    (PP (IN in)
                      (NP (NN family) (NN Apterygidae))))
                  (-RRB- -RRB-))))))))
    (. .)))

det(Kiwi-2, A-1)
nsubj(endemic-11, Kiwi-2)
cop(endemic-11, is-3)
advmod(endemic-11, any-4)
det(species-7, the-6)
prep_of(any-4, species-7)
amod(birds-10, flightless-9)
prep_of(species-7, birds-10)
root(ROOT-0, endemic-11)
nn(Zealand-14, New-13)
prep_to(endemic-11, Zealand-14)
det(Apteryx-18, the-16)
amod(Apteryx-18, genus-17)
prep_of(Zealand-14, Apteryx-18)
det(genus-22, the-20)
amod(genus-22, only-21)
dep(Apteryx-18, genus-22)
nn(Apterygidae-25, family-24)
prep_in(genus-22, Apterygidae-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Kiwifruit))
      (PRN (-LRB- -LRB-)
        (NP
          (QP (CC or)
            (CD kiwi)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ edible) (NN berry))
          (PP (IN of)
            (NP
              (NP
                (NP (DT a) (NN cultivar) (NN group))
                (PP (IN of)
                  (NP (DT the) (JJ woody) (NNP vine) (NNP Actinidia) (NN deliciosa))))
              (CC and)
              (NP
                (NP (NNS hybrids))
                (PP (IN between)
                  (NP (DT this)))))))
        (CC and)
        (NP
          (NP (JJ other) (NNS species))
          (PP (IN in)
            (NP (DT the) (JJ genus) (NN Actinidia))))))
    (. .)))

det(Kiwifruit-2, The-1)
nsubj(berry-10, Kiwifruit-2)
cc(kiwi-5, or-4)
dep(Kiwifruit-2, kiwi-5)
cop(berry-10, is-7)
det(berry-10, the-8)
amod(berry-10, edible-9)
root(ROOT-0, berry-10)
det(group-14, a-12)
nn(group-14, cultivar-13)
prep_of(berry-10, group-14)
det(deliciosa-20, the-16)
amod(deliciosa-20, woody-17)
nn(deliciosa-20, vine-18)
nn(deliciosa-20, Actinidia-19)
prep_of(group-14, deliciosa-20)
prep_of(berry-10, hybrids-22)
conj_and(group-14, hybrids-22)
prep_between(hybrids-22, this-24)
amod(species-27, other-26)
conj_and(berry-10, species-27)
det(Actinidia-31, the-29)
amod(Actinidia-31, genus-30)
prep_in(species-27, Actinidia-31)

(ROOT
  (S
    (NP (DT A) (NNP Kayak))
    (VP (VBZ is)
      (NP (DT a) (JJ small) (JJ human-powered) (NN boat)))
    (. .)))

det(Kayak-2, A-1)
nsubj(boat-7, Kayak-2)
cop(boat-7, is-3)
det(boat-7, a-4)
amod(boat-7, small-5)
amod(boat-7, human-powered-6)
root(ROOT-0, boat-7)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Kutia))
    (VP (VBZ is)
      (ADVP (RB often))
      (NP
        (NP (DT the) (JJ first) (NN dish))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ traditional) (JJ twelve-dish) (NNP Christmas) (NNP Eve) (NN supper))
            (PRN (-LRB- -LRB-)
              (VP
                (ADVP (RB also))
                (VBN known)
                (PP (IN as)
                  (NP (NNP Svyateh) (NNP Vetchnyat))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(dish-6, Kutia-1)
cop(dish-6, is-2)
advmod(dish-6, often-3)
det(dish-6, the-4)
amod(dish-6, first-5)
root(ROOT-0, dish-6)
det(supper-13, the-8)
amod(supper-13, traditional-9)
amod(supper-13, twelve-dish-10)
nn(supper-13, Christmas-11)
nn(supper-13, Eve-12)
prep_in(dish-6, supper-13)
advmod(known-16, also-15)
dep(supper-13, known-16)
nn(Vetchnyat-19, Svyateh-18)
prep_as(known-16, Vetchnyat-19)

(ROOT
  (S
    (NP
      (NP (DT A) (NN KÃƒâˆžÃ))
      (PRN (: ‚)
        (NP
          (NP (NNP Ï))
          (NP
            (NP ($ $) (CD nstlerroman))
            (NP (-LRB- -LRB-) (NNP \/) (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))))
        (: ‚)))
    (VP (VBZ âˆškÃƒâ)
      (NP ($ $) (CD ¦) (NN Ã) (`` ‚) (FW âˆ) (FW ‚) (FW nstlÃƒâ) (FW ‰) (FW ˆÃ) (FW ‚) (FW âˆ) ('' †)))
    (. .)))

det(KÃƒâˆžÃ-2, A-1)
nsubj(âˆškÃƒâ-14, KÃƒâˆžÃ-2)
punct(Ï-4, ‚-3)
dep(KÃƒâˆžÃ-2, Ï-4)
dep(Ï-4, $-5)
num($-5, nstlerroman-6)
nn(Ã-12, \/-8)
nn(Ã-12, Ãƒâ-9)
nn(Ã-12, $-10)
dep($-5, Ã-12)
punct(Ï-4, ‚-13)
root(ROOT-0, âˆškÃƒâ-14)
dep(Ã-17, $-15)
num(Ã-17, ¦-16)
dobj(âˆškÃƒâ-14, Ã-17)
punct(Ã-17, ‚-18)
nn(Ã-17, âˆ-19)
nn(Ã-17, ‚-20)
nn(Ã-17, nstlÃƒâ-21)
nn(Ã-17, ‰-22)
nn(Ã-17, ˆÃ-23)
nn(Ã-17, ‚-24)
dep(Ã-17, âˆ-25)
punct(Ã-17, †-26)

(ROOT
  (S
    (S
      (NP (NNP roÃƒâ) (NNP $) ('' '') (NNP Ã))
      (VP (VBP ‚)
        (ADVP (RB â)
          (NP ($ $) (CD ˜maÃƒâ)))
        (NP ($ $) (CD '') (NN Ã) (`` ‚) (FW âˆ) (FW †) (FW n) ('' \/))
        (, ,)
        (S
          (ADJP (JJ German)))))
    (: :) ('' '')
    (PRN
      (S
        (NP
          (NP (NN artist) (POS 's))
          (JJ novel) ('' '') (NN -RRB-))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ specific) (NN sub-genre))
            (PP (IN of)
              (NP (NNP Bildungsroman)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN novel))
          (PP (IN about)
            (NP
              (NP
                (NP (DT an) (NN artist) (POS 's))
                (NN growth))
              (PP (TO to)
                (NP (NN maturity))))))))
    (. .)))

nn(Ã-4, roÃƒâ-1)
nn(Ã-4, $-2)
nsubj(‚-5, Ã-4)
root(ROOT-0, ‚-5)
advmod(‚-5, â-6)
pobj(â-6, $-7)
num($-7, ˜maÃƒâ-8)
dep(Ã-11, $-9)
dobj(‚-5, Ã-11)
punct(Ã-11, ‚-12)
nn(Ã-11, âˆ-13)
nn(Ã-11, †-14)
dep(Ã-11, n-15)
punct(Ã-11, \/-16)
dep(‚-5, German-18)
poss(novel-23, artist-21)
nsubj(sub-genre-29, novel-23)
cop(sub-genre-29, is-26)
det(sub-genre-29, a-27)
amod(sub-genre-29, specific-28)
dep(‚-5, sub-genre-29)
prep_of(sub-genre-29, Bildungsroman-31)
nsubj(novel-36, it-33)
cop(novel-36, is-34)
det(novel-36, a-35)
parataxis(‚-5, novel-36)
det(artist-39, an-38)
poss(growth-41, artist-39)
prep_about(novel-36, growth-41)
prep_to(growth-41, maturity-43)

(ROOT
  (S
    (NP (DT A) (NNP Lynx))
    (VP (VBZ is)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP (CD four) (JJ medium-sized) (JJ wild) (NNS cats)))))
    (. .)))

det(Lynx-2, A-1)
nsubj(any-4, Lynx-2)
cop(any-4, is-3)
root(ROOT-0, any-4)
num(cats-9, four-6)
amod(cats-9, medium-sized-7)
amod(cats-9, wild-8)
prep_of(any-4, cats-9)

(ROOT
  (S
    (NP (DT A) (NNP Language))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ dynamic) (NN set))
        (PP (IN of)
          (NP
            (NP
              (NP (JJ visual) (, ,)
                (ADJP (JJ auditory) (, ,)
                  (CC or)
                  (JJ tactile))
                (NNS symbols))
              (PP (IN of)
                (NP (NN communication))))
            (CC and)
            (NP
              (NP (DT the) (NNS elements))
              (VP (VBN used)
                (S
                  (VP (TO to)
                    (VP (VB manipulate)
                      (NP (PRP them)))))))))))
    (. .)))

det(Language-2, A-1)
nsubj(set-6, Language-2)
cop(set-6, is-3)
det(set-6, a-4)
amod(set-6, dynamic-5)
root(ROOT-0, set-6)
amod(symbols-14, visual-8)
amod(symbols-14, auditory-10)
conj_or(auditory-10, tactile-13)
amod(symbols-14, tactile-13)
prep_of(set-6, symbols-14)
prep_of(symbols-14, communication-16)
det(elements-19, the-18)
prep_of(set-6, elements-19)
conj_and(symbols-14, elements-19)
xsubj(manipulate-22, elements-19)
partmod(elements-19, used-20)
aux(manipulate-22, to-21)
xcomp(used-20, manipulate-22)
dobj(manipulate-22, them-23)

(ROOT
  (S
    (NP (DT A) (NNP Lawyer))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP
          (NP
            (NP (NNP Black) (POS 's))
            (NN Law))
          (SBAR
            (S
              (NP (NNP Dictionary))
              (, ,)
              (S
                (VP (VBZ is)))
              ('' '')
              (NP (DT a) (NN person))
              (VP (VBD learned)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN law))
                    (: ;)
                    (PP (IN as)
                      (NP (DT an) (NN attorney) (, ,) (NN counsel)
                        (CC or)
                        (NN solicitor)))
                    (: ;)))))))))
    (NP (DT a) (NN person))
    (VP (VBD licensed)
      (S
        (VP (TO to)
          (VP (VB practice)
            (NP (NN law))))))
    (. .) ('' '')))

det(Lawyer-2, A-1)
nsubj(licensed-30, Lawyer-2)
xsubj(practice-32, Lawyer-2)
prepc_according_to(licensed-30, to-5)
poss(Law-8, Black-6)
dobj(learned-15, Law-8)
pobj(licensed-30, Law-8)
nsubj(learned-15, Dictionary-9)
ccomp(learned-15, is-11)
det(person-14, a-13)
nsubj(learned-15, person-14)
rcmod(Law-8, learned-15)
det(law-18, the-17)
prep_in(learned-15, law-18)
det(attorney-22, an-21)
prep_as(law-18, attorney-22)
prep_as(law-18, counsel-24)
conj_or(attorney-22, counsel-24)
prep_as(law-18, solicitor-26)
conj_or(attorney-22, solicitor-26)
det(person-29, a-28)
nsubj(licensed-30, person-29)
xsubj(practice-32, person-29)
root(ROOT-0, licensed-30)
aux(practice-32, to-31)
xcomp(licensed-30, practice-32)
dobj(practice-32, law-33)

(ROOT
  (S
    (NP (NNP Law))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN system))
        (PP (IN of)
          (NP
            (NP (NNS rules))
            (PP (IN of)
              (NP
                (NP (NN conduct))
                (VP (VBN established)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (JJ sovereign) (NN government))
                      (PP (IN of)
                        (NP (DT a) (NN society)))))
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB correct)
                          (NP (NNS wrongs)))
                        (, ,)
                        (VP (VB maintain)
                          (NP (NN stability)))
                        (, ,)
                        (CC and)
                        (VP (VB deliver)
                          (NP (NN justice)))))))))))))
    (. .)))

nsubj(system-4, Law-1)
cop(system-4, is-2)
det(system-4, the-3)
root(ROOT-0, system-4)
prep_of(system-4, rules-6)
prep_of(rules-6, conduct-8)
xsubj(correct-18, conduct-8)
partmod(conduct-8, established-9)
det(government-13, the-11)
amod(government-13, sovereign-12)
agent(established-9, government-13)
det(society-16, a-15)
prep_of(government-13, society-16)
aux(correct-18, to-17)
xcomp(established-9, correct-18)
dobj(correct-18, wrongs-19)
xcomp(established-9, maintain-21)
conj_and(correct-18, maintain-21)
dobj(maintain-21, stability-22)
xcomp(established-9, deliver-25)
conj_and(correct-18, deliver-25)
dobj(deliver-25, justice-26)

(ROOT
  (S
    (PP (IN As)
      (NP (DT an) (JJ abstract) (NN concept)))
    (NP (NN Love))
    (ADVP (RB usually))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ strong) (, ,) (JJ ineffable) (NN feeling))
          (PP (IN towards)
            (NP (DT another) (NN person))))))
    (. .)))

det(concept-4, an-2)
amod(concept-4, abstract-3)
prep_as(refers-7, concept-4)
nsubj(refers-7, Love-5)
advmod(refers-7, usually-6)
root(ROOT-0, refers-7)
det(feeling-13, a-9)
amod(feeling-13, strong-10)
amod(feeling-13, ineffable-12)
prep_to(refers-7, feeling-13)
det(person-16, another-15)
prep_towards(feeling-13, person-16)

(ROOT
  (S
    (NP (DT A) (NNP Laser))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ electronic-optical) (NN device))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ emits)
              (NP (JJ coherent) (JJ light) (NN radiation)))))))
    (. .)))

det(Laser-2, A-1)
nsubj(device-6, Laser-2)
cop(device-6, is-3)
det(device-6, an-4)
amod(device-6, electronic-optical-5)
root(ROOT-0, device-6)
nsubj(emits-8, device-6)
rcmod(device-6, emits-8)
amod(radiation-11, coherent-9)
amod(radiation-11, light-10)
dobj(emits-8, radiation-11)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Lowball))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN poker) (NN variant))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (JJ traditional) (NN hand) (NNS values))
              (VP (VBP are)
                (VP (VBN reversed)
                  (SBAR (RB so) (IN that)
                    (S
                      (NP (DT the) (JJ lowest-valued) (NN hand))
                      (VP (VBZ wins)))))))))))
    (. .)))

det(Lowball-3, The-1)
nn(Lowball-3, word-2)
nsubj(refers-4, Lowball-3)
root(ROOT-0, refers-4)
det(variant-8, a-6)
nn(variant-8, poker-7)
prep_to(refers-4, variant-8)
rel(reversed-15, which-10)
amod(values-13, traditional-11)
nn(values-13, hand-12)
nsubjpass(reversed-15, values-13)
auxpass(reversed-15, are-14)
rcmod(variant-8, reversed-15)
advmod(wins-21, so-16)
dep(wins-21, that-17)
det(hand-20, the-18)
amod(hand-20, lowest-valued-19)
nsubj(wins-21, hand-20)
advcl(reversed-15, wins-21)
ccomp(reversed-15, wins-21)

(ROOT
  (S
    (NP (DT The) (NNPS Laurales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP (VBG flowering) (NNS plants)))))
    (. .)))

det(Laurales-2, The-1)
nsubj(order-5, Laurales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)

(ROOT
  (S
    (NP (DT The) (NN order) (NNS Lamiales))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN taxon))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ asterid) (NN group))
            (PP (IN of)
              (NP (JJ dicotyledonous) (VBG flowering) (NNS plants)))))))
    (. .)))

det(Lamiales-3, The-1)
nn(Lamiales-3, order-2)
nsubj(taxon-6, Lamiales-3)
cop(taxon-6, is-4)
det(taxon-6, a-5)
root(ROOT-0, taxon-6)
det(group-10, the-8)
amod(group-10, asterid-9)
prep_in(taxon-6, group-10)
amod(plants-14, dicotyledonous-12)
amod(plants-14, flowering-13)
prep_of(group-10, plants-14)

(ROOT
  (FRAG
    (NP (DT Both))
    (. !)))

root(ROOT-0, Both-1)

(ROOT
  (S
    (NP (NN Equivocation)
      (CC and)
      (NN amphiboly))
    (VP (VBP are)
      (ADVP (RB fallacies))
      (VP (VBG arising)
        (PP (IN from)
          (NP (NNP ambiguity)))))
    (. .)))

nsubj(arising-6, Equivocation-1)
conj_and(Equivocation-1, amphiboly-3)
nsubj(arising-6, amphiboly-3)
aux(arising-6, are-4)
advmod(arising-6, fallacies-5)
root(ROOT-0, arising-6)
prep_from(arising-6, ambiguity-8)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Locomotive))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN railway) (NN vehicle))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ provides)
              (NP
                (NP (DT the) (NN motive) (NN power))
                (PP (IN for)
                  (NP (DT a) (NN train)))))))))
    (. .)))

det(Locomotive-2, A-1)
nsubj(vehicle-6, Locomotive-2)
cop(vehicle-6, is-3)
det(vehicle-6, a-4)
nn(vehicle-6, railway-5)
root(ROOT-0, vehicle-6)
nsubj(provides-8, vehicle-6)
rcmod(vehicle-6, provides-8)
det(power-11, the-9)
nn(power-11, motive-10)
dobj(provides-8, power-11)
det(train-14, a-13)
prep_for(power-11, train-14)

(ROOT
  (S
    (NP (DT A) (NNP Lighthouse))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tower) (, ,) (NN building) (, ,)
          (CC or)
          (NN framework))
        (VP
          (VP (VBN designed)
            (S
              (VP (TO to)
                (VP (VB emit)
                  (NP (NN light))
                  (PP
                    (PP (IN from)
                      (NP
                        (NP (DT a) (NN system))
                        (PP (IN of)
                          (NP (NNS lamps)
                            (CC and)
                            (NNS lenses)))))
                    (CC or)
                    (PRN (, ,)
                      (PP (IN in)
                        (NP (JJR older) (NNS times)))
                      (, ,))
                    (PP (IN from)
                      (NP (DT a) (NN fire))))))))
          (CC and)
          (VP (VBN used)
            (PP (IN as)
              (NP
                (NP (DT an) (NN aid))
                (PP
                  (PP (TO to)
                    (NP (NN navigation)))
                  (CC and)
                  (PP (TO to)
                    (NP
                      (NP (NNS pilots))
                      (PP (IN at)
                        (NP (NN sea))))))))))))
    (. .)))

det(Lighthouse-2, A-1)
nsubj(tower-5, Lighthouse-2)
cop(tower-5, is-3)
det(tower-5, a-4)
root(ROOT-0, tower-5)
xsubj(emit-13, tower-5)
conj_or(tower-5, building-7)
xsubj(emit-13, building-7)
conj_or(tower-5, framework-10)
xsubj(emit-13, framework-10)
dep(tower-5, designed-11)
aux(emit-13, to-12)
xcomp(designed-11, emit-13)
dobj(emit-13, light-14)
det(system-17, a-16)
prep_from(emit-13, system-17)
prep_of(system-17, lamps-19)
prep_of(system-17, lenses-21)
conj_and(lamps-19, lenses-21)
dep(emit-13, in-24)
amod(times-26, older-25)
pobj(in-24, times-26)
det(fire-30, a-29)
prep_from(emit-13, fire-30)
conj_or(system-17, fire-30)
dep(tower-5, used-32)
conj_and(designed-11, used-32)
det(aid-35, an-34)
prep_as(used-32, aid-35)
prep_to(aid-35, navigation-37)
prep_to(aid-35, pilots-40)
conj_and(navigation-37, pilots-40)
prep_at(pilots-40, sea-42)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Library))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN collection))
          (PP (IN of)
            (NP
              (NP (NN information))
              (, ,)
              (NP (NNS sources))
              (, ,)
              (NP (NNS resources))
              (, ,)
              (CC and)
              (NP (NNS services)))))))
    (: :)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP
          (VP (VBN organized)
            (PP (IN for)
              (NP (NN use))))
          (CC and)
          (VP (VBN maintained)
            (PP (IN by)
              (NP
                (NP (DT a) (JJ public) (NN body))
                (, ,)
                (NP (DT an) (NN institution))
                (, ,)
                (CC or)
                (NP (DT a) (JJ private) (NN individual))))))))
    (. .)))

det(Library-2, A-1)
nsubj(collection-5, Library-2)
cop(collection-5, is-3)
det(collection-5, a-4)
root(ROOT-0, collection-5)
prep_of(collection-5, information-7)
prep_of(collection-5, sources-9)
conj_and(information-7, sources-9)
prep_of(collection-5, resources-11)
conj_and(information-7, resources-11)
prep_of(collection-5, services-14)
conj_and(information-7, services-14)
nsubjpass(organized-18, it-16)
nsubjpass(maintained-22, it-16)
auxpass(organized-18, is-17)
parataxis(collection-5, organized-18)
prep_for(organized-18, use-20)
parataxis(collection-5, maintained-22)
conj_and(organized-18, maintained-22)
det(body-26, a-24)
amod(body-26, public-25)
prep_by(maintained-22, body-26)
det(institution-29, an-28)
prep_by(maintained-22, institution-29)
conj_or(body-26, institution-29)
det(individual-34, a-32)
amod(individual-34, private-33)
prep_by(maintained-22, individual-34)
conj_or(body-26, individual-34)

(ROOT
  (S
    (NP (DT A) (NN Letter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN written) (NN message))
        (PP (IN from)
          (NP
            (NP (CD one) (NN person))
            (PP (TO to)
              (NP (DT another)))))))
    (. .)))

det(Letter-2, A-1)
nsubj(message-6, Letter-2)
cop(message-6, is-3)
det(message-6, a-4)
amod(message-6, written-5)
root(ROOT-0, message-6)
num(person-9, one-8)
prep_from(message-6, person-9)
prep_to(person-9, another-11)

(ROOT
  (S
    (NP (DT A) (NNP Lesbian))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN woman))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ is)
                (ADJP (JJ romantically)))
              (CC and)
              (ADVP (RB sexually))
              (VP (VBD attracted)
                (ADVP (RB only))
                (PP (TO to)
                  (NP (JJ other) (NNS women)))))))))
    (. .)))

det(Lesbian-2, A-1)
nsubj(woman-5, Lesbian-2)
cop(woman-5, is-3)
det(woman-5, a-4)
root(ROOT-0, woman-5)
nsubj(romantically-8, woman-5)
nsubj(attracted-11, woman-5)
cop(romantically-8, is-7)
rcmod(woman-5, romantically-8)
rcmod(woman-5, sexually-10)
advmod(romantically-8, sexually-10)
conj_and(romantically-8, sexually-10)
rcmod(woman-5, attracted-11)
conj_and(romantically-8, attracted-11)
advmod(attracted-11, only-12)
amod(women-15, other-14)
prep_to(attracted-11, women-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP
      (NP (DT the) (NNP Logarithm))
      (PP (IN of)
        (NP
          (NP (DT a) (NN number))
          (PP (TO to)
            (NP (DT a) (VBN given) (NN base))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN power)
          (CC or)
          (NN exponent))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (NN base))
            (VP (MD must)
              (VP (VB be)
                (VP (VBN raised)
                  (PP (IN in)
                    (NP (NN order)))
                  (S
                    (VP (TO to)
                      (VP (VB produce)
                        (NP (DT the) (NN number))))))))))))
    (. .)))

prep_in(power-15, mathematics-2)
det(Logarithm-5, the-4)
nsubj(power-15, Logarithm-5)
det(number-8, a-7)
prep_of(Logarithm-5, number-8)
det(base-12, a-10)
amod(base-12, given-11)
prep_to(number-8, base-12)
cop(power-15, is-13)
det(power-15, the-14)
root(ROOT-0, power-15)
conj_or(power-15, exponent-17)
rel(raised-24, which-19)
det(base-21, the-20)
nsubjpass(raised-24, base-21)
aux(raised-24, must-22)
auxpass(raised-24, be-23)
rcmod(power-15, raised-24)
prep_in(raised-24, order-26)
aux(produce-28, to-27)
xcomp(raised-24, produce-28)
det(number-30, the-29)
dobj(produce-28, number-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NN anatomy)))
    (, ,)
    (NP (DT the) (NN term) (NN Ligament))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB denote)
              (NP
                (NP
                  (NP (CD three) (JJ different) (NNS types))
                  (PP (IN of)
                    (NP (NNS structures))))
                (: :)
                (NP
                  (NP (NNP Fibrous) (NN tissue))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ connects)
                        (NP (NNS bones))
                        (PP (TO to)
                          (NP (JJ other) (NNS bones)))))))))))))
    (. .)))

prep_in(used-8, anatomy-2)
det(Ligament-6, the-4)
nn(Ligament-6, term-5)
nsubjpass(used-8, Ligament-6)
xsubj(denote-10, Ligament-6)
auxpass(used-8, is-7)
root(ROOT-0, used-8)
aux(denote-10, to-9)
xcomp(used-8, denote-10)
num(types-13, three-11)
amod(types-13, different-12)
dobj(denote-10, types-13)
prep_of(types-13, structures-15)
nn(tissue-18, Fibrous-17)
dep(types-13, tissue-18)
nsubj(connects-20, tissue-18)
rcmod(tissue-18, connects-20)
dobj(connects-20, bones-21)
amod(bones-24, other-23)
prep_to(connects-20, bones-24)

(ROOT
  (S
    (ADVP (RB Additionally))
    (, ,)
    (NP (NNP Luftwaffe))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Swiss) (NNP Air) (NNP Force))
            (PP (IN in)
              (NP (NNP German)))
            (PRN (-LRB- -LRB-)
              (S
                (NP (NNP Forces) (NNP aÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ©))
                (VP (VBZ riennes)
                  (NP
                    (NP
                      (NP (NNS suisses))
                      (PP (IN in)
                        (NP (NNP French))))
                    (CC and)
                    (NP
                      (NP (NNP Forze) (NNP Aeree) (NNP Svizzere))
                      (PP (IN in)
                        (NP (NNP Italian)))))))
              (-RRB- -RRB-))))))
    (. .)))

advmod(name-7, Additionally-1)
nsubj(name-7, Luftwaffe-3)
cop(name-7, is-4)
advmod(name-7, also-5)
det(name-7, the-6)
root(ROOT-0, name-7)
det(Force-12, the-9)
nn(Force-12, Swiss-10)
nn(Force-12, Air-11)
prep_of(name-7, Force-12)
prep_in(Force-12, German-14)
nn(©-20, Forces-16)
nn(©-20, aÃƒâˆžÃ-17)
nn(©-20, ‚-18)
nn(©-20, Â-19)
nsubj(riennes-21, ©-20)
dep(Force-12, riennes-21)
dobj(riennes-21, suisses-22)
prep_in(suisses-22, French-24)
nn(Svizzere-28, Forze-26)
nn(Svizzere-28, Aeree-27)
dobj(riennes-21, Svizzere-28)
conj_and(suisses-22, Svizzere-28)
prep_in(Svizzere-28, Italian-30)

(ROOT
  (S
    (NP (NNP Loglan))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ constructed) (NN language))
        (VP
          (ADVP (RB originally))
          (VBN designed)
          (PP (IN for)
            (NP (JJ linguistic) (NN research)))
          (, ,)
          (PP (RB particularly) (IN for)
            (S
              (VP (VBG investigating)
                (NP (DT the) (NNP Sapir-Whorf) (NNPS Hypothesis))))))))
    (. .)))

nsubj(language-5, Loglan-1)
cop(language-5, is-2)
det(language-5, a-3)
amod(language-5, constructed-4)
root(ROOT-0, language-5)
advmod(designed-7, originally-6)
partmod(language-5, designed-7)
amod(research-10, linguistic-9)
prep_for(designed-7, research-10)
advmod(designed-7, particularly-12)
prepc_for(designed-7, investigating-14)
det(Hypothesis-17, the-15)
nn(Hypothesis-17, Sapir-Whorf-16)
dobj(investigating-14, Hypothesis-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ scientific) (NN context)))
    (, ,)
    (NP (DT the) (NN word) (NN Light))
    (VP (VBZ is)
      (ADVP (RB sometimes))
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP (DT the) (JJ entire) (JJ electromagnetic) (NN spectrum))))))))
    (. .)))

det(context-4, a-2)
amod(context-4, scientific-3)
prep_in(used-11, context-4)
det(Light-8, the-6)
nn(Light-8, word-7)
nsubjpass(used-11, Light-8)
xsubj(refer-13, Light-8)
auxpass(used-11, is-9)
advmod(used-11, sometimes-10)
root(ROOT-0, used-11)
aux(refer-13, to-12)
xcomp(used-11, refer-13)
det(spectrum-18, the-15)
amod(spectrum-18, entire-16)
amod(spectrum-18, electromagnetic-17)
prep_to(refer-13, spectrum-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Roman) (NNP Catholic) (NN theology)))
    (, ,)
    (NP
      (NP (NNP Limbo))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (NP (JJ Latin) (NNS limbus))
            (, ,)
            (NP (NN edge)
              (CC or)
              (NN boundary))
            (, ,))
          (SBAR
            (S
              (VP (VBG referring)
                (PP (TO to)
                  (NP
                    (NP (DT the))
                    ('' '')
                    (SBAR
                      (S
                        (VP (VBP edge) ('' '')))))))))
          (PP (IN of)
            (NP (NNP Hell))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hypothetical) (NN afterlife) (NN condition))
        (PP (IN of)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP die)
                  (PP (IN in)
                    (NP (JJ original) (NN sin)))
                  (PP (IN without)
                    (S
                      (VP (VBG being)
                        (VP (VBN assigned)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN Hell))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN damned))
                                  (PRN (-LRB- -LRB-)
                                    (NP (NNP gehenna))
                                    (-RRB- -RRB-)))))))))))))))))
    (. .)))

nn(theology-4, Roman-2)
nn(theology-4, Catholic-3)
prep_in(condition-28, theology-4)
nsubj(condition-28, Limbo-6)
amod(limbus-9, Latin-8)
dep(Limbo-6, limbus-9)
appos(limbus-9, edge-11)
appos(limbus-9, boundary-13)
conj_or(edge-11, boundary-13)
rcmod(limbus-9, referring-15)
prep_to(referring-15, the-17)
rcmod(the-17, edge-19)
prep_of(limbus-9, Hell-22)
cop(condition-28, is-24)
det(condition-28, a-25)
amod(condition-28, hypothetical-26)
nn(condition-28, afterlife-27)
root(ROOT-0, condition-28)
prep_of(condition-28, those-30)
nsubj(die-32, those-30)
rcmod(those-30, die-32)
amod(sin-35, original-34)
prep_in(die-32, sin-35)
auxpass(assigned-38, being-37)
prepc_without(die-32, assigned-38)
det(Hell-41, the-40)
prep_to(assigned-38, Hell-41)
det(damned-44, the-43)
prep_of(Hell-41, damned-44)
appos(damned-44, gehenna-46)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN context))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ fluid) (NN flow))
            (ADVP (JJ relative)
              (PP (TO to)
                (NP (DT a) (NN body))))))))
    (, ,)
    (NP (DT the) (NNP Lift) (NN force))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN vector) (NNS components))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ aerodynamic) (NN force))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADJP (JJ perpendicular)
                    (PP (TO to)
                      (NP (DT the) (NN flow) (NN direction)))))))))))
    (. .)))

det(context-3, the-2)
prep_in(components-19, context-3)
det(flow-7, a-5)
amod(flow-7, fluid-6)
prep_of(context-3, flow-7)
advmod(flow-7, relative-8)
det(body-11, a-10)
prep_to(relative-8, body-11)
det(force-15, the-13)
nn(force-15, Lift-14)
nsubj(components-19, force-15)
cop(components-19, is-16)
det(components-19, the-17)
nn(components-19, vector-18)
root(ROOT-0, components-19)
det(force-23, the-21)
amod(force-23, aerodynamic-22)
prep_of(components-19, force-23)
nsubj(perpendicular-26, force-23)
cop(perpendicular-26, is-25)
rcmod(force-23, perpendicular-26)
det(direction-30, the-28)
nn(direction-30, flow-29)
prep_to(perpendicular-26, direction-30)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Lombards))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Latin) (NNP Langobardi))
          (, ,)
          (NP
            (ADJP (JJ whence)
              (NP (DT the) (NN alternative) (NNS names)))
            (NNS Langobards))
          (CC and)
          (NP (NNP Longobards)))
        (-RRB- -RRB-)))
    (VP (VBD were)
      (NP (DT a) (JJ Germanic) (NNS people))
      (ADVP (RB originally))
      (PP (IN from)
        (NP
          (NP (NNP Northern) (NNP Europe))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBD settled)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN valley))
                      (PP (IN of)
                        (NP (DT the) (NNP Danube))))))
                (CC and)
                (VP
                  (PP (IN from)
                    (NP (RB there)))
                  (VBD invaded)
                  (NP
                    (NP (NNP Byzantine) (NNP Italy))
                    (PP (IN in)
                      (NP (CD 568))))
                  (PP (IN under)
                    (NP
                      (NP (DT the) (NN leadership))
                      (PP (IN of)
                        (NP (NNP Alboin))))))))))))
    (. .)))

det(Lombards-2, The-1)
nsubj(people-18, Lombards-2)
nn(Langobardi-5, Latin-4)
dep(Lombards-2, Langobardi-5)
amod(Langobards-11, whence-7)
det(names-10, the-8)
nn(names-10, alternative-9)
dep(whence-7, names-10)
dep(Lombards-2, Langobards-11)
conj_and(Langobardi-5, Langobards-11)
dep(Lombards-2, Longobards-13)
conj_and(Langobardi-5, Longobards-13)
cop(people-18, were-15)
det(people-18, a-16)
amod(people-18, Germanic-17)
root(ROOT-0, people-18)
advmod(people-18, originally-19)
nn(Europe-22, Northern-21)
prep_from(people-18, Europe-22)
nsubj(settled-24, Europe-22)
nsubj(invaded-34, Europe-22)
rcmod(Europe-22, settled-24)
det(valley-27, the-26)
prep_in(settled-24, valley-27)
det(Danube-30, the-29)
prep_of(valley-27, Danube-30)
prep(invaded-34, from-32)
pobj(from-32, there-33)
rcmod(Europe-22, invaded-34)
conj_and(settled-24, invaded-34)
nn(Italy-36, Byzantine-35)
dobj(invaded-34, Italy-36)
prep_in(Italy-36, 568-38)
det(leadership-41, the-40)
prep_under(invaded-34, leadership-41)
prep_of(leadership-41, Alboin-43)

(ROOT
  (S
    (NP (NNP Lisp))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP
            (NP
              (NP (NN computer) (NN programming) (NNS languages))
              (PP (IN with)
                (NP (DT a) (JJ long) (NN history))))
            (CC and)
            (NP (DT a)
              (ADJP (JJ distinctive) (, ,) (RB fully) (JJ parenthesized))
              (NN syntax))))))
    (. .)))

nsubj(family-4, Lisp-1)
cop(family-4, is-2)
det(family-4, a-3)
root(ROOT-0, family-4)
nn(languages-8, computer-6)
nn(languages-8, programming-7)
prep_of(family-4, languages-8)
det(history-12, a-10)
amod(history-12, long-11)
prep_with(languages-8, history-12)
det(syntax-19, a-14)
amod(parenthesized-18, distinctive-15)
advmod(parenthesized-18, fully-17)
amod(syntax-19, parenthesized-18)
prep_of(family-4, syntax-19)
conj_and(languages-8, syntax-19)

(ROOT
  (S
    (NP (NNP Luna))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ Latin) (NN name))
          (PP (IN of)
            (NP
              (NP (DT the) (NN Earth) (POS 's))
              (NN Moon))))
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT the) (NNP Roman) (NN moon) (NN goddess) (NN </HYPER>))))
    (. .)))

nsubj(name-5, Luna-1)
cop(name-5, is-2)
det(name-5, the-3)
amod(name-5, Latin-4)
root(ROOT-0, name-5)
det(Earth-8, the-7)
poss(Moon-10, Earth-8)
prep_of(name-5, Moon-10)
det(</HYPER>-18, the-14)
nn(</HYPER>-18, Roman-15)
nn(</HYPER>-18, moon-16)
nn(</HYPER>-18, goddess-17)
conj_and(name-5, </HYPER>-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Lubricant))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB sometimes))
          (VBN referred)
          (S
            (VP (TO to) ('' '')
              (VP (VB Lube) ('' '')))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN substance))
        (PRN (-LRB- -LRB-)
          (ADVP (RB often))
          (NP (DT a) (NN liquid))
          (-RRB- -RRB-))
        (VP (VBN introduced)
          (PP (IN between)
            (NP (CD two)))
          (S
            (VP (VBG moving)
              (NP (NNS surfaces))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB reduce)
                      (NP (DT the) (NN friction)))
                    (CC and)
                    (VP (VB wear)
                      (PP (IN between)
                        (NP (PRP them))))))))))))
    (. .)))

det(Lubricant-2, A-1)
nsubj(substance-13, Lubricant-2)
advmod(referred-5, sometimes-4)
dep(Lubricant-2, referred-5)
aux(Lube-8, to-6)
xcomp(referred-5, Lube-8)
cop(substance-13, is-11)
det(substance-13, a-12)
root(ROOT-0, substance-13)
dep(liquid-17, often-15)
det(liquid-17, a-16)
appos(substance-13, liquid-17)
partmod(substance-13, introduced-19)
prep_between(introduced-19, two-21)
xcomp(introduced-19, moving-22)
dobj(moving-22, surfaces-23)
aux(reduce-25, to-24)
xcomp(moving-22, reduce-25)
det(friction-27, the-26)
dobj(reduce-25, friction-27)
xcomp(moving-22, wear-29)
conj_and(reduce-25, wear-29)
prep_between(wear-29, them-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Llama))
      (PRN (-LRB- -LRB-)
        (NP (NNP Lama) (NNP glama))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNP South) (NNP American) (NN camelid))
        (, ,)
        (VP
          (ADVP (RB widely))
          (VBN used)
          (PP (IN as)
            (NP
              (NP
                (NP (DT a) (NN pack) (NN animal))
                (PP (IN by)
                  (NP (DT the) (NNPS Incas))))
              (CC and)
              (NP
                (NP (JJ other) (NNS natives))
                (PP (IN of)
                  (NP (DT the) (NNP Andes) (NNS mountains)))))))))
    (. .)))

det(Llama-2, The-1)
nsubj(camelid-11, Llama-2)
nn(glama-5, Lama-4)
appos(Llama-2, glama-5)
cop(camelid-11, is-7)
det(camelid-11, a-8)
nn(camelid-11, South-9)
nn(camelid-11, American-10)
root(ROOT-0, camelid-11)
advmod(used-14, widely-13)
partmod(camelid-11, used-14)
det(animal-18, a-16)
nn(animal-18, pack-17)
prep_as(used-14, animal-18)
det(Incas-21, the-20)
prep_by(animal-18, Incas-21)
amod(natives-24, other-23)
prep_as(used-14, natives-24)
conj_and(animal-18, natives-24)
det(mountains-28, the-26)
nn(mountains-28, Andes-27)
prep_of(natives-24, mountains-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Litre)
        (CC or)
        (NN liter))
      (PRN (-LRB- -LRB-)
        (S
          (VP (VB see)
            (NP (NN spelling) (NNS differences))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN volume)))))
    (. .)))

det(Litre-2, The-1)
nsubj(unit-12, Litre-2)
conj_or(Litre-2, liter-4)
nsubj(unit-12, liter-4)
dep(Litre-2, see-6)
nn(differences-8, spelling-7)
dobj(see-6, differences-8)
cop(unit-12, is-10)
det(unit-12, a-11)
root(ROOT-0, unit-12)
prep_of(unit-12, volume-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN word) (NNS Locus))
      (PRN (-LRB- -LRB-)
        (NP (CD plural) (NNS loci))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (ADJP (JJ Latin))
      (PP (IN for) ('' '')
        (NP (NN place) ('' ''))))
    (. .)))

det(Locus-3, The-1)
nn(Locus-3, word-2)
nsubj(Latin-9, Locus-3)
num(loci-6, plural-5)
appos(Locus-3, loci-6)
cop(Latin-9, is-8)
root(ROOT-0, Latin-9)
prep_for(Latin-9, place-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (SINV
    (S
      (NP (DT The) (NNP Lupercalia))
      (VP (VBD was)
        (NP (DT a)
          (ADJP (RB very) (JJ ancient))
          (, ,)
          (ADJP (RB possibly) (JJ pre-Roman))
          (JJ pastoral) (NN festival))))
    (, ,)
    (VP (VBD observed)
      (PP (IN on)
        (NP (NNP February) (CD 13)))
      (PP (IN through)
        (NP (NNP February) (CD 15)))
      (S
        (VP (TO to)
          (VP (VB avert)
            (NP (JJ evil) (NNS spirits)
              (CC and)
              (NN purify))))))
    (NP (DT the) (NN city))
    (, ,)
    (S
      (VP (VBG releasing)
        (NP (NN health)
          (CC and)
          (NN fertility))))
    (. .)))

det(Lupercalia-2, The-1)
nsubj(festival-11, Lupercalia-2)
cop(festival-11, was-3)
det(festival-11, a-4)
advmod(ancient-6, very-5)
amod(festival-11, ancient-6)
advmod(pre-Roman-9, possibly-8)
amod(festival-11, pre-Roman-9)
amod(festival-11, pastoral-10)
ccomp(observed-13, festival-11)
root(ROOT-0, observed-13)
prep_on(observed-13, February-15)
num(February-15, 13-16)
prep_through(observed-13, February-18)
num(February-18, 15-19)
aux(avert-21, to-20)
xcomp(observed-13, avert-21)
amod(spirits-23, evil-22)
dobj(avert-21, spirits-23)
dobj(avert-21, purify-25)
conj_and(spirits-23, purify-25)
det(city-27, the-26)
nsubj(observed-13, city-27)
partmod(observed-13, releasing-29)
dobj(releasing-29, health-30)
dobj(releasing-29, fertility-32)
conj_and(health-30, fertility-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Loa))
      (PRN (-LRB- -LRB-)
        (ADVP (RB also))
        (NP (NNP Lwa)
          (CC or)
          (NNP L'wha))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP
          (NP (DT the) (NNS spirits))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Vodou) (NN religion))
              (VP (VBN practiced)
                (PP (IN in)
                  (NP (NNP Haiti)))))))
        (, ,)
        (CC and)
        (NP
          (NP (JJ other) (NNS parts))
          (PP (IN of)
            (NP (DT the) (NN world))))))
    (. .)))

det(Loa-2, The-1)
nsubj(spirits-11, Loa-2)
dep(Lwa-5, also-4)
appos(Loa-2, Lwa-5)
appos(Loa-2, L'wha-7)
conj_or(Lwa-5, L'wha-7)
cop(spirits-11, are-9)
det(spirits-11, the-10)
root(ROOT-0, spirits-11)
det(religion-15, the-13)
nn(religion-15, Vodou-14)
prep_of(spirits-11, religion-15)
partmod(religion-15, practiced-16)
prep_in(practiced-16, Haiti-18)
amod(parts-22, other-21)
conj_and(spirits-11, parts-22)
det(world-25, the-24)
prep_of(parts-22, world-25)

(ROOT
  (S
    (NP (NNP LambdaMOO))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ online) (NN community))
        (PP (IN of)
          (NP
            (NP (DT the) (NN variety))
            (VP (VBN called)
              (NP (DT a) (NNP MOO)))))))
    (. .)))

nsubj(community-5, LambdaMOO-1)
cop(community-5, is-2)
det(community-5, an-3)
amod(community-5, online-4)
root(ROOT-0, community-5)
det(variety-8, the-7)
prep_of(community-5, variety-8)
partmod(variety-8, called-9)
det(MOO-11, a-10)
dobj(called-9, MOO-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Lamborghini))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ Italian) (NN manufacturer))
        (PP (IN of)
          (NP (NNS sports) (NNS cars))))
      (, ,)
      (PP (VBN based)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ small) (JJ Italian) (NN village))
            (PP (IN of)
              (NP
                (NP (NNP Sant) (`` `) (NNP Agata) (NNP Bolognese) (, ,))
                (PP (IN near)
                  (NP (NNP Bologna)))))))))
    (. .)))

nsubj(manufacturer-5, Lamborghini-1)
cop(manufacturer-5, is-2)
det(manufacturer-5, an-3)
amod(manufacturer-5, Italian-4)
root(ROOT-0, manufacturer-5)
nn(cars-8, sports-7)
prep_of(manufacturer-5, cars-8)
prep(manufacturer-5, based-10)
pcomp(based-10, in-11)
det(village-15, the-12)
amod(village-15, small-13)
amod(village-15, Italian-14)
prep_in(based-10, village-15)
nn(Bolognese-20, Sant-17)
nn(Bolognese-20, Agata-19)
prep_of(village-15, Bolognese-20)
prep_near(Bolognese-20, Bologna-23)

(ROOT
  (S
    (NP (DT A) (NNP Lens))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ optical) (NN device))
        (PP (IN with)
          (NP
            (NP (JJ perfect)
              (CC or)
              (JJ approximate) (NN axial) (NNS symmetry))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ transmits)
                  (CC and)
                  (VBZ refracts)
                  (NP
                    (ADJP (JJ light) (, ,) (JJ converging)
                      (CC or)
                      (JJ diverging))
                    (DT the) (NN beam)))))))))
    (. .)))

det(Lens-2, A-1)
nsubj(device-6, Lens-2)
cop(device-6, is-3)
det(device-6, an-4)
amod(device-6, optical-5)
root(ROOT-0, device-6)
amod(symmetry-12, perfect-8)
conj_or(perfect-8, approximate-10)
amod(symmetry-12, approximate-10)
nn(symmetry-12, axial-11)
prep_with(device-6, symmetry-12)
nsubj(transmits-14, symmetry-12)
nsubj(refracts-16, symmetry-12)
rcmod(symmetry-12, transmits-14)
rcmod(symmetry-12, refracts-16)
conj_and(transmits-14, refracts-16)
amod(beam-23, light-17)
conj_or(light-17, converging-19)
amod(beam-23, converging-19)
conj_or(light-17, diverging-21)
amod(beam-23, diverging-21)
det(beam-23, the-22)
dobj(transmits-14, beam-23)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Lego))
      (, ,)
      (VP
        (ADVP (RB officially))
        (VBN trademarked)
        (NP (NNP Lego)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN line))
        (PP (IN of)
          (NP
            (NP (NN construction) (NNS toys))
            (VP (VBN manufactured)
              (PP (IN by)
                (NP
                  (NP (DT the) (NNP Lego) (NNP Group))
                  (, ,)
                  (NP
                    (NP (DT a)
                      (ADJP (RB privately) (VBN held))
                      (NN company))
                    (VP (VBN based)
                      (PP (IN in)
                        (NP (NNP Denmark))))))))))))
    (. .)))

nsubj(line-9, Lego-1)
advmod(trademarked-4, officially-3)
partmod(Lego-1, trademarked-4)
dobj(trademarked-4, Lego-5)
cop(line-9, is-7)
det(line-9, a-8)
root(ROOT-0, line-9)
nn(toys-12, construction-11)
prep_of(line-9, toys-12)
partmod(toys-12, manufactured-13)
det(Group-17, the-15)
nn(Group-17, Lego-16)
agent(manufactured-13, Group-17)
det(company-22, a-19)
advmod(held-21, privately-20)
amod(company-22, held-21)
appos(Group-17, company-22)
partmod(company-22, based-23)
prep_in(based-23, Denmark-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NNP Lunatic))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NN colloquially))
            (: :)
            (NP (JJ '') (JJ looney) ('' '')
              (CC or)
              (`` '') (NN loon) ('' '')))
          (-RRB- -RRB-)))
      (VP (VBZ is)
        (NP
          (NP (DT a)
            (ADJP (RB commonly) (VBN used))
            (NN term))
          (PP (IN for)
            (NP
              (NP (DT a) (NN person))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is)
                    (ADJP
                      (ADJP (RB mentally) (JJ ill))
                      (, ,)
                      (ADJP (JJ dangerous))
                      (, ,)
                      (ADJP (JJ foolish))
                      (CC or)
                      (ADJP (JJ unpredictable)))))))))))
    (: :)
    (S
      (NP (DT a) (NN condition))
      (ADVP (RB once))
      (VP (VBD called)
        (ADVP (RB lunacy))))
    (. .)))

det(Lunatic-2, A-1)
nsubj(term-18, Lunatic-2)
dep(Lunatic-2, colloquially-4)
dep(colloquially-4, looney-7)
dep(colloquially-4, loon-11)
conj_or(looney-7, loon-11)
cop(term-18, is-14)
det(term-18, a-15)
advmod(used-17, commonly-16)
amod(term-18, used-17)
root(ROOT-0, term-18)
det(person-21, a-20)
prep_for(term-18, person-21)
nsubj(ill-25, person-21)
nsubj(dangerous-27, person-21)
nsubj(foolish-29, person-21)
nsubj(unpredictable-31, person-21)
cop(ill-25, is-23)
advmod(ill-25, mentally-24)
rcmod(person-21, ill-25)
rcmod(person-21, dangerous-27)
conj_or(ill-25, dangerous-27)
rcmod(person-21, foolish-29)
conj_or(ill-25, foolish-29)
rcmod(person-21, unpredictable-31)
conj_or(ill-25, unpredictable-31)
det(condition-34, a-33)
nsubj(called-36, condition-34)
advmod(called-36, once-35)
parataxis(term-18, called-36)
advmod(called-36, lunacy-37)

(ROOT
  (S
    (NP (DT The) (NNPS Leonids))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ prolific) (NN meteor) (NN shower))
        (VP (VBN associated)
          (PP (IN with)
            (NP (DT the) (JJ comet) (NN Tempel-Tuttle))))))
    (. .)))

det(Leonids-2, The-1)
nsubj(shower-7, Leonids-2)
cop(shower-7, are-3)
det(shower-7, a-4)
amod(shower-7, prolific-5)
nn(shower-7, meteor-6)
root(ROOT-0, shower-7)
partmod(shower-7, associated-8)
det(Tempel-Tuttle-12, the-10)
amod(Tempel-Tuttle-12, comet-11)
prep_with(associated-8, Tempel-Tuttle-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN name))
    (ADVP (RB LAME))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ recursive) (NN acronym))
        (PP (IN for)
          (NP
            (NP
              (NP (NNP LAME) (NNP Aint))
              (NP (DT an) (NNP MP3) (NNP Encoder)))
            (, ,)
            (VP (VBG reflecting)
              (NP (NNP LAMEs) (JJ early) (NN history))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP it))
                  (VP (VBD was) (RB not)
                    (ADVP (RB actually))
                    (NP
                      (NP (DT an) (NN encoder))
                      (, ,)
                      (CC but)
                      (RB merely)
                      (NP (DT a)
                        (ADJP (VBN set)
                          (PP (IN of)
                            (NP
                              (NP (NNS patches))
                              (PP (IN against)
                                (NP (DT the)
                                  (ADJP (RB freely) (JJ available))
                                  (NNP ISO) (NN demonstration) (NN source))))))
                        (NN code)))))))))))
    (. .)))

det(name-2, The-1)
nsubj(acronym-7, name-2)
advmod(acronym-7, LAME-3)
cop(acronym-7, is-4)
det(acronym-7, a-5)
amod(acronym-7, recursive-6)
root(ROOT-0, acronym-7)
nn(Aint-10, LAME-9)
prep_for(acronym-7, Aint-10)
det(Encoder-13, an-11)
nn(Encoder-13, MP3-12)
dep(Aint-10, Encoder-13)
partmod(Aint-10, reflecting-15)
nn(history-18, LAMEs-16)
amod(history-18, early-17)
dobj(reflecting-15, history-18)
advmod(encoder-25, when-19)
nsubj(encoder-25, it-20)
cop(encoder-25, was-21)
neg(encoder-25, not-22)
advmod(encoder-25, actually-23)
det(encoder-25, an-24)
advcl(reflecting-15, encoder-25)
advcl(reflecting-15, merely-28)
advmod(encoder-25, merely-28)
conj_but(encoder-25, merely-28)
det(code-40, a-29)
amod(code-40, set-30)
prep_of(set-30, patches-32)
det(source-39, the-34)
advmod(available-36, freely-35)
amod(source-39, available-36)
nn(source-39, ISO-37)
nn(source-39, demonstration-38)
prep_against(patches-32, source-39)
dep(encoder-25, code-40)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ linear) (NN algebra)))
    (, ,)
    (NP (DT a) (NNPS Basis))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (NP
            (NP
              (NP (NNS vectors))
              (SBAR
                (WHNP (WDT that))
                (S (, ,)
                  (PP (IN in)
                    (NP (DT a) (JJ linear) (NN combination)))
                  (, ,)
                  (VP (MD can)
                    (VP (VB represent)
                      (NP
                        (NP (DT every) (NN vector))
                        (PP (IN in)
                          (NP (DT a) (VBN given) (NN vector) (NN space)))))))))
            (, ,)
            (CC and)
            (NP
              (NP (JJ such))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT no) (NN element))
                    (PP (IN of)
                      (NP (DT the) (NN set))))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN represented)
                        (PP (IN as)
                          (NP
                            (NP (DT a) (JJ linear) (NN combination))
                            (PP (IN of)
                              (NP (DT the) (NNS others)))))))))))))))
    (. .)))

amod(algebra-3, linear-2)
prep_in(set-9, algebra-3)
det(Basis-6, a-5)
nsubj(set-9, Basis-6)
cop(set-9, is-7)
det(set-9, a-8)
root(ROOT-0, set-9)
prep_of(set-9, vectors-11)
nsubj(represent-20, vectors-11)
det(combination-17, a-15)
amod(combination-17, linear-16)
prep_in(represent-20, combination-17)
aux(represent-20, can-19)
rcmod(vectors-11, represent-20)
det(vector-22, every-21)
dobj(represent-20, vector-22)
det(space-27, a-24)
amod(space-27, given-25)
nn(space-27, vector-26)
prep_in(vector-22, space-27)
prep_of(set-9, such-30)
conj_and(vectors-11, such-30)
nsubj(represent-20, such-30)
complm(represented-39, that-31)
det(element-33, no-32)
nsubjpass(represented-39, element-33)
det(set-36, the-35)
prep_of(element-33, set-36)
aux(represented-39, can-37)
auxpass(represented-39, be-38)
dep(such-30, represented-39)
det(combination-43, a-41)
amod(combination-43, linear-42)
prep_as(represented-39, combination-43)
det(others-46, the-45)
prep_of(combination-43, others-46)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Loch))
      (PRN (-LRB- -LRB-)
        (ADVP (RB usually))
        (NP
          (NP (NNP Lough))
          (PP (IN as)
            (NP
              (NP (DT a) (NN name) (NN element))
              (PP (IN outside)
                (NP (NNP Scotland))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN body))
        (PP (IN of)
          (NP (NN water)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (ADVP (RB either))
              (NP
                (NP
                  (NP (DT a) (NN lake))
                  (CC or)
                  (NP (DT a) (NN sea) (NN inlet)))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD may)
                      (VP (VB be)
                        (VP
                          (ADVP (RB also))
                          (NP (DT a) (NN firth) (, ,) (NN fjord) (, ,) (NN estuary)
                            (CC or)
                            (NN bay)))))))))))))
    (. .)))

det(Loch-2, A-1)
nsubj(body-15, Loch-2)
dep(Lough-5, usually-4)
dep(Loch-2, Lough-5)
det(element-9, a-7)
nn(element-9, name-8)
prep_as(Lough-5, element-9)
prep_outside(element-9, Scotland-11)
cop(body-15, is-13)
det(body-15, a-14)
root(ROOT-0, body-15)
nsubj(lake-22, body-15)
prep_of(body-15, water-17)
cop(lake-22, is-19)
advmod(lake-22, either-20)
det(lake-22, a-21)
rcmod(body-15, lake-22)
nsubj(firth-33, lake-22)
det(inlet-26, a-24)
nn(inlet-26, sea-25)
rcmod(body-15, inlet-26)
conj_or(lake-22, inlet-26)
nsubj(firth-33, inlet-26)
aux(firth-33, may-29)
aux(firth-33, be-30)
advmod(firth-33, also-31)
det(firth-33, a-32)
rcmod(lake-22, firth-33)
rcmod(lake-22, fjord-35)
conj_or(firth-33, fjord-35)
rcmod(lake-22, estuary-37)
conj_or(firth-33, estuary-37)
rcmod(lake-22, bay-39)
conj_or(firth-33, bay-39)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Lexeme))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ abstract) (NN unit))
        (PP (IN of)
          (NP
            (NP (JJ morphological) (NN analysis))
            (PP (IN in)
              (NP
                (NP (NNS linguistics))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADVP (RB roughly))
                    (VP (VBZ corresponds)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN set))
                          (PP (IN of)
                            (NP
                              (NP (NNS forms))
                              (VP (VBN taken)
                                (PP (IN by)
                                  (NP (DT a) (JJ single) (NN word)))))))))))))))))
    (. .)))

det(Lexeme-2, A-1)
nsubj(unit-6, Lexeme-2)
cop(unit-6, is-3)
det(unit-6, an-4)
amod(unit-6, abstract-5)
root(ROOT-0, unit-6)
amod(analysis-9, morphological-8)
prep_of(unit-6, analysis-9)
prep_in(analysis-9, linguistics-11)
nsubj(corresponds-15, linguistics-11)
advmod(corresponds-15, roughly-14)
rcmod(linguistics-11, corresponds-15)
det(set-18, a-17)
prep_to(corresponds-15, set-18)
prep_of(set-18, forms-20)
partmod(forms-20, taken-21)
det(word-25, a-23)
amod(word-25, single-24)
agent(taken-21, word-25)

(ROOT
  (S
    (NP (DT The) (NN name) (NN Lud))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ legendary) (JJ British) (NN king))
          (CC and)
          (NP
            (NP (NN founder))
            (PP (IN of)
              (NP (NNP London))))))
      (SBAR (IN as)
        (S
          (VP
            (VP (VBN accounted)
              (PP (IN by)
                (NP
                  (NP (NNP Geoffrey))
                  (PP (IN of)
                    (NP (NNP Monmouth))))))
            (, ,)
            (VP (VBN buried)
              (PP (IN at)
                (NP
                  (NP (NNP Ludgate))
                  (, ,)
                  (ADVP (RB originally))
                  (NP
                    (NP (DT the) (JJ westernmost) (NN gate))
                    (PP (IN of)
                      (NP (DT the) (NNP London) (NNP Wall)))))))
            (CC and)
            (VP
              (ADVP (NN today))
              (VBN located)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN approach))
                  (PP (IN of)
                    (NP
                      (NP (NNP St) (NNP Paul) (POS 's))
                      (NN Cathedral))))))))))
    (. .)))

det(Lud-3, The-1)
nn(Lud-3, name-2)
nsubj(refers-4, Lud-3)
root(ROOT-0, refers-4)
det(king-9, a-6)
amod(king-9, legendary-7)
amod(king-9, British-8)
prep_to(refers-4, king-9)
prep_to(refers-4, founder-11)
conj_and(king-9, founder-11)
prep_of(founder-11, London-13)
mark(accounted-15, as-14)
advcl(refers-4, accounted-15)
prep_by(accounted-15, Geoffrey-17)
prep_of(Geoffrey-17, Monmouth-19)
advcl(refers-4, buried-21)
conj_and(accounted-15, buried-21)
prep_at(buried-21, Ludgate-23)
advmod(Ludgate-23, originally-25)
det(gate-28, the-26)
amod(gate-28, westernmost-27)
dep(Ludgate-23, gate-28)
det(Wall-32, the-30)
nn(Wall-32, London-31)
prep_of(gate-28, Wall-32)
advmod(located-35, today-34)
advcl(refers-4, located-35)
conj_and(accounted-15, located-35)
det(approach-38, the-37)
prep_on(located-35, approach-38)
nn(Paul-41, St-40)
poss(Cathedral-43, Paul-41)
prep_of(approach-38, Cathedral-43)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN science)))
    (, ,)
    (NP (DT a) (NN Linker)
      (CC or)
      (NN link) (NN editor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN program))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ takes)
                (NP
                  (NP
                    (QP (CD one)
                      (CC or)
                      (JJR more))
                    (NNS objects))
                  (VP (VBN generated)
                    (PP (IN by)
                      (NP (NNS compilers))))))
              (CC and)
              (VP (VBZ assembles)
                (NP (PRP them))
                (PP (IN into)
                  (NP (DT a) (JJ single) (NN executable) (NN program)))))))))
    (. .)))

nn(science-3, computer-2)
prep_in(program-12, science-3)
det(editor-9, a-5)
nn(editor-9, Linker-6)
conj_or(Linker-6, link-8)
nn(editor-9, link-8)
nsubj(program-12, editor-9)
cop(program-12, is-10)
det(program-12, a-11)
root(ROOT-0, program-12)
nsubj(takes-14, program-12)
nsubj(assembles-23, program-12)
rcmod(program-12, takes-14)
num(objects-18, one-15)
conj_or(one-15, more-17)
quantmod(one-15, more-17)
num(objects-18, more-17)
dobj(takes-14, objects-18)
partmod(objects-18, generated-19)
agent(generated-19, compilers-21)
rcmod(program-12, assembles-23)
conj_and(takes-14, assembles-23)
dobj(assembles-23, them-24)
det(program-29, a-26)
amod(program-29, single-27)
nn(program-29, executable-28)
prep_into(assembles-23, program-29)

(ROOT
  (S
    (NP (NNP Lusitania))
    (VP (VBD was)
      (NP
        (NP (DT an) (JJ ancient) (NNP Roman) (NN province))
        (PP (VBG including)
          (NP
            (NP
              (NP
                (QP (RB approximately) (DT all)))
              (PP (IN of)
                (NP
                  (NP (JJ modern) (NNP Portugal) (NN south))
                  (PP (IN of)
                    (NP (DT the) (NNP Douro) (NN river))))))
            (, ,)
            (CC and)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP (JJ modern) (NNP Spain))))))
        (PRN (-LRB- -LRB-)
          (NP
            (NP
              (NP (DT the)
                (ADJP (JJ present) (JJ autonomous))
                (NN community))
              (PP (IN of)
                (NP (NNP Extremadura))))
            (CC and)
            (NP
              (NP (DT a) (JJ small) (NN part))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN province))
                  (PP (IN of)
                    (NP (NNP Salamanca)))))))
          (-RRB- -RRB-))))
    (. .)))

nsubj(province-6, Lusitania-1)
cop(province-6, was-2)
det(province-6, an-3)
amod(province-6, ancient-4)
nn(province-6, Roman-5)
root(ROOT-0, province-6)
quantmod(all-9, approximately-8)
prep_including(province-6, all-9)
amod(south-13, modern-11)
nn(south-13, Portugal-12)
prep_of(all-9, south-13)
det(river-17, the-15)
nn(river-17, Douro-16)
prep_of(south-13, river-17)
prep_including(province-6, part-20)
conj_and(all-9, part-20)
amod(Spain-23, modern-22)
prep_of(part-20, Spain-23)
det(community-28, the-25)
amod(autonomous-27, present-26)
amod(community-28, autonomous-27)
dep(province-6, community-28)
prep_of(community-28, Extremadura-30)
det(part-34, a-32)
amod(part-34, small-33)
dep(province-6, part-34)
conj_and(community-28, part-34)
det(province-37, the-36)
prep_of(part-34, province-37)
prep_of(province-37, Salamanca-39)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT a) (NNP Ligand))
    (VP (VBZ is)
      (ADVP (RB either))
      (NP
        (NP (DT an) (NN atom) (, ,) (NN ion) (, ,)
          (CC or)
          (NN molecule))
        (PRN (-LRB- -LRB-)
          (S
            (VP
              (VP (VB see)
                (ADVP (RB also)))
              (: :)
              (VP (NN functional)
                (NP (NN group)))))
          (-RRB- -RRB-))
        (SBAR
          (WHNP
            (NP (WDT that) (NNS bonds))
            (PP (TO to)
              (NP (DT a) (JJ central) (NN metal))))
          (, ,)
          (S
            (ADVP (RB generally))
            (VP (VBG involving)
              (NP
                (NP (JJ formal) (NN donation))
                (PP (IN of)
                  (NP
                    (NP
                      (QP (CD one)
                        (CC or)
                        (JJR more)))
                    (PP (IN of)
                      (NP (PRP$ its) (NNS electrons)))))))))))
    (. .)))

prep_in(atom-9, chemistry-2)
det(Ligand-5, a-4)
nsubj(atom-9, Ligand-5)
cop(atom-9, is-6)
advmod(atom-9, either-7)
det(atom-9, an-8)
root(ROOT-0, atom-9)
dep(bonds-23, atom-9)
conj_or(atom-9, ion-11)
dep(bonds-23, ion-11)
conj_or(atom-9, molecule-14)
dep(bonds-23, molecule-14)
dep(atom-9, see-16)
advmod(see-16, also-17)
dep(see-16, functional-19)
dobj(functional-19, group-20)
nsubj(involving-30, bonds-23)
det(metal-27, a-25)
amod(metal-27, central-26)
prep_to(bonds-23, metal-27)
advmod(involving-30, generally-29)
rcmod(atom-9, involving-30)
amod(donation-32, formal-31)
dobj(involving-30, donation-32)
prep_of(donation-32, one-34)
prep_of(donation-32, more-36)
conj_or(one-34, more-36)
quantmod(one-34, more-36)
poss(electrons-39, its-38)
prep_of(one-34, electrons-39)

(ROOT
  (S
    (NP (DT A) (NNP Liqueur))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ sweet)
          (NP
            (NP (JJ alcoholic) (NN beverage))
            (, ,)
            (ADJP (RB often) (JJ flavored)
              (PP (IN with)
                (NP (NNS fruits) (, ,) (NNS herbs) (, ,) (NNS spices) (, ,) (NNS flowers) (, ,) (NNS seeds) (, ,) (NNS roots) (, ,) (NNS plants) (, ,) (NNS barks) (, ,)
                  (CC and)
                  (NNS sometimes))))))
        (NN cream)))
    (. .)))

det(Liqueur-2, A-1)
nsubj(cream-30, Liqueur-2)
cop(cream-30, is-3)
det(cream-30, a-4)
amod(cream-30, sweet-5)
amod(beverage-7, alcoholic-6)
dep(sweet-5, beverage-7)
advmod(flavored-10, often-9)
amod(beverage-7, flavored-10)
prep_with(flavored-10, fruits-12)
prep_with(flavored-10, herbs-14)
conj_and(fruits-12, herbs-14)
prep_with(flavored-10, spices-16)
conj_and(fruits-12, spices-16)
prep_with(flavored-10, flowers-18)
conj_and(fruits-12, flowers-18)
prep_with(flavored-10, seeds-20)
conj_and(fruits-12, seeds-20)
prep_with(flavored-10, roots-22)
conj_and(fruits-12, roots-22)
prep_with(flavored-10, plants-24)
conj_and(fruits-12, plants-24)
prep_with(flavored-10, barks-26)
conj_and(fruits-12, barks-26)
prep_with(flavored-10, sometimes-29)
conj_and(fruits-12, sometimes-29)
root(ROOT-0, cream-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN proven) (NN proposition))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (VP (VBN used)
                (PP (IN as)
                  (NP (DT a) (JJ stepping) (NN stone)))
                (PP
                  (PP (TO to)
                    (NP (DT a) (JJR larger) (NN result)))
                  (CONJP (RB rather) (IN than))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN statement) (NN in-and-of))
                      (ADVP (PRP itself)))))))))))
    (. .)))

cop(proposition-4, is-1)
det(proposition-4, a-2)
amod(proposition-4, proven-3)
root(ROOT-0, proposition-4)
nsubjpass(used-7, proposition-4)
nsubjpass(used-7', proposition-4)
auxpass(used-7, is-6)
rcmod(proposition-4, used-7)
rcmod(proposition-4, used-7')
conj_negcc(used-7, used-7')
det(stone-11, a-9)
amod(stone-11, stepping-10)
prep_as(used-7, stone-11)
det(result-15, a-13)
amod(result-15, larger-14)
prep_to(used-7, result-15)
det(in-and-of-21, a-19)
nn(in-and-of-21, statement-20)
prep_as(used-7', in-and-of-21)
advmod(in-and-of-21, itself-22)

(ROOT
  (S
    (NP (DT The) (NNP Flipper))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ particular) (NN bowling) (NN delivery))
            (VP (VBN used)
              (PP (IN in)
                (NP (NN cricket)))
              (, ,)
              (ADVP (RB generally))
              (PP (IN by)
                (NP (DT a) (NN leg) (NN spin) (NN bowler))))))))
    (. .)))

det(Flipper-2, The-1)
nsubj(name-5, Flipper-2)
cop(name-5, is-3)
det(name-5, the-4)
root(ROOT-0, name-5)
det(delivery-10, a-7)
amod(delivery-10, particular-8)
nn(delivery-10, bowling-9)
prep_of(name-5, delivery-10)
partmod(delivery-10, used-11)
prep_in(used-11, cricket-13)
advmod(used-11, generally-15)
det(bowler-20, a-17)
nn(bowler-20, leg-18)
nn(bowler-20, spin-19)
agent(used-11, bowler-20)

(ROOT
  (S
    (NP (DT A) (NNP Lexicographer))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN person))
          (VP (VBN devoted)
            (PP (TO to)
              (NP
                (NP (DT the) (NN study))
                (PP (IN of)
                  (NP (NN lexicography)))))))
        (, ,) (RB especially)
        (NP
          (NP (DT an) (NN author))
          (PP (IN of)
            (NP (DT a) (NN dictionary))))))
    (. .)))

det(Lexicographer-2, A-1)
nsubj(person-5, Lexicographer-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
partmod(person-5, devoted-6)
det(study-9, the-8)
prep_to(devoted-6, study-9)
prep_of(study-9, lexicography-11)
advmod(person-5, especially-13)
det(author-15, an-14)
dep(person-5, author-15)
det(dictionary-18, a-17)
prep_of(author-15, dictionary-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN programming)))
    (, ,)
    (NP (NNP Lint))
    (VP (VBD was)
      (NP (DT the) (NN name))
      (ADVP (RB originally))
      (PP (VBN given)
        (PP (TO to)
          (NP
            (NP (DT a) (JJ particular) (NN program))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD flagged)
                  (NP
                    (ADJP (JJ suspicious)
                      (CC and)
                      (JJ non-portable))
                    (NNS constructs))
                  (PRN (-LRB- -LRB-)
                    (ADJP (JJ likely)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP (NNS bugs))))))
                    (-RRB- -RRB-))
                  (PP (IN in)
                    (NP (JJ C) (NN language) (NN source) (NN code))))))))))
    (. .)))

nn(programming-3, computer-2)
prep_in(name-8, programming-3)
nsubj(name-8, Lint-5)
cop(name-8, was-6)
det(name-8, the-7)
root(ROOT-0, name-8)
advmod(name-8, originally-9)
prep(name-8, given-10)
pcomp(given-10, to-11)
det(program-14, a-12)
amod(program-14, particular-13)
prep_to(given-10, program-14)
nsubj(flagged-16, program-14)
rcmod(program-14, flagged-16)
amod(constructs-20, suspicious-17)
conj_and(suspicious-17, non-portable-19)
amod(constructs-20, non-portable-19)
dobj(flagged-16, constructs-20)
dep(flagged-16, likely-22)
aux(bugs-25, to-23)
cop(bugs-25, be-24)
xcomp(likely-22, bugs-25)
amod(code-31, C-28)
nn(code-31, language-29)
nn(code-31, source-30)
prep_in(flagged-16, code-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Lupercal) (-LRB- -LRB-) (NNP '') (NNP lupa) ('' ''))
      (, ,)
      (NP (NNP Latin))
      (PP (IN for)
        (NP (NN she-wolf)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cave))
        (PP (IN at)
          (NP
            (NP (DT the) (NN foot))
            (PP (IN of)
              (NP
                (NP (DT the) (NNP Palatine) (NNP Hill))
                (PP (IN in)
                  (NP (NNP Rome)))
                (, ,)
                (PP (IN between)
                  (NP
                    (NP
                      (NP (DT the) (NNP Temple))
                      (PP (IN of)
                        (NP (NNP Apollo) (NNPS Palatinus))))
                    (CC and)
                    (NP
                      (NP (DT the) (NN Basilica))
                      (PP (IN of)
                        (NP (NNP Santa) (NNP Anastasia))))))))))))
    (. .)))

det(lupa-5, The-1)
nn(lupa-5, Lupercal-2)
nsubj(cave-14, lupa-5)
appos(lupa-5, Latin-8)
prep_for(lupa-5, she-wolf-10)
cop(cave-14, is-12)
det(cave-14, a-13)
root(ROOT-0, cave-14)
det(foot-17, the-16)
prep_at(cave-14, foot-17)
det(Hill-21, the-19)
nn(Hill-21, Palatine-20)
prep_of(foot-17, Hill-21)
prep_in(Hill-21, Rome-23)
det(Temple-27, the-26)
prep_between(Hill-21, Temple-27)
nn(Palatinus-30, Apollo-29)
prep_of(Temple-27, Palatinus-30)
det(Basilica-33, the-32)
prep_between(Hill-21, Basilica-33)
conj_and(Temple-27, Basilica-33)
nn(Anastasia-36, Santa-35)
prep_of(Basilica-33, Anastasia-36)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Mural))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN painting))
        (PP (IN on)
          (NP
            (NP (DT a) (NN wall))
            (, ,)
            (NP (NN ceiling))
            (, ,)
            (CC or)
            (NP (JJ other) (JJ large) (JJ permanent) (NN surface))))))
    (. .)))

det(Mural-2, A-1)
nsubj(painting-5, Mural-2)
cop(painting-5, is-3)
det(painting-5, a-4)
root(ROOT-0, painting-5)
det(wall-8, a-7)
prep_on(painting-5, wall-8)
prep_on(painting-5, ceiling-10)
conj_or(wall-8, ceiling-10)
amod(surface-16, other-13)
amod(surface-16, large-14)
amod(surface-16, permanent-15)
prep_on(painting-5, surface-16)
conj_or(wall-8, surface-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP (NNP MD5) (-LRB- -LRB-)
      (NP (JJ Message-Digest) (NN algorithm) (CD 5))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB widely) (VBN used))
          (, ,)
          (ADJP (RB partially) (JJ insecure))
          (JJ cryptographic) (NN hash) (NN function))
        (PP (IN with)
          (NP (DT a) (JJ 128-bit) (NN hash) (NN value)))))
    (. .)))

prep_in(function-19, cryptography-2)
nsubj(function-19, MD5-4)
amod(algorithm-7, Message-Digest-6)
dep(MD5-4, algorithm-7)
num(algorithm-7, 5-8)
cop(function-19, is-10)
det(function-19, a-11)
advmod(used-13, widely-12)
amod(function-19, used-13)
advmod(insecure-16, partially-15)
amod(function-19, insecure-16)
amod(function-19, cryptographic-17)
nn(function-19, hash-18)
root(ROOT-0, function-19)
det(value-24, a-21)
amod(value-24, 128-bit-22)
nn(value-24, hash-23)
prep_with(function-19, value-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN probability) (NN theory)
        (CC and)
        (NNS statistics)))
    (, ,)
    (NP (DT a) (JJ Median))
    (VP (VBZ is)
      (VP (VBN described)
        (PP (IN as)
          (NP
            (NP (DT the) (NN number))
            (VP (VBG separating)
              (NP
                (NP (DT the) (JJR higher) (NN half))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN sample))
                    (, ,)
                    (NP (DT a) (NN population))
                    (, ,)
                    (CC or)
                    (NP (DT a) (NN probability) (NN distribution)))))
              (, ,)
              (PP (IN from)
                (NP (DT the) (JJR lower) (NN half))))))))
    (. .)))

nn(theory-3, probability-2)
prep_in(described-10, theory-3)
conj_and(theory-3, statistics-5)
prep_in(described-10, statistics-5)
det(Median-8, a-7)
nsubjpass(described-10, Median-8)
auxpass(described-10, is-9)
root(ROOT-0, described-10)
det(number-13, the-12)
prep_as(described-10, number-13)
partmod(number-13, separating-14)
det(half-17, the-15)
amod(half-17, higher-16)
dobj(separating-14, half-17)
det(sample-20, a-19)
prep_of(half-17, sample-20)
det(population-23, a-22)
prep_of(half-17, population-23)
conj_or(sample-20, population-23)
det(distribution-28, a-26)
nn(distribution-28, probability-27)
prep_of(half-17, distribution-28)
conj_or(sample-20, distribution-28)
det(half-33, the-31)
amod(half-33, lower-32)
prep_from(separating-14, half-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NN psychology)))
    (, ,)
    (NP (NN Memory))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN organism) (POS 's))
        (NN ability)
        (S
          (VP (TO to)
            (VP
              (VP (VB store))
              (, ,)
              (VP (VB retain))
              (, ,)
              (CC and)
              (VP
                (ADVP (RB subsequently))
                (VB retrieve)
                (NP (NN information))))))))
    (. .)))

prep_in(ability-9, psychology-2)
nsubj(ability-9, Memory-4)
cop(ability-9, is-5)
det(organism-7, an-6)
poss(ability-9, organism-7)
root(ROOT-0, ability-9)
aux(store-11, to-10)
infmod(ability-9, store-11)
infmod(ability-9, retain-13)
conj_and(store-11, retain-13)
advmod(retrieve-17, subsequently-16)
infmod(ability-9, retrieve-17)
conj_and(store-11, retrieve-17)
dobj(retrieve-17, information-18)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Mouse))
      (PRN (-LRB- -LRB-)
        (NP (CD plural) (NNS mice))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (NN animal))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ belongs)
              (PP (TO to)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP
                      (NP (JJ numerous) (NNS species))
                      (PP (IN of)
                        (NP (NNS rodents))))))))))))
    (. .)))

det(Mouse-2, A-1)
nsubj(animal-10, Mouse-2)
num(mice-5, plural-4)
appos(Mouse-2, mice-5)
cop(animal-10, is-7)
det(animal-10, a-8)
amod(animal-10, small-9)
root(ROOT-0, animal-10)
nsubj(belongs-12, animal-10)
rcmod(animal-10, belongs-12)
prep_to(belongs-12, one-14)
amod(species-17, numerous-16)
prep_of(one-14, species-17)
prep_of(species-17, rodents-19)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ morpheme-based) (NN morphology)))
    (, ,)
    (NP (DT a) (NNP Morpheme))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS smallest) (JJ linguistic) (NN unit))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (NP (JJ semantic) (NN meaning)))))))
    (. .)))

amod(morphology-3, morpheme-based-2)
prep_in(unit-11, morphology-3)
det(Morpheme-6, a-5)
nsubj(unit-11, Morpheme-6)
cop(unit-11, is-7)
det(unit-11, the-8)
amod(unit-11, smallest-9)
amod(unit-11, linguistic-10)
root(ROOT-0, unit-11)
nsubj(has-13, unit-11)
rcmod(unit-11, has-13)
amod(meaning-15, semantic-14)
dobj(has-13, meaning-15)

(ROOT
  (S
    (NP (DT A) (NNP Model))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN pattern))
          (, ,)
          (NP (NN plan)))
        (, ,)
        (NP
          (NP (NN representation))
          (PRN (-LRB- -LRB-)
            (PP
              (ADVP (RB especially))
              (IN in)
              (NP (NN miniature)))
            (-RRB- -RRB-)))
        (, ,)
        (CC or)
        (NP
          (NP (NN description))
          (VP (VBN designed)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP
                    (NP (DT the) (JJ main) (NN object))
                    (CC or)
                    (NP
                      (NP (NNS workings))
                      (PP (IN of)
                        (NP
                          (NP (DT an) (NN object))
                          (, ,)
                          (NP (NN system))
                          (, ,)
                          (CC or)
                          (NP (NN concept)))))))))))))
    (. .)))

det(Model-2, A-1)
nsubj(pattern-5, Model-2)
cop(pattern-5, is-3)
det(pattern-5, a-4)
root(ROOT-0, pattern-5)
appos(pattern-5, plan-7)
conj_or(pattern-5, representation-9)
advmod(in-12, especially-11)
dep(representation-9, in-12)
pobj(in-12, miniature-13)
conj_or(pattern-5, description-17)
xsubj(show-20, description-17)
partmod(description-17, designed-18)
aux(show-20, to-19)
xcomp(designed-18, show-20)
det(object-23, the-21)
amod(object-23, main-22)
dobj(show-20, object-23)
dobj(show-20, workings-25)
conj_or(object-23, workings-25)
det(object-28, an-27)
prep_of(workings-25, object-28)
prep_of(workings-25, system-30)
conj_or(object-28, system-30)
prep_of(workings-25, concept-33)
conj_or(object-28, concept-33)

(ROOT
  (S
    (NP (DT A) (NNP Mandolin))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ lute) (NN family))
            (PRN (-LRB- -LRB-)
              (VP (VBN plucked) (, ,)
                (CC or)
                (VBN strummed))
              (-RRB- -RRB-))))))
    (. .)))

det(Mandolin-2, A-1)
nsubj(instrument-6, Mandolin-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(family-10, the-8)
amod(family-10, lute-9)
prep_in(instrument-6, family-10)
dep(family-10, plucked-12)
dep(family-10, strummed-15)
conj_or(plucked-12, strummed-15)

(ROOT
  (S
    (NP (DT A) (NNP Mathematician))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP
            (WHNP (WP$ whose) (JJ primary) (NN area))
            (PP (IN of)
              (NP (NN study)
                (CC and)
                (NN research))))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN field))
                (PP (IN of)
                  (NP (NNS mathematics)))))))))
    (. .)))

det(Mathematician-2, A-1)
nsubj(person-5, Mathematician-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
poss(area-8, person-5)
amod(area-8, primary-7)
nsubj(field-15, area-8)
prep_of(area-8, study-10)
prep_of(area-8, research-12)
conj_and(study-10, research-12)
cop(field-15, is-13)
det(field-15, the-14)
rcmod(person-5, field-15)
prep_of(field-15, mathematics-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NN philosophy)))
    (, ,)
    (NP
      (NP (NNP Meta-ethics))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB sometimes))
          (VBN called) ('' '')
          (NP (JJ analytic) (NNS ethics))
          ('' ''))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN branch))
        (PP (IN of)
          (NP
            (NP (NNS ethics))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ seeks)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (NP
                          (NP
                            (NP (DT the) (NN nature))
                            (PP (IN of)
                              (NP (JJ ethical) (NNS properties))))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (JJ ethical) (NNS statements))
                            (, ,)
                            (NP (NNS attitudes))
                            (, ,)
                            (CC and)
                            (NP (NNS judgments))))))))))))))
    (. .)))

prep_in(branch-15, philosophy-2)
nsubj(branch-15, Meta-ethics-4)
advmod(called-7, sometimes-6)
dep(Meta-ethics-4, called-7)
amod(ethics-10, analytic-9)
dobj(called-7, ethics-10)
cop(branch-15, is-13)
det(branch-15, the-14)
root(ROOT-0, branch-15)
prep_of(branch-15, ethics-17)
nsubj(seeks-19, ethics-17)
rcmod(ethics-17, seeks-19)
aux(understand-21, to-20)
xcomp(seeks-19, understand-21)
det(nature-23, the-22)
dobj(understand-21, nature-23)
amod(properties-26, ethical-25)
prep_of(nature-23, properties-26)
amod(statements-30, ethical-29)
dobj(understand-21, statements-30)
conj_and(nature-23, statements-30)
conj_and(nature-23, attitudes-32)
conj_and(statements-30, attitudes-32)
conj_and(nature-23, judgments-35)
conj_and(statements-30, judgments-35)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Subject))
      (VP (VBZ is)
        (NP (DT an) (NN observer))))
    (CC and)
    (S
      (NP (DT an) (NN object))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN thing))
          (VP (VBN observed)))))
    (. .)))

det(Subject-2, A-1)
nsubj(observer-5, Subject-2)
cop(observer-5, is-3)
det(observer-5, an-4)
root(ROOT-0, observer-5)
det(object-8, an-7)
nsubj(thing-11, object-8)
cop(thing-11, is-9)
det(thing-11, a-10)
conj_and(observer-5, thing-11)
partmod(thing-11, observed-12)

(ROOT
  (S
    (NP (DT The) (NNPS Myrtales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (VP (VBN placed)
              (PP (IN as)
                (NP (DT a) (JJ basal) (NN group)))
              (PP (IN within)
                (NP
                  (NP (DT the) (JJ rosid) (NN group))
                  (PP (IN of)
                    (NP
                      (NP (NNS dicotyledons))
                      (PRN (-LRB- -LRB-)
                        (NP
                          (ADVP (RB not)
                            (NP (DT a) (NN member))
                            (PP (IN of)
                              (NP (JJ eurosids) (NN I)
                                (CC or)
                                (NNS eurosids))))
                          (NNP II))
                        (-RRB- -RRB-)))))))))))
    (. .)))

det(Myrtales-2, The-1)
nsubj(order-5, Myrtales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
partmod(plants-8, placed-9)
det(group-13, a-11)
amod(group-13, basal-12)
prep_as(placed-9, group-13)
det(group-17, the-15)
amod(group-17, rosid-16)
prep_within(placed-9, group-17)
prep_of(group-17, dicotyledons-19)
advmod(II-29, not-21)
det(member-23, a-22)
pobj(not-21, member-23)
amod(I-26, eurosids-25)
prep_of(not-21, I-26)
prep_of(not-21, eurosids-28)
conj_or(I-26, eurosids-28)
appos(dicotyledons-19, II-29)

(ROOT
  (SINV
    (S
      (NP (DT The) (NNPS Malpighiales))
      (VP (VBP are)
        (NP
          (NP (DT a) (JJ large) (NN order))
          (PP (IN of)
            (NP (VBG flowering) (NNS plants))))))
    (, ,)
    (VP (VBD included)
      (PP (IN in)
        (NP
          (NP (DT the) (NN group))
          (VP (VBN named)
            (NP (NNS eurosids))))))
    (NP
      (NP (PRP I))
      (PP (IN in)
        (NP (DT the) (JJ recent) (NNP APG) (NN classification))))
    (. .)))

det(Malpighiales-2, The-1)
nsubj(order-6, Malpighiales-2)
cop(order-6, are-3)
det(order-6, a-4)
amod(order-6, large-5)
ccomp(included-11, order-6)
amod(plants-9, flowering-8)
prep_of(order-6, plants-9)
root(ROOT-0, included-11)
det(group-14, the-13)
prep_in(included-11, group-14)
partmod(group-14, named-15)
dobj(named-15, eurosids-16)
nsubj(included-11, I-17)
det(classification-22, the-19)
amod(classification-22, recent-20)
nn(classification-22, APG-21)
prep_in(I-17, classification-22)

(ROOT
  (S
    (NP (DT The) (NNP Mississippian))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN subperiod))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Carboniferous) (NN period))
            (VP (VBG lasting)
              (PP (IN from)
                (NP
                  (NP
                    (QP (RB roughly) (CD 359) (TO to) (CD 318))
                    (NNS Ma))
                  (PRN (-LRB- -LRB-)
                    (ADVP
                      (NP (CD million) (NNS years))
                      (RB ago))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(Mississippian-2, The-1)
nsubj(subperiod-5, Mississippian-2)
cop(subperiod-5, was-3)
det(subperiod-5, a-4)
root(ROOT-0, subperiod-5)
det(period-9, the-7)
nn(period-9, Carboniferous-8)
prep_of(subperiod-5, period-9)
partmod(period-9, lasting-10)
quantmod(318-15, roughly-12)
number(318-15, 359-13)
dep(318-15, to-14)
num(Ma-16, 318-15)
prep_from(lasting-10, Ma-16)
num(years-19, million-18)
npadvmod(ago-20, years-19)
dep(Ma-16, ago-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)
        (CC or)
        (NN life) (NN science)))
    (, ,)
    (NP
      (NP (NNP Meiosis))
      (PRN (-LRB- -LRB-)
        (NP (JJ pronounced) (NNS my-oh-sis))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN process))
        (PP (IN of)
          (NP (NN reduction) (NN division)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP
              (NP (DT the) (NN number))
              (PP (IN of)
                (NP
                  (NP (NNS chromosomes))
                  (PP (IN per)
                    (NP (NN cell))))))
            (VP (VBZ is)
              (VP (VBN cut)
                (PP (IN in)
                  (NP (NN half)))))))))
    (. .)))

nn(science-5, biology-2)
conj_or(biology-2, life-4)
nn(science-5, life-4)
prep_in(process-14, science-5)
nsubj(process-14, Meiosis-7)
amod(my-oh-sis-10, pronounced-9)
appos(Meiosis-7, my-oh-sis-10)
cop(process-14, is-12)
det(process-14, a-13)
root(ROOT-0, process-14)
nn(division-17, reduction-16)
prep_of(process-14, division-17)
rel(cut-27, which-19)
det(number-21, the-20)
nsubjpass(cut-27, number-21)
prep_of(number-21, chromosomes-23)
prep_per(chromosomes-23, cell-25)
auxpass(cut-27, is-26)
rcmod(process-14, cut-27)
prep_in(cut-27, half-29)

(ROOT
  (S
    (NP (DT The) (NNP Miocene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN period))
        (PP (IN of)
          (NP (NN time)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ extends)
              (PP (IN from)
                (NP
                  (QP (RB about) (CD 23.03))))
              (PP (TO to)
                (NP
                  (NP
                    (QP (CD 5.33) (CD million))
                    (NNS years))
                  (PP (IN before)
                    (NP (DT the) (NN present))))))))))
    (. .)))

det(Miocene-2, The-1)
nsubj(period-5, Miocene-2)
cop(period-5, is-3)
det(period-5, a-4)
root(ROOT-0, period-5)
nsubj(extends-9, period-5)
prep_of(period-5, time-7)
rcmod(period-5, extends-9)
quantmod(23.03-12, about-11)
prep_from(extends-9, 23.03-12)
number(million-15, 5.33-14)
num(years-16, million-15)
prep_to(extends-9, years-16)
det(present-19, the-18)
prep_before(years-16, present-19)

(ROOT
  (S
    (NP (DT A) (NNP Monarchy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (NN government)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT an)
              (NX
                (NX
                  (NX (JJ individual) (NNS rules))
                  (PP (IN as)
                    (NP
                      (NP (NN head))
                      (PP (IN of)
                        (NP (NN state)))))
                  (, ,)
                  (PP
                    (PP
                      (ADVP (RB often))
                      (IN for)
                      (NP (NN life)))
                    (CC or)
                    (PP (IN until)
                      (NP (NN abdication))))
                  (, ,))
                (CC and)))
            ('' '')
            (VP (VBZ is)
              (ADVP (RB wholly))
              (VP (VBN set)
                (PRT (RP apart))
                (PP (IN from)
                  (NP
                    (NP (DT all) (JJ other) (NNS members))
                    (PP (IN of)
                      (NP (DT the) (NN state)))))))))))
    (. .) ('' '')))

det(Monarchy-2, A-1)
nsubj(form-5, Monarchy-2)
cop(form-5, is-3)
det(form-5, a-4)
root(ROOT-0, form-5)
prep_of(form-5, government-7)
rel(set-29, which-9)
det(rules-12, an-10)
amod(rules-12, individual-11)
conj_or(rules-12, rules-12')
nsubjpass(set-29, rules-12)
nsubjpass(set-29, rules-12')
prep_as(rules-12, head-14)
prep_of(head-14, state-16)
advmod(rules-12, often-18)
prep_for(rules-12, life-20)
prep_until(rules-12', abdication-23)
cc(rules-12, and-25)
auxpass(set-29, is-27)
advmod(set-29, wholly-28)
rcmod(form-5, set-29)
det(members-34, all-32)
amod(members-34, other-33)
prep_apart_from(set-29, members-34)
det(state-37, the-36)
prep_of(members-34, state-37)

(ROOT
  (S
    (NP
      (NP (DT The) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ heads)
            (NP (DT a) (NN monarchy))))))
    (VP (VBZ is)
      (VP (VBN called)
        (NP (DT a) (NN monarch))))
    (. .)))

det(person-2, The-1)
nsubj(heads-4, person-2)
nsubjpass(called-8, person-2)
rcmod(person-2, heads-4)
det(monarchy-6, a-5)
dobj(heads-4, monarchy-6)
auxpass(called-8, is-7)
root(ROOT-0, called-8)
det(monarch-10, a-9)
dobj(called-8, monarch-10)

(ROOT
  (S
    (NP (DT A) (NNP Municipality))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ administrative) (NN entity))
        (VP
          (VP (VBN composed)
            (PP (IN of)
              (NP
                (NP (DT a)
                  (ADJP (RB clearly) (JJ defined))
                  (NN territory))
                (CC and)
                (NP (PRP$ its) (NN population)))))
          (CC and)
          (VP
            (ADVP (RB commonly))
            (VBZ denotes)
            (NP
              (NP (DT a) (NN city) (, ,) (NN town) (, ,)
                (CC or)
                (NN village) (, ,))
              (CC or)
              (NP
                (NP (DT a) (JJ small) (NN grouping))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .)))

det(Municipality-2, A-1)
nsubj(entity-6, Municipality-2)
cop(entity-6, is-3)
det(entity-6, an-4)
amod(entity-6, administrative-5)
root(ROOT-0, entity-6)
dep(entity-6, composed-7)
det(territory-12, a-9)
advmod(defined-11, clearly-10)
amod(territory-12, defined-11)
prep_of(composed-7, territory-12)
poss(population-15, its-14)
prep_of(composed-7, population-15)
conj_and(territory-12, population-15)
advmod(denotes-18, commonly-17)
dep(entity-6, denotes-18)
conj_and(composed-7, denotes-18)
det(town-22, a-19)
nn(town-22, city-20)
dobj(denotes-18, town-22)
dobj(denotes-18, village-25)
conj_or(town-22, village-25)
det(grouping-30, a-28)
amod(grouping-30, small-29)
dobj(denotes-18, grouping-30)
conj_or(town-22, grouping-30)
prep_of(grouping-30, them-32)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP
      (NP (DT a) (NN Metal))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ Greek))
          (: :)
          (NP (NNP Metallon)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT an) (NN element))
            (SBAR
              (WHNP (WDT that))
              (S
                (ADVP (RB readily))
                (VP
                  (VP (VBZ loses)
                    (S
                      (NP (NNS electrons))
                      (VP (TO to)
                        (VP (VB form)
                          (NP
                            (NP (JJ positive) (NNS ions))
                            (PRN (-LRB- -LRB-)
                              (NP (NNS cations))
                              (-RRB- -RRB-)))))))
                  (CC and)
                  (VP (VBZ forms)
                    (NP
                      (NP (JJ metallic) (NNS bonds))
                      (PP (IN between)
                        (NP
                          (NP (JJ other) (NN metal) (NNS atoms))
                          (PRN (-LRB- -LRB-)
                            (VP (VBG forming)
                              (NP (JJ ionic) (NNS bonds))
                              (PP (IN with)
                                (NP (NNS non-metals))))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

prep_in(defined-12, chemistry-2)
det(Metal-5, a-4)
nsubjpass(defined-12, Metal-5)
dep(Metal-5, Greek-7)
dep(Greek-7, Metallon-9)
auxpass(defined-12, is-11)
root(ROOT-0, defined-12)
det(element-15, an-14)
prep_as(defined-12, element-15)
nsubj(loses-18, element-15)
nsubj(forms-28, element-15)
advmod(loses-18, readily-17)
rcmod(element-15, loses-18)
nsubj(form-21, electrons-19)
aux(form-21, to-20)
xcomp(loses-18, form-21)
amod(ions-23, positive-22)
dobj(form-21, ions-23)
appos(ions-23, cations-25)
rcmod(element-15, forms-28)
conj_and(loses-18, forms-28)
amod(bonds-30, metallic-29)
dobj(forms-28, bonds-30)
amod(atoms-34, other-32)
nn(atoms-34, metal-33)
prep_between(bonds-30, atoms-34)
dep(atoms-34, forming-36)
amod(bonds-38, ionic-37)
dobj(forming-36, bonds-38)
prep_with(forming-36, non-metals-40)

(ROOT
  (S
    (NP
      (NP (NNP Multipurpose) (NNP Internet) (NNP Mail) (NNP Extensions))
      (PRN (-LRB- -LRB-)
        (NP (NNP MIME))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN Internet) (NN standard))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ extends)
              (S
                (NP
                  (NP (DT the) (NN format))
                  (PP (IN of)
                    (NP (NNP e-mail))))
                (VP (TO to)
                  (VP (VB support)
                    (NP (NN text))
                    (PP (IN in)
                      (NP
                        (NP
                          (NP (NN character) (NNS sets))
                          (PP (JJ other) (IN than)
                            (NP (NNP US-ASCII))))
                        (: ;)
                        (NP (JJ non-text) (NNS attachments))
                        (: ;)
                        (NP
                          (NP (NN message) (NNS bodies))
                          (PP (IN with)
                            (NP (JJ multiple) (NNS parts))))
                        (: ;)
                        (CC and)
                        (NP
                          (NP (NN header) (NN information))
                          (PP (IN in)
                            (NP (JJ non-ASCII) (NN character) (NNS sets))))))))))))))
    (. .)))

nn(Extensions-4, Multipurpose-1)
nn(Extensions-4, Internet-2)
nn(Extensions-4, Mail-3)
nsubj(standard-11, Extensions-4)
abbrev(Extensions-4, MIME-6)
cop(standard-11, is-8)
det(standard-11, an-9)
nn(standard-11, Internet-10)
root(ROOT-0, standard-11)
nsubj(extends-13, standard-11)
rcmod(standard-11, extends-13)
det(format-15, the-14)
nsubj(support-19, format-15)
prep_of(format-15, e-mail-17)
aux(support-19, to-18)
xcomp(extends-13, support-19)
dobj(support-19, text-20)
nn(sets-23, character-22)
prep_in(support-19, sets-23)
dep(sets-23, other-24)
prep_than(sets-23, US-ASCII-26)
amod(attachments-29, non-text-28)
prep_in(support-19, attachments-29)
conj_and(sets-23, attachments-29)
nn(bodies-32, message-31)
prep_in(support-19, bodies-32)
conj_and(sets-23, bodies-32)
amod(parts-35, multiple-34)
prep_with(bodies-32, parts-35)
nn(information-39, header-38)
prep_in(support-19, information-39)
conj_and(sets-23, information-39)
amod(sets-43, non-ASCII-41)
nn(sets-43, character-42)
prep_in(information-39, sets-43)

(ROOT
  (S
    (NP (DT A) (NNP Mineral))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB naturally) (JJ occurring))
          (NN substance))
        (VP (VBN formed)
          (PP (IN through)
            (NP (JJ geological) (NNS processes))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (NP
                (NP (DT a) (JJ characteristic) (NN chemical) (NN composition))
                (, ,)
                (NP (DT a)
                  (ADJP (RB highly) (JJ ordered))
                  (JJ atomic) (NN structure))
                (CC and)
                (NP (JJ specific) (JJ physical) (NNS properties))))))))
    (. .)))

det(Mineral-2, A-1)
nsubj(substance-7, Mineral-2)
cop(substance-7, is-3)
det(substance-7, a-4)
advmod(occurring-6, naturally-5)
amod(substance-7, occurring-6)
root(ROOT-0, substance-7)
partmod(substance-7, formed-8)
amod(processes-11, geological-10)
prep_through(formed-8, processes-11)
nsubj(has-13, that-12)
rcmod(substance-7, has-13)
det(composition-17, a-14)
amod(composition-17, characteristic-15)
nn(composition-17, chemical-16)
dobj(has-13, composition-17)
det(structure-23, a-19)
advmod(ordered-21, highly-20)
amod(structure-23, ordered-21)
amod(structure-23, atomic-22)
dobj(has-13, structure-23)
conj_and(composition-17, structure-23)
amod(properties-27, specific-25)
amod(properties-27, physical-26)
dobj(has-13, properties-27)
conj_and(composition-17, properties-27)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Mile))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN length))
            (, ,)
            (VP
              (ADVP (RB usually))
              (VBN used)
              (PP (TO to)
                (NP (NN measure) (NN distance))))
            (, ,)
            (PP (IN in)
              (NP
                (NP (DT a) (NN number))
                (PP (IN of)
                  (NP (JJ different) (NNS systems)))))
            (, ,)
            (PP (VBG including)
              (NP
                (NP (JJ Imperial) (NNS units))
                (, ,)
                (NP (NNP United) (NNPS States) (JJ customary) (NNS units))
                (CC and)
                (NP (JJ Norwegian) (JJ \/) (JJ Swedish) (NN mil))))))))
    (. .)))

det(Mile-2, A-1)
nsubj(unit-5, Mile-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, length-7)
advmod(used-10, usually-9)
partmod(length-7, used-10)
nn(distance-13, measure-12)
prep_to(used-10, distance-13)
det(number-17, a-16)
prep_in(length-7, number-17)
amod(systems-20, different-19)
prep_of(number-17, systems-20)
amod(units-24, Imperial-23)
prep_including(length-7, units-24)
nn(units-29, United-26)
nn(units-29, States-27)
amod(units-29, customary-28)
prep_including(length-7, units-29)
conj_and(units-24, units-29)
amod(mil-34, Norwegian-31)
amod(mil-34, \/-32)
amod(mil-34, Swedish-33)
prep_including(length-7, mil-34)
conj_and(units-24, mil-34)

(ROOT
  (S
    (NP (DT A) (NNP Manuscript))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN document))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is)
                (VP (VBN written)
                  (PP (IN by)
                    (NP
                      (NP (NN hand))
                      (, ,)
                      (ADJP (RB as) (VBN opposed))))
                  (PP (TO to)
                    (S
                      (VP (VBG being)
                        (VP (VBN printed)))))))
              (CC or)
              (VP (VBD reproduced)
                (PP (IN in)
                  (NP (DT some) (JJ other) (NN way)))))))))
    (. .)))

det(Manuscript-2, A-1)
nsubj(document-5, Manuscript-2)
cop(document-5, is-3)
det(document-5, any-4)
root(ROOT-0, document-5)
nsubjpass(written-8, document-5)
nsubjpass(reproduced-18, document-5)
auxpass(written-8, is-7)
rcmod(document-5, written-8)
agent(written-8, hand-10)
advmod(opposed-13, as-12)
amod(hand-10, opposed-13)
auxpass(printed-16, being-15)
prepc_to(written-8, printed-16)
rcmod(document-5, reproduced-18)
conj_or(written-8, reproduced-18)
det(way-22, some-20)
amod(way-22, other-21)
prep_in(reproduced-18, way-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN antonym))
      (PP (IN of)
        (NP (NNP Misogyny))))
    (VP (VBZ is)
      (S
        (ADVP (RB philogyny))
        (, ,)
        (VP (VB love)
          (PP (IN towards)
            (NP (NNS women))))))
    (. .)))

det(antonym-2, The-1)
nsubj(is-5, antonym-2)
prep_of(antonym-2, Misogyny-4)
root(ROOT-0, is-5)
advmod(love-8, philogyny-6)
ccomp(is-5, love-8)
prep_towards(love-8, women-10)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP
      (NP (DT the) (NN concept))
      (PP (IN of)
        (NP (NNP a) ('' '') (NNP Limit))))
    ('' '')
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT the) (NN behavior))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN function))
                    (PP (IN as)
                      (NP (PRP$ its) (NN argument))))))
              (ADVP (RB either))
              ('' '')
              (SBAR
                (SBAR
                  (S
                    (VP (VBZ gets)
                      (ADJP (JJ close) ('' '')
                        (PP (TO to)
                          (NP (DT some) (NN point)))))))
                (, ,)
                (CC or)
                (SBAR (IN as)
                  (S
                    (NP (DT the) (NN argument))
                    (VP (VBZ becomes)
                      (ADJP
                        (ADVP (RB arbitrarily))
                        (JJ large)))))))))))
    (. .)))

prep_in(used-12, mathematics-2)
det(concept-5, the-4)
nsubjpass(used-12, concept-5)
xsubj(describe-14, concept-5)
nn(Limit-9, a-7)
prep_of(concept-5, Limit-9)
auxpass(used-12, is-11)
root(ROOT-0, used-12)
aux(describe-14, to-13)
xcomp(used-12, describe-14)
det(behavior-16, the-15)
dobj(describe-14, behavior-16)
det(function-19, a-18)
prep_of(behavior-16, function-19)
poss(argument-22, its-21)
prep_as(function-19, argument-22)
advmod(describe-14, either-23)
dep(close-26, gets-25)
dep(describe-14, close-26)
det(point-30, some-29)
prep_to(close-26, point-30)
mark(large-38, as-33)
det(argument-35, the-34)
nsubj(large-38, argument-35)
cop(large-38, becomes-36)
advmod(large-38, arbitrarily-37)
dep(describe-14, large-38)
conj_or(close-26, large-38)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Richard) (NNP Melville) (NNP Hall))
        (, ,)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (NNP Moby)))))
      (PRN (-LRB- -LRB-)
        (VP (VBN born)
          (NP (NNP September) (CD 11) (, ,) (CD 1965))
          (PP (IN in)
            (NP
              (NP (NNP Harlem))
              (, ,)
              (NP (NNP New) (NNP York)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT an) (JJ American) (NN DJ) (, ,) (NN songwriter) (, ,) (NN musician)
        (CC and)
        (NN singer)))
    (. .)))

nn(Hall-3, Richard-1)
nn(Hall-3, Melville-2)
nsubj(DJ-24, Hall-3)
advmod(known-6, also-5)
partmod(Hall-3, known-6)
prep_as(known-6, Moby-8)
dep(Hall-3, born-10)
tmod(born-10, September-11)
num(September-11, 11-12)
num(September-11, 1965-14)
prep_in(born-10, Harlem-16)
nn(York-19, New-18)
appos(Harlem-16, York-19)
cop(DJ-24, is-21)
det(DJ-24, an-22)
amod(DJ-24, American-23)
root(ROOT-0, DJ-24)
conj_and(DJ-24, songwriter-26)
conj_and(DJ-24, musician-28)
conj_and(DJ-24, singer-30)

(ROOT
  (S
    (NP (DT The) (NN word))
    (VP (VBZ Mazda)
      (NP (NNS means) ('' ''))
      (NP
        (NP (JJ great) (NN wisdom))
        ('' '')
        (PP (IN in)
          (NP (DT the) (JJ Iranian) (NNP Avestan) (NN language)))))
    (. .)))

det(word-2, The-1)
nsubj(Mazda-3, word-2)
root(ROOT-0, Mazda-3)
iobj(Mazda-3, means-4)
amod(wisdom-7, great-6)
dobj(Mazda-3, wisdom-7)
det(language-13, the-10)
amod(language-13, Iranian-11)
nn(language-13, Avestan-12)
prep_in(wisdom-7, language-13)

(ROOT
  (S
    (NP (DT A) (NNP Minute))
    (VP (VBZ is)
      (UCP
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP
              (NP (NN measurement))
              (PP (IN of)
                (NP (NN time))))))
        (CC or)
        (PP (IN of)
          (NP (NN angle)))))
    (. .)))

det(Minute-2, A-1)
nsubj(unit-5, Minute-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, measurement-7)
prep_of(measurement-7, time-9)
conj_or(unit-5, of-11)
prep_of(unit-5, angle-12)

(ROOT
  (S
    (NP (NNS Microelectronics))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (VP
          (ADVP (RB also))
          (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT the) (NN design)
                    (CC and)
                    (NN manufacture))
                  (PP (IN of)
                    (NP
                      (NP (JJ hybrid) (NNS microcircuits))
                      (CC or)
                      (NP (JJ hybrid) (VBN integrated) (NN circuit)))))))))))
    (. .)))

nsubj(term-4, Microelectronics-1)
cop(term-4, is-2)
det(term-4, a-3)
root(ROOT-0, term-4)
xsubj(describe-8, term-4)
advmod(used-6, also-5)
partmod(term-4, used-6)
aux(describe-8, to-7)
xcomp(used-6, describe-8)
det(design-10, the-9)
dobj(describe-8, design-10)
dobj(describe-8, manufacture-12)
conj_and(design-10, manufacture-12)
amod(microcircuits-15, hybrid-14)
prep_of(design-10, microcircuits-15)
amod(circuit-19, hybrid-17)
amod(circuit-19, integrated-18)
prep_of(design-10, circuit-19)
conj_or(microcircuits-15, circuit-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Group))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fundamental) (NN object))
        (PP (IN of)
          (NP
            (NP (DT the) (NN field))
            (PP (IN of)
              (NP (JJ abstract) (NN algebra)))))))
    (. .)))

prep_in(object-9, mathematics-2)
det(Group-5, a-4)
nsubj(object-9, Group-5)
cop(object-9, is-6)
det(object-9, a-7)
amod(object-9, fundamental-8)
root(ROOT-0, object-9)
det(field-12, the-11)
prep_of(object-9, field-12)
amod(algebra-15, abstract-14)
prep_of(field-12, algebra-15)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS mathematics))
        (, ,)
        (NP (RB especially) (NN set) (NN theory))
        (, ,)
        (CC and)
        (NP (NN logic))))
    (, ,)
    (NP (DT a) (NNP Relation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN property))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ assigns)
              (NP (NN truth) (NNS values))
              (PP (TO to)
                (NP
                  (NP
                    (NP (NNS combinations))
                    (PRN (-LRB- -LRB-)
                      (NP (NNS k-tuples))
                      (-RRB- -RRB-)))
                  (PP (IN of)
                    (NP (NN k) (NNS individuals))))))))))
    (. .)))

prep_in(property-15, mathematics-2)
advmod(theory-6, especially-4)
nn(theory-6, set-5)
conj_and(mathematics-2, theory-6)
prep_in(property-15, theory-6)
conj_and(mathematics-2, logic-9)
prep_in(property-15, logic-9)
det(Relation-12, a-11)
nsubj(property-15, Relation-12)
cop(property-15, is-13)
det(property-15, a-14)
root(ROOT-0, property-15)
nsubj(assigns-17, property-15)
rcmod(property-15, assigns-17)
nn(values-19, truth-18)
dobj(assigns-17, values-19)
prep_to(assigns-17, combinations-21)
appos(combinations-21, k-tuples-23)
nn(individuals-27, k-26)
prep_of(combinations-21, individuals-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Morphism))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN abstraction))
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (JJ structure-preserving) (NNS mappings))
              (PP (IN between)
                (NP (CD two) (JJ mathematical) (NNS structures))))))))
    (. .)))

prep_in(abstraction-8, mathematics-2)
det(Morphism-5, a-4)
nsubj(abstraction-8, Morphism-5)
cop(abstraction-8, is-6)
det(abstraction-8, an-7)
root(ROOT-0, abstraction-8)
partmod(abstraction-8, derived-9)
amod(mappings-12, structure-preserving-11)
prep_from(derived-9, mappings-12)
num(structures-16, two-14)
amod(structures-16, mathematical-15)
prep_between(mappings-12, structures-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NN theology)))
    (, ,)
    (NP
      (NP (NNP Monotheism))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Greek))
            (VP
              (VP (VBG lang) ('' '')
                (NP (CD one))
                ('' ''))
              (CC and)
              (VP (VBG lang) ('' '')
                (NP (NN god))
                ('' '')))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN belief))
        (PP
          (PP (IN in)
            (NP
              (NP (DT the) (NN existence))
              (PP (IN of)
                (NP (CD one) (NN deity)))))
          (, ,)
          (CC or)
          (PP (IN in)
            (NP
              (NP (DT the) (NNS oneness))
              (PP (IN of)
                (NP (NNP God))))))))
    (. .)))

prep_in(belief-20, theology-2)
nsubj(belief-20, Monotheism-4)
dep(Monotheism-4, from-6)
pobj(from-6, Greek-7)
dep(Greek-7, lang-8)
dobj(lang-8, one-10)
dep(Greek-7, lang-13)
conj_and(lang-8, lang-13)
dobj(lang-13, god-15)
cop(belief-20, is-18)
det(belief-20, the-19)
root(ROOT-0, belief-20)
det(existence-23, the-22)
prep_in(belief-20, existence-23)
num(deity-26, one-25)
prep_of(existence-23, deity-26)
det(oneness-31, the-30)
prep_in(belief-20, oneness-31)
conj_or(existence-23, oneness-31)
prep_of(oneness-31, God-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computer) (NN gaming)))
    (, ,)
    (NP
      (NP (DT a) (NNP MUD))
      (PRN (-LRB- -LRB-)
        (NP (NNP Multi-User) (NNP Dungeon))
        (, ,)
        (NP (NNP Domain)
          (CC or)
          (NNP Dimension))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ multi-player) (NN computer) (NN game))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ combines)
              (NP
                (NP (NNS elements))
                (PP (IN of)
                  (NP (NN role-playing) (NNS games))))
              (, ,)
              (S
                (VP (VB hack)
                  (CC and)
                  (VB slash)
                  (NP (NN style) (NN computer) (NNS games)
                    (CC and)
                    (JJ social) (NN chat) (NNS rooms)))))))))
    (. .)))

nn(gaming-3, computer-2)
prep_in(game-19, gaming-3)
det(MUD-6, a-5)
nsubj(game-19, MUD-6)
nn(Dungeon-9, Multi-User-8)
appos(MUD-6, Dungeon-9)
dep(Dungeon-9, Domain-11)
dep(Dungeon-9, Dimension-13)
conj_or(Domain-11, Dimension-13)
cop(game-19, is-15)
det(game-19, a-16)
amod(game-19, multi-player-17)
nn(game-19, computer-18)
root(ROOT-0, game-19)
nsubj(combines-21, game-19)
rcmod(game-19, combines-21)
dobj(combines-21, elements-22)
nn(games-25, role-playing-24)
prep_of(elements-22, games-25)
dep(combines-21, hack-27)
dep(combines-21, slash-29)
conj_and(hack-27, slash-29)
nn(games-32, style-30)
nn(games-32, computer-31)
dobj(hack-27, games-32)
amod(rooms-36, social-34)
nn(rooms-36, chat-35)
dobj(hack-27, rooms-36)
conj_and(games-32, rooms-36)

(ROOT
  (S
    (SBAR
      (PRN
        (NP
          (NP (NNP A))
          (PP (IN Muslim)
            (NP
              (NP (-LRB- -LRB-) (NNP ÃƒË) (NNP ™) (NNP Ã) (NNP ‚) (NNP âˆ))
              (`` `)
              (PP
                (PP
                  (ADVP (RB ÃƒË˜Ã))
                  (ADJP (JJ ‚)))
                (PP
                  (NP
                    (NP (CD â)
                      (ADJP
                        (QP ($ $) (CD œÃƒË) (CD ™)))
                      (NNP Ã) (NNP ‚) (NNP â) (NNP ‰) (NNP ¥) (NNP ÃƒË) (NNS ™))
                    (ADVP (RB Ã)))
                  (PP
                    (ADVP (RB ‚))
                    (ADJP (JJ â)))))
              (`` `))))
        (-RRB- -RRB-))
      (S
        (VP (VBZ is))
        (NP (DT an))))
    (VP (VBP adherent)
      (PP (IN of)
        (NP
          (NP (DT the) (NN religion))
          (PP (IN of)
            (NP (NNP Islam))))))
    (. .)))

dep(is-28, A-1)
nn(âˆ-8, ÃƒË-4)
nn(âˆ-8, ™-5)
nn(âˆ-8, Ã-6)
nn(âˆ-8, ‚-7)
prep_muslim(A-1, âˆ-8)
prep(âˆ-8, ÃƒË˜Ã-10)
dep(ÃƒË˜Ã-10, ‚-11)
num(™-22, â-12)
num(™-22, $-13)
number($-13, œÃƒË-14)
number($-13, ™-15)
nn(™-22, Ã-16)
nn(™-22, ‚-17)
nn(™-22, â-18)
nn(™-22, ‰-19)
nn(™-22, ¥-20)
nn(™-22, ÃƒË-21)
dep(‚-24, ™-22)
advmod(™-22, Ã-23)
prep(ÃƒË˜Ã-10, ‚-24)
dep(‚-24, â-25)
csubj(adherent-30, is-28)
dep(is-28, an-29)
root(ROOT-0, adherent-30)
det(religion-33, the-32)
prep_of(adherent-30, religion-33)
prep_of(religion-33, Islam-35)

(ROOT
  (S
    (NP
      (NP (DT A) (NNS MUSH))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB sometimes))
          (VBD said)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT an) (NN abbreviation))
                  (PP (IN for)
                    (NP
                      (NP (NNP Multi-User) (NNP Shared) (NNP Hack))
                      (, ,)
                      (NP (NNP Habitat))
                      (, ,)
                      (NP (NNP Holodeck))
                      (, ,)
                      (CC or)
                      (NP (NNP Hallucination)))))
                (, ,)
                (SBAR (IN though)
                  (S
                    (NP (DT these))
                    (VP (VBP are)
                      (ADJP (JJ backronyms)))))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ text-based) (JJ online) (JJ social) (NN medium))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT which)))
          (S
            (NP (JJ multiple) (NNS users))
            (VP (VBP are)
              (VP (VBN connected)
                (PP (IN at)
                  (NP (DT the) (JJ same) (NN time)))))))))
    (. .)))

det(MUSH-2, A-1)
nsubj(medium-32, MUSH-2)
advmod(said-5, sometimes-4)
dep(MUSH-2, said-5)
aux(abbreviation-9, to-6)
cop(abbreviation-9, be-7)
det(abbreviation-9, an-8)
xcomp(said-5, abbreviation-9)
nn(Hack-13, Multi-User-11)
nn(Hack-13, Shared-12)
prep_for(abbreviation-9, Hack-13)
prep_for(abbreviation-9, Habitat-15)
conj_or(Hack-13, Habitat-15)
prep_for(abbreviation-9, Holodeck-17)
conj_or(Hack-13, Holodeck-17)
prep_for(abbreviation-9, Hallucination-20)
conj_or(Hack-13, Hallucination-20)
mark(backronyms-25, though-22)
nsubj(backronyms-25, these-23)
cop(backronyms-25, are-24)
advcl(abbreviation-9, backronyms-25)
cop(medium-32, is-27)
det(medium-32, a-28)
amod(medium-32, text-based-29)
amod(medium-32, online-30)
amod(medium-32, social-31)
root(ROOT-0, medium-32)
rel(connected-38, which-34)
amod(users-36, multiple-35)
nsubjpass(connected-38, users-36)
auxpass(connected-38, are-37)
rcmod(medium-32, connected-38)
det(time-42, the-40)
amod(time-42, same-41)
prep_at(connected-38, time-42)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT a) (NNP Molecule))
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT a)
              (ADJP (RB sufficiently) (JJ stable))
              (ADJP
                (ADVP (RB electrically))
                (JJ neutral))
              (NN group))
            (PP (IN of)
              (NP
                (QP (IN at) (JJS least) (CD two))
                (NNS atoms)))))
        (PP (IN in)
          (NP
            (NP (DT a) (JJ definite) (NN arrangement))
            (VP (VBN held)
              (ADVP (RB together))
              (PP (IN by)
                (NP
                  (ADJP (RB very) (JJ strong))
                  (NN chemical) (NNS bonds))))))))
    (. .)))

prep_in(defined-7, chemistry-2)
det(Molecule-5, a-4)
nsubjpass(defined-7, Molecule-5)
auxpass(defined-7, is-6)
root(ROOT-0, defined-7)
det(group-14, a-9)
advmod(stable-11, sufficiently-10)
amod(group-14, stable-11)
advmod(neutral-13, electrically-12)
amod(group-14, neutral-13)
prep_as(defined-7, group-14)
quantmod(two-18, at-16)
mwe(at-16, least-17)
pobj(at-16, least-17)
num(atoms-19, two-18)
prep_of(group-14, atoms-19)
det(arrangement-23, a-21)
amod(arrangement-23, definite-22)
prep_in(defined-7, arrangement-23)
partmod(arrangement-23, held-24)
advmod(held-24, together-25)
advmod(strong-28, very-27)
amod(bonds-30, strong-28)
nn(bonds-30, chemical-29)
agent(held-24, bonds-30)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Midrash))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT a) (NN compilation))
            (PP (IN of)
              (NP
                (NP (JJ homiletic) (NNS teachings))
                (PRN (-LRB- -LRB-)
                  (NP (NNP commentaries))
                  (-RRB- -RRB-))))))
        (PP (IN on)
          (NP
            (NP (DT the) (NNP Tanakh))
            (PRN (-LRB- -LRB-)
              (NP (NNP Hebrew) (NNP Bible))
              (-RRB- -RRB-))))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (NN form))
            (PP (IN of)
              (NP
                (ADJP
                  (ADJP
                    (ADJP (JJ legal)
                      (CC and)
                      (JJ ritual))
                    (PRN (-LRB- -LRB-)
                      (NP (NNP Halakha))
                      (-RRB- -RRB-)))
                  (CC and)
                  (ADJP (JJ legendary))
                  (, ,)
                  (ADJP (JJ moralizing))
                  (, ,)
                  (ADJP (JJ folkloristic))
                  (, ,)
                  (CC and)
                  (ADJP (JJ anecdotal)))
                (PRN (-LRB- -LRB-)
                  (NP (NNP Aggadah))
                  (-RRB- -RRB-))
                (NNS parts)))))))
    (. .)))

det(Midrash-3, The-1)
nn(Midrash-3, term-2)
nsubj(refer-6, Midrash-3)
aux(refer-6, can-4)
advmod(refer-6, also-5)
root(ROOT-0, refer-6)
det(compilation-9, a-8)
prep_to(refer-6, compilation-9)
amod(teachings-12, homiletic-11)
prep_of(compilation-9, teachings-12)
appos(teachings-12, commentaries-14)
det(Tanakh-18, the-17)
prep_on(refer-6, Tanakh-18)
nn(Bible-21, Hebrew-20)
appos(Tanakh-18, Bible-21)
det(form-26, the-25)
prep_in(refer-6, form-26)
amod(parts-46, legal-28)
conj_and(legal-28, ritual-30)
amod(parts-46, ritual-30)
dep(legal-28, Halakha-32)
conj_and(legal-28, legendary-35)
amod(parts-46, legendary-35)
conj_and(legal-28, moralizing-37)
amod(parts-46, moralizing-37)
conj_and(legal-28, folkloristic-39)
amod(parts-46, folkloristic-39)
conj_and(legal-28, anecdotal-42)
amod(parts-46, anecdotal-42)
appos(parts-46, Aggadah-44)
prep_of(form-26, parts-46)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Monomer))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Greek))
            (VP
              (VP (VBG mono) ('' '')
                (NP (CD one))
                ('' ''))
              (CC and)
              (VP (VBG meros) ('' '')
                (NP (NN part))
                ('' '')))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small) (NN molecule))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD may)
              (VP (VB become)
                (NP
                  (NP (NNP chemically) (NNP bonded))
                  (PP (TO to)
                    (NP (JJ other) (NNS monomers))))
                (S
                  (VP (TO to)
                    (VP (VB form)
                      (NP (DT a) (NN polymer)))))))))))
    (. .)))

det(Monomer-2, A-1)
nsubj(molecule-19, Monomer-2)
dep(Monomer-2, from-4)
pobj(from-4, Greek-5)
dep(Greek-5, mono-6)
dobj(mono-6, one-8)
dep(Greek-5, meros-11)
conj_and(mono-6, meros-11)
dobj(meros-11, part-13)
cop(molecule-19, is-16)
det(molecule-19, a-17)
amod(molecule-19, small-18)
root(ROOT-0, molecule-19)
nsubj(bonded-24, molecule-19)
aux(bonded-24, may-21)
cop(bonded-24, become-22)
nn(bonded-24, chemically-23)
rcmod(molecule-19, bonded-24)
amod(monomers-27, other-26)
prep_to(bonded-24, monomers-27)
aux(form-29, to-28)
xcomp(bonded-24, form-29)
det(polymer-31, a-30)
dobj(form-29, polymer-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN cell) (NN biology)))
    (, ,)
    (NP
      (NP (DT a) (NNP Mitochondrion))
      (PRN (-LRB- -LRB-)
        (NP (NN plural) (NN mitochondria))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ membrane-enclosed) (NN organelle))
        (VP (VBN found)
          (PP (IN in)
            (NP
              (ADJP (RBS most) (JJ eukaryotic))
              (NNS cells))))))
    (. .)))

nn(biology-3, cell-2)
prep_in(organelle-14, biology-3)
det(Mitochondrion-6, a-5)
nsubj(organelle-14, Mitochondrion-6)
nn(mitochondria-9, plural-8)
appos(Mitochondrion-6, mitochondria-9)
cop(organelle-14, is-11)
det(organelle-14, a-12)
amod(organelle-14, membrane-enclosed-13)
root(ROOT-0, organelle-14)
partmod(organelle-14, found-15)
advmod(eukaryotic-18, most-17)
amod(cells-19, eukaryotic-18)
prep_in(found-15, cells-19)

(ROOT
  (S
    (NP (DT A) (NNP Missile))
    (PRN (-LRB- -LRB-)
      (VP (VB see)
        (ADVP (RB also))
        (NP (NN pronunciation) (NNS differences)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ self-propelled) (, ,) (JJ explosive) (NN projectile))
        (VP (VBN used)
          (PP (IN as)
            (NP
              (NP (DT a) (NN weapon))
              (PP (IN towards)
                (NP (DT a) (NN target))))))))
    (. .)))

det(Missile-2, A-1)
nsubj(projectile-14, Missile-2)
dep(projectile-14, see-4)
advmod(see-4, also-5)
nn(differences-7, pronunciation-6)
dobj(see-4, differences-7)
cop(projectile-14, is-9)
det(projectile-14, a-10)
amod(projectile-14, self-propelled-11)
amod(projectile-14, explosive-13)
root(ROOT-0, projectile-14)
partmod(projectile-14, used-15)
det(weapon-18, a-17)
prep_as(used-15, weapon-18)
det(target-21, a-20)
prep_towards(weapon-18, target-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Multiple) (NNP Virtual) (NNP Storage))
      (, ,)
      (VP
        (ADVP (RBR more) (RB commonly))
        (VBN called)
        (NP (NNP MVS)))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (RB commonly) (VBN used))
          (VBG operating) (NN system))
        (PP (IN on)
          (NP (DT the) (NNP System) (NNP \/) (NNP 370)
            (CC and)
            (NNP System) (NNP \/) (CD 390) (NNP IBM) (NN mainframe) (NNS computers)))))
    (. .)))

nn(Storage-3, Multiple-1)
nn(Storage-3, Virtual-2)
nsubj(system-16, Storage-3)
advmod(commonly-6, more-5)
advmod(called-7, commonly-6)
partmod(Storage-3, called-7)
dobj(called-7, MVS-8)
cop(system-16, was-10)
det(system-16, the-11)
advmod(used-14, most-12)
advmod(used-14, commonly-13)
amod(system-16, used-14)
amod(system-16, operating-15)
root(ROOT-0, system-16)
det(370-21, the-18)
nn(370-21, System-19)
nn(370-21, \/-20)
prep_on(system-16, 370-21)
nn(computers-28, System-23)
nn(computers-28, \/-24)
num(computers-28, 390-25)
nn(computers-28, IBM-26)
nn(computers-28, mainframe-27)
prep_on(system-16, computers-28)
conj_and(370-21, computers-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ abstract) (NN algebra))
        (, ,)
        (NP
          (NP (DT a) (NN branch))
          (PP (IN of)
            (NP (NNS mathematics))))))
    (, ,)
    (NP (DT a) (NNP Monoid))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ algebraic) (NN structure))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ single) (, ,) (JJ associative) (JJ binary) (NN operation))
            (CC and)
            (NP (DT an) (NN identity) (NN element))))))
    (. .)))

amod(algebra-3, abstract-2)
prep_in(structure-15, algebra-3)
det(branch-6, a-5)
appos(algebra-3, branch-6)
prep_of(branch-6, mathematics-8)
det(Monoid-11, a-10)
nsubj(structure-15, Monoid-11)
cop(structure-15, is-12)
det(structure-15, an-13)
amod(structure-15, algebraic-14)
root(ROOT-0, structure-15)
det(operation-22, a-17)
amod(operation-22, single-18)
amod(operation-22, associative-20)
amod(operation-22, binary-21)
prep_with(structure-15, operation-22)
det(element-26, an-24)
nn(element-26, identity-25)
prep_with(structure-15, element-26)
conj_and(operation-22, element-26)

(ROOT
  (S
    (S
      (NP (NNP Mallow))
      (VP (MD may)
        (ADVP (RB also))
        (VP (VB refer)
          (PP (TO to)))))
    (: :)
    (S
      (INTJ (UH marshmallow))
      (, ,)
      (NP (DT a) (JJ sweet))
      (ADVP (RB originally))
      (VP (VBD made)
        (PP (IN from)
          (NP (DT the) (JJ marsh) (NN mallow)))))
    (. .)))

nsubj(refer-4, Mallow-1)
aux(refer-4, may-2)
advmod(refer-4, also-3)
root(ROOT-0, refer-4)
prep(refer-4, to-5)
dep(made-12, marshmallow-7)
det(sweet-10, a-9)
nsubj(made-12, sweet-10)
advmod(made-12, originally-11)
parataxis(refer-4, made-12)
det(mallow-16, the-14)
amod(mallow-16, marsh-15)
prep_from(made-12, mallow-16)

(ROOT
  (S
    (NP (NNP Mallow))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NNP Malvi) (NN language))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Malwa) (NN region))
              (PP (IN of)
                (NP (NNP India))))))))
    (. .)))

nsubj(refers-2, Mallow-1)
root(ROOT-0, refers-2)
det(language-6, the-4)
nn(language-6, Malvi-5)
prep_to(refers-2, language-6)
det(region-10, the-8)
nn(region-10, Malwa-9)
prep_of(language-6, region-10)
prep_of(region-10, India-12)

(ROOT
  (S
    (NP
      (NP (NNP Audio) (NNP Layer) (NNP 3))
      (, ,)
      (VP
        (ADVP (RBR more) (RB commonly))
        (VBN referred)
        (PP (TO to)
          (NP
            (QP (RB as) (CD MP3)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ digital) (JJ audio) (NN encoding) (NN format))
        (VP (VBG using)
          (NP
            (NP (DT a) (NN form))
            (PP (IN of)
              (NP (JJ lossy) (NN data) (NN compression)))))))
    (. .)))

nn(3-3, Audio-1)
nn(3-3, Layer-2)
nsubj(format-17, 3-3)
advmod(commonly-6, more-5)
advmod(referred-7, commonly-6)
partmod(3-3, referred-7)
quantmod(MP3-10, as-9)
prep_to(referred-7, MP3-10)
cop(format-17, is-12)
det(format-17, a-13)
amod(format-17, digital-14)
amod(format-17, audio-15)
nn(format-17, encoding-16)
root(ROOT-0, format-17)
partmod(format-17, using-18)
det(form-20, a-19)
dobj(using-18, form-20)
amod(compression-24, lossy-22)
nn(compression-24, data-23)
prep_of(form-20, compression-24)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Module))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ self-contained) (NN component))
          (PP (IN of)
            (NP
              (NP (DT a) (NN system))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT a) (JJ well-defined) (NN interface))
                      (PP (TO to)
                        (NP (DT the) (JJ other) (NNS components))))))))))))
    (: ;)
    (S
      (NP (NN something))
      (VP (VBZ is)
        (ADJP (JJ modular))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ includes)
              (CC or)
              (VBZ uses)
              (NP
                (NP (NNS modules))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD can)
                      (VP (VB be)
                        (VP (VBN interchanged)
                          (PP (IN as)
                            (NP (NNS units)))
                          (PP (IN without)
                            (NP
                              (NP (NN disassembly))
                              (PP (IN of)
                                (NP (DT the) (NN module))))))))))))))))
    (. .)))

det(Module-2, A-1)
nsubj(component-6, Module-2)
cop(component-6, is-3)
det(component-6, a-4)
amod(component-6, self-contained-5)
root(ROOT-0, component-6)
det(system-9, a-8)
prep_of(component-6, system-9)
nsubj(has-12, system-9)
rcmod(system-9, has-12)
det(interface-15, a-13)
amod(interface-15, well-defined-14)
dobj(has-12, interface-15)
det(components-19, the-17)
amod(components-19, other-18)
prep_to(interface-15, components-19)
nsubj(modular-23, something-21)
cop(modular-23, is-22)
parataxis(component-6, modular-23)
mark(includes-26, if-24)
nsubj(includes-26, it-25)
nsubj(uses-28, it-25)
advcl(modular-23, includes-26)
advcl(modular-23, uses-28)
conj_or(includes-26, uses-28)
dobj(includes-26, modules-29)
nsubjpass(interchanged-33, modules-29)
aux(interchanged-33, can-31)
auxpass(interchanged-33, be-32)
rcmod(modules-29, interchanged-33)
prep_as(interchanged-33, units-35)
prep_without(interchanged-33, disassembly-37)
det(module-40, the-39)
prep_of(disassembly-37, module-40)

(ROOT
  (S
    (NP (NNP Mythology))
    (ADVP (RB also))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN branch))
          (PP (IN of)
            (NP
              (NP (NN knowledge))
              (VP (VBG dealing)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN collection) (, ,) (NN study)
                      (CC and)
                      (NN interpretation))
                    (PP (IN of)
                      (NP
                        (NP (NNS myths))
                        (, ,)
                        (VP
                          (ADVP (RB also))
                          (VBN known)
                          (PP (IN as)
                            (NP (NN mythography))))))))))))))
    (. .)))

nsubj(refers-3, Mythology-1)
advmod(refers-3, also-2)
root(ROOT-0, refers-3)
det(branch-6, the-5)
prep_to(refers-3, branch-6)
prep_of(branch-6, knowledge-8)
partmod(knowledge-8, dealing-9)
det(collection-12, the-11)
prep_with(dealing-9, collection-12)
prep_with(dealing-9, study-14)
conj_and(collection-12, study-14)
prep_with(dealing-9, interpretation-16)
conj_and(collection-12, interpretation-16)
prep_of(collection-12, myths-18)
advmod(known-21, also-20)
partmod(myths-18, known-21)
prep_as(known-21, mythography-23)

(ROOT
  (S
    (NP (DT A) (NNPS Microgyrus))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN area))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ cerebral) (NN cortex))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ includes)
                  (NP
                    (NP
                      (QP (RB only) (CD four))
                      (JJ cortical) (NNS layers))
                    (PP (RB instead) (IN of)
                      (NP (CD six)))))))))))
    (. .)))

det(Microgyrus-2, A-1)
nsubj(area-5, Microgyrus-2)
cop(area-5, is-3)
det(area-5, an-4)
root(ROOT-0, area-5)
det(cortex-9, the-7)
amod(cortex-9, cerebral-8)
prep_of(area-5, cortex-9)
nsubj(includes-11, cortex-9)
rcmod(cortex-9, includes-11)
quantmod(four-13, only-12)
num(layers-15, four-13)
amod(layers-15, cortical-14)
dobj(includes-11, layers-15)
prep_instead_of(layers-15, six-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Magnetism))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS phenomena))
            (SBAR
              (WHPP (IN by)
                (WHNP (WDT which)))
              (S
                (NP (NNS materials))
                (VP (VBP exert)
                  (NP
                    (NP
                      (ADJP (JJ attractive)
                        (CC or)
                        (JJ repulsive))
                      (NNS forces))
                    (PP (IN on)
                      (NP (JJ other) (NNS materials)))))))))))
    (. .)))

prep_in(one-6, physics-2)
nsubj(one-6, Magnetism-4)
cop(one-6, is-5)
root(ROOT-0, one-6)
det(phenomena-9, the-8)
prep_of(one-6, phenomena-9)
rel(exert-13, which-11)
nsubj(exert-13, materials-12)
rcmod(phenomena-9, exert-13)
amod(forces-17, attractive-14)
conj_or(attractive-14, repulsive-16)
amod(forces-17, repulsive-16)
dobj(exert-13, forces-17)
amod(materials-20, other-19)
prep_on(forces-17, materials-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Filter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN subset))
        (PP (IN of)
          (NP (DT a)
            (ADJP (RB partially) (VBN ordered))
            (NN set)))))
    (. .)))

prep_in(subset-9, mathematics-2)
det(Filter-5, a-4)
nsubj(subset-9, Filter-5)
cop(subset-9, is-6)
det(subset-9, a-7)
amod(subset-9, special-8)
root(ROOT-0, subset-9)
det(set-14, a-11)
advmod(ordered-13, partially-12)
amod(set-14, ordered-13)
prep_of(subset-9, set-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNS Memetics))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ neo-Darwinian) (NN approach))
        (PP (TO to)
          (NP
            (NP (JJ evolutionary) (NNS models))
            (PP (IN of)
              (NP
                (NP (JJ cultural) (NN information) (NN transfer))
                (VP (VBN based)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN concept))
                      (PP (IN of)
                        (NP (DT the) (NN meme))))))))))))
    (. .)))

nsubj(approach-5, Memetics-1)
cop(approach-5, is-2)
det(approach-5, a-3)
amod(approach-5, neo-Darwinian-4)
root(ROOT-0, approach-5)
amod(models-8, evolutionary-7)
prep_to(approach-5, models-8)
amod(transfer-12, cultural-10)
nn(transfer-12, information-11)
prep_of(models-8, transfer-12)
partmod(transfer-12, based-13)
det(concept-16, the-15)
prep_on(based-13, concept-16)
det(meme-19, the-18)
prep_of(concept-16, meme-19)

(ROOT
  (S
    (NP (DT The) (NNP Morona))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN tributary))
          (PP (TO to)
            (NP (DT the) (NNP Amazon) (NNP River)))))
      (, ,)
      (CC and)
      (VP (VBZ flows)
        (NP (NN parallel))
        (PP
          (PP (TO to)
            (NP (DT the) (NNP Pastaza)))
          (CC and)
          (ADVP (RB immediately))
          (PP (TO to)
            (NP
              (NP (DT the) (NN west))
              (PP (IN of)
                (NP (PRP it)))))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ last) (NN stream))
          (PP (IN of)
            (NP
              (NP (DT any) (NN importance))
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ northern) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NNP Amazon)))))))))
      (PP (IN before)
        (S
          (VP (VBG reaching)
            (NP (DT the) (NNP Pongo) (IN de) (NNP Manseriche))))))
    (. .)))

det(Morona-2, The-1)
nsubj(tributary-5, Morona-2)
nsubj(flows-12, Morona-2)
cop(tributary-5, is-3)
det(tributary-5, a-4)
root(ROOT-0, tributary-5)
det(River-9, the-7)
nn(River-9, Amazon-8)
prep_to(tributary-5, River-9)
conj_and(tributary-5, flows-12)
dobj(flows-12, parallel-13)
det(Pastaza-16, the-15)
prep_to(flows-12, Pastaza-16)
advmod(flows-12, immediately-18)
conj(flows-12, immediately-18)
det(west-21, the-20)
prep_to(flows-12, west-21)
conj_and(Pastaza-16, west-21)
prep_of(west-21, it-23)
cop(stream-29, is-26)
det(stream-29, the-27)
amod(stream-29, last-28)
conj_and(tributary-5, stream-29)
det(importance-32, any-31)
prep_of(stream-29, importance-32)
det(side-36, the-34)
amod(side-36, northern-35)
prep_on(importance-32, side-36)
det(Amazon-39, the-38)
prep_of(side-36, Amazon-39)
prepc_before(tributary-5, reaching-41)
det(Manseriche-45, the-42)
nn(Manseriche-45, Pongo-43)
amod(Manseriche-45, de-44)
dobj(reaching-41, Manseriche-45)

(ROOT
  (S
    (PP (IN In)
      (NP (NN particle) (NNS physics)))
    (, ,)
    (NP (DT a) (NNP Meson))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB strongly) (JJ interacting))
          (NN boson))
        (: -)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (, ,)
              (NP
                (NP (DT a) (NN hadron))
                (PP (IN with)
                  (NP (NN integer) (NN spin)))))))))
    (. .)))

nn(physics-3, particle-2)
prep_in(boson-11, physics-3)
det(Meson-6, a-5)
nsubj(boson-11, Meson-6)
cop(boson-11, is-7)
det(boson-11, a-8)
advmod(interacting-10, strongly-9)
amod(boson-11, interacting-10)
root(ROOT-0, boson-11)
nsubj(hadron-17, that-13)
cop(hadron-17, is-14)
det(hadron-17, a-16)
rcmod(boson-11, hadron-17)
nn(spin-20, integer-19)
prep_with(hadron-17, spin-20)

(ROOT
  (S
    (NP (DT A) (NNP Motorcycle)
      (CC or)
      (NNP motorbike))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ single-track) (, ,) (JJ two-wheeled) (NN motor) (NN vehicle))
        (VP (VBN powered)
          (PP (IN by)
            (NP (DT an) (NN engine))))))
    (. .)))

det(Motorcycle-2, A-1)
nsubj(vehicle-11, Motorcycle-2)
conj_or(Motorcycle-2, motorbike-4)
nsubj(vehicle-11, motorbike-4)
cop(vehicle-11, is-5)
det(vehicle-11, a-6)
amod(vehicle-11, single-track-7)
amod(vehicle-11, two-wheeled-9)
nn(vehicle-11, motor-10)
root(ROOT-0, vehicle-11)
partmod(vehicle-11, powered-12)
det(engine-15, an-14)
agent(powered-12, engine-15)

(ROOT
  (S
    (NP (DT A) (NNP Map))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ visual) (NN representation))
        (PP (IN of)
          (NP (DT an) (NN area)))))
    (. .)))

det(Map-2, A-1)
nsubj(representation-6, Map-2)
cop(representation-6, is-3)
det(representation-6, a-4)
amod(representation-6, visual-5)
root(ROOT-0, representation-6)
det(area-9, an-8)
prep_of(representation-6, area-9)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Mosque))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN place))
        (PP (IN of)
          (NP
            (NP (NN worship))
            (PP (IN for)
              (NP
                (NP (NNS followers))
                (PP (IN of)
                  (NP (NNP Islam)))))))))
    (. .)))

det(Mosque-2, A-1)
nsubj(place-5, Mosque-2)
cop(place-5, is-3)
det(place-5, a-4)
root(ROOT-0, place-5)
prep_of(place-5, worship-7)
prep_for(worship-7, followers-9)
prep_of(followers-9, Islam-11)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN astronomy) (, ,) (NN geology) (, ,)
          (CC and)
          (NN paleontology) (, ,))
        (VP
          (VP (VBN Mya))
          (CC or)
          (VP ('' '')
            (NP (CD m.))))))
    (NP
      (NP (NN y.))
      (NP (NN a.)))
    ('' '')
    (VP (VBZ is)
      (NP (DT an) (NN abbreviation))
      (PP (IN for) ('' '')
        (NP (CD million) (NNS years)))
      (ADVP (RB ago) ('' '')))
    (. .)))

nn(geology-4, astronomy-2)
prep_in(abbreviation-18, geology-4)
conj_and(geology-4, paleontology-7)
prep_in(abbreviation-18, paleontology-7)
dep(geology-4, Mya-9)
dep(geology-4, m.-12)
conj_or(Mya-9, m.-12)
nsubj(abbreviation-18, y.-13)
dep(y.-13, a.-14)
cop(abbreviation-18, is-16)
det(abbreviation-18, an-17)
root(ROOT-0, abbreviation-18)
num(years-22, million-21)
prep_for(abbreviation-18, years-22)
advmod(abbreviation-18, ago-23)

(ROOT
  (S
    (NP (DT A) (NNP Megabyte))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP (NN information))))
        (CC or)
        (NP
          (NP (NN computer) (NN storage))
          (NP
            (ADJP (JJ equal)
              (PP (TO to)
                (NP
                  (NP
                    (NP (RB either) (CD 10))
                    (-LRB- -LRB-)
                    (NP (: ;)
                      (NP
                        (NP (CD 6) (NNS -LRB-))
                        (: ;)
                        (NP
                          (PRN (-LRB- -LRB-)
                            (NP (CD 1,000,000))
                            (-RRB- -RRB-))
                          (NNS bytes)))
                      (CC or)
                      (NP
                        (NP (CD 2) (NNS -LRB-))
                        (: ;)
                        (NP
                          (QP (CD 20) (CD -LRB-)))))
                    (: ;))
                  (PRN (-LRB- -LRB-)
                    (NP (CD 1,048,576))
                    (-RRB- -RRB-)))))
            (NNS bytes))))
      (, ,)
      (PP (VBG depending)
        (PP (IN on)
          (NP (NN context)))))
    (. .)))

det(Megabyte-2, A-1)
nsubj(unit-5, Megabyte-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, information-7)
nn(storage-10, computer-9)
conj_or(unit-5, storage-10)
amod(bytes-34, equal-11)
advmod(10-14, either-13)
prep_to(equal-11, 10-14)
dep(10-14, 6-17)
appos(bytes-23, 1,000,000-21)
dep(6-17, bytes-23)
dep(10-14, 2-25)
conj_or(6-17, 2-25)
dep(2-25, 20-28)
appos(10-14, 1,048,576-32)
dep(storage-10, bytes-34)
prepc_depending_on(unit-5, on-37)
pobj(unit-5, context-38)

(ROOT
  (S
    (PP (IN In)
      (NP (NN poetry)))
    (, ,)
    (NP (DT the) (NN Meter)
      (CC or)
      (NN metre))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ basic) (JJ rhythmic) (NN structure))
        (PP (IN of)
          (NP (DT a) (NN verse)))))
    (. .)))

prep_in(structure-12, poetry-2)
det(Meter-5, the-4)
nsubj(structure-12, Meter-5)
conj_or(Meter-5, metre-7)
nsubj(structure-12, metre-7)
cop(structure-12, is-8)
det(structure-12, the-9)
amod(structure-12, basic-10)
amod(structure-12, rhythmic-11)
root(ROOT-0, structure-12)
det(verse-15, a-14)
prep_of(structure-12, verse-15)

(ROOT
  (S
    (NP (DT A) (NNP Meteorite))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ natural) (NN object))
        (VP (VBG originating)
          (PP (IN in)
            (NP
              (NP (JJ outer) (NN space))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ survives)
                    (NP
                      (NP (DT an) (NN impact))
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN Earth) (POS 's))
                          (NN surface))))))))))))
    (. .)))

det(Meteorite-2, A-1)
nsubj(object-6, Meteorite-2)
cop(object-6, is-3)
det(object-6, a-4)
amod(object-6, natural-5)
root(ROOT-0, object-6)
partmod(object-6, originating-7)
amod(space-10, outer-9)
prep_in(originating-7, space-10)
nsubj(survives-12, space-10)
rcmod(space-10, survives-12)
det(impact-14, an-13)
dobj(survives-12, impact-14)
det(Earth-17, the-16)
poss(surface-19, Earth-17)
prep_with(impact-14, surface-19)

(ROOT
  (S
    (NP (DT A) (NNP Motherboard))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ central))
        (CC or)
        (NP
          (NP
            (NP (JJ primary) (VBN printed) (NN circuit) (NN board))
            (PRN (-LRB- -LRB-)
              (NP (NNP PCB))
              (-RRB- -RRB-)))
          (VP (VBG making)
            (ADVP
              (NP (CD <PRT>))
              (RB up))
            (S
              (VP (VBG </PRT>)
                (NP (DT a) (JJ complex) (JJ electronic) (NN system))))))
        (, ,)
        (PP (JJ such) (IN as)
          (NP (DT a) (JJ modern) (NN computer)))))
    (. .)))

det(Motherboard-2, A-1)
nsubj(central-5, Motherboard-2)
cop(central-5, is-3)
det(central-5, the-4)
root(ROOT-0, central-5)
amod(board-10, primary-7)
amod(board-10, printed-8)
nn(board-10, circuit-9)
conj_or(central-5, board-10)
abbrev(board-10, PCB-12)
partmod(board-10, making-14)
npadvmod(up-16, <PRT>-15)
advmod(making-14, up-16)
xcomp(making-14, </PRT>-17)
det(system-21, a-18)
amod(system-21, complex-19)
amod(system-21, electronic-20)
dobj(</PRT>-17, system-21)
conj_or(central-5, as-24)
det(computer-27, a-25)
amod(computer-27, modern-26)
prep_such_as(central-5, computer-27)

(ROOT
  (S
    (NP (DT A) (NNP Maser))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ produces)
              (NP (JJ coherent) (JJ electromagnetic) (NNS waves))
              (PP (IN through)
                (NP
                  (NP (NN amplification))
                  (ADJP (JJ due)
                    (PP (TO to)
                      (NP (JJ stimulated) (NN emission)))))))))))
    (. .)))

det(Maser-2, A-1)
nsubj(device-5, Maser-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
nsubj(produces-7, device-5)
rcmod(device-5, produces-7)
amod(waves-10, coherent-8)
amod(waves-10, electromagnetic-9)
dobj(produces-7, waves-10)
prep_through(produces-7, amplification-12)
amod(emission-16, stimulated-15)
prep_due_to(amplification-12, emission-16)

(ROOT
  (S
    (NP (DT The) (NN name) (NNP Mesa))
    (VP (VBD was)
      (NP (DT a) (NN pun))
      (, ,)
      (S
        (VP (VBG referring)
          (PP (TO to)
            (NP (PRP$ its) (NN design) (NN intent)))
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (SYM a))
                  ('' '')
                  (VP (VBN high-level) ('' '')
                    (NP (NN programming) (NN language))))))))))
    (. .)))

det(Mesa-3, The-1)
nn(Mesa-3, name-2)
nsubj(pun-6, Mesa-3)
cop(pun-6, was-4)
det(pun-6, a-5)
root(ROOT-0, pun-6)
partmod(pun-6, referring-8)
xcomp(pun-6, referring-8)
poss(intent-12, its-10)
nn(intent-12, design-11)
prep_to(referring-8, intent-12)
aux(a-15, to-13)
cop(a-15, be-14)
xcomp(referring-8, a-15)
partmod(a-15, high-level-17)
nn(language-20, programming-19)
dobj(high-level-17, language-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Multihull))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN ship)
          (CC or)
          (NN boat))
        (PP (IN with)
          (NP
            (QP (JJR more) (IN than) (CD one))
            (NN hull)))))
    (. .)))

det(Multihull-2, A-1)
nsubj(ship-5, Multihull-2)
cop(ship-5, is-3)
det(ship-5, a-4)
root(ROOT-0, ship-5)
conj_or(ship-5, boat-7)
mwe(than-10, more-9)
quantmod(one-11, than-10)
num(hull-12, one-11)
prep_with(ship-5, hull-12)

(ROOT
  (S
    (NP (DT A) (NNP Mondegreen))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN misinterpretation))
        (PP (IN of)
          (NP
            (NP (DT a) (NN line)
              (CC or)
              (NN lyric))
            (PP (IN in)
              (NP
                (NP (DT a) (NN song))
                (ADJP (JJ due) (TO to) (JJ homophony))))))))
    (. .)))

det(Mondegreen-2, A-1)
nsubj(misinterpretation-5, Mondegreen-2)
cop(misinterpretation-5, is-3)
det(misinterpretation-5, the-4)
root(ROOT-0, misinterpretation-5)
det(line-8, a-7)
prep_of(misinterpretation-5, line-8)
prep_of(misinterpretation-5, lyric-10)
conj_or(line-8, lyric-10)
det(song-13, a-12)
prep_in(line-8, song-13)
amod(homophony-16, due-14)
dep(homophony-16, to-15)
amod(song-13, homophony-16)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Microassembler))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB sometimes))
          (VBN called)
          (NP (DT a) (NN meta-assembler)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN computer) (NN program))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ helps)
              (VP (VB prepare)
                (NP (DT a) (NN microprogram)
                  (S
                    (VP (TO to)
                      (VP (VB control)
                        (NP
                          (NP (DT the) (JJ low) (NN level) (NN operation))
                          (PP (IN of)
                            (NP (DT a) (NN computer))))
                        (PP (IN in)
                          (NP
                            (NP (RB much) (DT the) (JJ same) (NN way))
                            (SBAR
                              (S
                                (NP (DT an) (NN assembler))
                                (VP (VBZ helps)
                                  (VP (VB prepare)
                                    (NP (JJR higher) (NN level) (NN code))
                                    (PP (IN for)
                                      (NP (DT a) (NN processor)))))))))))))))))))
    (. .)))

det(Microassembler-2, A-1)
nsubj(program-12, Microassembler-2)
advmod(called-5, sometimes-4)
dep(Microassembler-2, called-5)
det(meta-assembler-7, a-6)
dobj(called-5, meta-assembler-7)
cop(program-12, is-9)
det(program-12, a-10)
nn(program-12, computer-11)
root(ROOT-0, program-12)
nsubj(helps-14, program-12)
rcmod(program-12, helps-14)
xcomp(helps-14, prepare-15)
det(microprogram-17, a-16)
dobj(prepare-15, microprogram-17)
aux(control-19, to-18)
infmod(microprogram-17, control-19)
det(operation-23, the-20)
amod(operation-23, low-21)
nn(operation-23, level-22)
dobj(control-19, operation-23)
det(computer-26, a-25)
prep_of(operation-23, computer-26)
advmod(way-31, much-28)
det(way-31, the-29)
amod(way-31, same-30)
prep_in(control-19, way-31)
det(assembler-33, an-32)
nsubj(helps-34, assembler-33)
rcmod(way-31, helps-34)
xcomp(helps-34, prepare-35)
amod(code-38, higher-36)
nn(code-38, level-37)
dobj(prepare-35, code-38)
det(processor-41, a-40)
prep_for(prepare-35, processor-41)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Myriad))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN progression))
        (PP (IN in)
          (NP
            (NP (DT the)
              (ADJP (RB commonly) (VBN used))
              (NN system))
            (PP (IN of)
              (S
                (VP (VBG describing)
                  (NP (NNS numbers))
                  (S
                    (VP (VBG using)
                      (NP (NNS tens)
                        (CC and)
                        (NNS hundreds)))))))))))
    (. .)))

det(Myriad-3, The-1)
nn(Myriad-3, term-2)
nsubj(progression-6, Myriad-3)
cop(progression-6, is-4)
det(progression-6, a-5)
root(ROOT-0, progression-6)
det(system-11, the-8)
advmod(used-10, commonly-9)
amod(system-11, used-10)
prep_in(progression-6, system-11)
prepc_of(system-11, describing-13)
dobj(describing-13, numbers-14)
xcomp(describing-13, using-15)
dobj(using-15, tens-16)
dobj(using-15, hundreds-18)
conj_and(tens-16, hundreds-18)

(ROOT
  (S
    (NP (DT The) (NNP Marcomanni))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ Germanic) (NN tribe))
        (, ,)
        (ADVP (RB probably))
        (ADJP (VBN related)
          (PP (TO to)
            (NP
              (NP (DT the) (NNP Buri))
              (, ,)
              (NP (NNP Suebi))
              (CC or)
              (NP (NNP Suevi)))))))
    (. .)))

det(Marcomanni-2, The-1)
nsubj(tribe-6, Marcomanni-2)
cop(tribe-6, were-3)
det(tribe-6, a-4)
amod(tribe-6, Germanic-5)
root(ROOT-0, tribe-6)
advmod(tribe-6, probably-8)
amod(tribe-6, related-9)
det(Buri-12, the-11)
prep_to(related-9, Buri-12)
prep_to(related-9, Suebi-14)
conj_or(Buri-12, Suebi-14)
prep_to(related-9, Suevi-16)
conj_or(Buri-12, Suevi-16)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Maze))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ complex) (NN tour) (NN puzzle))
        (PP (IN in)
          (NP
            (NP (DT the) (NN form))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ complex) (JJ branching) (NN passage))
                (SBAR
                  (WHPP (IN through)
                    (WHNP (WDT which)))
                  (S
                    (NP (DT the) (NN solver))
                    (VP (MD must)
                      (VP (VB find)
                        (NP (DT a) (NN route))))))))))))
    (. .)))

det(Maze-2, A-1)
nsubj(puzzle-7, Maze-2)
cop(puzzle-7, is-3)
det(puzzle-7, a-4)
amod(puzzle-7, complex-5)
nn(puzzle-7, tour-6)
root(ROOT-0, puzzle-7)
det(form-10, the-9)
prep_in(puzzle-7, form-10)
det(passage-15, a-12)
amod(passage-15, complex-13)
amod(passage-15, branching-14)
prep_of(form-10, passage-15)
rel(find-21, which-17)
det(solver-19, the-18)
nsubj(find-21, solver-19)
aux(find-21, must-20)
rcmod(passage-15, find-21)
det(route-23, a-22)
dobj(find-21, route-23)

(ROOT
  (S
    (NP (DT A) (NNP Mammoth))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN species))
        (PP (IN of)
          (NP (DT the)
            (ADJP (JJ extinct) (JJ genus))
            (NNS Mammuthus)))))
    (. .)))

det(Mammoth-2, A-1)
nsubj(species-5, Mammoth-2)
cop(species-5, is-3)
det(species-5, any-4)
root(ROOT-0, species-5)
det(Mammuthus-10, the-7)
amod(genus-9, extinct-8)
amod(Mammuthus-10, genus-9)
prep_of(species-5, Mammuthus-10)

(ROOT
  (S
    (NP (DT A) (NNP Mummy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN corpse))
        (SBAR
          (WHNP (WP$ whose)
            (NP
              (NP (NN skin))
              (CC and)
              (NP (JJ dried) (NN flesh))))
          (S
            (VP (VBP have)
              (VP (VBN been)
                (VP (VBN preserved)
                  (PP (IN by)
                    (NP
                      (NP
                        (NP (DT either)
                          (ADJP (JJ intentional)
                            (CC or)
                            (JJ incidental))
                          (NN exposure))
                        (PP (TO to)
                          (NP (NNS chemicals))))
                      (, ,)
                      (NP (JJ extreme) (NN cold))
                      (, ,)
                      (NP
                        (ADJP (RB very) (JJ low))
                        (NN humidity))
                      (, ,)
                      (CC or)
                      (NP
                        (NP (NN lack))
                        (PP (IN of)
                          (NP (NN air)))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (NNS bodies))
                            (VP (VBP are)
                              (VP (VBN submerged)
                                (PP (IN in)
                                  (NP (NNS bogs)))))))))))))))))
    (. .)))

det(Mummy-2, A-1)
nsubj(corpse-5, Mummy-2)
cop(corpse-5, is-3)
det(corpse-5, a-4)
root(ROOT-0, corpse-5)
poss(skin-7, corpse-5)
nsubjpass(preserved-13, skin-7)
amod(flesh-10, dried-9)
conj_and(skin-7, flesh-10)
nsubjpass(preserved-13, flesh-10)
aux(preserved-13, have-11)
auxpass(preserved-13, been-12)
rcmod(corpse-5, preserved-13)
det(exposure-19, either-15)
amod(exposure-19, intentional-16)
conj_or(intentional-16, incidental-18)
amod(exposure-19, incidental-18)
agent(preserved-13, exposure-19)
prep_to(exposure-19, chemicals-21)
amod(cold-24, extreme-23)
agent(preserved-13, cold-24)
conj_or(exposure-19, cold-24)
advmod(low-27, very-26)
amod(humidity-28, low-27)
agent(preserved-13, humidity-28)
conj_or(exposure-19, humidity-28)
agent(preserved-13, lack-31)
conj_or(exposure-19, lack-31)
tmod(submerged-37, lack-31)
prep_of(lack-31, air-33)
advmod(submerged-37, when-34)
nsubjpass(submerged-37, bodies-35)
auxpass(submerged-37, are-36)
dep(lack-31, submerged-37)
prep_in(submerged-37, bogs-39)

(ROOT
  (S
    (NP (NNP Macaroni))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN corruption))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ Italian) (NN word) (NN maccherone))
            (CC and)
            (NP (PRP$ its) (NN plural) (NNS maccheroni))))))
    (. .)))

nsubj(corruption-4, Macaroni-1)
cop(corruption-4, is-2)
det(corruption-4, a-3)
root(ROOT-0, corruption-4)
det(maccherone-9, the-6)
amod(maccherone-9, Italian-7)
nn(maccherone-9, word-8)
prep_of(corruption-4, maccherone-9)
poss(maccheroni-13, its-11)
nn(maccheroni-13, plural-12)
prep_of(corruption-4, maccheroni-13)
conj_and(maccherone-9, maccheroni-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP McIntosh) (NNP Red))
      (PRN (-LRB- -LRB-)
        (NP (NNP McIntosh))
        (, ,)
        (NP (NNP Mac))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN apple) (NN cultivar))
        (PP (IN with)
          (NP
            (NP (JJ red)
              (CC and)
              (JJ green) (NN skin))
            (, ,)
            (NP (DT a) (JJ tart) (NN flavor))
            (, ,)
            (CC and)
            (NP (NN tender) (JJ white) (NN flesh))))))
    (. .)))

det(Red-3, The-1)
nn(Red-3, McIntosh-2)
nsubj(cultivar-12, Red-3)
appos(Red-3, McIntosh-5)
dep(McIntosh-5, Mac-7)
cop(cultivar-12, is-9)
det(cultivar-12, an-10)
nn(cultivar-12, apple-11)
root(ROOT-0, cultivar-12)
amod(skin-17, red-14)
conj_and(red-14, green-16)
amod(skin-17, green-16)
prep_with(cultivar-12, skin-17)
det(flavor-21, a-19)
amod(flavor-21, tart-20)
prep_with(cultivar-12, flavor-21)
conj_and(skin-17, flavor-21)
nn(flesh-26, tender-24)
amod(flesh-26, white-25)
prep_with(cultivar-12, flesh-26)
conj_and(skin-17, flesh-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Machete))
      (PRN (-LRB- -LRB-)
        (FRAG
          (FRAG (RB mÃƒâ))
          (: ‰)
          (FRAG
            (FRAG
              (X (SYM ˆÃ))
              (: ‚)
              (NP (NNP Ë)))
            (: ™)
            (FRAG
              (FRAG
                (NP
                  (NP (NNP Ãƒâ))
                  (NP (NNP $) ('' '') (NNP Ã)))
                (: ‚)
                (NP
                  (NP (NNP âˆšÃƒâ))
                  (NP
                    (ADJP ($ $) (CD ¦))
                    (NNP Ã))))
              (: ‚)
              (FRAG
                (FRAG (RB âˆžÃƒâ))
                (: ‰)
                (FRAG
                  (X (SYM ˆÃ))
                  (: ‚)
                  (NP (NNP Ë) (NNP ti)))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (JJ large) (JJ cleaver-like) (NN cutting) (NN tool)))
    (. .)))

det(Machete-2, The-1)
nsubj(tool-32, Machete-2)
dep(Machete-2, mÃƒâ-4)
punct(mÃƒâ-4, ‰-5)
dep(Ë-8, ˆÃ-6)
punct(Ë-8, ‚-7)
dep(mÃƒâ-4, Ë-8)
punct(Ë-8, ™-9)
dep(Ë-8, Ãƒâ-10)
nn(Ã-13, $-11)
dep(Ãƒâ-10, Ã-13)
punct(Ãƒâ-10, ‚-14)
dep(Ãƒâ-10, âˆšÃƒâ-15)
amod(Ã-18, $-16)
number($-16, ¦-17)
dep(âˆšÃƒâ-15, Ã-18)
punct(Ãƒâ-10, ‚-19)
dep(Ãƒâ-10, âˆžÃƒâ-20)
punct(âˆžÃƒâ-20, ‰-21)
dep(ti-25, ˆÃ-22)
punct(ti-25, ‚-23)
nn(ti-25, Ë-24)
dep(âˆžÃƒâ-20, ti-25)
cop(tool-32, is-27)
det(tool-32, a-28)
amod(tool-32, large-29)
amod(tool-32, cleaver-like-30)
nn(tool-32, cutting-31)
root(ROOT-0, tool-32)

(ROOT
  (S
    (NP (DT A) (NNP Mushroom))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ fleshy) (, ,) (JJ spore-bearing) (NN fruiting) (NN body))
        (PP (IN of)
          (NP
            (NP (DT a) (NN fungus))
            (, ,)
            (VP
              (ADVP (RB typically))
              (VBN produced)
              (PP
                (PP (IN above)
                  (NP
                    (NP (NN ground))
                    (PP (IN on)
                      (NP (NN soil)))))
                (CC or)
                (PP (IN on)
                  (NP (PRP$ its) (NN food) (NN source)))))))))
    (. .)))

det(Mushroom-2, A-1)
nsubj(body-9, Mushroom-2)
cop(body-9, is-3)
det(body-9, the-4)
amod(body-9, fleshy-5)
amod(body-9, spore-bearing-7)
nn(body-9, fruiting-8)
root(ROOT-0, body-9)
det(fungus-12, a-11)
prep_of(body-9, fungus-12)
advmod(produced-15, typically-14)
partmod(fungus-12, produced-15)
partmod(fungus-12, produced-15')
conj_or(produced-15, produced-15')
prep_above(produced-15, ground-17)
prep_on(ground-17, soil-19)
poss(source-24, its-22)
nn(source-24, food-23)
prep_on(produced-15', source-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT The) (NNP Month))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP
              (NP (NN time))
              (, ,)
              (VP (VBN used)
                (PP (IN with)
                  (NP
                    (NP (NNS calendars))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP
                              (QP (RB approximately) (RB as) (JJ long)))
                            (PP (IN as)
                              (NP
                                (NP (DT some) (JJ natural) (NN period))
                                (VP (VBN related)
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (NN motion))
                                      (PP (IN of)
                                        (NP (DT the) (NNP Moon))))))))))))))))))))
    (: ;)
    (S
      (NP
        (NP (NN month))
        (CC and)
        (NP (NNP Moon)))
      (VP (VBP are)
        (ADJP (JJ cognates))))
    (. .)))

det(Month-2, The-1)
nsubj(unit-5, Month-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
prep_of(unit-5, time-7)
partmod(time-7, used-9)
prep_with(used-9, calendars-11)
nsubj(long-17, calendars-11)
cop(long-17, is-14)
quantmod(long-17, approximately-15)
quantmod(long-17, as-16)
rcmod(calendars-11, long-17)
det(period-21, some-19)
amod(period-21, natural-20)
prep_as(long-17, period-21)
partmod(period-21, related-22)
det(motion-25, the-24)
prep_to(related-22, motion-25)
det(Moon-28, the-27)
prep_of(motion-25, Moon-28)
nsubj(cognates-34, month-30)
conj_and(month-30, Moon-32)
nsubj(cognates-34, Moon-32)
cop(cognates-34, are-33)
parataxis(unit-5, cognates-34)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP
      (NP (DT a) (NNP Mutagen))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (ADJP (JJ Latin) (, ,) (JJ literally))
            (NN origin))
          (PP (IN of)
            (NP (NN change))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (NN physical)
            (CC or)
            (NN chemical))
          (NN agent))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ changes)
                (NP
                  (NP
                    (NP (DT the) (JJ genetic) (NN information))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (ADVP (RB usually))
                        (NNP DNA))
                      (-RRB- -RRB-)))
                  (PP (IN of)
                    (NP (DT an) (NN organism)))))
              (CC and)
              (VP
                (ADVP (RB thus))
                (VBZ increases)
                (NP
                  (NP (DT the) (NN frequency))
                  (PP (IN of)
                    (NP
                      (NP (NNS mutations))
                      (PP (IN above)
                        (NP (DT the) (JJ natural) (NN background) (NN level))))))))))))
    (. .)))

prep_in(agent-19, biology-2)
det(Mutagen-5, a-4)
nsubj(agent-19, Mutagen-5)
amod(literally-9, Latin-7)
amod(origin-10, literally-9)
dep(Mutagen-5, origin-10)
prep_of(origin-10, change-12)
cop(agent-19, is-14)
det(agent-19, a-15)
amod(agent-19, physical-16)
conj_or(physical-16, chemical-18)
amod(agent-19, chemical-18)
root(ROOT-0, agent-19)
nsubj(changes-21, agent-19)
nsubj(increases-34, agent-19)
rcmod(agent-19, changes-21)
det(information-24, the-22)
amod(information-24, genetic-23)
dobj(changes-21, information-24)
advmod(DNA-27, usually-26)
appos(information-24, DNA-27)
det(organism-31, an-30)
prep_of(information-24, organism-31)
advmod(increases-34, thus-33)
rcmod(agent-19, increases-34)
conj_and(changes-21, increases-34)
det(frequency-36, the-35)
dobj(increases-34, frequency-36)
prep_of(frequency-36, mutations-38)
det(level-43, the-40)
amod(level-43, natural-41)
nn(level-43, background-42)
prep_above(mutations-38, level-43)

(ROOT
  (S
    (NP (NNP ML))
    (VP (VBZ refers)
      (PP (TO to)
        (NP (NNP Major) (NNP League) (NNP Baseball))))
    (. .)))

nsubj(refers-2, ML-1)
root(ROOT-0, refers-2)
nn(Baseball-6, Major-4)
nn(Baseball-6, League-5)
prep_to(refers-2, Baseball-6)

(ROOT
  (S
    (NP (DT A)
      (NP
        (NP (NNP Microorganism))
        (PRN (-LRB- -LRB-)
          (VP
            (ADVP (RB also))
            (MD can)
            (VP (VB be)
              (VP (VBN spelled)
                (PP (IN as)
                  (NP (JJ micro) (NN organism)
                    (CC or)
                    (NN micro-organism))))))
          (-RRB- -RRB-)))
      (CC or)
      (NP (NN microbe)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN organism))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (VBN microscopic)
                (PRN (-LRB- -LRB-)
                  (ADJP (RB too) (JJ small)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN seen)
                            (PP (IN by)
                              (NP (DT the) (JJ naked) (JJ human) (NN eye))))))))
                  (-RRB- -RRB-))))))))
    (. .)))

dep(Microorganism-2, A-1)
nsubj(organism-18, Microorganism-2)
advmod(spelled-7, also-4)
aux(spelled-7, can-5)
auxpass(spelled-7, be-6)
dep(Microorganism-2, spelled-7)
amod(organism-10, micro-9)
prep_as(spelled-7, organism-10)
prep_as(spelled-7, micro-organism-12)
conj_or(organism-10, micro-organism-12)
conj_or(Microorganism-2, microbe-15)
nsubj(organism-18, microbe-15)
cop(organism-18, is-16)
det(organism-18, an-17)
root(ROOT-0, organism-18)
nsubjpass(microscopic-21, organism-18)
auxpass(microscopic-21, is-20)
rcmod(organism-18, microscopic-21)
advmod(small-24, too-23)
dep(microscopic-21, small-24)
aux(seen-27, to-25)
auxpass(seen-27, be-26)
xcomp(small-24, seen-27)
det(eye-32, the-29)
amod(eye-32, naked-30)
amod(eye-32, human-31)
agent(seen-27, eye-32)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP M-theory))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN proposal))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ unifies)
              (NP
                (NP (DT the) (CD five) (JJ ten-dimensional) (NN superstring) (NNS theories))
                (PP (IN as)
                  (NP
                    (NP (NNS limits))
                    (PP (IN of)
                      (NP (DT a) (JJ single) (JJ 11-dimensional) (NN theory)))))))))))
    (. .)))

prep_in(proposal-7, physics-2)
nsubj(proposal-7, M-theory-4)
cop(proposal-7, is-5)
det(proposal-7, a-6)
root(ROOT-0, proposal-7)
nsubj(unifies-9, proposal-7)
rcmod(proposal-7, unifies-9)
det(theories-14, the-10)
num(theories-14, five-11)
amod(theories-14, ten-dimensional-12)
nn(theories-14, superstring-13)
dobj(unifies-9, theories-14)
prep_as(theories-14, limits-16)
det(theory-21, a-18)
amod(theory-21, single-19)
amod(theory-21, 11-dimensional-20)
prep_of(limits-16, theory-21)

(ROOT
  (S
    (NP
      (NP (NNP Multimedia))
      (PRN (-LRB- -LRB-)
        (PP (IN as)
          (NP (DT an) (NN adjective)))
        (-RRB- -RRB-)))
    (ADVP (RB also))
    (VP (VBZ describes)
      (NP
        (NP (JJ electronic) (NNS media) (NNS devices))
        (VP (VBN used)
          (PP (TO to)
            (NP (NN store)
              (CC and)
              (NN experience) (NNS multimedia) (NN content))))))
    (. .)))

nsubj(describes-8, Multimedia-1)
dep(Multimedia-1, as-3)
det(adjective-5, an-4)
pobj(as-3, adjective-5)
advmod(describes-8, also-7)
root(ROOT-0, describes-8)
amod(devices-11, electronic-9)
nn(devices-11, media-10)
dobj(describes-8, devices-11)
partmod(devices-11, used-12)
nn(content-18, store-14)
conj_and(store-14, experience-16)
nn(content-18, experience-16)
nn(content-18, multimedia-17)
prep_to(used-12, content-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Mafia))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (NNP Cosa) (NNP Nostra))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNP Sicilian) (JJ criminal) (NN secret) (NN society))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (VP (VBN believed)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (VP
                        (ADVP (RB first))
                        (VBN developed)
                        (PP (IN in)
                          (NP
                            (NP (DT the) (JJ mid-19th) (NN century))
                            (PP (IN in)
                              (NP (NNP Sicily)))))))))))))))
    (. .)))

det(Mafia-2, The-1)
nsubj(society-15, Mafia-2)
advmod(known-5, also-4)
dep(Mafia-2, known-5)
nn(Nostra-8, Cosa-7)
prep_as(known-5, Nostra-8)
cop(society-15, is-10)
det(society-15, a-11)
nn(society-15, Sicilian-12)
amod(society-15, criminal-13)
nn(society-15, secret-14)
root(ROOT-0, society-15)
nsubjpass(believed-18, society-15)
auxpass(believed-18, is-17)
rcmod(society-15, believed-18)
aux(developed-22, to-19)
aux(developed-22, have-20)
advmod(developed-22, first-21)
xcomp(believed-18, developed-22)
det(century-26, the-24)
amod(century-26, mid-19th-25)
prep_in(developed-22, century-26)
prep_in(century-26, Sicily-28)

(ROOT
  (S
    (NP (DT A) (NNP Magnetosphere))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN region))
        (PP (IN around)
          (NP
            (NP (DT an) (JJ astronomical) (NN object))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (NNS phenomena))
                (VP (VBP are)
                  (VP (VBN dominated)
                    (CC or)
                    (VBN organized)
                    (PP (IN by)
                      (NP (PRP$ its) (JJ magnetic) (NN field)))))))))))
    (. .)))

det(Magnetosphere-2, A-1)
nsubj(region-5, Magnetosphere-2)
cop(region-5, is-3)
det(region-5, the-4)
root(ROOT-0, region-5)
det(object-9, an-7)
amod(object-9, astronomical-8)
prep_around(region-5, object-9)
rel(dominated-14, which-11)
nsubjpass(dominated-14, phenomena-12)
nsubjpass(organized-16, phenomena-12)
auxpass(dominated-14, are-13)
rcmod(object-9, dominated-14)
rcmod(object-9, organized-16)
conj_or(dominated-14, organized-16)
poss(field-20, its-18)
amod(field-20, magnetic-19)
agent(dominated-14, field-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NNP Macro))
      (PP (IN in)
        (NP (NN computer) (NN science))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN rule)
          (CC or)
          (NN pattern))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ specifies)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP
                    (NP (DT a) (JJ certain) (NN input) (NN sequence))
                    (PRN (-LRB- -LRB-)
                      (ADVP (RB often))
                      (NP
                        (NP (DT a) (NN sequence))
                        (PP (IN of)
                          (NP (NNS characters))))
                      (-RRB- -RRB-)))
                  (VP (MD should)
                    (VP (VB be)
                      (VP (VBN mapped)
                        (PP (TO to)
                          (NP
                            (NP (DT an) (NN output) (NN sequence))
                            (PRN (-LRB- -LRB-)
                              (CONJP (RB also) (RB often))
                              (NP
                                (NP (DT a) (NN sequence))
                                (PP (IN of)
                                  (NP (NNS characters))))
                              (-RRB- -RRB-))))
                        (PP (VBG according)
                          (PP (TO to)
                            (NP (DT a) (JJ defined) (NN procedure))))))))))))))
    (. .)))

det(Macro-2, A-1)
nsubj(rule-8, Macro-2)
nn(science-5, computer-4)
prep_in(Macro-2, science-5)
cop(rule-8, is-6)
det(rule-8, a-7)
root(ROOT-0, rule-8)
nsubj(specifies-12, rule-8)
conj_or(rule-8, pattern-10)
nsubj(specifies-12, pattern-10)
rcmod(rule-8, specifies-12)
advmod(mapped-27, how-13)
det(sequence-17, a-14)
amod(sequence-17, certain-15)
nn(sequence-17, input-16)
nsubjpass(mapped-27, sequence-17)
dep(sequence-21, often-19)
det(sequence-21, a-20)
dep(sequence-17, sequence-21)
prep_of(sequence-21, characters-23)
aux(mapped-27, should-25)
auxpass(mapped-27, be-26)
ccomp(specifies-12, mapped-27)
det(sequence-31, an-29)
nn(sequence-31, output-30)
prep_to(mapped-27, sequence-31)
advmod(often-34, also-33)
dep(sequence-36, often-34)
det(sequence-36, a-35)
dep(sequence-31, sequence-36)
prep_of(sequence-36, characters-38)
prepc_according_to(mapped-27, to-41)
det(procedure-44, a-42)
amod(procedure-44, defined-43)
pobj(mapped-27, procedure-44)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Motion))
    (VP (VBZ means)
      (NP
        (NP (DT a) (JJ continuous) (NN change))
        (PP (IN in)
          (NP
            (NP (DT the) (NN location))
            (PP (IN of)
              (NP (DT a) (NN body)))))))
    (. .)))

prep_in(means-5, physics-2)
nsubj(means-5, Motion-4)
root(ROOT-0, means-5)
det(change-8, a-6)
amod(change-8, continuous-7)
dobj(means-5, change-8)
det(location-11, the-10)
prep_in(change-8, location-11)
det(body-14, a-13)
prep_of(location-11, body-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Misdemeanor) (, ,)
        (CC or)
        (NN misdemeanor))
      (, ,)
      (PP (IN in)
        (NP (JJ many) (JJ common) (NN law) (JJ legal) (NNS systems)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (SYM a))
        ('' '')
        (VP (VBN lesser) ('' '')
          (NP (JJ criminal) (NN act)))))
    (. .)))

det(Misdemeanor-2, A-1)
nsubj(a-15, Misdemeanor-2)
conj_or(Misdemeanor-2, misdemeanor-5)
nsubj(a-15, misdemeanor-5)
amod(systems-12, many-8)
amod(systems-12, common-9)
nn(systems-12, law-10)
amod(systems-12, legal-11)
prep_in(Misdemeanor-2, systems-12)
cop(a-15, is-14)
root(ROOT-0, a-15)
partmod(a-15, lesser-17)
amod(act-20, criminal-19)
dobj(lesser-17, act-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN word) (NN Mambo))
      (PRN (-LRB- -LRB-)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ means)
              (NP (NN conversation))
              (PP (IN with)
                (NP (DT the) (NNS gods))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT a) (NNS priestess))
            (PP (IN in)
              (NP (NNP Haitian) (NNP Voodoo)))))))
    (. .)))

det(Mambo-3, The-1)
nn(Mambo-3, word-2)
nsubj(name-14, Mambo-3)
nsubj(means-6, which-5)
dep(Mambo-3, means-6)
dobj(means-6, conversation-7)
det(gods-10, the-9)
prep_with(means-6, gods-10)
cop(name-14, is-12)
det(name-14, the-13)
root(ROOT-0, name-14)
det(priestess-17, a-16)
prep_of(name-14, priestess-17)
nn(Voodoo-20, Haitian-19)
prep_in(priestess-17, Voodoo-20)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Militia))
    (VP (VBZ is)
      (ADVP (RB commonly))
      (VP (VBN used)
        (NP (NN today))
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP
                  (NP (DT a) (JJ military) (NN force))
                  (VP (VBN composed)
                    (PP (IN of)
                      (NP (JJ ordinary) (NNS citizens)))
                    (S
                      (VP (TO to)
                        (VP (VB provide)
                          (NP
                            (NP (NN defense))
                            (, ,)
                            (NP (NN emergency) (NN law) (NN enforcement))
                            (, ,)
                            (CC or)
                            (NP (JJ paramilitary) (NN service))
                            (, ,))
                          (PP (IN in)
                            (NP
                              (NP (NNS times))
                              (PP (IN of)
                                (NP (NN emergency)))))
                          (PP (IN without)
                            (S
                              (VP (VBG being)
                                (VP
                                  (VP (VBN paid)
                                    (NP (DT a) (JJ regular) (NN salary)))
                                  (CC or)
                                  (VP (VBN committed)
                                    (PP (TO to)
                                      (NP
                                        (NP (DT a) (VBN fixed) (NN term))
                                        (PP (IN of)
                                          (NP (NN service)))))))))))))))))))))
    (. .)))

det(Militia-3, The-1)
nn(Militia-3, term-2)
nsubjpass(used-6, Militia-3)
auxpass(used-6, is-4)
advmod(used-6, commonly-5)
root(ROOT-0, used-6)
tmod(used-6, today-7)
aux(refer-9, to-8)
xcomp(used-6, refer-9)
det(force-13, a-11)
amod(force-13, military-12)
prep_to(refer-9, force-13)
xsubj(provide-19, force-13)
partmod(force-13, composed-14)
amod(citizens-17, ordinary-16)
prep_of(composed-14, citizens-17)
aux(provide-19, to-18)
xcomp(composed-14, provide-19)
dobj(provide-19, defense-20)
nn(enforcement-24, emergency-22)
nn(enforcement-24, law-23)
dobj(provide-19, enforcement-24)
conj_or(defense-20, enforcement-24)
amod(service-28, paramilitary-27)
dobj(provide-19, service-28)
conj_or(defense-20, service-28)
prep_in(provide-19, times-31)
prep_of(times-31, emergency-33)
auxpass(paid-36, being-35)
prepc_without(provide-19, paid-36)
det(salary-39, a-37)
amod(salary-39, regular-38)
dobj(paid-36, salary-39)
prepc_without(provide-19, committed-41)
conj_or(paid-36, committed-41)
det(term-45, a-43)
amod(term-45, fixed-44)
prep_to(committed-41, term-45)
prep_of(term-45, service-47)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Micrometre))
      (PRN (-LRB- -LRB-)
        (FRAG
          (NP
            (NP (NNP American))
            (NP (NN spelling)))
          (: :)
          (NP
            (NP (NN micrometer))
            (: ;)
            (NP
              (NP (NN symbol))
              (NP (NNP Ãƒâ) (NNP ‰)
                (CC &)
                (NNP nbsp)))
            (: ;)
            (NP (NNP Ã) (NNP ‚) (NNP Âµm))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (CD one) (NN millionth))
          (PP (IN of)
            (NP (DT a) (NN metre))))
        (, ,)
        (CC or)
        (NP
          (NP (JJ equivalently) (NN one) (NN thousandth))
          (PP (IN of)
            (NP (DT a) (NN millimetre))))))
    (. .)))

det(Micrometre-2, A-1)
nsubj(millionth-21, Micrometre-2)
dep(Micrometre-2, American-4)
dep(American-4, spelling-5)
dep(American-4, micrometer-7)
dep(micrometer-7, symbol-9)
nn(‰-11, Ãƒâ-10)
dep(symbol-9, ‰-11)
dep(symbol-9, nbsp-13)
conj_and(‰-11, nbsp-13)
nn(Âµm-17, Ã-15)
nn(Âµm-17, ‚-16)
dep(micrometer-7, Âµm-17)
cop(millionth-21, is-19)
num(millionth-21, one-20)
root(ROOT-0, millionth-21)
det(metre-24, a-23)
prep_of(millionth-21, metre-24)
amod(thousandth-29, equivalently-27)
nn(thousandth-29, one-28)
conj_or(millionth-21, thousandth-29)
det(millimetre-32, a-31)
prep_of(thousandth-29, millimetre-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NN Memex))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT a) (NN portmanteau))
          (PP (IN of) ('' '')
            (NP (NN memory) (NN extender) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (VBN given)
          (PP (IN by)
            (NP
              (NP (NNP Vannevar) (NNP Bush))
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ theoretical) (JJ proto-hypertext) (NN computer) (NN system))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD proposed)
                        (PP (IN in)
                          (NP (PRP$ his) (NNP 1945) (NNP The) (NNP Atlantic) (JJ Monthly) (NN article)))
                        (SBAR (IN As)
                          (S
                            (NP (PRP We))
                            (VP (MD May)
                              (VP (VB Think)))))))))))))))
    (. .)))

det(Memex-2, The-1)
nsubj(name-14, Memex-2)
det(portmanteau-5, a-4)
dep(Memex-2, portmanteau-5)
nn(extender-9, memory-8)
prep_of(portmanteau-5, extender-9)
cop(name-14, is-12)
det(name-14, the-13)
root(ROOT-0, name-14)
prep(name-14, given-15)
pcomp(given-15, by-16)
nn(Bush-18, Vannevar-17)
prep_by(given-15, Bush-18)
det(system-24, the-20)
amod(system-24, theoretical-21)
amod(system-24, proto-hypertext-22)
nn(system-24, computer-23)
prep_to(Bush-18, system-24)
nsubj(proposed-26, he-25)
rcmod(system-24, proposed-26)
poss(article-33, his-28)
nn(article-33, 1945-29)
nn(article-33, The-30)
nn(article-33, Atlantic-31)
amod(article-33, Monthly-32)
prep_in(proposed-26, article-33)
mark(Think-37, As-34)
nsubj(Think-37, We-35)
aux(Think-37, May-36)
advcl(proposed-26, Think-37)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS telecommunications)))
    (, ,)
    (NP (NNP Modulation))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (S
            (VP (VBG varying)
              (NP (DT a) (JJ periodic) (NN waveform)))))))
    (. .)))

prep_in(process-7, telecommunications-2)
nsubj(process-7, Modulation-4)
cop(process-7, is-5)
det(process-7, the-6)
root(ROOT-0, process-7)
prepc_of(process-7, varying-9)
det(waveform-12, a-10)
amod(waveform-12, periodic-11)
dobj(varying-9, waveform-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN name))
      (SBAR
        (S
          (NP (NNP Megadeth))
          (VP (VBZ is)
            (NP
              (NP (DT a)
                (ADJP (JJ deliberate))
                (NN misspelling))
              (PP (IN of)
                (NP (DT the) (NN word) (NN megadeath)))))))
      (, ,)
      (NP
        (NP (DT a) (NN term))
        (VP (VBN coined)
          (PP (IN in)
            (NP (CD 1953)))
          (PP (IN by)
            (NP (JJ RAND) (JJ military) (NN strategist) (NNP Herman) (NNP Kahn)))
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (QP (CD one) (CD million))
                  (NNS deaths)))))))
      (, ,))
    (VP (VBD popularized)
      (PP (IN in)
        (NP (PRP$ his) (CD 1960) (NN book)))
      (PP (IN On)
        (NP (NNP Thermonuclear) (NNP War))))
    (. .)))

det(name-2, The-1)
nsubj(popularized-30, name-2)
nsubj(misspelling-7, Megadeth-3)
cop(misspelling-7, is-4)
det(misspelling-7, a-5)
amod(misspelling-7, deliberate-6)
rcmod(name-2, misspelling-7)
det(megadeath-11, the-9)
nn(megadeath-11, word-10)
prep_of(misspelling-7, megadeath-11)
det(term-14, a-13)
appos(name-2, term-14)
xsubj(describe-25, term-14)
partmod(term-14, coined-15)
prep_in(coined-15, 1953-17)
amod(Kahn-23, RAND-19)
amod(Kahn-23, military-20)
nn(Kahn-23, strategist-21)
nn(Kahn-23, Herman-22)
agent(coined-15, Kahn-23)
aux(describe-25, to-24)
xcomp(coined-15, describe-25)
number(million-27, one-26)
num(deaths-28, million-27)
dobj(describe-25, deaths-28)
root(ROOT-0, popularized-30)
poss(book-34, his-32)
num(book-34, 1960-33)
prep_in(popularized-30, book-34)
nn(War-37, Thermonuclear-36)
prep_on(popularized-30, War-37)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Microvision))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ hand-held) (NN game) (NN console))
        (VP (VBN released)
          (PP (IN by)
            (NP
              (NP (DT the) (NNP Milton) (NNP Bradley) (NNP Company))
              (PP (IN in)
                (NP (CD 1979))))))))
    (. .)))

det(Microvision-2, The-1)
nsubj(console-7, Microvision-2)
cop(console-7, was-3)
det(console-7, a-4)
amod(console-7, hand-held-5)
nn(console-7, game-6)
root(ROOT-0, console-7)
partmod(console-7, released-8)
det(Company-13, the-10)
nn(Company-13, Milton-11)
nn(Company-13, Bradley-12)
agent(released-8, Company-13)
prep_in(Company-13, 1979-15)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (VBN set) (NN theory))
        (CC and)
        (NP
          (NP (PRP$ its) (NNS applications))
          (PP (IN throughout)
            (NP (NNS mathematics))))))
    (, ,)
    (NP (DT a) (NN Class))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN collection))
        (PP (IN of)
          (NP
            (NP (NNS sets))
            (PRN (-LRB- -LRB-)
              (CC or)
              (ADVP (RB sometimes))
              (NP (JJ other) (JJ mathematical) (NNS objects))
              (-RRB- -RRB-))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB be)
                    (VP
                      (ADVP (RB unambiguously))
                      (VBN defined)
                      (PP (IN by)
                        (NP (DT a) (NN property)))
                      (SBAR (IN that)
                        (S
                          (NP (PDT all) (PRP$ its) (NNS members))
                          (VP (VBP share)))))))))))))
    (. .)))

amod(theory-3, set-2)
prep_in(collection-14, theory-3)
poss(applications-6, its-5)
conj_and(theory-3, applications-6)
prep_in(collection-14, applications-6)
prep_throughout(applications-6, mathematics-8)
det(Class-11, a-10)
nsubj(collection-14, Class-11)
cop(collection-14, is-12)
det(collection-14, a-13)
root(ROOT-0, collection-14)
prep_of(collection-14, sets-16)
nsubjpass(defined-28, sets-16)
dep(objects-22, or-18)
dep(objects-22, sometimes-19)
amod(objects-22, other-20)
amod(objects-22, mathematical-21)
appos(sets-16, objects-22)
aux(defined-28, can-25)
auxpass(defined-28, be-26)
advmod(defined-28, unambiguously-27)
rcmod(sets-16, defined-28)
det(property-31, a-30)
agent(defined-28, property-31)
complm(share-36, that-32)
predet(members-35, all-33)
poss(members-35, its-34)
nsubj(share-36, members-35)
ccomp(defined-28, share-36)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (NNP J.) (NNP R.) (NNP R.) (NNP Tolkien) (POS 's))
          (JJ fictional) (NN universe))
        (PP (IN of)
          (NP (NNP Middle-earth)))))
    (, ,)
    (NP
      (NP (NNP Mordor))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (NNP Sindarin) (NNP Black) (NNP Land)
              (CC and)
              (NNP Quenya) (NNP Land))
            (PP (IN of)
              (NP (NNP Shadow)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN dwelling) (NN place))
        (PP (IN of)
          (NP (NNP Sauron))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN southeast))
          (PP (IN of)
            (NP
              (NP (NNP Middle-earth))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNP East))
                  (PP (IN of)
                    (NP
                      (NP (NNP Anduin))
                      (, ,)
                      (NP (DT the) (JJ great) (NN river)))))))))))
    (. .)))

nn(Tolkien-5, J.-2)
nn(Tolkien-5, R.-3)
nn(Tolkien-5, R.-4)
poss(universe-8, Tolkien-5)
amod(universe-8, fictional-7)
prep_in(place-27, universe-8)
prep_of(universe-8, Middle-earth-10)
nsubj(place-27, Mordor-12)
dep(Mordor-12, from-14)
nn(Land-17, Sindarin-15)
nn(Land-17, Black-16)
pobj(from-14, Land-17)
nn(Land-20, Quenya-19)
pobj(from-14, Land-20)
conj_and(Land-17, Land-20)
prep_of(Land-17, Shadow-22)
cop(place-27, is-24)
det(place-27, the-25)
nn(place-27, dwelling-26)
root(ROOT-0, place-27)
prep_of(place-27, Sauron-29)
det(southeast-33, the-32)
prep_in(place-27, southeast-33)
prep_of(southeast-33, Middle-earth-35)
det(East-38, the-37)
prep_to(Middle-earth-35, East-38)
prep_of(East-38, Anduin-40)
det(river-44, the-42)
amod(river-44, great-43)
appos(Anduin-40, river-44)

(ROOT
  (S
    (NP (DT A) (NNP Mineraloid))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mineral-like) (NN substance))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ does) (RB not)
              (VP (VB demonstrate)
                (ADVP (RB crystallinity))))))))
    (. .)))

det(Mineraloid-2, A-1)
nsubj(substance-6, Mineraloid-2)
cop(substance-6, is-3)
det(substance-6, a-4)
amod(substance-6, mineral-like-5)
root(ROOT-0, substance-6)
nsubj(demonstrate-10, substance-6)
aux(demonstrate-10, does-8)
neg(demonstrate-10, not-9)
rcmod(substance-6, demonstrate-10)
advmod(demonstrate-10, crystallinity-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT A) (NNP Microlith))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ small) (NN stone) (NN tool))
          (, ,)
          (UCP
            (VP
              (ADVP (RB typically))
              (VBN knapped)
              (PP
                (PP (IN of)
                  (NP (NN flint)
                    (CC or)
                    (NN chert)))
                (, ,) (RB usually)
                (PP (IN about)
                  (ADVP
                    (NP (CD three) (NNS centimetres))
                    (RB long)))))
            (CC or)
            (ADJP (JJR less))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (VBP are)
        (ADVP (RB typically))
        (ADJP
          (ADJP
            (NP
              (NP (CD one) (NN centimetre))
              (ADVP (RB long)
                (CC and)
                (RB half)
                (NP (DT a) (NN centimetre))))
            (JJ wide))
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP (VBD finished)))))))
    (. .)))

det(Microlith-2, A-1)
nsubj(tool-7, Microlith-2)
cop(tool-7, is-3)
det(tool-7, a-4)
amod(tool-7, small-5)
nn(tool-7, stone-6)
root(ROOT-0, tool-7)
advmod(knapped-10, typically-9)
dep(tool-7, knapped-10)
prep_of(knapped-10, flint-12)
prep_of(knapped-10, chert-14)
conj_or(flint-12, chert-14)
advmod(knapped-10, usually-16)
prep(knapped-10, about-17)
num(centimetres-19, three-18)
npadvmod(long-20, centimetres-19)
pcomp(about-17, long-20)
dep(tool-7, less-22)
conj_or(knapped-10, less-22)
nsubj(wide-34, They-24)
cop(wide-34, are-25)
advmod(wide-34, typically-26)
num(centimetre-28, one-27)
npadvmod(wide-34, centimetre-28)
advmod(centimetre-28, long-29)
advmod(centimetre-28, half-31)
conj_and(long-29, half-31)
det(centimetre-33, a-32)
pobj(long-29, centimetre-33)
parataxis(tool-7, wide-34)
advmod(finished-36, when-35)
dep(wide-34, finished-36)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Menorah))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Hebrew))
          (: :)
          (NP
            (NP
              (NP (NNP ÃƒËœÃ) (NNP ‚) (NNP Ä) (NNP ±) (NNP ÃƒËœÃ) (NNP ‚))
              (CC &)
              (NP (NN nbsp)))
            (: ;)
            (NP
              (NP
                (NP (NNP ÃƒËœÃ) (NNP ‚) (NNP ï))
                (NP
                  (QP (# #) (CD ¿) (CD ÃƒËœÃ))
                  (NNP ‚) (NNP Â) (NNP ¨) (NNP ÃƒËœÃ) (NNP ‚) (NNPS â)))
              (NP ($ $) (CD °)))))
        (-RRB- -RRB-))
      (, ,))
    (VP
      (VP (VBZ is)
        (NP (DT a)
          (ADJP
            (QP (CD seven) (CD branched)))
          (NN candelabrum)))
      (CC and)
      (VP (VBZ has)
        (VP (VBN been)
          (NP
            (NP (DT a) (NN symbol))
            (PP (IN of) (NNP Judaism)))
          (PP (IN for)
            (NP (RB almost) (CD 3000) (NNS years))))))
    (. .)))

det(Menorah-2, The-1)
nsubj(candelabrum-35, Menorah-2)
dep(Menorah-2, Hebrew-4)
nn(‚-11, ÃƒËœÃ-6)
nn(‚-11, ‚-7)
nn(‚-11, Ä-8)
nn(‚-11, ±-9)
nn(‚-11, ÃƒËœÃ-10)
dep(Hebrew-4, ‚-11)
dep(Hebrew-4, nbsp-13)
conj_and(‚-11, nbsp-13)
nn(ï-17, ÃƒËœÃ-15)
nn(ï-17, ‚-16)
dep(‚-11, ï-17)
number(ÃƒËœÃ-20, #-18)
number(ÃƒËœÃ-20, ¿-19)
num(â-26, ÃƒËœÃ-20)
nn(â-26, ‚-21)
nn(â-26, Â-22)
nn(â-26, ¨-23)
nn(â-26, ÃƒËœÃ-24)
nn(â-26, ‚-25)
dep(ï-17, â-26)
dep(ï-17, $-27)
num($-27, °-28)
cop(candelabrum-35, is-31)
det(candelabrum-35, a-32)
number(branched-34, seven-33)
num(candelabrum-35, branched-34)
root(ROOT-0, candelabrum-35)
aux(symbol-40, has-37)
cop(symbol-40, been-38)
det(symbol-40, a-39)
conj_and(candelabrum-35, symbol-40)
prep(symbol-40, of-41)
dep(of-41, Judaism-42)
advmod(years-46, almost-44)
num(years-46, 3000-45)
prep_for(symbol-40, years-46)

(ROOT
  (S
    (NP (DT A) (NNP Monorail))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN transportation) (NN system))
        (PP (VBN based)
          (PP (IN on)
            (NP (DT a) (JJ single) (NN beam))))))
    (. .)))

det(Monorail-2, A-1)
nsubj(system-6, Monorail-2)
cop(system-6, is-3)
det(system-6, a-4)
nn(system-6, transportation-5)
root(ROOT-0, system-6)
prepc_based_on(system-6, on-8)
det(beam-11, a-9)
amod(beam-11, single-10)
pobj(system-6, beam-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Mentat))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN profession)
          (CC or)
          (NN discipline))
        (PP (IN in)
          (NP
            (NP (NNP Frank) (NNP Herbert) (POS 's))
            (JJ fictional) (NN Dune) (NN universe)))))
    (. .)))

det(Mentat-2, A-1)
nsubj(profession-5, Mentat-2)
cop(profession-5, is-3)
det(profession-5, a-4)
root(ROOT-0, profession-5)
conj_or(profession-5, discipline-7)
nn(Herbert-10, Frank-9)
poss(universe-14, Herbert-10)
amod(universe-14, fictional-12)
nn(universe-14, Dune-13)
prep_in(profession-5, universe-14)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (JJ Minivan) (, ,) (JJ multi-purpose) (NN vehicle))
        (PRN (-LRB- -LRB-)
          (NP (NNP abbreviated) (NNP MPV))
          (-RRB- -RRB-)))
      (, ,)
      (NP
        (NP (JJ people-carrier) (, ,) (NN people-mover)
          (CC or)
          (NN multi-utility) (NN vehicle))
        (PRN (-LRB- -LRB-)
          (NP (NNP shortened) (NNP MUV))
          (-RRB- -RRB-))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NN automobile))
            (ADJP (JJ similar)
              (PP (IN in)
                (NP (NN shape)))
              (PP (TO to)
                (NP
                  (NP (DT a) (NN van))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (VP (VBN designed)
                          (PP (IN for)
                            (NP (JJ personal) (NN use))))))))))))))
    (. .)))

det(vehicle-5, A-1)
amod(vehicle-5, Minivan-2)
amod(vehicle-5, multi-purpose-4)
nsubj(type-23, vehicle-5)
nn(MPV-8, abbreviated-7)
abbrev(vehicle-5, MPV-8)
nn(vehicle-16, people-carrier-11)
conj_or(people-carrier-11, people-mover-13)
nn(vehicle-16, people-mover-13)
conj_or(people-carrier-11, multi-utility-15)
nn(vehicle-16, multi-utility-15)
appos(vehicle-5, vehicle-16)
nn(MUV-19, shortened-18)
abbrev(vehicle-16, MUV-19)
cop(type-23, is-21)
det(type-23, a-22)
root(ROOT-0, type-23)
prep_of(type-23, automobile-25)
amod(automobile-25, similar-26)
prep_in(similar-26, shape-28)
det(van-31, a-30)
prep_to(similar-26, van-31)
nsubjpass(designed-34, van-31)
auxpass(designed-34, is-33)
rcmod(van-31, designed-34)
amod(use-37, personal-36)
prep_for(designed-34, use-37)

(ROOT
  (S
    (NP (DT A) (NNP Manifesto))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ public) (NN declaration))
          (PP (IN of)
            (NP (NNS principles)
              (CC and)
              (NNS intentions)))
          (, ,)
          (ADJP (RB often) (JJ political)
            (PP (IN in)
              (NP (NN nature))))))
      (, ,)
      (CC but)
      (VP (MD may)
        (ADVP (RB also))
        (VP (VB be)
          (NP
            (NP (NN life) (NN stance))
            (VP (VBN related))))))
    (. .)))

det(Manifesto-2, A-1)
nsubj(declaration-6, Manifesto-2)
cop(declaration-6, is-3)
det(declaration-6, a-4)
amod(declaration-6, public-5)
root(ROOT-0, declaration-6)
prep_of(declaration-6, principles-8)
prep_of(declaration-6, intentions-10)
conj_and(principles-8, intentions-10)
advmod(political-13, often-12)
amod(declaration-6, political-13)
prep_in(political-13, nature-15)
aux(stance-22, may-18)
advmod(stance-22, also-19)
cop(stance-22, be-20)
nn(stance-22, life-21)
conj_but(declaration-6, stance-22)
partmod(stance-22, related-23)

(ROOT
  (S
    (NP (DT A) (NNP Magneto))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (VP (VBN used)
          (PP (IN in)
            (NP
              (NP (DT the) (NN ignition) (NN system))
              (PP (IN of)
                (NP (JJ gasoline-powered) (JJ internal) (NN combustion) (NNS engines)))))
          (S
            (VP (TO to)
              (VP (VB provide)
                (NP
                  (NP (NNS pulses))
                  (PP (IN of)
                    (NP (JJ high) (NN tension) (NN current))))
                (PP (TO to)
                  (NP (DT the) (JJ spark) (NNS plugs)))))))))
    (. .)))

det(Magneto-2, A-1)
nsubj(device-5, Magneto-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
xsubj(provide-17, device-5)
partmod(device-5, used-6)
det(system-10, the-8)
nn(system-10, ignition-9)
prep_in(used-6, system-10)
amod(engines-15, gasoline-powered-12)
amod(engines-15, internal-13)
nn(engines-15, combustion-14)
prep_of(system-10, engines-15)
aux(provide-17, to-16)
xcomp(used-6, provide-17)
dobj(provide-17, pulses-18)
amod(current-22, high-20)
nn(current-22, tension-21)
prep_of(pulses-18, current-22)
det(plugs-26, the-24)
amod(plugs-26, spark-25)
prep_to(provide-17, plugs-26)

(ROOT
  (S
    (NP (NNP Manorialism)
      (CC or)
      (NNP Seigneurialism))
    (VP (VBD was)
      (NP
        (NP (DT the) (VBG organizing) (NN principle))
        (PP (IN of)
          (NP
            (NP (JJ rural) (NN economy)
              (CC and)
              (NN society))
            (VP
              (ADVP (RB widely))
              (VBN practiced)
              (PP (IN in)
                (NP
                  (NP (JJ medieval) (NNS western)
                    (CC and)
                    (NNS parts))
                  (PP (IN of)
                    (NP (JJ central) (NNP Europe))))))))))
    (. .)))

nsubj(principle-7, Manorialism-1)
conj_or(Manorialism-1, Seigneurialism-3)
nsubj(principle-7, Seigneurialism-3)
cop(principle-7, was-4)
det(principle-7, the-5)
amod(principle-7, organizing-6)
root(ROOT-0, principle-7)
amod(economy-10, rural-9)
prep_of(principle-7, economy-10)
prep_of(principle-7, society-12)
conj_and(economy-10, society-12)
advmod(practiced-14, widely-13)
partmod(economy-10, practiced-14)
amod(western-17, medieval-16)
prep_in(practiced-14, western-17)
prep_in(practiced-14, parts-19)
conj_and(western-17, parts-19)
amod(Europe-22, central-21)
prep_of(western-17, Europe-22)

(ROOT
  (S
    (NP (DT A) (NNP Manhattan))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cocktail))
        (VP (VBN made)
          (PP (IN with)
            (NP
              (NP (NN whiskey))
              (, ,)
              (NP (JJ sweet) (NN vermouth))
              (, ,)
              (NP (NN ice))
              (, ,)
              (CC and)
              (NP (NNS bitters)))))))
    (. .)))

det(Manhattan-2, A-1)
nsubj(cocktail-5, Manhattan-2)
cop(cocktail-5, is-3)
det(cocktail-5, a-4)
root(ROOT-0, cocktail-5)
partmod(cocktail-5, made-6)
prep_with(made-6, whiskey-8)
amod(vermouth-11, sweet-10)
prep_with(made-6, vermouth-11)
conj_and(whiskey-8, vermouth-11)
prep_with(made-6, ice-13)
conj_and(whiskey-8, ice-13)
prep_with(made-6, bitters-16)
conj_and(whiskey-8, bitters-16)

(ROOT
  (S
    (NP (DT The) (NN word) (NNP Mojito))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ diminutive))
        (PP (IN of)
          (NP (DT the) (NN word) (NN mojo)))))
    (. .)))

det(Mojito-3, The-1)
nn(Mojito-3, word-2)
nsubj(diminutive-6, Mojito-3)
cop(diminutive-6, is-4)
det(diminutive-6, the-5)
root(ROOT-0, diminutive-6)
det(mojo-10, the-8)
nn(mojo-10, word-9)
prep_of(diminutive-6, mojo-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Multiverse))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ meta-universe))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ hypothetical) (NN set))
        (PP (IN of)
          (NP
            (NP (JJ multiple) (JJ possible) (NNS universes))
            (PRN (-LRB- -LRB-)
              (PP (VBG including)
                (NP (PRP$ our) (NN universe)))
              (-RRB- -RRB-))
            (SBAR
              (WHNP (WDT that))
              (S
                (ADVP (RB together))
                (VP (VBP comprise)
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (NN reality)))))))))))
    (. .)))

det(Multiverse-2, The-1)
nsubj(set-10, Multiverse-2)
dep(meta-universe-5, or-4)
dep(Multiverse-2, meta-universe-5)
cop(set-10, is-7)
det(set-10, the-8)
amod(set-10, hypothetical-9)
root(ROOT-0, set-10)
amod(universes-14, multiple-12)
amod(universes-14, possible-13)
prep_of(set-10, universes-14)
nsubj(comprise-22, universes-14)
dep(universes-14, including-16)
poss(universe-18, our-17)
pobj(including-16, universe-18)
advmod(comprise-22, together-21)
rcmod(universes-14, comprise-22)
dobj(comprise-22, all-23)
prep_of(all-23, reality-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NN word) (NN Modulo))
      (PRN (-LRB- -LRB-)
        (ADJP
          (ADJP (JJ Latin) (, ,)
            (PP (IN with)
              (NP (NN respect))))
          (PP (TO to)
            (NP
              (NP (DT a) (NNS modulus))
              (PP (IN of)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ Latin) (NN ablative))
        (PP (IN of)
          (NP
            (NP
              (NP (NNS modulus))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP itself))
                  (VP (VBZ means)))))
            ('' '')
            (PP (FW a)
              (NP (JJ small) (NN measure)))))))
    (. .) ('' '')))

det(Modulo-3, The-1)
nn(Modulo-3, word-2)
nsubj(ablative-17, Modulo-3)
dep(Modulo-3, Latin-5)
prep_with(Latin-5, respect-8)
det(modulus-11, a-10)
prep_to(Latin-5, modulus-11)
prep(modulus-11, of-12)
cop(ablative-17, is-14)
det(ablative-17, the-15)
amod(ablative-17, Latin-16)
root(ROOT-0, ablative-17)
prep_of(ablative-17, modulus-19)
dobj(means-22, modulus-19)
rel(means-22, which-20)
nsubj(means-22, itself-21)
rcmod(modulus-19, means-22)
prep(modulus-19, a-24)
amod(measure-26, small-25)
pobj(a-24, measure-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBN introduced)
        (PP (IN into)
          (NP
            (NP (NNS mathematics))
            (PP (IN in)
              (NP (DT the) (NN book) (NNP Disquisitiones) (NNP Arithmeticae)))))
        (PP (IN by)
          (NP
            (NP (NNP Carl) (NNP Friedrich) (NNP Gauss))
            (PP (IN in)
              (NP (CD 1801)))))))
    (. .)))

nsubjpass(introduced-3, It-1)
auxpass(introduced-3, was-2)
root(ROOT-0, introduced-3)
prep_into(introduced-3, mathematics-5)
det(Arithmeticae-10, the-7)
nn(Arithmeticae-10, book-8)
nn(Arithmeticae-10, Disquisitiones-9)
prep_in(mathematics-5, Arithmeticae-10)
nn(Gauss-14, Carl-12)
nn(Gauss-14, Friedrich-13)
agent(introduced-3, Gauss-14)
prep_in(Gauss-14, 1801-16)

(ROOT
  (S
    (NP (DT The) (NNP Maremma))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP (DT an) (NN area))
            (PP (IN in)
              (NP (NNP Italy)))
            (, ,)
            (VP (VBG consisting)
              (PP (IN of)
                (NP
                  (NP (NN part))
                  (PP (IN of)
                    (NP (JJ southern) (NNP Tuscany)))))))
          (PRN (-LRB- -LRB-)
            (CC and)
            (ADJP (RB partly) (JJ coincident)
              (PP (IN with)
                (NP
                  (NP (NN province))
                  (PP (IN of)
                    (NP (NNP Grosseto) (NN area))))))
            (-RRB- -RRB-)))
        (CC and)
        (NP
          (NP
            (NP (DT some) (NN part))
            (PP (IN of)
              (NP (JJ northern) (NNP Lazio))))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (DT a) (VBG bordering) (NN region))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN province))
                  (PP (IN of)
                    (NP (NNP Viterbo))))))
            (-RRB- -RRB-)))))
    (. .)))

det(Maremma-2, The-1)
nsubj(area-5, Maremma-2)
cop(area-5, is-3)
det(area-5, an-4)
root(ROOT-0, area-5)
prep_in(area-5, Italy-7)
partmod(area-5, consisting-9)
prep_of(consisting-9, part-11)
amod(Tuscany-14, southern-13)
prep_of(part-11, Tuscany-14)
dep(coincident-18, and-16)
advmod(coincident-18, partly-17)
dep(area-5, coincident-18)
prep_with(coincident-18, province-20)
nn(area-23, Grosseto-22)
prep_of(province-20, area-23)
det(part-27, some-26)
conj_and(area-5, part-27)
amod(Lazio-30, northern-29)
prep_of(part-27, Lazio-30)
det(region-34, a-32)
amod(region-34, bordering-33)
dep(part-27, region-34)
det(province-37, the-36)
prep_of(region-34, province-37)
prep_of(province-37, Viterbo-39)

(ROOT
  (S
    (NP (DT A) (NNP Multivibrator))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ electronic) (NN circuit))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB implement)
                (NP
                  (NP (DT a) (NN variety))
                  (PP (IN of)
                    (NP
                      (NP (JJ simple) (JJ two-state) (NNS systems))
                      (PP (JJ such) (IN as)
                        (NP (NNS oscillators) (, ,) (NNS timers)
                          (CC and)
                          (NNS flip-flops))))))))))))
    (. .)))

det(Multivibrator-2, A-1)
nsubj(circuit-6, Multivibrator-2)
cop(circuit-6, is-3)
det(circuit-6, an-4)
amod(circuit-6, electronic-5)
root(ROOT-0, circuit-6)
xsubj(implement-9, circuit-6)
partmod(circuit-6, used-7)
aux(implement-9, to-8)
xcomp(used-7, implement-9)
det(variety-11, a-10)
dobj(implement-9, variety-11)
amod(systems-15, simple-13)
amod(systems-15, two-state-14)
prep_of(variety-11, systems-15)
prep_such_as(systems-15, oscillators-18)
prep_such_as(systems-15, timers-20)
conj_and(oscillators-18, timers-20)
prep_such_as(systems-15, flip-flops-22)
conj_and(oscillators-18, flip-flops-22)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Microcontroller))
      (PRN (-LRB- -LRB-)
        (ADVP (RB also))
        (NP
          (NP (NNP MCU)
            (CC or)
            (NN Ãƒâ) (NNP ‰)
            (CC &)
            (NNP nbsp))
          (: ;)
          (NP (NNP Ã) (NNP ‚) (NNP ÂµC)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (NN computer-on-a-chip))
      (, ,)
      (S
        (VP (VBG containing)
          (NP
            (NP (DT a) (NN processor) (, ,) (NN memory) (, ,)
              (CC and)
              (NN input))
            (VP (VBG \/)
              (NP (NN output) (NNS functions)))))))
    (. .)))

det(Microcontroller-2, A-1)
nsubj(computer-on-a-chip-18, Microcontroller-2)
dep(‰-8, also-4)
nn(‰-8, MCU-5)
conj_or(MCU-5, Ãƒâ-7)
nn(‰-8, Ãƒâ-7)
dep(Microcontroller-2, ‰-8)
dep(Microcontroller-2, nbsp-10)
conj_and(‰-8, nbsp-10)
nn(ÂµC-14, Ã-12)
nn(ÂµC-14, ‚-13)
dep(‰-8, ÂµC-14)
cop(computer-on-a-chip-18, is-16)
det(computer-on-a-chip-18, a-17)
root(ROOT-0, computer-on-a-chip-18)
partmod(computer-on-a-chip-18, containing-20)
xcomp(computer-on-a-chip-18, containing-20)
det(processor-22, a-21)
dobj(containing-20, processor-22)
dobj(containing-20, memory-24)
conj_and(processor-22, memory-24)
dobj(containing-20, input-27)
conj_and(processor-22, input-27)
partmod(processor-22, \/-28)
nn(functions-30, output-29)
dobj(\/-28, functions-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Nibble))
      (PRN (-LRB- -LRB-)
        (ADVP (RB often))
        (, ,)
        (NP (NN nybble))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (VBG computing) (NN term))
          (PP (IN for)
            (NP (DT a) (JJ four-bit) (NN aggregation))))
        (, ,)
        (CC or)
        (NP
          (NP (PDT half) (DT an) (NN octet))
          (PRN (-LRB- -LRB-)
            (NP (DT an) (NN octet)
              (S
                (VP (VBG being)
                  (NP (DT an) (JJ 8-bit) (NN byte)))))
            (-RRB- -RRB-)))))
    (. .)))

det(Nibble-2, A-1)
nsubj(term-11, Nibble-2)
dep(nybble-6, often-4)
appos(Nibble-2, nybble-6)
cop(term-11, is-8)
det(term-11, the-9)
amod(term-11, computing-10)
root(ROOT-0, term-11)
det(aggregation-15, a-13)
amod(aggregation-15, four-bit-14)
prep_for(term-11, aggregation-15)
predet(octet-20, half-18)
det(octet-20, an-19)
conj_or(term-11, octet-20)
det(octet-23, an-22)
appos(octet-20, octet-23)
cop(byte-27, being-24)
det(byte-27, an-25)
amod(byte-27, 8-bit-26)
dep(octet-23, byte-27)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Naraoiidae))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP (JJ soft-shelled) (JJ trilobite-like) (NNS arthropods)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBN known)
                (PP
                  (ADVP (RB only))
                  (IN from)
                  (NP (DT the) (JJ early)
                    (CC and)
                    (JJ middle) (NN Cambrian)))
                (: --)
                (ADVP (RB primarily))
                (PP (IN from)
                  (NP
                    (NP
                      (NP (DT the) (NNP Burgess) (NNP Shale))
                      (PP (IN of)
                        (NP (NNP British) (NNP Columbia))))
                    (CC and)
                    (NP
                      (NP (DT the) (NNP Maotianshan) (NNP Shale))
                      (PP (IN of)
                        (NP (NNP China))))))))))))
    (. .)))

det(Naraoiidae-2, The-1)
nsubj(family-5, Naraoiidae-2)
cop(family-5, is-3)
det(family-5, a-4)
root(ROOT-0, family-5)
nsubjpass(known-12, family-5)
amod(arthropods-9, soft-shelled-7)
amod(arthropods-9, trilobite-like-8)
prep_of(family-5, arthropods-9)
auxpass(known-12, are-11)
rcmod(family-5, known-12)
advmod(known-12, only-13)
det(Cambrian-19, the-15)
amod(Cambrian-19, early-16)
conj_and(early-16, middle-18)
amod(Cambrian-19, middle-18)
prep_from(known-12, Cambrian-19)
advmod(known-12, primarily-21)
det(Shale-25, the-23)
nn(Shale-25, Burgess-24)
prep_from(known-12, Shale-25)
nn(Columbia-28, British-27)
prep_of(Shale-25, Columbia-28)
det(Shale-32, the-30)
nn(Shale-32, Maotianshan-31)
prep_from(known-12, Shale-32)
conj_and(Shale-25, Shale-32)
prep_of(Shale-32, China-34)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Nortel) (NNPS Networks) (NNP Corporation))
        (PRN (-LRB- -LRB-)
          (NP (NNP NT) (NNP NT))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (VP
          (ADVP (RB formerly))
          (VBN known)
          (PP (IN as)
            (NP (NNP Northern) (NNP Telecom) (NNP Limited))))
        (CC and)
        (ADVP (RB sometimes))
        (VP (VBN known)
          (ADVP (RB simply))
          (PP (IN as)
            (NP (NNP Nortel)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ multinational) (NN telecommunications) (NN equipment) (NN manufacturer))
        (VP (VBN headquartered)
          (PP (IN in)
            (NP (NNP Toronto) (, ,) (NNP Canada))))))
    (. .)))

nn(Corporation-3, Nortel-1)
nn(Corporation-3, Networks-2)
nsubj(manufacturer-27, Corporation-3)
nn(NT-6, NT-5)
abbrev(Corporation-3, NT-6)
advmod(known-10, formerly-9)
dep(Corporation-3, known-10)
nn(Limited-14, Northern-12)
nn(Limited-14, Telecom-13)
prep_as(known-10, Limited-14)
dep(Corporation-3, sometimes-16)
advmod(known-10, sometimes-16)
conj_and(known-10, sometimes-16)
dep(Corporation-3, known-17)
conj_and(known-10, known-17)
advmod(known-17, simply-18)
prep_as(known-17, Nortel-20)
cop(manufacturer-27, is-22)
det(manufacturer-27, a-23)
amod(manufacturer-27, multinational-24)
nn(manufacturer-27, telecommunications-25)
nn(manufacturer-27, equipment-26)
root(ROOT-0, manufacturer-27)
partmod(manufacturer-27, headquartered-28)
nn(Canada-32, Toronto-30)
prep_in(headquartered-28, Canada-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Neuroscience))
    (ADVP (RB generally))
    (VP (VBZ includes)
      (NP
        (NP (DT all) (JJ scientific) (NNS studies))
        (PP (VBG involving)
          (NP (DT the) (JJ nervous) (NN system)))))
    (. .)))

nsubj(includes-3, Neuroscience-1)
advmod(includes-3, generally-2)
root(ROOT-0, includes-3)
det(studies-6, all-4)
amod(studies-6, scientific-5)
dobj(includes-3, studies-6)
det(system-10, the-8)
amod(system-10, nervous-9)
prep_involving(studies-6, system-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN engineering) (, ,) (NN woodworking)
        (CC and)
        (NN construction)))
    (, ,)
    (NP (DT a) (NNP Nail))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pin-shaped) (, ,) (JJ sharp) (NN object))
        (PP (IN of)
          (NP
            (NP (JJ hard) (NN metal))
            (, ,)
            (ADVP (RB typically))
            (NP
              (NP (NN steel))
              (, ,)
              (VP (VBN used)
                (PP (IN as)
                  (NP (DT a) (NN fastener)))))))))
    (. .)))

prep_in(object-15, engineering-2)
conj_and(engineering-2, woodworking-4)
prep_in(object-15, woodworking-4)
conj_and(engineering-2, construction-6)
prep_in(object-15, construction-6)
det(Nail-9, a-8)
nsubj(object-15, Nail-9)
cop(object-15, is-10)
det(object-15, a-11)
amod(object-15, pin-shaped-12)
amod(object-15, sharp-14)
root(ROOT-0, object-15)
amod(metal-18, hard-17)
prep_of(object-15, metal-18)
advmod(metal-18, typically-20)
dep(metal-18, steel-21)
partmod(steel-21, used-23)
det(fastener-26, a-25)
prep_as(used-23, fastener-26)

(ROOT
  (S
    (NP (DT A) (NNP Nerve))
    (VP (VBZ is)
      (NP
        (NP (DT an) (VBN enclosed) (, ,) (JJ cable-like) (NN bundle))
        (PP (IN of)
          (NP
            (NP (NNS axons))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT the) (JJ long) (, ,) (JJ slender) (NN projection))
                (PP (IN of)
                  (NP (DT a) (NN neuron))))
              (-RRB- -RRB-))))))
    (. .)))

det(Nerve-2, A-1)
nsubj(bundle-8, Nerve-2)
cop(bundle-8, is-3)
det(bundle-8, an-4)
amod(bundle-8, enclosed-5)
amod(bundle-8, cable-like-7)
root(ROOT-0, bundle-8)
prep_of(bundle-8, axons-10)
det(projection-16, the-12)
amod(projection-16, long-13)
amod(projection-16, slender-15)
dep(axons-10, projection-16)
det(neuron-19, a-18)
prep_of(projection-16, neuron-19)

(ROOT
  (S
    (NP (DT The) (NNP Necronomicon))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fictional) (NN book))
        (VP (VBG appearing)
          (PP (IN in)
            (NP (DT the) (NNS stories)))
          (PP (IN by)
            (NP (NN horror) (NN novelist) (NNP H.) (NNP P.) (NNP Lovecraft))))))
    (. .)))

det(Necronomicon-2, The-1)
nsubj(book-6, Necronomicon-2)
cop(book-6, is-3)
det(book-6, a-4)
amod(book-6, fictional-5)
root(ROOT-0, book-6)
partmod(book-6, appearing-7)
det(stories-10, the-9)
prep_in(appearing-7, stories-10)
nn(Lovecraft-16, horror-12)
nn(Lovecraft-16, novelist-13)
nn(Lovecraft-16, H.-14)
nn(Lovecraft-16, P.-15)
agent(appearing-7, Lovecraft-16)

(ROOT
  (S
    (NP (DT The) (NNP Neogene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ geologic) (NN period)
          (CC and)
          (NN system))
        (VP
          (VP (VBG starting)
            (NP
              (NP (CD 23.03) (NN Ãƒâ) (NNP ‰)
                (CC &)
                (NNP nbsp))
              (: ;)
              (NP (NNP Ã) (NNP ‚) (NNP Â) (NNP ±))
              (ADVP
                (NP (CD 0.05) (CD million) (NNS years))
                (RB ago))))
          (CC and)
          (VP (VBG lasting)
            (ADVP (RB either))
            (PP (IN until)
              (NP (NN today))))
          (CC or)
          (VP (VBG ending)
            (ADVP
              (NP
                (QP (CD 2.588) (CD million))
                (NNS years))
              (RB ago))
            (PP (IN with)
              (NP
                (NP (DT the) (NN beginning))
                (PP (IN of)
                  (NP (DT the) (NNP Quaternary)))))))))
    (. .)))

det(Neogene-2, The-1)
nsubj(period-6, Neogene-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
conj_and(period-6, system-8)
dep(period-6, starting-9)
num(‰-12, 23.03-10)
nn(‰-12, Ãƒâ-11)
dobj(starting-9, ‰-12)
dobj(starting-9, nbsp-14)
conj_and(‰-12, nbsp-14)
nn(±-19, Ã-16)
nn(±-19, ‚-17)
nn(±-19, Â-18)
dep(‰-12, ±-19)
num(years-22, 0.05-20)
num(years-22, million-21)
npadvmod(ago-23, years-22)
advmod(‰-12, ago-23)
dep(period-6, lasting-25)
conj_and(starting-9, lasting-25)
advmod(lasting-25, either-26)
prep_until(lasting-25, today-28)
dep(period-6, ending-30)
conj_or(starting-9, ending-30)
number(million-32, 2.588-31)
num(years-33, million-32)
npadvmod(ago-34, years-33)
advmod(ending-30, ago-34)
det(beginning-37, the-36)
prep_with(ending-30, beginning-37)
det(Quaternary-40, the-39)
prep_of(beginning-37, Quaternary-40)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Navy))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN branch))
          (PP (IN of)
            (NP
              (NP (DT a) (NN country) (POS 's))
              (JJ military) (NNS forces)))
          (VP
            (ADVP (RB principally))
            (VBN designated)
            (PP (IN for)
              (NP (JJ naval) (NN warfare)))))
        (CC and)
        (NP
          (NP (JJ amphibious) (NN warfare))
          (NP (RB namely) (NN lake)))
        (: -)
        (CC or)
        (NP
          (NP (JJ ocean-borne) (NN combat) (NNS operations))
          (CC and)
          (NP (VBN related) (NNS functions)))))
    (. .)))

det(Navy-2, A-1)
nsubj(branch-5, Navy-2)
cop(branch-5, is-3)
det(branch-5, the-4)
root(ROOT-0, branch-5)
det(country-8, a-7)
poss(forces-11, country-8)
amod(forces-11, military-10)
prep_of(branch-5, forces-11)
advmod(designated-13, principally-12)
partmod(branch-5, designated-13)
amod(warfare-16, naval-15)
prep_for(designated-13, warfare-16)
amod(warfare-19, amphibious-18)
conj_and(branch-5, warfare-19)
advmod(lake-21, namely-20)
dep(warfare-19, lake-21)
amod(operations-26, ocean-borne-24)
nn(operations-26, combat-25)
conj_or(branch-5, operations-26)
amod(functions-29, related-28)
conj_or(branch-5, functions-29)
conj_and(operations-26, functions-29)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Norns))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Old) (NNP Norse))
          (: :)
          (NP (NN norn)))
        (, ,)
        (NP
          (NP (NN plural))
          (: :)
          (NP (NN nornir)))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP
            (NP (NNP dÃƒâˆžÃ) (NNP ‚))
            (PRN
              (ADVP (RB â))
              (NP ($ $)
                (QP
                  (ADVP
                    (NP
                      (NP (`` ``) (NN sir))
                      (PRN (, ,)
                        (PP (IN numerous))))
                    (RB female))
                  (CD beings))))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP rule)
                  (S
                    (NP
                      (NP (DT the) (NNS fates))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ various) (NNS races))
                          (PP (IN of)
                            (NP (NNP Norse))))))
                    (ADJP (JJ mythology)))
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP (VBP see) (: :)
                        (NP (DT The) (NNPS Fates))))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(Norns-2, The-1)
nsubj(kind-15, Norns-2)
nn(Norse-5, Old-4)
dep(Norns-2, Norse-5)
dep(Norse-5, norn-7)
dep(Norse-5, plural-9)
dep(plural-9, nornir-11)
cop(kind-15, are-13)
det(kind-15, a-14)
root(ROOT-0, kind-15)
nn(‚-18, dÃƒâˆžÃ-17)
prep_of(kind-15, ‚-18)
nsubj(rule-28, ‚-18)
dep($-20, â-19)
dep(‚-18, $-20)
npadvmod(female-25, sir-22)
dep(sir-22, numerous-24)
dep(beings-26, female-25)
num($-20, beings-26)
rcmod(‚-18, rule-28)
det(fates-30, the-29)
nsubj(mythology-37, fates-30)
det(races-34, the-32)
amod(races-34, various-33)
prep_of(fates-30, races-34)
prep_of(races-34, Norse-36)
xcomp(rule-28, mythology-37)
parataxis(rule-28, see-39)
det(Fates-42, The-41)
dobj(see-39, Fates-42)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP NASDAQ))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN acronym))
          (PP (IN of)
            (NP
              (NP (NNP National) (NNP Association))
              (PP (IN of)
                (NP (NNP Securities) (NNP Dealers) (NNP Automated) (NNP Quotation) (NNP System))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT an) (JJ American) (NN stock) (NN exchange)))
    (. .)))

det(NASDAQ-2, The-1)
nsubj(exchange-19, NASDAQ-2)
dep(NASDAQ-2, acronym-4)
nn(Association-7, National-6)
prep_of(acronym-4, Association-7)
nn(System-13, Securities-9)
nn(System-13, Dealers-10)
nn(System-13, Automated-11)
nn(System-13, Quotation-12)
prep_of(Association-7, System-13)
cop(exchange-19, is-15)
det(exchange-19, an-16)
amod(exchange-19, American-17)
nn(exchange-19, stock-18)
root(ROOT-0, exchange-19)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ computational) (NN complexity) (NN theory)))
    (, ,)
    (NP (NNP NP))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (RBS most) (JJ fundamental) (NN complexity) (NNS classes)))))
    (. .)))

amod(theory-4, computational-2)
nn(theory-4, complexity-3)
prep_in(one-8, theory-4)
nsubj(one-8, NP-6)
cop(one-8, is-7)
root(ROOT-0, one-8)
det(classes-14, the-10)
advmod(classes-14, most-11)
amod(classes-14, fundamental-12)
nn(classes-14, complexity-13)
prep_of(one-8, classes-14)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP
      (NP (DT the) (NNPS Nereids))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN neer) ('' '))
          (: -)
          (NP (NNS ee-eds)))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (NP
        (NP (NN sea) (NNS nymphs))
        (, ,)
        (NP
          (NP (DT the) (JJ fifty) (NNS daughters))
          (PP (IN of)
            (NP (NNP Nereus)
              (CC and)
              (NNP Doris))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(nymphs-15, mythology-3)
det(Nereids-6, the-5)
nsubj(nymphs-15, Nereids-6)
dep(Nereids-6, neer-8)
dep(neer-8, ee-eds-11)
cop(nymphs-15, are-13)
nn(nymphs-15, sea-14)
root(ROOT-0, nymphs-15)
det(daughters-19, the-17)
amod(daughters-19, fifty-18)
appos(nymphs-15, daughters-19)
prep_of(daughters-19, Nereus-21)
prep_of(daughters-19, Doris-23)
conj_and(Nereus-21, Doris-23)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Negro))
    (, ,)
    (S
      (ADVP (RB literally))
      (VP (VBG meaning) ('' '')
        (NP (JJ black))
        ('' '')))
    (, ,)
    (VP (VBD was)
      (VP (VBN used)
        (PP (IN by)
          (NP (DT the) (NNP Spanish)
            (CC and)
            (NNP Portuguese)))
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP (NNS people))))))))
    (. .)))

det(Negro-3, The-1)
nn(Negro-3, term-2)
nsubjpass(used-12, Negro-3)
xsubj(refer-19, Negro-3)
advmod(meaning-6, literally-5)
partmod(used-12, meaning-6)
dobj(meaning-6, black-8)
auxpass(used-12, was-11)
root(ROOT-0, used-12)
det(Spanish-15, the-14)
agent(used-12, Spanish-15)
agent(used-12, Portuguese-17)
conj_and(Spanish-15, Portuguese-17)
aux(refer-19, to-18)
xcomp(used-12, refer-19)
prep_to(refer-19, people-21)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Michel) (IN de) (NNP Nostredame))
        (PRN (-LRB- -LRB-)
          (NP
            (NP
              (NP (CD 14))
              (NP (NNP December) (CD 1503)))
            (CC or)
            (NP
              (NP
                (NP (CD 21) (NNP December) (CD 1503))
                (CC &)
                (NP (NN amp)))
              (: ;)
              (NP
                (NP (NN ndash))
                (: ;)
                (NP
                  (NP
                    (QP (CD <LST>) (CD 2))
                    (NNS </LST>))
                  (NP (NNP July) (CD 1566))))))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB usually))
        (VBN Latinized)
        (PP (TO to)
          (NP (NNP Nostradamus))))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ French) (NN apothecary)
          (CC and)
          (JJ reputed) (NN seer))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD published)
              (NP
                (NP (NNS collections))
                (PP (IN of)
                  (NP
                    (NP (NNS prophecies))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP have)
                          (ADVP (IN since))
                          (VP (VBN become)
                            (ADJP (JJ famous))
                            (ADVP (RB world-wide))))))))))))))
    (. .)))

nn(Nostredame-3, Michel-1)
amod(Nostredame-3, de-2)
nsubj(apothecary-32, Nostredame-3)
dep(Nostredame-3, 14-5)
dep(14-5, December-6)
num(December-6, 1503-7)
num(December-10, 21-9)
dep(Nostredame-3, December-10)
conj_or(14-5, December-10)
num(December-10, 1503-11)
conj_or(14-5, amp-13)
conj_and(December-10, amp-13)
dep(December-10, ndash-15)
number(2-18, <LST>-17)
num(</LST>-19, 2-18)
dep(ndash-15, </LST>-19)
dep(</LST>-19, July-20)
num(July-20, 1566-21)
advmod(Latinized-25, usually-24)
partmod(Nostredame-3, Latinized-25)
prep_to(Latinized-25, Nostradamus-27)
cop(apothecary-32, was-29)
det(apothecary-32, a-30)
amod(apothecary-32, French-31)
root(ROOT-0, apothecary-32)
nsubj(published-37, apothecary-32)
amod(seer-35, reputed-34)
conj_and(apothecary-32, seer-35)
nsubj(published-37, seer-35)
rcmod(apothecary-32, published-37)
dobj(published-37, collections-38)
prep_of(collections-38, prophecies-40)
nsubj(famous-45, prophecies-40)
aux(famous-45, have-42)
advmod(famous-45, since-43)
cop(famous-45, become-44)
rcmod(prophecies-40, famous-45)
advmod(famous-45, world-wide-46)

(ROOT
  (S
    (NP
      (NP (NNP A))
      (SBAR
        (S
          (NP
            (NP (NNP Nebula))
            (-LRB- -LRB-)
            (PP (IN from)
              (NP (NNP Latin))
              (: :)))
          ('' '')
          (VP (VBP mist) ('' '')))))
    (: ;)
    (VP (VBP pl))
    (. .)))

nsubj(pl-11, A-1)
nsubj(mist-8, Nebula-2)
prep_from(Nebula-2, Latin-5)
rcmod(A-1, mist-8)
root(ROOT-0, pl-11)

(ROOT
  (S
    (NP
      (NP (NN nebulae))
      (CC or)
      (NP
        (NP (VBG nebulÃƒâˆžÃ) (NN ‚) (NN Å) (`` ``))
        (PRN (, ,)
          (ADVP (RB with))
          (NP (NN ligature)
            (CC or)
            (NNS nebulas))
          (-RRB- -RRB-))))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN interstellar) (NN cloud))
        (PP (IN of)
          (NP (NN dust) (, ,) (NN hydrogen) (NN gas)
            (CC and)
            (NN plasma)))))
    (. .)))

nsubj(cloud-16, nebulae-1)
amod(Å-5, nebulÃƒâˆžÃ-3)
nn(Å-5, ‚-4)
conj_or(nebulae-1, Å-5)
nsubj(cloud-16, Å-5)
dep(ligature-9, with-8)
dep(Å-5, ligature-9)
dep(Å-5, nebulas-11)
conj_or(ligature-9, nebulas-11)
cop(cloud-16, is-13)
det(cloud-16, an-14)
nn(cloud-16, interstellar-15)
root(ROOT-0, cloud-16)
nn(gas-21, dust-18)
prep_of(cloud-16, hydrogen-20)
conj_and(gas-21, hydrogen-20)
prep_of(cloud-16, gas-21)
prep_of(cloud-16, plasma-23)
conj_and(gas-21, plasma-23)

(ROOT
  (S
    (NP (DT A) (NNP Number))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ abstract) (NN object))
        (, ,)
        (NP
          (NP (NNS tokens))
          (PP (IN of)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP are)
                  (NP
                    (NP (NNS symbols))
                    (VP (VBN used)
                      (PP (IN in)
                        (S
                          (VP (VBG counting)
                            (CC and)
                            (VBG measuring)))))))))))))
    (. .)))

det(Number-2, A-1)
nsubj(object-6, Number-2)
cop(object-6, is-3)
det(object-6, an-4)
amod(object-6, abstract-5)
root(ROOT-0, object-6)
appos(object-6, tokens-8)
nsubj(symbols-12, which-10)
cop(symbols-12, are-11)
prepc_of(tokens-8, symbols-12)
partmod(symbols-12, used-13)
prepc_in(used-13, counting-15)
prepc_in(used-13, measuring-17)
conj_and(counting-15, measuring-17)

(ROOT
  (S
    (NP (DT The) (NNPS Normans))
    (VP (VBD were)
      (NP
        (NP (DT the) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD gave)
              (NP (PRP$ their) (NNS names))
              (PP (TO to)
                (NP (NNP Normandy)))
              (, ,)
              (NP
                (NP (DT a) (NN region))
                (PP (IN in)
                  (NP (JJ northern) (NNP France)))))))))
    (. .)))

det(Normans-2, The-1)
nsubj(people-5, Normans-2)
cop(people-5, were-3)
det(people-5, the-4)
root(ROOT-0, people-5)
nsubj(gave-7, people-5)
rcmod(people-5, gave-7)
poss(names-9, their-8)
dobj(gave-7, names-9)
prep_to(gave-7, Normandy-11)
det(region-14, a-13)
dobj(gave-7, region-14)
amod(France-17, northern-16)
prep_in(region-14, France-17)

(ROOT
  (S
    (NP (NNS Historians))
    (VP (VBP use)
      (S
        (NP (DT the) (NN term) (NN Nationalism))
        (VP (TO to)
          (VP (VB refer)
            (PP
              (PP (TO to)
                (NP (DT this) (JJ historical) (NN transition)))
              (CC and)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN emergence)
                    (CC and)
                    (NN predominance))
                  (PP (IN of)
                    (NP (JJ nationalist) (NN ideology))))))))))
    (. .)))

nsubj(use-2, Historians-1)
root(ROOT-0, use-2)
det(Nationalism-5, the-3)
nn(Nationalism-5, term-4)
nsubj(refer-7, Nationalism-5)
aux(refer-7, to-6)
xcomp(use-2, refer-7)
det(transition-11, this-9)
amod(transition-11, historical-10)
prep_to(refer-7, transition-11)
det(emergence-15, the-14)
prep_to(refer-7, emergence-15)
conj_and(transition-11, emergence-15)
conj_and(transition-11, predominance-17)
conj_and(emergence-15, predominance-17)
amod(ideology-20, nationalist-19)
prep_of(emergence-15, ideology-20)

(ROOT
  (S
    (NP (DT A) (NN Nation))
    (VP (VBZ is)
      (NP (DT a) (JJ human)
        (ADJP (JJ cultural)
          (CC and)
          (JJ social))
        (NN community)))
    (. .)))

det(Nation-2, A-1)
nsubj(community-9, Nation-2)
cop(community-9, is-3)
det(community-9, a-4)
amod(community-9, human-5)
amod(community-9, cultural-6)
conj_and(cultural-6, social-8)
amod(community-9, social-8)
root(ROOT-0, community-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP National) (NNP Broadcasting) (NNP Company))
      (PRN (-LRB- -LRB-)
        (NP (NNP NBC))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ American) (NN television) (NN network))
        (VP (VBN headquartered)
          (PP (IN in)
            (NP
              (NP (DT the) (NNP GE) (NNP Building))
              (PP (IN in)
                (NP
                  (NP (NNP New) (NNP York) (NNP City) (POS 's))
                  (NNP Rockefeller) (NNP Center))))))))
    (. .)))

det(Company-4, The-1)
nn(Company-4, National-2)
nn(Company-4, Broadcasting-3)
nsubj(network-12, Company-4)
abbrev(Company-4, NBC-6)
cop(network-12, is-8)
det(network-12, an-9)
amod(network-12, American-10)
nn(network-12, television-11)
root(ROOT-0, network-12)
partmod(network-12, headquartered-13)
det(Building-17, the-15)
nn(Building-17, GE-16)
prep_in(headquartered-13, Building-17)
nn(City-21, New-19)
nn(City-21, York-20)
poss(Center-24, City-21)
nn(Center-24, Rockefeller-23)
prep_in(Building-17, Center-24)

(ROOT
  (NP
    (NP (NNP A))
    (NP (NNP Nova) (-LRB- -LRB-) (NNP pl))
    (. .)))

root(ROOT-0, A-1)
nn(pl-4, Nova-2)
dep(A-1, pl-4)

(ROOT
  (S
    (NP (JJ novae) (NNS -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ cataclysmic) (JJ nuclear) (NN explosion))
        (VP (VBN caused)
          (PP (IN by)
            (NP
              (NP (DT the) (NN accretion))
              (PP (IN of)
                (NP (NN hydrogen)))))
          (PP (IN onto)
            (NP
              (NP (DT the) (NN surface))
              (PP (IN of)
                (NP (DT a) (JJ white) (NN dwarf) (NN star))))))))
    (. .)))

nsubj(explosion-7, novae-1)
cop(explosion-7, is-3)
det(explosion-7, a-4)
amod(explosion-7, cataclysmic-5)
amod(explosion-7, nuclear-6)
root(ROOT-0, explosion-7)
partmod(explosion-7, caused-8)
det(accretion-11, the-10)
agent(caused-8, accretion-11)
prep_of(accretion-11, hydrogen-13)
det(surface-16, the-15)
prep_onto(caused-8, surface-16)
det(star-21, a-18)
amod(star-21, white-19)
nn(star-21, dwarf-20)
prep_of(surface-16, star-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN general)))
    (, ,)
    (NP (DT a) (NNP Namespace))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ abstract) (NN container))
        (VP
          (VP (VBG providing)
            (NP (NN context))
            (PP (IN for)
              (NP
                (NP
                  (NP (DT the) (NNS items))
                  (-LRB- -LRB-)
                  (NP
                    (NP
                      (NP (NNS names))
                      (, ,)
                      (CC or)
                      (NP (JJ technical) (NNS terms))
                      (, ,))
                    (CC or)
                    (NP (NNS words)))
                  (-RRB- -RRB-))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ holds)))))))
          (CC and)
          (VP (VBG allowing)
            (NP
              (NP (NN disambiguation))
              (PP (IN of)
                (NP
                  (NP (NNS items))
                  (VP (VBG having)
                    (NP (DT the) (JJ same) (NN name)))
                  (PRN (-LRB- -LRB-)
                    (VP (VBG residing)
                      (PP (IN in)
                        (NP (JJ different) (NNS namespaces))))
                    (-RRB- -RRB-)))))))))
    (. .)))

prep_in(container-9, general-2)
det(Namespace-5, a-4)
nsubj(container-9, Namespace-5)
cop(container-9, is-6)
det(container-9, an-7)
amod(container-9, abstract-8)
root(ROOT-0, container-9)
dep(container-9, providing-10)
dobj(providing-10, context-11)
det(items-14, the-13)
prep_for(providing-10, items-14)
dobj(holds-26, items-14)
dep(items-14, names-16)
amod(terms-20, technical-19)
dep(items-14, terms-20)
conj_or(names-16, terms-20)
dep(items-14, words-23)
conj_or(names-16, words-23)
nsubj(holds-26, it-25)
rcmod(items-14, holds-26)
dep(container-9, allowing-28)
conj_and(providing-10, allowing-28)
dobj(allowing-28, disambiguation-29)
prep_of(disambiguation-29, items-31)
partmod(items-31, having-32)
det(name-35, the-33)
amod(name-35, same-34)
dobj(having-32, name-35)
dep(items-31, residing-37)
amod(namespaces-40, different-39)
prep_in(residing-37, namespaces-40)

(ROOT
  (S
    (NP (NNP Nemo))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NNP Oromo) (NN word))
        (VP (VBG meaning) ('' '')
          (NP (DT The) (NN Man))
          ('' ''))))
    (. .)))

nsubj(word-5, Nemo-1)
cop(word-5, is-2)
det(word-5, an-3)
nn(word-5, Oromo-4)
root(ROOT-0, word-5)
partmod(word-5, meaning-6)
det(Man-9, The-8)
dobj(meaning-6, Man-9)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ mathematical) (NN subfield))
        (PP (IN of)
          (NP (JJ numerical) (NN analysis)))))
    (, ,)
    (NP (DT a) (NN B-spline))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ spline) (NN function))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (NP
                (NP (JJ minimal) (NN support))
                (PP (IN with)
                  (NP (NN respect))))
              (PP (TO to)
                (NP
                  (NP (DT a) (JJ given) (NN degree))
                  (, ,)
                  (NP (NNS smoothness))
                  (, ,)
                  (CC and)
                  (NP (NN domain) (NN partition)))))))))
    (. .)))

det(subfield-4, the-2)
amod(subfield-4, mathematical-3)
prep_in(function-14, subfield-4)
amod(analysis-7, numerical-6)
prep_of(subfield-4, analysis-7)
det(B-spline-10, a-9)
nsubj(function-14, B-spline-10)
cop(function-14, is-11)
det(function-14, a-12)
amod(function-14, spline-13)
root(ROOT-0, function-14)
nsubj(has-16, function-14)
rcmod(function-14, has-16)
amod(support-18, minimal-17)
dobj(has-16, support-18)
prep_with(support-18, respect-20)
det(degree-24, a-22)
amod(degree-24, given-23)
prep_to(has-16, degree-24)
prep_to(has-16, smoothness-26)
conj_and(degree-24, smoothness-26)
nn(partition-30, domain-29)
prep_to(has-16, partition-30)
conj_and(degree-24, partition-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (NNP Nano))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ curses-based) (NN text) (NN editor))
        (PP (IN for)
          (NP
            (NP (NNP Unix))
            (CC and)
            (NP (JJ Unix-like) (NNS systems))))))
    (. .)))

prep_in(editor-9, computing-2)
nsubj(editor-9, Nano-4)
cop(editor-9, is-5)
det(editor-9, a-6)
amod(editor-9, curses-based-7)
nn(editor-9, text-8)
root(ROOT-0, editor-9)
prep_for(editor-9, Unix-11)
amod(systems-14, Unix-like-13)
prep_for(editor-9, systems-14)
conj_and(Unix-11, systems-14)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Novel))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP
              (NP (, ,) (JJ Italian) (NN novella))
              (, ,)
              (VP
                (VP (VBN Spanish)
                  (S
                    (NP
                      (NP
                        (NP (NN novela))
                        (, ,)
                        (NP
                          (NP (JJ French) (NN nouvelle))
                          (PP (IN for) ('' '')
                            (NP (JJ new)))
                          ('' '')))
                      (, ,) ('' '')
                      (NP (NN news) ('' ''))
                      (, ,))))
                (CC or)
                (VP ('' '')
                  (NP (JJ short) (NN story)))))
            (PP (IN of)
              (NP (NN something) (JJ new))
              ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (NN today))
      (NP (DT a) (JJ long) (JJ written) (, ,) (JJ fictional) (, ,) (JJ prose) (NN narrative)))
    (. .)))

det(Novel-2, A-1)
nsubj(today-33, Novel-2)
dep(Novel-2, from-4)
amod(novella-7, Italian-6)
pobj(from-4, novella-7)
dep(novella-7, Spanish-9)
xcomp(Spanish-9, novela-10)
amod(nouvelle-13, French-12)
appos(novela-10, nouvelle-13)
prep_for(nouvelle-13, new-16)
dep(novela-10, news-20)
amod(story-26, short-25)
dep(novella-7, story-26)
conj_or(Spanish-9, story-26)
prep_of(novella-7, something-28)
amod(something-28, new-29)
cop(today-33, is-32)
root(ROOT-0, today-33)
det(narrative-41, a-34)
amod(narrative-41, long-35)
amod(narrative-41, written-36)
amod(narrative-41, fictional-38)
amod(narrative-41, prose-40)
attr(today-33, narrative-41)

(ROOT
  (S
    (NP (DT A) (NNP Nutcracker))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mechanical) (NN device))
        (PP (IN for)
          (S
            (VP (VBG cracking)
              (NP (NNS nuts)))))))
    (. .)))

det(Nutcracker-2, A-1)
nsubj(device-6, Nutcracker-2)
cop(device-6, is-3)
det(device-6, a-4)
amod(device-6, mechanical-5)
root(ROOT-0, device-6)
prepc_for(device-6, cracking-8)
dobj(cracking-8, nuts-9)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (NP (DT a) (NNP Nucleon))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ collective) (NN name))
          (PP (IN for)
            (NP (CD two) (NNS baryons))))
        (: :)
        (NP
          (NP (DT the) (NN neutron))
          (CC and)
          (NP (DT the) (NN proton)))))
    (. .)))

prep_in(name-8, physics-2)
det(Nucleon-4, a-3)
nsubj(name-8, Nucleon-4)
cop(name-8, is-5)
det(name-8, a-6)
amod(name-8, collective-7)
root(ROOT-0, name-8)
num(baryons-11, two-10)
prep_for(name-8, baryons-11)
det(neutron-14, the-13)
dep(name-8, neutron-14)
det(proton-17, the-16)
dep(name-8, proton-17)
conj_and(neutron-14, proton-17)

(ROOT
  (S
    (NP (DT The) (NN Nomenklatura))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ small) (, ,) (JJ elite) (NN subset))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ general) (NN population))
            (PP (IN in)
              (NP (DT the) (NNP Soviet) (NNP Union)))))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD held)
              (NP (JJ various) (JJ key) (JJ administrative) (NNS positions))
              (PP (IN in)
                (NP
                  (NP (DT all) (NNS spheres))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNP Soviet) (NNP Union))
                      (: :)
                      (NP (NN government) (, ,) (NN industry) (, ,) (NN agriculture) (, ,) (NN education))
                      (, ,) (FW etc.))))))))))
    (. .)))

det(Nomenklatura-2, The-1)
nsubj(subset-8, Nomenklatura-2)
cop(subset-8, were-3)
det(subset-8, a-4)
amod(subset-8, small-5)
amod(subset-8, elite-7)
root(ROOT-0, subset-8)
nsubj(held-18, subset-8)
det(population-12, the-10)
amod(population-12, general-11)
prep_of(subset-8, population-12)
det(Union-16, the-14)
nn(Union-16, Soviet-15)
prep_in(population-12, Union-16)
rcmod(subset-8, held-18)
amod(positions-22, various-19)
amod(positions-22, key-20)
amod(positions-22, administrative-21)
dobj(held-18, positions-22)
det(spheres-25, all-24)
prep_in(held-18, spheres-25)
det(Union-29, the-27)
nn(Union-29, Soviet-28)
prep_of(spheres-25, Union-29)
nn(education-37, government-31)
dep(education-37, industry-33)
dep(education-37, agriculture-35)
nn(Union-29, education-37)
dep(Union-29, etc.-39)

(ROOT
  (S
    (NP (NNP Neopets) (POS '))
    (PRN (-LRB- -LRB-)
      (S
        (ADVP (RB originally))
        (VP (VB Neopets)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ virtual) (JJ pet) (NN website))
        (VP (VBN launched)
          (PP (IN by)
            (NP
              (NP (NNP Adam) (NNP Powell))
              (CC and)
              (NP (NNP Donna) (NNP Williams))))
          (PP (IN on)
            (NP (CD 15)))
          (NP (NNP November) (CD 1999)))))
    (. .)))

nsubj(website-11, Neopets-1)
advmod(Neopets-5, originally-4)
parataxis(website-11, Neopets-5)
cop(website-11, is-7)
det(website-11, a-8)
amod(website-11, virtual-9)
amod(website-11, pet-10)
root(ROOT-0, website-11)
partmod(website-11, launched-12)
nn(Powell-15, Adam-14)
agent(launched-12, Powell-15)
nn(Williams-18, Donna-17)
agent(launched-12, Williams-18)
conj_and(Powell-15, Williams-18)
prep_on(launched-12, 15-20)
tmod(launched-12, November-21)
num(November-21, 1999-22)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (DT a) (NNP Nymph))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN member))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ large) (NN class))
            (PP (IN of)
              (NP
                (NP (JJ mythological) (NNS entities))
                (PP (IN in)
                  (NP (JJ human) (JJ female) (NN form)))))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(member-9, mythology-3)
det(Nymph-6, a-5)
nsubj(member-9, Nymph-6)
cop(member-9, is-7)
det(member-9, any-8)
root(ROOT-0, member-9)
det(class-13, a-11)
amod(class-13, large-12)
prep_of(member-9, class-13)
amod(entities-16, mythological-15)
prep_of(class-13, entities-16)
amod(form-20, human-18)
amod(form-20, female-19)
prep_in(entities-16, form-20)

(ROOT
  (S
    (NP (DT A) (NNP Newspaper))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN written) (NN publication))
        (VP (VBG containing)
          (NP (NN news) (, ,) (NN information)
            (CC and)
            (NN advertising))
          (, ,)
          (S
            (ADVP (RB usually))
            (VP (VBN printed)
              (PP (IN on)
                (NP
                  (NP (JJ low-cost) (NN paper))
                  (VP (VBN called)
                    (NP (NN newsprint))))))))))
    (. .)))

det(Newspaper-2, A-1)
nsubj(publication-6, Newspaper-2)
cop(publication-6, is-3)
det(publication-6, a-4)
amod(publication-6, written-5)
root(ROOT-0, publication-6)
partmod(publication-6, containing-7)
dobj(containing-7, news-8)
dobj(containing-7, information-10)
conj_and(news-8, information-10)
dobj(containing-7, advertising-12)
conj_and(news-8, advertising-12)
advmod(printed-15, usually-14)
partmod(containing-7, printed-15)
amod(paper-18, low-cost-17)
prep_on(printed-15, paper-18)
partmod(paper-18, called-19)
dobj(called-19, newsprint-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN complexity) (NN theory)))
    (, ,)
    (NP
      (NP (NNP NC))
      (-LRB- -LRB-)
      (PP (IN for) ('' '')
        (NP (NNP Nick) (NNP 's) (NNP Class) ('' '')))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN set))
        (PP (IN of)
          (NP
            (NP (NN decision) (NNS problems))
            (VP (VBN decidable)
              (PP (IN in)
                (NP
                  (NP (JJ polylogarithmic) (NN time))
                  (PP (IN on)
                    (NP (DT a) (JJ parallel) (NN computer)))))
              (PP (IN with)
                (NP
                  (NP (DT a) (JJ polynomial) (NN number))
                  (PP (IN of)
                    (NP (NNS processors))))))))))
    (. .)))

nn(theory-3, complexity-2)
prep_in(set-16, theory-3)
nsubj(set-16, NC-5)
nn(Class-11, Nick-9)
nn(Class-11, 's-10)
prep_for(NC-5, Class-11)
cop(set-16, is-14)
det(set-16, the-15)
root(ROOT-0, set-16)
nn(problems-19, decision-18)
prep_of(set-16, problems-19)
partmod(problems-19, decidable-20)
amod(time-23, polylogarithmic-22)
prep_in(decidable-20, time-23)
det(computer-27, a-25)
amod(computer-27, parallel-26)
prep_on(time-23, computer-27)
det(number-31, a-29)
amod(number-31, polynomial-30)
prep_with(decidable-20, number-31)
prep_of(number-31, processors-33)

(ROOT
  (S
    (NP (DT The) (NN term) (NNP Nori))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP
          (ADJP (RB commonly) (VBN used)
            (S
              (VP (TO to)
                (VP (VB refer)
                  (PP (TO to)
                    (NP (DT the) (NN food)))))))
          (NNS products))
        (VP (VBN created)
          (PP (IN from)
            (NP
              (NP (DT these))
              ('' '')
              (VP (VBG sea)
                (NP (NNS vegetables))
                ('' '')))))
        (, ,)
        (ADJP (JJ similar)
          (PP (TO to)
            (NP (DT the) (JJ Korean) (NN gim))))))
    (. .)))

det(Nori-3, The-1)
nn(Nori-3, term-2)
nsubj(products-13, Nori-3)
cop(products-13, is-4)
advmod(products-13, also-5)
advmod(used-7, commonly-6)
amod(products-13, used-7)
aux(refer-9, to-8)
xcomp(used-7, refer-9)
det(food-12, the-11)
prep_to(refer-9, food-12)
root(ROOT-0, products-13)
partmod(products-13, created-14)
prep_from(created-14, these-16)
partmod(these-16, sea-18)
dobj(sea-18, vegetables-19)
amod(products-13, similar-22)
det(gim-26, the-24)
amod(gim-26, Korean-25)
prep_to(similar-22, gim-26)

(ROOT
  (S
    (NP (NNP Negotiation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN dialogue))
        (VP (VBN intended)
          (S
            (VP
              (VP (TO to)
                (VP (VB resolve)
                  (NP (NNS disputes))))
              (, ,)
              (VP (TO to)
                (VP (VB produce)
                  (NP (DT an) (NN agreement))
                  (PP (IN upon)
                    (NP
                      (NP (NNS courses))
                      (PP (IN of)
                        (NP (NN action)))))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB bargain)
                        (PP (IN for)
                          (NP (JJ individual)
                            (CC or)
                            (JJ collective) (NN advantage))))))))
              (, ,)
              (CC or)
              (VP (TO to)
                (VP (VB craft)
                  (S
                    (NP (NNS outcomes))
                    (VP (TO to)
                      (VP (VB satisfy)
                        (NP (JJ various) (NNS interests))))))))))))
    (. .)))

nsubj(dialogue-4, Negotiation-1)
cop(dialogue-4, is-2)
det(dialogue-4, a-3)
root(ROOT-0, dialogue-4)
partmod(dialogue-4, intended-5)
aux(resolve-7, to-6)
ccomp(intended-5, resolve-7)
dobj(resolve-7, disputes-8)
aux(produce-11, to-10)
ccomp(intended-5, produce-11)
conj_or(resolve-7, produce-11)
det(agreement-13, an-12)
dobj(produce-11, agreement-13)
prep_upon(produce-11, courses-15)
prep_of(courses-15, action-17)
aux(bargain-20, to-19)
xcomp(produce-11, bargain-20)
amod(advantage-25, individual-22)
conj_or(individual-22, collective-24)
amod(advantage-25, collective-24)
prep_for(bargain-20, advantage-25)
aux(craft-29, to-28)
ccomp(intended-5, craft-29)
conj_or(resolve-7, craft-29)
nsubj(satisfy-32, outcomes-30)
aux(satisfy-32, to-31)
xcomp(craft-29, satisfy-32)
amod(interests-34, various-33)
dobj(satisfy-32, interests-34)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Nuvistor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NN vacuum) (NN tube))
            (VP (VBN announced)
              (PP (IN by)
                (NP (NNP RCA)))
              (PP (IN in)
                (NP (CD 1959))))))))
    (. .)))

det(Nuvistor-2, The-1)
nsubj(type-5, Nuvistor-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
nn(tube-8, vacuum-7)
prep_of(type-5, tube-8)
partmod(tube-8, announced-9)
agent(announced-9, RCA-11)
prep_in(announced-9, 1959-13)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP NÃƒâˆžÃ) (NNP ‚) (NNP Ï))
        (ADJP ($ $) (JJ rburgring)))
      (, ,)
      (VP (VBN known)
        (PP (IN as)
          (ADVP (RB simply)))
        ('' '')
        (PP
          (NP (DT the) (NNP Ring) ('' ''))
          (IN by)
          (NP (NNS enthusiasts))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ motorsport) (NN race) (NN track))
        (PP (IN in)
          (NP
            (NP
              (NP (NNP NÃƒâˆžÃ) (NNP ‚) (NNP Ï))
              (ADJP ($ $) (JJ rburg)))
            (, ,)
            (NP (NNP Germany))))))
    (. .)))

det(Ï-4, The-1)
nn(Ï-4, NÃƒâˆžÃ-2)
nn(Ï-4, ‚-3)
nsubj(track-22, Ï-4)
amod(Ï-4, $-5)
dep($-5, rburgring-6)
partmod(Ï-4, known-8)
prep(known-8, as-9)
pcomp(as-9, simply-10)
det(Ring-13, the-12)
dep(known-8, Ring-13)
agent(known-8, enthusiasts-16)
cop(track-22, is-18)
det(track-22, a-19)
amod(track-22, motorsport-20)
nn(track-22, race-21)
root(ROOT-0, track-22)
nn(Ï-26, NÃƒâˆžÃ-24)
nn(Ï-26, ‚-25)
prep_in(track-22, Ï-26)
amod(Ï-26, $-27)
dep($-27, rburg-28)
appos(Ï-26, Germany-30)

(ROOT
  (S
    (NP (NNP Nichiren))
    (VP (VBD was)
      (NP
        (NP (DT a) (NNP Buddhist) (NN monk))
        (PP (IN of)
          (NP (JJ 13th) (NN century) (NNP Japan)))))
    (. .)))

nsubj(monk-5, Nichiren-1)
cop(monk-5, was-2)
det(monk-5, a-3)
nn(monk-5, Buddhist-4)
root(ROOT-0, monk-5)
amod(Japan-9, 13th-7)
nn(Japan-9, century-8)
prep_of(monk-5, Japan-9)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (ADJP (JJ topology)
            (CC and)
            (VBN related))
          (NNS areas))
        (PP (IN of)
          (NP (NNS mathematics)))))
    (NP
      (NP (DT a) (NN Net))
      (CC or)
      (NP (JJ Moore-Smith) (NN sequence)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN generalization))
        (PP (IN of)
          (NP
            (NP (DT a) (NN sequence))
            (, ,)
            (VP (VBN intended)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB unify)
                      (NP
                        (NP (DT the) (JJ various) (NNS notions))
                        (PP (IN of)
                          (NP (NN limit)))))
                    (CC and)
                    (VP (VB generalize)
                      (NP (PRP them))
                      (PP (TO to)
                        (NP
                          (ADJP (JJ arbitrary) (JJ topological))
                          (NNS spaces))))))))))))
    (. .)))

amod(areas-5, topology-2)
conj_and(topology-2, related-4)
amod(areas-5, related-4)
prep_in(generalization-15, areas-5)
prep_of(areas-5, mathematics-7)
det(Net-9, a-8)
nsubj(generalization-15, Net-9)
amod(sequence-12, Moore-Smith-11)
conj_or(Net-9, sequence-12)
nsubj(generalization-15, sequence-12)
cop(generalization-15, is-13)
det(generalization-15, a-14)
root(ROOT-0, generalization-15)
det(sequence-18, a-17)
prep_of(generalization-15, sequence-18)
xsubj(unify-22, sequence-18)
partmod(sequence-18, intended-20)
aux(unify-22, to-21)
xcomp(intended-20, unify-22)
det(notions-25, the-23)
amod(notions-25, various-24)
dobj(unify-22, notions-25)
prep_of(notions-25, limit-27)
xcomp(intended-20, generalize-29)
conj_and(unify-22, generalize-29)
dobj(generalize-29, them-30)
amod(topological-33, arbitrary-32)
amod(spaces-34, topological-33)
prep_to(generalize-29, spaces-34)

(ROOT
  (S
    (NP (DT An) (NNP Oligopoly))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN market) (NN form))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT a) (NN market)
              (CC or)
              (NN industry))
            (VP (VBZ is)
              (VP (VBN dominated)
                (PP (IN by)
                  (NP
                    (NP (DT a) (JJ small) (NN number))
                    (PP (IN of)
                      (NP
                        (NP (NNS sellers))
                        (PRN (-LRB- -LRB-)
                          (NP (NNS oligopolists))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Oligopoly-2, An-1)
nsubj(form-6, Oligopoly-2)
cop(form-6, is-3)
det(form-6, a-4)
nn(form-6, market-5)
root(ROOT-0, form-6)
rel(dominated-14, which-8)
det(market-10, a-9)
nsubjpass(dominated-14, market-10)
conj_or(market-10, industry-12)
nsubjpass(dominated-14, industry-12)
auxpass(dominated-14, is-13)
rcmod(form-6, dominated-14)
det(number-18, a-16)
amod(number-18, small-17)
agent(dominated-14, number-18)
prep_of(number-18, sellers-20)
appos(sellers-20, oligopolists-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geography)))
    (, ,)
    (NP
      (NP
        (NP (DT an) (NNP Oasis))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NN plural))
            (: :)
            (NP (NNS oases)))
          (-RRB- -RRB-)))
      (CC or)
      (NP
        (NP (NN cienega))
        (PRN (-LRB- -LRB-)
          (NP (NNP southwestern) (NNP United) (NNP States))
          (-RRB- -RRB-))))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ isolated) (NN area))
        (PP (IN of)
          (NP
            (NP (NNP vegetation))
            (PP (IN in)
              (NP (DT a) (NN desert))))))
      (, ,)
      (S
        (ADVP (RB typically))
        (VP (VBG surrounding)
          (NP (DT a) (NN spring)
            (CC or)
            (JJ similar) (NN water) (NN source)))))
    (. .)))

prep_in(area-21, geography-2)
det(Oasis-5, an-4)
nsubj(area-21, Oasis-5)
dep(Oasis-5, plural-7)
dep(plural-7, oases-9)
conj_or(Oasis-5, cienega-12)
nsubj(area-21, cienega-12)
nn(States-16, southwestern-14)
nn(States-16, United-15)
appos(cienega-12, States-16)
cop(area-21, is-18)
det(area-21, an-19)
amod(area-21, isolated-20)
root(ROOT-0, area-21)
prep_of(area-21, vegetation-23)
det(desert-26, a-25)
prep_in(vegetation-23, desert-26)
advmod(surrounding-29, typically-28)
partmod(area-21, surrounding-29)
xcomp(area-21, surrounding-29)
det(spring-31, a-30)
dobj(surrounding-29, spring-31)
amod(source-35, similar-33)
nn(source-35, water-34)
dobj(surrounding-29, source-35)
conj_or(spring-31, source-35)

(ROOT
  (S
    (NP (DT The) (NNP Oboe))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ double) (JJ reed) (JJ musical) (NN instrument))
        (PP (IN of)
          (NP (DT the) (NN woodwind) (NN family)))))
    (. .)))

det(Oboe-2, The-1)
nsubj(instrument-8, Oboe-2)
cop(instrument-8, is-3)
det(instrument-8, a-4)
amod(instrument-8, double-5)
amod(instrument-8, reed-6)
amod(instrument-8, musical-7)
root(ROOT-0, instrument-8)
det(family-12, the-10)
nn(family-12, woodwind-11)
prep_of(instrument-8, family-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Orthography))
      (PP (IN of)
        (NP (DT a) (NN language))))
    (VP (VBZ specifies)
      (NP
        (NP (DT the) (JJ correct) (NN way))
        (PP (IN of)
          (S
            (VP (VBG using)
              (NP (DT a) (JJ specific) (NN writing) (NN system))
              (S
                (VP (TO to)
                  (VP (VB write)
                    (NP (DT the) (NN language))))))))))
    (. .)))

det(Orthography-2, The-1)
nsubj(specifies-6, Orthography-2)
det(language-5, a-4)
prep_of(Orthography-2, language-5)
root(ROOT-0, specifies-6)
det(way-9, the-7)
amod(way-9, correct-8)
dobj(specifies-6, way-9)
prepc_of(way-9, using-11)
det(system-15, a-12)
amod(system-15, specific-13)
nn(system-15, writing-14)
dobj(using-11, system-15)
aux(write-17, to-16)
xcomp(using-11, write-17)
det(language-19, the-18)
dobj(write-17, language-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT an) (NNP Operator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN function))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ operates)
              (PP (IN on)
                (PRN (-LRB- -LRB-)
                  (CC or)
                  (VP (VBZ modifies))
                  (-RRB- -RRB-))
                (NP (DT another) (NN function))))))))
    (. .)))

prep_in(function-8, mathematics-2)
det(Operator-5, an-4)
nsubj(function-8, Operator-5)
cop(function-8, is-6)
det(function-8, a-7)
root(ROOT-0, function-8)
nsubj(operates-10, function-8)
rcmod(function-8, operates-10)
dep(modifies-14, or-13)
dep(operates-10, modifies-14)
det(function-17, another-16)
prep_on(operates-10, function-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT The) (NNP Ordovician))
      (VP
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ geologic) (NN period)
              (CC and)
              (NN system))
            (, ,)
            (NP
              (NP (DT the) (NN second))
              (PP (IN of)
                (NP (CD six)))
              (PP (IN of)
                (NP (DT the) (JJ Paleozoic) (NN era))))
            (, ,)))
        (CC and)
        (VP (VBZ covers)
          (NP
            (NP (DT the) (NN time))
            (PP (IN between)
              (NP
                (NP (CD 488.3))
                (CC &)
                (NP (NN amp))
                (: ;)))))))
    (: ;)
    (S
      (NP
        (NP
          (NP (NN plusmn))
          (: ;)
          (NP
            (NP
              (QP (CD 1.7) (TO to) (CD 443.7)))
            (NP (CC &)
              (NN amp)))
          (: ;))
        (: ;)
        (NP (NN plusmn))
        (: ;))
      (ADVP
        (NP
          (QP (CD 1.5) (CD million))
          (NNS years))
        (RB ago))
      (VP (VBP ICS)
        (NP (CD 2004))))
    (. .)))

det(Ordovician-2, The-1)
nsubj(period-6, Ordovician-2)
nsubj(covers-20, Ordovician-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
conj_and(period-6, system-8)
det(second-11, the-10)
appos(period-6, second-11)
prep_of(second-11, six-13)
det(era-17, the-15)
amod(era-17, Paleozoic-16)
prep_of(second-11, era-17)
conj_and(period-6, covers-20)
det(time-22, the-21)
dobj(covers-20, time-22)
prep_between(time-22, 488.3-24)
prep_between(time-22, amp-26)
conj_and(488.3-24, amp-26)
nsubj(ICS-44, plusmn-29)
number(443.7-33, 1.7-31)
dep(443.7-33, to-32)
dep(plusmn-29, 443.7-33)
cc(amp-35, &-34)
dep(443.7-33, amp-35)
dep(plusmn-29, plusmn-38)
number(million-41, 1.5-40)
num(years-42, million-41)
npadvmod(ago-43, years-42)
advmod(ICS-44, ago-43)
parataxis(period-6, ICS-44)
dobj(ICS-44, 2004-45)

(ROOT
  (S
    (NP (DT The) (NNP Oligocene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ geologic) (NN period))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ extends)
              (PP (IN from)
                (NP
                  (QP (RB about) (CD 33.9) (CD million) (TO to) (CD 23) (CD million))
                  (NNS years)))
              (PP (IN before)
                (NP (DT the) (NN present))))))))
    (. .)))

det(Oligocene-2, The-1)
nsubj(period-6, Oligocene-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
nsubj(extends-8, period-6)
rcmod(period-6, extends-8)
quantmod(million-15, about-10)
number(million-15, 33.9-11)
number(million-15, million-12)
dep(million-15, to-13)
number(million-15, 23-14)
num(years-16, million-15)
prep_from(extends-8, years-16)
det(present-19, the-18)
prep_before(extends-8, present-19)

(ROOT
  (S
    (NP (NN Ozymandias))
    (VP (VBD was)
      (NP
        (NP (DT another) (NN name))
        (PP (IN of)
          (NP
            (NP (NNP Ramesses) (DT the) (NNP Great))
            (, ,)
            (NP
              (NP (NNP Pharaoh))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ nineteenth) (NN dynasty))
                  (PP (IN of)
                    (NP (JJ ancient) (NNP Egypt))))))))))
    (. .)))

nsubj(name-4, Ozymandias-1)
cop(name-4, was-2)
det(name-4, another-3)
root(ROOT-0, name-4)
nn(Great-8, Ramesses-6)
det(Great-8, the-7)
prep_of(name-4, Great-8)
appos(Great-8, Pharaoh-10)
det(dynasty-14, the-12)
amod(dynasty-14, nineteenth-13)
prep_of(Pharaoh-10, dynasty-14)
amod(Egypt-17, ancient-16)
prep_of(dynasty-14, Egypt-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Octal) (NN numeral) (NN system))
      (, ,)
      (CC or)
      (NP
        (NP (NN oct))
        (PP (IN for)
          (NP (JJ short))))
      (, ,))
    (VP
      (VP (VBZ is)
        (NP (DT the) (JJ base-8) (NN number) (NN system)))
      (, ,)
      (CC and)
      (VP (VBZ uses)
        (NP (DT the) (NNS digits) (NN 0))
        (PP (TO to)
          (NP (CD 7)))))
    (. .)))

det(system-4, The-1)
nn(system-4, Octal-2)
nn(system-4, numeral-3)
nsubj(system-15, system-4)
nsubj(uses-18, system-4)
conj_or(system-4, oct-7)
nsubj(system-15, oct-7)
prep_for(oct-7, short-9)
cop(system-15, is-11)
det(system-15, the-12)
amod(system-15, base-8-13)
nn(system-15, number-14)
root(ROOT-0, system-15)
conj_and(system-15, uses-18)
det(0-21, the-19)
nn(0-21, digits-20)
dobj(uses-18, 0-21)
prep_to(uses-18, 7-23)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Ovum))
      (PRN (-LRB- -LRB-)
        (NP (NN plural) (NN ova))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ haploid) (JJ female) (JJ reproductive) (NN cell))
        (CC or)
        (NP (NN gamete))))
    (. .)))

det(Ovum-2, An-1)
nsubj(cell-12, Ovum-2)
nn(ova-5, plural-4)
appos(Ovum-2, ova-5)
cop(cell-12, is-7)
det(cell-12, a-8)
amod(cell-12, haploid-9)
amod(cell-12, female-10)
amod(cell-12, reproductive-11)
root(ROOT-0, cell-12)
conj_or(cell-12, gamete-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Ostrogoths))
      (PRN (-LRB- -LRB-)
        (NP (NNP Ostrogothi)
          (CC or)
          (NNP Austrogothi))
        (-RRB- -RRB-)))
    (VP (VBD were)
      (NP
        (NP (DT a) (NN branch))
        (PP (IN of)
          (NP
            (NP (DT the) (NNPS Goths))
            (, ,)
            (NP
              (NP (DT an) (NNP East) (NNP Germanic) (NN tribe))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD played)
                    (NP (DT a) (JJ major) (NN role))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (JJ political) (NNS events))
                        (PP (IN of)
                          (NP (DT the) (JJ late) (NNP Roman) (NNP Empire)))))))))))))
    (. .)))

det(Ostrogoths-2, The-1)
nsubj(branch-10, Ostrogoths-2)
appos(Ostrogoths-2, Ostrogothi-4)
appos(Ostrogoths-2, Austrogothi-6)
conj_or(Ostrogothi-4, Austrogothi-6)
cop(branch-10, were-8)
det(branch-10, a-9)
root(ROOT-0, branch-10)
det(Goths-13, the-12)
prep_of(branch-10, Goths-13)
det(tribe-18, an-15)
nn(tribe-18, East-16)
nn(tribe-18, Germanic-17)
appos(Goths-13, tribe-18)
nsubj(played-20, tribe-18)
rcmod(tribe-18, played-20)
det(role-23, a-21)
amod(role-23, major-22)
dobj(played-20, role-23)
det(events-27, the-25)
amod(events-27, political-26)
prep_in(played-20, events-27)
det(Empire-32, the-29)
amod(Empire-32, late-30)
nn(Empire-32, Roman-31)
prep_of(events-27, Empire-32)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Octahedron))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN plural))
          (: :)
          (NP (NN octahedra)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN polyhedron))
        (PP (IN with)
          (NP (CD eight) (NNS faces)))))
    (. .)))

det(Octahedron-2, An-1)
nsubj(polyhedron-10, Octahedron-2)
dep(Octahedron-2, plural-4)
dep(plural-4, octahedra-6)
cop(polyhedron-10, is-8)
det(polyhedron-10, a-9)
root(ROOT-0, polyhedron-10)
num(faces-13, eight-12)
prep_with(polyhedron-10, faces-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNS Octans))
    (PRN (-LRB- -LRB-)
      (S
        (NP
          (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
          (PRN (: ‚)
            (FRAG
              (FRAG (RB âˆšÃƒâ))
              (: ‰)
              (FRAG
                (X (SYM ˆÃ))
                (: ‚)
                (NP (NN â)))))
          (NP ($ $) (CD šktÃƒâˆžÃ))
          ('' ‚))
        (VP (VBD Å) (`` ``)
          (NP
            (NP
              (NP (NN nz))
              (, ,)
              (NP
                (NP (JJ eighth) (NN part))
                (PP (IN of)
                  (NP (DT a) (NN circle))))
              (, ,))
            (VP (VBG alluding)
              (S
                (VP (TO to)
                  (VP (VB octant)))))
            (PRN (-LRB- -LRB-)
              (NP (NN instrument))
              (-RRB- -RRB-)))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ inconspicuous) (NN constellation))
        (VP (VBN introduced)
          (PP (IN by)
            (NP (NNP Nicolas) (NNP Louis) (IN de) (NNP Lacaille))))))
    (. .)))

nsubj(constellation-36, Octans-1)
nn(Ã-6, Ãƒâ-3)
nn(Ã-6, $-4)
nsubj(Å-16, Ã-6)
punct(âˆšÃƒâ-8, ‚-7)
dep(Ã-6, âˆšÃƒâ-8)
punct(âˆšÃƒâ-8, ‰-9)
dep(â-12, ˆÃ-10)
punct(â-12, ‚-11)
dep(âˆšÃƒâ-8, â-12)
dep(Ã-6, $-13)
num($-13, šktÃƒâˆžÃ-14)
punct(Ã-6, ‚-15)
parataxis(constellation-36, Å-16)
dobj(Å-16, nz-18)
xsubj(octant-28, nz-18)
amod(part-21, eighth-20)
appos(nz-18, part-21)
det(circle-24, a-23)
prep_of(part-21, circle-24)
partmod(nz-18, alluding-26)
aux(octant-28, to-27)
xcomp(alluding-26, octant-28)
appos(nz-18, instrument-30)
cop(constellation-36, is-33)
det(constellation-36, an-34)
amod(constellation-36, inconspicuous-35)
root(ROOT-0, constellation-36)
partmod(constellation-36, introduced-37)
nn(Lacaille-42, Nicolas-39)
nn(Lacaille-42, Louis-40)
amod(Lacaille-42, de-41)
agent(introduced-37, Lacaille-42)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (DT The) (NNP OS))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ external) (NN orifice))
          (PP (IN of)
            (NP (DT the) (NN uterus))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN opening))
          (PP (IN at)
            (NP
              (NP (DT the) (NN tip))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN cervix))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ separates)
                        (NP (DT the) (NN uterus))
                        (PP (IN from)
                          (NP (DT the) (NN vagina)))))))))))))
    (. .)))

det(OS-2, The-1)
nsubj(orifice-6, OS-2)
cop(orifice-6, is-3)
det(orifice-6, the-4)
amod(orifice-6, external-5)
root(ROOT-0, orifice-6)
det(uterus-9, the-8)
prep_of(orifice-6, uterus-9)
nsubj(opening-14, it-11)
cop(opening-14, is-12)
det(opening-14, the-13)
parataxis(orifice-6, opening-14)
det(tip-17, the-16)
prep_at(opening-14, tip-17)
det(cervix-20, the-19)
prep_of(tip-17, cervix-20)
nsubj(separates-22, cervix-20)
rcmod(cervix-20, separates-22)
det(uterus-24, the-23)
dobj(separates-22, uterus-24)
det(vagina-27, the-26)
prep_from(separates-22, vagina-27)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Occult))
    (VP (VBZ comes)
      (PP (IN from)
        (NP
          (NP (DT the) (JJ Latin) (NN word) (NNS occultus))
          (PRN (-LRB- -LRB-)
            (NP (NNP clandestine))
            (, ,)
            (NP (JJ hidden))
            (, ,)
            (NP (NN secret))
            (-RRB- -RRB-))))
      (, ,)
      (S
        (VP (VBG referring)
          (PP (IN to) ('' '')
            (NP
              (NP (NN knowledge))
              (PP (IN of)
                (NP (DT the) (JJ hidden))))))))
    ('' '') (. .)))

det(Occult-3, The-1)
nn(Occult-3, word-2)
nsubj(comes-4, Occult-3)
root(ROOT-0, comes-4)
det(occultus-9, the-6)
amod(occultus-9, Latin-7)
nn(occultus-9, word-8)
prep_from(comes-4, occultus-9)
appos(occultus-9, clandestine-11)
dep(clandestine-11, hidden-13)
dep(clandestine-11, secret-15)
xcomp(comes-4, referring-18)
prep_to(referring-18, knowledge-21)
det(hidden-24, the-23)
prep_of(knowledge-21, hidden-24)

(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (DT The) (NNP University))
          (PP (IN of)
            (NP (NNP Oxford))))
        (CC and)
        (NP
          (NP (DT the) (NNP University))
          (PP (IN of)
            (NP (NNP Cambridge)))))
      (, ,)
      (VP
        (ADVP (RB collectively))
        (VBN known)
        (PP (IN as)
          (NP (NNP Oxbridge))))
      (, ,))
    (VP (VBP are)
      (NP
        (NP (DT the) (CD two)
          (ADJP (JJS oldest)
            (CC and)
            (ADJP (RBS most) (JJ famous)))
          (NNS universities))
        (PP (IN in)
          (NP (NNP Britain)))))
    (. .)))

det(University-2, The-1)
nsubj(universities-23, University-2)
prep_of(University-2, Oxford-4)
det(University-7, the-6)
conj_and(University-2, University-7)
nsubj(universities-23, University-7)
prep_of(University-7, Cambridge-9)
advmod(known-12, collectively-11)
partmod(University-2, known-12)
prep_as(known-12, Oxbridge-14)
cop(universities-23, are-16)
det(universities-23, the-17)
num(universities-23, two-18)
amod(universities-23, oldest-19)
advmod(famous-22, most-21)
conj_and(oldest-19, famous-22)
amod(universities-23, famous-22)
root(ROOT-0, universities-23)
prep_in(universities-23, Britain-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Ostrich))
      (PRN (-LRB- -LRB-)
        (NP (NNP Struthio) (NNS camelus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NNS flightless) (NN bird) (NN native))
        (PP (TO to)
          (NP
            (NP (NNP Africa))
            (PRN (-LRB- -LRB-)
              (CC and)
              (ADVP (RB formerly))
              (NP (DT the) (NNP Middle) (NNP East))
              (-RRB- -RRB-))))))
    (. .)))

det(Ostrich-2, The-1)
nsubj(native-12, Ostrich-2)
nn(camelus-5, Struthio-4)
appos(Ostrich-2, camelus-5)
cop(native-12, is-7)
det(native-12, a-8)
amod(native-12, large-9)
nn(native-12, flightless-10)
nn(native-12, bird-11)
root(ROOT-0, native-12)
prep_to(native-12, Africa-14)
dep(East-20, and-16)
dep(East-20, formerly-17)
det(East-20, the-18)
nn(East-20, Middle-19)
appos(Africa-14, East-20)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Orgasm))
      (PRN (-LRB- -LRB-)
        (NP (JJ sexual) (NN climax))
        (-RRB- -RRB-)))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN conclusion))
          (PP (IN of)
            (NP
              (NP (DT the) (NN plateau) (NN phase))
              (PP (IN of)
                (NP (DT the) (JJ sexual) (NN response) (NN cycle)))))))
      (, ,)
      (CC and)
      (VP (MD may)
        (VP (VB be)
          (VP (VBN experienced)
            (PP (IN by)
              (NP (DT both) (NNS males)
                (CC and)
                (NNS females)))))))
    (. .)))

det(Orgasm-2, An-1)
nsubj(conclusion-9, Orgasm-2)
nsubjpass(experienced-23, Orgasm-2)
amod(climax-5, sexual-4)
appos(Orgasm-2, climax-5)
cop(conclusion-9, is-7)
det(conclusion-9, the-8)
root(ROOT-0, conclusion-9)
det(phase-13, the-11)
nn(phase-13, plateau-12)
prep_of(conclusion-9, phase-13)
det(cycle-18, the-15)
amod(cycle-18, sexual-16)
nn(cycle-18, response-17)
prep_of(phase-13, cycle-18)
aux(experienced-23, may-21)
auxpass(experienced-23, be-22)
conj_and(conclusion-9, experienced-23)
preconj(males-26, both-25)
agent(experienced-23, males-26)
agent(experienced-23, females-28)
conj_and(males-26, females-28)

(ROOT
  (S
    (NP (DT An) (NNP Oracle))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN person)
            (CC or)
            (NN agency))
          (VP (VBN considered)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN source))
                    (PP (IN of)
                      (NP
                        (NP (JJ wise) (NN counsel))
                        (CC or)
                        (NP (JJ prophetic) (NN opinion))))))))))
        (: ;)
        (NP
          (NP (DT an) (JJ infallible) (NN authority))
          (, ,)
          (VP
            (ADVP (RB usually))
            (VBN spiritual)
            (PP (IN in)
              (NP (NN nature)))))))
    (. .)))

det(Oracle-2, An-1)
nsubj(person-5, Oracle-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
xsubj(source-12, person-5)
conj_or(person-5, agency-7)
xsubj(source-12, agency-7)
partmod(person-5, considered-8)
aux(source-12, to-9)
cop(source-12, be-10)
det(source-12, a-11)
xcomp(considered-8, source-12)
amod(counsel-15, wise-14)
prep_of(source-12, counsel-15)
amod(opinion-18, prophetic-17)
prep_of(source-12, opinion-18)
conj_or(counsel-15, opinion-18)
det(authority-22, an-20)
amod(authority-22, infallible-21)
dep(person-5, authority-22)
advmod(spiritual-25, usually-24)
partmod(authority-22, spiritual-25)
prep_in(spiritual-25, nature-27)

(ROOT
  (S
    (NP (DT An) (NNP Ore))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN volume))
        (PP (IN of)
          (NP
            (NP (NN rock))
            (VP (VBG containing)
              (NP (NNS components)
                (CC or)
                (NNS minerals))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN mode))
                  (PP (IN of)
                    (NP (NN occurrence)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ renders)
                        (S
                          (NP (PRP it))
                          (ADJP (JJ valuable)
                            (PP (IN for)
                              (NP (NN mining)))))))))))))))
    (. .)))

det(Ore-2, An-1)
nsubj(volume-5, Ore-2)
cop(volume-5, is-3)
det(volume-5, a-4)
root(ROOT-0, volume-5)
prep_of(volume-5, rock-7)
partmod(rock-7, containing-8)
dobj(containing-8, components-9)
dobj(containing-8, minerals-11)
conj_or(components-9, minerals-11)
det(mode-14, a-13)
prep_in(containing-8, mode-14)
nsubj(renders-18, mode-14)
prep_of(mode-14, occurrence-16)
rcmod(mode-14, renders-18)
nsubj(valuable-20, it-19)
xcomp(renders-18, valuable-20)
prep_for(valuable-20, mining-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (DT an) (NNP Organism))
    (VP (VBZ is)
      (NP (DT an) (JJ individual) (NN living) (NN system))
      (PRN (-LRB- -LRB-)
        (PP (JJ such) (IN as)
          (NP
            (NP (NN animal))
            (, ,)
            (NP (NN plant) (, ,) (NN fungus) (, ,)
              (CC or)
              (NN micro-organism))))
        (-RRB- -RRB-)))
    (. .)))

prep_in(system-10, biology-2)
det(Organism-5, an-4)
nsubj(system-10, Organism-5)
cop(system-10, is-6)
det(system-10, an-7)
amod(system-10, individual-8)
nn(system-10, living-9)
root(ROOT-0, system-10)
prep_such_as(system-10, animal-14)
appos(animal-14, plant-16)
appos(animal-14, fungus-18)
conj_or(plant-16, fungus-18)
appos(animal-14, micro-organism-21)
conj_or(plant-16, micro-organism-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT an) (NNP Operand))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NNS inputs))
              (PRN (-LRB- -LRB-)
                (NP (NNS arguments))
                (-RRB- -RRB-)))
            (PP (IN of)
              (NP (DT an) (NN operator)))))))
    (. .)))

prep_in(one-7, mathematics-2)
det(Operand-5, an-4)
nsubj(one-7, Operand-5)
cop(one-7, is-6)
root(ROOT-0, one-7)
det(inputs-10, the-9)
prep_of(one-7, inputs-10)
appos(inputs-10, arguments-12)
det(operator-16, an-15)
prep_of(inputs-10, operator-16)

(ROOT
  (S
    (NP
      (NP (DT An) (NNP Oxymoron))
      (PRN (-LRB- -LRB-)
        (VP (VBN plural)
          (NP
            (NP (NNS oxymorons))
            (CC or)
            (PRN (, ,)
              (ADVP (RBR more))
              (ADVP (RB rarely))
              (, ,))
            (NP (NN oxymora))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN figure))
        (PP (IN of)
          (NP (NN speech)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ combines)
              (NP (CD two) (JJ normally) (JJ contradictory) (NNS terms)))))))
    (. .)))

det(Oxymoron-2, An-1)
nsubj(figure-15, Oxymoron-2)
dep(Oxymoron-2, plural-4)
dobj(plural-4, oxymorons-5)
dep(oxymorons-5, more-8)
dep(more-8, rarely-9)
dobj(plural-4, oxymora-11)
conj_or(oxymorons-5, oxymora-11)
cop(figure-15, is-13)
det(figure-15, a-14)
root(ROOT-0, figure-15)
nsubj(combines-19, figure-15)
prep_of(figure-15, speech-17)
rcmod(figure-15, combines-19)
num(terms-23, two-20)
amod(terms-23, normally-21)
amod(terms-23, contradictory-22)
dobj(combines-19, terms-23)

(ROOT
  (S
    (NP (DT The) (NNP Oromo))
    (VP (VBP are)
      (NP
        (NP (DT an) (JJ African) (JJ ethnic) (NN group))
        (VP (VBN found)
          (PP
            (PP (IN in)
              (NP (NNP Ethiopia)))
            (CC and)
            (PP (TO to)
              (NP
                (NP (DT a) (JJR lesser) (NN extent))
                (PP (IN in)
                  (NP (NNP Kenya)))))))))
    (. .)))

det(Oromo-2, The-1)
nsubj(group-7, Oromo-2)
cop(group-7, are-3)
det(group-7, an-4)
amod(group-7, African-5)
amod(group-7, ethnic-6)
root(ROOT-0, group-7)
partmod(group-7, found-8)
partmod(group-7, found-8')
conj_and(found-8, found-8')
prep_in(found-8, Ethiopia-10)
det(extent-15, a-13)
amod(extent-15, lesser-14)
prep_to(found-8', extent-15)
prep_in(extent-15, Kenya-17)

(ROOT
  (S
    (NP (DT An) (NNP Oncogene))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN protein) (VBG encoding) (NN gene))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (NNP ÃƒÂ) (NNS cents))
            (VP (VBP Ã)
              (SBAR
                (S
                  (NP (NNP ‚))
                  (VP (VBP â)
                    (NP
                      (NP ($ $)
                        (QP (NNS cents)))
                      (SBAR
                        (S
                          (NP (NNP Ã) (NNP ‚))
                          (VP (VBP â)
                            (NP
                              (NP ($ $) (CD °))
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (NNP deregulated) (NNP ÃƒÂ) (NNS cents) (NNP Ã) (NNP ‚))
                                  (VP (VBP â)
                                    (NP
                                      (NP ($ $)
                                        (QP (NNS cents)))
                                      (SBAR
                                        (S
                                          (NP (NNP Ã) (NNP ‚))
                                          (VP (VBP â)
                                            (NP
                                              (NP
                                                (QP ($ $) (CD °) (CD participates)))
                                              (PP (IN in)
                                                (NP
                                                  (NP (DT the) (NN onset)
                                                    (CC and)
                                                    (NN development))
                                                  (PP (IN of)
                                                    (NP (NN cancer))))))))))))))))))))))))))
    (. .)))

det(Oncogene-2, An-1)
nsubj(gene-7, Oncogene-2)
cop(gene-7, is-3)
det(gene-7, a-4)
nn(gene-7, protein-5)
amod(gene-7, encoding-6)
root(ROOT-0, gene-7)
dobj(â-14, gene-7)
rel(Ã-12, which-9)
nn(cents-11, ÃƒÂ-10)
nsubj(Ã-12, cents-11)
rcmod(gene-7, Ã-12)
nsubj(â-14, ‚-13)
ccomp(Ã-12, â-14)
dobj(â-14, $-15)
num($-15, cents-16)
nn(‚-18, Ã-17)
nsubj(â-19, ‚-18)
rcmod($-15, â-19)
dobj(â-19, $-20)
tmod(â-28, $-20)
num($-20, °-21)
advmod(â-28, when-22)
nn(‚-27, deregulated-23)
nn(‚-27, ÃƒÂ-24)
nn(‚-27, cents-25)
nn(‚-27, Ã-26)
nsubj(â-28, ‚-27)
dep($-20, â-28)
dobj(â-28, $-29)
num($-29, cents-30)
nn(‚-32, Ã-31)
nsubj(â-33, ‚-32)
rcmod($-29, â-33)
dobj(â-33, $-34)
number($-34, °-35)
number($-34, participates-36)
det(onset-39, the-38)
prep_in($-34, onset-39)
prep_in($-34, development-41)
conj_and(onset-39, development-41)
prep_of(onset-39, cancer-43)

(ROOT
  (S
    (NP (DT An) (NNP Orchestra))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP (JJ instrumental))
          (NN ensemble))
        (, ,)
        (ADJP (RB usually) (RB fairly) (JJ large)
          (PP (IN with)
            (NP
              (NP (NN string))
              (, ,)
              (NP (NN brass))
              (, ,)
              (NP (NN woodwind) (NNS sections))
              (, ,)
              (CC and)
              (NP (RB possibly) (DT a) (JJ percussion) (NN section))))
          (ADVP (RB as) (RB well)))))
    (. .)))

det(Orchestra-2, An-1)
nsubj(ensemble-6, Orchestra-2)
cop(ensemble-6, is-3)
det(ensemble-6, an-4)
amod(ensemble-6, instrumental-5)
root(ROOT-0, ensemble-6)
advmod(large-10, usually-8)
advmod(large-10, fairly-9)
amod(ensemble-6, large-10)
prep_with(large-10, string-12)
prep_with(large-10, brass-14)
conj_and(string-12, brass-14)
nn(sections-17, woodwind-16)
prep_with(large-10, sections-17)
conj_and(string-12, sections-17)
advmod(section-23, possibly-20)
det(section-23, a-21)
amod(section-23, percussion-22)
prep_with(large-10, section-23)
conj_and(string-12, section-23)
advmod(well-25, as-24)
mwe(well-25, as-24)
advmod(large-10, well-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Okapi))
      (PRN (-LRB- -LRB-)
        (NP (NNP Okapia) (NNP johnstoni))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mammal))
        (VP (VBG living)
          (PP (IN in)
            (NP
              (NP (DT the) (NNP Ituri) (NNP Rainforest))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN north))
                  (PP
                    (ADVP (JJ east))
                    (IN of)
                    (NP
                      (NP (DT the) (JJ Democratic) (NN Republic))
                      (PP (IN of)
                        (NP (DT the) (NNP Congo)))))))))
          (PP (IN in)
            (NP (JJ central) (NNP Africa))))))
    (. .)))

det(Okapi-2, The-1)
nsubj(mammal-9, Okapi-2)
nn(johnstoni-5, Okapia-4)
appos(Okapi-2, johnstoni-5)
cop(mammal-9, is-7)
det(mammal-9, a-8)
root(ROOT-0, mammal-9)
partmod(mammal-9, living-10)
det(Rainforest-14, the-12)
nn(Rainforest-14, Ituri-13)
prep_in(living-10, Rainforest-14)
det(north-17, the-16)
prep_in(Rainforest-14, north-17)
advmod(north-17, east-18)
det(Republic-22, the-20)
amod(Republic-22, Democratic-21)
prep_of(north-17, Republic-22)
det(Congo-25, the-24)
prep_of(Republic-22, Congo-25)
amod(Africa-28, central-27)
prep_in(living-10, Africa-28)

(ROOT
  (S
    (NP (DT An) (NNP Ovary))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ ovum-producing) (JJ reproductive) (NN organ))
        (VP (VBN found)
          (PP (IN in)
            (NP (JJ female) (NNS organisms))))))
    (. .)))

det(Ovary-2, An-1)
nsubj(organ-7, Ovary-2)
cop(organ-7, is-3)
det(organ-7, an-4)
amod(organ-7, ovum-producing-5)
amod(organ-7, reproductive-6)
root(ROOT-0, organ-7)
partmod(organ-7, found-8)
amod(organisms-11, female-10)
prep_in(found-8, organisms-11)

(ROOT
  (S
    (PP (IN In)
      (NP (NN medicine)))
    (, ,)
    (NP (DT the) (NN term) (NN Opiate))
    (VP (VBZ describes)
      (NP
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ narcotic) (NNS alkaloids))
              (VP (VBN found)
                (PP (IN in)
                  (NP (NN opium)))))))
        (, ,)
        (CONJP (RB as) (RB well) (IN as))
        (NP
          (NP (DT any) (NNS derivatives))
          (PP (IN of)
            (NP (JJ such) (NNS alkaloids))))))
    (. .)))

prep_in(describes-7, medicine-2)
det(Opiate-6, the-4)
nn(Opiate-6, term-5)
nsubj(describes-7, Opiate-6)
root(ROOT-0, describes-7)
dobj(describes-7, any-8)
det(alkaloids-12, the-10)
amod(alkaloids-12, narcotic-11)
prep_of(any-8, alkaloids-12)
partmod(alkaloids-12, found-13)
prep_in(found-13, opium-15)
det(derivatives-21, any-20)
dobj(describes-7, derivatives-21)
conj_and(any-8, derivatives-21)
amod(alkaloids-24, such-23)
prep_of(derivatives-21, alkaloids-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (JJ old) (NN age))
      (PP (IN of)
        (NP (DT the) (NN stone) ('' ''))
        (: ;)))
    (VP (VBD was)
      (VP (VBN coined)
        (PP (IN by)
          (NP
            (NP (NNP archaeologist) (NNP John) (NNP Lubbock))
            (PP (IN in)
              (NP (CD 1865)))))))
    (. .) (-RRB- -RRB-)))

amod(age-2, old-1)
nsubjpass(coined-9, age-2)
det(stone-5, the-4)
prep_of(age-2, stone-5)
auxpass(coined-9, was-8)
root(ROOT-0, coined-9)
nn(Lubbock-13, archaeologist-11)
nn(Lubbock-13, John-12)
agent(coined-9, Lubbock-13)
prep_in(Lubbock-13, 1865-15)

(ROOT
  (S
    (S
      (VP (VBZ is)
        (NP (DT a) (JJ prehistoric) (NN era))))
    (VP (VBD distinguished)
      (PP (IN by)
        (NP
          (NP (DT the) (NN development))
          (PP (IN of)
            (NP (DT the) (JJ first) (NN stone) (NNS tools))))))
    (. .)))

cop(era-4, is-1)
det(era-4, a-2)
amod(era-4, prehistoric-3)
csubj(distinguished-5, era-4)
root(ROOT-0, distinguished-5)
det(development-8, the-7)
prep_by(distinguished-5, development-8)
det(tools-13, the-10)
amod(tools-13, first-11)
nn(tools-13, stone-12)
prep_of(development-8, tools-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Physics))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN science))
        (PP (IN of)
          (NP
            (NP
              (NP (NN matter))
              (CC and)
              (NP (PRP$ its) (NN motion)))
            (, ,)
            (CONJP (RB as) (RB well) (IN as))
            (NP (NN space)
              (CC and)
              (NN time))))))
    (. .)))

nsubj(science-4, Physics-1)
cop(science-4, is-2)
det(science-4, the-3)
root(ROOT-0, science-4)
prep_of(science-4, matter-6)
poss(motion-9, its-8)
prep_of(science-4, motion-9)
conj_and(matter-6, motion-9)
prep_of(science-4, space-14)
conj_and(matter-6, space-14)
conj_and(matter-6, time-16)
conj_and(space-14, time-16)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN sociology)
        (CC and)
        (NN biology)))
    (NP (DT a) (NNP Population))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN collection))
        (PP (IN of)
          (NP
            (NP (JJ inter-breeding) (NNS organisms))
            (PP (IN of)
              (NP (DT a) (JJ particular) (NN species)))))))
    (. .)))

prep_in(collection-9, sociology-2)
conj_and(sociology-2, biology-4)
prep_in(collection-9, biology-4)
det(Population-6, a-5)
nsubj(collection-9, Population-6)
cop(collection-9, is-7)
det(collection-9, the-8)
root(ROOT-0, collection-9)
amod(organisms-12, inter-breeding-11)
prep_of(collection-9, organisms-12)
det(species-16, a-14)
amod(species-16, particular-15)
prep_of(organisms-12, species-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NN probability) (NN theory)))
    (, ,)
    (NP (DT an) (NN Event))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (NP
            (NP (NNS outcomes))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT a) (NN subset))
                (PP (IN of)
                  (NP (DT the) (NN sample) (NN space))))
              (-RRB- -RRB-))
            (SBAR
              (WHPP (TO to)
                (WHNP (WDT which)))
              (S
                (NP (DT a) (NN probability))
                (VP (VBZ is)
                  (VP (VBN assigned)))))))))
    (. .)))

nn(theory-3, probability-2)
prep_in(set-9, theory-3)
det(Event-6, an-5)
nsubj(set-9, Event-6)
cop(set-9, is-7)
det(set-9, a-8)
root(ROOT-0, set-9)
prep_of(set-9, outcomes-11)
det(subset-14, a-13)
dep(outcomes-11, subset-14)
det(space-18, the-16)
nn(space-18, sample-17)
prep_of(subset-14, space-18)
rel(assigned-25, which-21)
det(probability-23, a-22)
nsubjpass(assigned-25, probability-23)
auxpass(assigned-25, is-24)
rcmod(outcomes-11, assigned-25)

(ROOT
  (S
    (NP (DT A) (NN Play))
    (PRN (, ,)
      (CC or)
      (ADVP (RB stageplay))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP
            (NP (NN literature))
            (VP (VBN written)
              (PP (IN by)
                (NP (DT a) (NN playwright)))
              (, ,)
              (S
                (ADVP (RB almost) (RB always))
                (VP
                  (VP (VBG consisting)
                    (PP (IN of)
                      (NP
                        (NP (NN dialogue))
                        (PP (IN between)
                          (NP (JJ fictional) (NNS characters)))
                        (, ,)
                        (VP (VBN intended)
                          (PP (IN for)
                            (NP (JJ theatrical) (NN performance)))))))
                  (CONJP (RB rather) (IN than))
                  (VP (VBG reading)))))))))
    (. .)))

det(Play-2, A-1)
nsubj(form-9, Play-2)
dep(stageplay-5, or-4)
dep(form-9, stageplay-5)
cop(form-9, is-7)
det(form-9, a-8)
root(ROOT-0, form-9)
prep_of(form-9, literature-11)
partmod(literature-11, written-12)
det(playwright-15, a-14)
agent(written-12, playwright-15)
advmod(always-18, almost-17)
advmod(consisting-19, always-18)
ccomp(written-12, consisting-19)
prep_of(consisting-19, dialogue-21)
amod(characters-24, fictional-23)
prep_between(dialogue-21, characters-24)
partmod(dialogue-21, intended-26)
amod(performance-29, theatrical-28)
prep_for(intended-26, performance-29)
ccomp(written-12, reading-32)
conj_negcc(consisting-19, reading-32)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ human) (NN language)))
    (, ,)
    (NP (DT a) (NNP Phoneme))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS smallest) (JJ posited) (JJ structural) (NN unit))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ distinguishes)
              (S
                (VP (VBG meaning))))))))
    (. .)))

amod(language-3, human-2)
prep_in(unit-12, language-3)
det(Phoneme-6, a-5)
nsubj(unit-12, Phoneme-6)
cop(unit-12, is-7)
det(unit-12, the-8)
amod(unit-12, smallest-9)
amod(unit-12, posited-10)
amod(unit-12, structural-11)
root(ROOT-0, unit-12)
nsubj(distinguishes-14, unit-12)
rcmod(unit-12, distinguishes-14)
xcomp(distinguishes-14, meaning-15)

(ROOT
  (S
    (PP (IN Within)
      (NP (NNS phonetics)))
    (, ,)
    (NP (DT a) (NNP Phone))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN speech) (NN sound)
          (CC or)
          (NN gesture))
        (VP (VBN considered)
          (NP (DT a) (JJ physical) (NN event))
          (PP (IN without)
            (NP (NN regard)))
          (PP (TO to)
            (NP
              (NP (PRP$ its) (NN place))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN phonology))
                  (PP (IN of)
                    (NP (DT a) (NN language))))))))))
    (. .)))

prep_within(sound-9, phonetics-2)
det(Phone-5, a-4)
nsubj(sound-9, Phone-5)
cop(sound-9, is-6)
det(sound-9, a-7)
nn(sound-9, speech-8)
root(ROOT-0, sound-9)
conj_or(sound-9, gesture-11)
partmod(sound-9, considered-12)
det(event-15, a-13)
amod(event-15, physical-14)
dobj(considered-12, event-15)
prep_without(considered-12, regard-17)
poss(place-20, its-19)
prep_to(considered-12, place-20)
det(phonology-23, the-22)
prep_in(place-20, phonology-23)
det(language-26, a-25)
prep_of(phonology-23, language-26)

(ROOT
  (S
    (NP (DT A) (NNP Primate))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP
              (NP (DT any) (NN member))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ biological) (NN order) (NNS Primates))
                  (-LRB- -LRB-)
                  (NP (NNP Latin))
                  (: :)))
              ('' ''))
            (NP (JJ prime)))
          (, ,)
          (NP (JJ first) (NN rank) ('' ''))
          (-RRB- -RRB-))
        (, ,)
        (NP
          (NP (DT the) (NN group))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ contains)
                (S
                  (NP (PDT all) (DT the) (NNS species))
                  (ADJP (RB commonly) (VBN related)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NNP lemurs))
                        (, ,)
                        (NP (NNS monkeys))
                        (, ,)
                        (CC and)
                        (NP (NNS apes))))))))))
        (, ,))
      (PP (IN with)
        (NP
          (NP (DT the) (JJ last) (NN category))
          (PP (VBG including)
            (NP (NNS humans))))))
    (. .)))

det(Primate-2, A-1)
nsubj(member-5, Primate-2)
cop(member-5, is-3)
det(member-5, any-4)
root(ROOT-0, member-5)
det(Primates-10, the-7)
amod(Primates-10, biological-8)
nn(Primates-10, order-9)
prep_of(member-5, Primates-10)
dep(Primates-10, Latin-12)
dep(member-5, prime-15)
amod(rank-18, first-17)
appos(member-5, rank-18)
det(group-23, the-22)
appos(member-5, group-23)
nsubj(contains-25, group-23)
rcmod(group-23, contains-25)
predet(species-28, all-26)
det(species-28, the-27)
nsubj(related-30, species-28)
advmod(related-30, commonly-29)
xcomp(contains-25, related-30)
det(lemurs-33, the-32)
prep_to(related-30, lemurs-33)
prep_to(related-30, monkeys-35)
conj_and(lemurs-33, monkeys-35)
prep_to(related-30, apes-38)
conj_and(lemurs-33, apes-38)
det(category-43, the-41)
amod(category-43, last-42)
prep_with(member-5, category-43)
prep_including(category-43, humans-45)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Polymer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN molecule))
        (PRN (-LRB- -LRB-)
          (NP (NN macromolecule))
          (-RRB- -RRB-))
        (VP (VBN composed)
          (PP (IN of)
            (S
              (VP (VBG repeating)
                (NP
                  (NP (JJ structural) (NNS units))
                  (VP (VBN connected)
                    (PP (IN by)
                      (NP (JJ covalent) (NN chemical) (NNS bonds)))))))))))
    (. .)))

det(Polymer-2, A-1)
nsubj(molecule-6, Polymer-2)
cop(molecule-6, is-3)
det(molecule-6, a-4)
amod(molecule-6, large-5)
root(ROOT-0, molecule-6)
appos(molecule-6, macromolecule-8)
partmod(molecule-6, composed-10)
prepc_of(composed-10, repeating-12)
amod(units-14, structural-13)
dobj(repeating-12, units-14)
partmod(units-14, connected-15)
amod(bonds-19, covalent-17)
nn(bonds-19, chemical-18)
agent(connected-15, bonds-19)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ common) (NN law)))
    (NP
      (NP (JJ legal) (NNS systems))
      (, ,)
      (NP (DT a) (NN Precedent))
      (CC or)
      (NP (NN authority)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ legal) (NN case))
        (VP (VBG establishing)
          (NP (DT a) (NN principle)
            (CC or)
            (NN rule))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (NN court))
                (CC or)
                (NP (JJ other) (JJ judicial) (NN body)))
              (VP (VBZ adopts)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (VP (VBG deciding)
                      (NP (JJ subsequent) (NNS cases))
                      (PP (IN with)
                        (NP (JJ similar) (NNS issues)
                          (CC or)
                          (NNS facts))))))))))))
    (. .)))

amod(law-3, common-2)
prep_in(case-14, law-3)
amod(systems-5, legal-4)
nsubj(case-14, systems-5)
det(Precedent-8, a-7)
conj_or(systems-5, Precedent-8)
nsubj(case-14, Precedent-8)
conj_or(systems-5, authority-10)
nsubj(case-14, authority-10)
cop(case-14, is-11)
det(case-14, a-12)
amod(case-14, legal-13)
root(ROOT-0, case-14)
partmod(case-14, establishing-15)
det(principle-17, a-16)
dobj(establishing-15, principle-17)
dobj(establishing-15, rule-19)
conj_or(principle-17, rule-19)
complm(adopts-27, that-20)
det(court-22, a-21)
nsubj(adopts-27, court-22)
amod(body-26, other-24)
amod(body-26, judicial-25)
conj_or(court-22, body-26)
nsubj(adopts-27, body-26)
ccomp(establishing-15, adopts-27)
advmod(deciding-29, when-28)
advcl(adopts-27, deciding-29)
amod(cases-31, subsequent-30)
dobj(deciding-29, cases-31)
amod(issues-34, similar-33)
prep_with(deciding-29, issues-34)
prep_with(deciding-29, facts-36)
conj_or(issues-34, facts-36)

(ROOT
  (S
    (NP (DT The) (NNP Piano))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (VP (VBN played)
          (PP (IN by)
            (NP
              (NP (NNS means))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN keyboard))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ produces)
                        (ADJP (JJ sound)
                          (PP (IN by)
                            (S
                              (VP (VBG striking)
                                (NP (NN steel) (NNS strings))
                                (PP (IN with)
                                  (NP (JJ felt) (NNS hammers)))))))))))))))))
    (. .)))

det(Piano-2, The-1)
nsubj(instrument-6, Piano-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
partmod(instrument-6, played-7)
det(keyboard-12, a-11)
prep_by_means_of(played-7, keyboard-12)
nsubj(produces-14, keyboard-12)
rcmod(keyboard-12, produces-14)
acomp(produces-14, sound-15)
prepc_by(sound-15, striking-17)
nn(strings-19, steel-18)
dobj(striking-17, strings-19)
amod(hammers-22, felt-21)
prep_with(striking-17, hammers-22)

(ROOT
  (S
    (NP (DT A) (NNP Printer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN company))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ provides)
              (NP (JJ commercial) (NN printing) (NNS services))))))
      (, ,)
      (ADVP (RB often))
      (S
        (ADVP (RB also))
        (VP (VBG offering)
          (NP (JJ typesetting)
            (CC and)
            (JJ book-binding) (NNS services)))))
    (. .)))

det(Printer-2, A-1)
nsubj(company-5, Printer-2)
cop(company-5, is-3)
det(company-5, a-4)
root(ROOT-0, company-5)
nsubj(provides-7, company-5)
rcmod(company-5, provides-7)
amod(services-10, commercial-8)
nn(services-10, printing-9)
dobj(provides-7, services-10)
advmod(company-5, often-12)
advmod(offering-14, also-13)
xcomp(company-5, offering-14)
amod(services-18, typesetting-15)
conj_and(typesetting-15, book-binding-17)
amod(services-18, book-binding-17)
dobj(offering-14, services-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Plotter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vector) (NNS graphics) (NN printing) (NN device))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ connects)
              (PP (TO to)
                (NP (DT a) (NN computer))))))))
    (. .)))

det(Plotter-2, A-1)
nsubj(device-8, Plotter-2)
cop(device-8, is-3)
det(device-8, a-4)
nn(device-8, vector-5)
nn(device-8, graphics-6)
nn(device-8, printing-7)
root(ROOT-0, device-8)
nsubj(connects-10, device-8)
rcmod(device-8, connects-10)
det(computer-13, a-12)
prep_to(connects-10, computer-13)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Bug))
      (PP (IN in)
        (NP (NN poker))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ limited) (NN form))
        (PP (IN of)
          (NP (JJ wild) (NN card)))))
    (. .)))

det(Bug-2, A-1)
nsubj(form-8, Bug-2)
prep_in(Bug-2, poker-4)
cop(form-8, is-5)
det(form-8, a-6)
amod(form-8, limited-7)
root(ROOT-0, form-8)
amod(card-11, wild-10)
prep_of(form-8, card-11)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Check-raise))
      (PP (IN in)
        (NP (NN poker))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ common) (JJ deceptive) (NN play))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT a) (NN player))
            (VP (VBZ checks)
              (ADJP (JJ early)
                (PP (IN in)
                  (NP (DT a) (VBG betting) (NN round))))
              (, ,)
              (S
                (VP (VBG hoping)
                  (SBAR
                    (S
                      (NP (NN someone) (RB else))
                      (VP (MD will)
                        (VP (VB open))))))))))))
    (. .)))

det(Check-raise-2, A-1)
nsubj(play-9, Check-raise-2)
prep_in(Check-raise-2, poker-4)
cop(play-9, is-5)
det(play-9, a-6)
amod(play-9, common-7)
amod(play-9, deceptive-8)
root(ROOT-0, play-9)
rel(checks-14, which-11)
det(player-13, a-12)
nsubj(checks-14, player-13)
rcmod(play-9, checks-14)
acomp(checks-14, early-15)
det(round-19, a-17)
amod(round-19, betting-18)
prep_in(early-15, round-19)
xcomp(checks-14, hoping-21)
nsubj(open-25, someone-22)
advmod(someone-22, else-23)
aux(open-25, will-24)
ccomp(hoping-21, open-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN poker)))
    (, ,)
    (NP (NNP Protection))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN bet))
        (VP (VBN made)
          (PP (IN with)
            (NP
              (NP (DT a)
                (ADJP (JJ strong)
                  (CC but)
                  (JJ vulnerable))
                (NN hand))
              (, ,)
              (PP (JJ such) (IN as)
                (NP
                  (NP (JJ top) (NN pair))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP
                        (ADJP (JJ straight)
                          (CC or)
                          (JJ flush))
                        (NNS draws))
                      (VP (VBP are)
                        (ADJP (JJ possible))))))))))))
    (. .)))

prep_in(bet-7, poker-2)
nsubj(bet-7, Protection-4)
cop(bet-7, is-5)
det(bet-7, a-6)
root(ROOT-0, bet-7)
partmod(bet-7, made-8)
det(hand-14, a-10)
amod(hand-14, strong-11)
conj_but(strong-11, vulnerable-13)
amod(hand-14, vulnerable-13)
prep_with(made-8, hand-14)
amod(pair-19, top-18)
prep_such_as(hand-14, pair-19)
advmod(possible-26, when-20)
amod(draws-24, straight-21)
conj_or(straight-21, flush-23)
amod(draws-24, flush-23)
nsubj(possible-26, draws-24)
cop(possible-26, are-25)
dep(pair-19, possible-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN poker)))
    (, ,)
    (NP (DT an) (NNP Isolation) (NN play))
    (VP (VBZ is)
      (ADVP (RB usually))
      (NP
        (NP (DT a) (NN raise))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB encourage)
                (NP
                  (QP (CD one)
                    (CC or)
                    (JJR more))
                  (NNS players))
                (S
                  (VP (TO to)
                    (VP (VB fold) (, ,)
                      (ADVP (RB specifically))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN purpose))
                          (PP (IN of)
                            (S
                              (VP (VBG making)
                                (S
                                  (NP (DT the) (NN hand))
                                  (NP
                                    (NP (DT a) (JJ one-on-one) (NN contest))
                                    (PP (IN with)
                                      (NP (DT a) (JJ specific) (NN opponent)))))))))))))))))))
    (. .)))

prep_in(raise-10, poker-2)
det(play-6, an-4)
nn(play-6, Isolation-5)
nsubj(raise-10, play-6)
cop(raise-10, is-7)
advmod(raise-10, usually-8)
det(raise-10, a-9)
root(ROOT-0, raise-10)
xsubj(encourage-13, raise-10)
partmod(raise-10, designed-11)
aux(encourage-13, to-12)
xcomp(designed-11, encourage-13)
num(players-17, one-14)
conj_or(one-14, more-16)
quantmod(one-14, more-16)
num(players-17, more-16)
dobj(encourage-13, players-17)
aux(fold-19, to-18)
xcomp(encourage-13, fold-19)
advmod(fold-19, specifically-21)
det(purpose-24, the-23)
prep_for(fold-19, purpose-24)
prepc_of(purpose-24, making-26)
det(hand-28, the-27)
nsubj(contest-31, hand-28)
det(contest-31, a-29)
amod(contest-31, one-on-one-30)
xcomp(making-26, contest-31)
det(opponent-35, a-33)
amod(opponent-35, specific-34)
prep_with(contest-31, opponent-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (NP
    (NP (NNP Petroleum) (-LRB- -LRB-) (NNP L.))
    (NP (NNP Petroleum) (-LRB- -LRB-) (NNP Gr))
    (. .)))

nn(L.-3, Petroleum-1)
root(ROOT-0, L.-3)
nn(Gr-6, Petroleum-4)
dep(L.-3, Gr-6)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (`` rock) (NN oil) ('' ''))
    (VP (VBD was)
      (ADVP (RB first))
      (VP (VBN used)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ treatise) (NNP De) (NN re) (NN metallica))
            (VP (VBN published)
              (PP (IN in)
                (NP (CD 1556)))
              (PP (IN by)
                (NP
                  (NP (DT the)
                    (ADJP (NNP German) (JJ mineralogist))
                    (NNP Georg) (NNP Bauer))
                  (, ,)
                  (VP (VBN known)
                    (PP (IN as)
                      (NP (NNP Georgius) (NNP Agricola)))))))))))
    (. .) (-RRB- -RRB-)))

punct(oil-2, rock-1)
nsubjpass(used-6, oil-2)
auxpass(used-6, was-4)
advmod(used-6, first-5)
root(ROOT-0, used-6)
det(metallica-12, the-8)
amod(metallica-12, treatise-9)
nn(metallica-12, De-10)
nn(metallica-12, re-11)
prep_in(used-6, metallica-12)
partmod(metallica-12, published-13)
prep_in(published-13, 1556-15)
det(Bauer-21, the-17)
amod(mineralogist-19, German-18)
amod(Bauer-21, mineralogist-19)
nn(Bauer-21, Georg-20)
agent(published-13, Bauer-21)
partmod(Bauer-21, known-23)
nn(Agricola-26, Georgius-25)
prep_as(known-23, Agricola-26)

(ROOT
  (S
    (S
      (VP (VBZ is)
        (ADJP (DT a)
          (ADJP (RB naturally) (JJ occurring))
          (, ,)
          (ADJP (JJ flammable) (JJ liquid)))))
    (VP (VBD found)
      (PP (IN in)
        (NP (NN rock) (NNS formations)))
      (PP (IN in)
        (NP
          (NP (DT the) (NN Earth))
          (VP (VBG consisting)
            (PP (IN of)
              (NP
                (NP (DT a) (JJ complex) (NN mixture))
                (PP (IN of)
                  (NP
                    (NP (NNS hydrocarbons))
                    (PP (IN of)
                      (NP
                        (NP (JJ various) (JJ molecular) (NNS weights))
                        (, ,) (IN plus)
                        (NP (JJ other) (JJ organic) (NNS compounds))))))))))))
    (. .)))

cop(occurring-4, is-1)
dep(occurring-4, a-2)
advmod(occurring-4, naturally-3)
csubj(found-8, occurring-4)
amod(liquid-7, flammable-6)
dep(occurring-4, liquid-7)
root(ROOT-0, found-8)
nn(formations-11, rock-10)
prep_in(found-8, formations-11)
det(Earth-14, the-13)
prep_in(found-8, Earth-14)
partmod(Earth-14, consisting-15)
det(mixture-19, a-17)
amod(mixture-19, complex-18)
prep_of(consisting-15, mixture-19)
prep_of(mixture-19, hydrocarbons-21)
amod(weights-25, various-23)
amod(weights-25, molecular-24)
prep_of(hydrocarbons-21, weights-25)
amod(weights-25, plus-27)
amod(compounds-30, other-28)
amod(compounds-30, organic-29)
dep(weights-25, compounds-30)

(ROOT
  (S
    (NP (NNP Ploidy))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN number))
        (PP (IN of)
          (NP
            (NP (RB homologous) (NNS sets))
            (PP (IN of)
              (NP
                (NP (NNS chromosomes))
                (PP (IN in)
                  (NP (DT a) (JJ biological) (NN cell)))))))))
    (. .)))

nsubj(number-4, Ploidy-1)
cop(number-4, is-2)
det(number-4, the-3)
root(ROOT-0, number-4)
advmod(sets-7, homologous-6)
prep_of(number-4, sets-7)
prep_of(sets-7, chromosomes-9)
det(cell-13, a-11)
amod(cell-13, biological-12)
prep_in(chromosomes-9, cell-13)

(ROOT
  (S
    (NP (DT The) (NNP Pennsylvanian))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN subperiod))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP Carboniferous) (NN period))
              (VP (VBG lasting)
                (PP (IN from)
                  (NP
                    (NP (RB roughly) (NN period) (NN startperiod) (NN start) (NN error))
                    (CC &)
                    (NP (NN amp))
                    (: ;)))))))
        (: ;)
        (NP
          (NP (NN nbsp))
          (: ;)
          (PP (TO to)
            (NP
              (NP (NN period) (NN endperiod) (NN end) (NN error))
              (CC &)
              (NP (NN amp))
              (: ;)))
          (: ;)
          (NP
            (NP (NN nbsp))
            (: ;)
            (NP
              (NP (NNP Ma))
              (PRN (-LRB- -LRB-)
                (ADVP
                  (NP (CD million) (NNS years))
                  (RB ago))
                (-RRB- -RRB-)))))))
    (. .)))

det(Pennsylvanian-2, The-1)
nsubj(subperiod-5, Pennsylvanian-2)
cop(subperiod-5, is-3)
det(subperiod-5, a-4)
root(ROOT-0, subperiod-5)
det(period-9, the-7)
nn(period-9, Carboniferous-8)
prep_of(subperiod-5, period-9)
partmod(period-9, lasting-10)
advmod(error-16, roughly-12)
nn(error-16, period-13)
nn(error-16, startperiod-14)
nn(error-16, start-15)
prep_from(lasting-10, error-16)
prep_from(lasting-10, amp-18)
conj_and(error-16, amp-18)
dep(subperiod-5, nbsp-21)
nn(error-27, period-24)
nn(error-27, endperiod-25)
nn(error-27, end-26)
prep_to(nbsp-21, error-27)
prep_to(nbsp-21, amp-29)
conj_and(error-27, amp-29)
dep(nbsp-21, nbsp-32)
dep(nbsp-32, Ma-34)
num(years-37, million-36)
npadvmod(ago-38, years-37)
dep(Ma-34, ago-38)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT a) (NNP Preview))
    (VP (MD may)
      (VP (VB be)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (NN output))
              (PP (IN of)
                (NP (DT a) (JJ particular) (NN document) (, ,) (NN page) (, ,) (NN film) (, ,) (FW etc.))))))))
    (. .)))

prep_in(be-7, computing-2)
det(Preview-5, a-4)
nsubj(be-7, Preview-5)
aux(be-7, may-6)
root(ROOT-0, be-7)
advmod(output-9, where-8)
advcl(be-7, output-9)
det(film-17, a-11)
amod(film-17, particular-12)
nn(film-17, document-13)
dep(film-17, page-15)
prep_of(output-9, film-17)
dep(film-17, etc.-19)

(ROOT
  (S
    (NP (DT The)
      (NX (NNP Permian)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ geologic) (NN period)
            (CC and)
            (NN system))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ extends)
                (PP (IN from)
                  (NP (NNP 299.0) (NNP Ãƒâ) (NNP ‰)
                    (CC &)
                    (NNP nbsp)))))))
        (: ;)
        (NP
          (NP (NNP Ã) (NNP ‚) (NNP Â) (NNP ±) (NNP 0.8) (NNP Ma))
          (PP (TO to)
            (NP (NNP 251.0) (NNP Ãƒâ) (NNP ‰)
              (CC &)
              (NNP nbsp))))
        (: ;)
        (NP
          (NP (NNP Ã) (NNP ‚) (NNP Â) (NNP ±) (CD 0.4) (NNP Ma))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (CD million) (NNS years))
              (PP (IN before)
                (NP (DT the) (NN present))))
            (-RRB- -RRB-)))
        (NP (NNP ICS) (CD 2004))))
    (. .)))

det(Permian-2, The-1)
nsubj(period-6, Permian-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
nsubj(extends-10, period-6)
conj_and(period-6, system-8)
nsubj(extends-10, system-8)
rcmod(period-6, extends-10)
nn(‰-14, 299.0-12)
nn(‰-14, Ãƒâ-13)
prep_from(extends-10, ‰-14)
prep_from(extends-10, nbsp-16)
conj_and(‰-14, nbsp-16)
nn(Ma-23, Ã-18)
nn(Ma-23, ‚-19)
nn(Ma-23, Â-20)
nn(Ma-23, ±-21)
nn(Ma-23, 0.8-22)
dep(period-6, Ma-23)
nn(‰-27, 251.0-25)
nn(‰-27, Ãƒâ-26)
prep_to(Ma-23, ‰-27)
prep_to(Ma-23, nbsp-29)
conj_and(‰-27, nbsp-29)
nn(Ma-36, Ã-31)
nn(Ma-36, ‚-32)
nn(Ma-36, Â-33)
nn(Ma-36, ±-34)
num(Ma-36, 0.4-35)
dep(period-6, Ma-36)
num(years-39, million-38)
dep(Ma-36, years-39)
det(present-42, the-41)
prep_before(years-39, present-42)
dep(period-6, ICS-44)
num(ICS-44, 2004-45)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (JJ Paleozoic)
        (CC or)
        (JJ Palaeozoic) (NN Era))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (S
            (NP
              (NP
                (NP
                  (NP (DT the) (JJ Greek) (NN palaio) (, ,) ('' ''))
                  (ADJP (JJ old)))
                ('' '')
                (CC and)
                (NP (NN zoe)))
              (, ,) ('' '')
              (NP (NN life) ('' ''))
              (, ,))
            (VP (VBG meaning) ('' '')
              (NP (JJ ancient) (NN life))
              ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS earliest))
        (PP (IN of)
          (NP
            (NP (CD three) (JJ geologic) (NNS eras))
            (PP (IN of)
              (NP (DT the) (JJ Phanerozoic) (NN eon)))))))
    (. .)))

det(Era-5, The-1)
amod(Era-5, Paleozoic-2)
conj_or(Paleozoic-2, Palaeozoic-4)
amod(Era-5, Palaeozoic-4)
nsubj(earliest-30, Era-5)
dep(Era-5, from-7)
det(palaio-10, the-8)
amod(palaio-10, Greek-9)
nsubj(meaning-22, palaio-10)
amod(palaio-10, old-13)
conj_and(palaio-10, zoe-16)
nsubj(meaning-22, zoe-16)
dep(palaio-10, life-19)
pcomp(from-7, meaning-22)
amod(life-25, ancient-24)
dobj(meaning-22, life-25)
cop(earliest-30, is-28)
det(earliest-30, the-29)
root(ROOT-0, earliest-30)
num(eras-34, three-32)
amod(eras-34, geologic-33)
prep_of(earliest-30, eras-34)
det(eon-38, the-36)
amod(eon-38, Phanerozoic-37)
prep_of(eras-34, eon-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNS Paralysis))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ complete) (NN loss))
        (PP (IN of)
          (NP
            (NP (NN muscle) (NN function))
            (PP (IN for)
              (NP
                (QP (CD one)
                  (CC or)
                  (JJR more))
                (NN muscle) (NNS groups)))))))
    (. .)))

nsubj(loss-5, Paralysis-1)
cop(loss-5, is-2)
det(loss-5, the-3)
amod(loss-5, complete-4)
root(ROOT-0, loss-5)
nn(function-8, muscle-7)
prep_of(loss-5, function-8)
num(groups-14, one-10)
conj_or(one-10, more-12)
quantmod(one-10, more-12)
num(groups-14, more-12)
nn(groups-14, muscle-13)
prep_for(function-8, groups-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geography)))
    (, ,)
    (NP (DT a) (NNP Plain))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN area))
        (PP (IN of)
          (NP
            (NP (NN land))
            (PP (IN with)
              (NP
                (NP
                  (ADJP (RB relatively) (JJ low))
                  (NN relief) (NN ÃƒÂ) (NNS cents))
                (SBAR
                  (S
                    (NP (NNP Ã) (NNP ‚))
                    (VP (VBP â)
                      (NP
                        (NP ($ $)
                          (QP (NNS cents)))
                        (SBAR
                          (S
                            (NP (NNP Ã) (NNP ‚))
                            (VP (VBP â)
                              (NP
                                (NP ($ $) (CD °))
                                (VP (VBG meaning)
                                  (SBAR (IN that)
                                    (S
                                      (NP (PRP it))
                                      (VP (VBZ is)
                                        (ADJP (JJ flat))))))))))))))))))))
    (. .)))

prep_in(area-8, geography-2)
det(Plain-5, a-4)
nsubj(area-8, Plain-5)
cop(area-8, is-6)
det(area-8, an-7)
root(ROOT-0, area-8)
prep_of(area-8, land-10)
advmod(low-13, relatively-12)
amod(cents-16, low-13)
nn(cents-16, relief-14)
nn(cents-16, ÃƒÂ-15)
prep_with(land-10, cents-16)
nn(‚-18, Ã-17)
nsubj(â-19, ‚-18)
rcmod(cents-16, â-19)
dobj(â-19, $-20)
num($-20, cents-21)
nn(‚-23, Ã-22)
nsubj(â-24, ‚-23)
rcmod($-20, â-24)
dobj(â-24, $-25)
num($-25, °-26)
partmod($-25, meaning-27)
complm(flat-31, that-28)
nsubj(flat-31, it-29)
cop(flat-31, is-30)
ccomp(meaning-27, flat-31)

(ROOT
  (S
    (NP (DT A) (NNP Physicist))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN scientist))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ studies)
              (CC or)
              (VBZ practices)
              (NP (NNS physics)))))))
    (. .)))

det(Physicist-2, A-1)
nsubj(scientist-5, Physicist-2)
cop(scientist-5, is-3)
det(scientist-5, a-4)
root(ROOT-0, scientist-5)
nsubj(studies-7, scientist-5)
nsubj(practices-9, scientist-5)
rcmod(scientist-5, studies-7)
rcmod(scientist-5, practices-9)
conj_or(studies-7, practices-9)
dobj(studies-7, physics-10)

(ROOT
  (S
    (NP (DT A) (NN Passport))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN document))
        (, ,)
        (VP (VBN issued)
          (PP (IN by)
            (NP (DT a) (JJ national) (NN government))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ certifies) (, ,)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN purpose))
                  (PP (IN of)
                    (NP (JJ international) (NN travel)))))
              (, ,)
              (NP
                (NP (DT the) (NN identity)
                  (CC and)
                  (NN nationality))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN holder))
                    (PP (IN of)
                      (NP (DT the) (NN passport)))))))))))
    (. .)))

det(Passport-2, A-1)
nsubj(document-5, Passport-2)
cop(document-5, is-3)
det(document-5, a-4)
root(ROOT-0, document-5)
partmod(document-5, issued-7)
det(government-11, a-9)
amod(government-11, national-10)
agent(issued-7, government-11)
nsubj(certifies-14, which-13)
rcmod(document-5, certifies-14)
det(purpose-18, the-17)
prep_for(certifies-14, purpose-18)
amod(travel-21, international-20)
prep_of(purpose-18, travel-21)
det(identity-24, the-23)
dobj(certifies-14, identity-24)
dobj(certifies-14, nationality-26)
conj_and(identity-24, nationality-26)
det(holder-29, the-28)
prep_of(identity-24, holder-29)
det(passport-32, the-31)
prep_of(holder-29, passport-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Pleistocene))
      (PRN (-LRB- -LRB-) (`` `)
        (NP (NNP plaÃƒâ) (NNP ‰))
        (NP
          (NP (NNP ˆÃ) (NNP ‚) (NNP ÂªstÃƒâ) (NNP ‰) (NNP ˆÃ) (NNP ‚) (NNP Ë) (NNP ™) (NNP si))
          (: :)
          (NP (NN n)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN epoch))
        (PP (IN from)
          (NP
            (NP
              (QP (CD 1.8) (CD million)))
            (PP (TO to)
              (NP
                (NP (CD 10,000) (NNS years))
                (VP (VBN BP)
                  (S
                    (VP (VBG covering)
                      (NP
                        (NP
                          (NP (DT the) (NN world) (POS 's))
                          (JJ recent) (NN period))
                        (PP (IN of)
                          (NP (VBN repeated) (NNS glaciations)))))))))))))
    (. .)))

det(Pleistocene-2, The-1)
nsubj(epoch-21, Pleistocene-2)
nn(‰-6, plaÃƒâ-5)
dep(Pleistocene-2, ‰-6)
nn(si-15, ˆÃ-7)
nn(si-15, ‚-8)
nn(si-15, ÂªstÃƒâ-9)
nn(si-15, ‰-10)
nn(si-15, ˆÃ-11)
nn(si-15, ‚-12)
nn(si-15, Ë-13)
nn(si-15, ™-14)
dep(‰-6, si-15)
dep(si-15, n-17)
cop(epoch-21, is-19)
det(epoch-21, the-20)
root(ROOT-0, epoch-21)
number(million-24, 1.8-23)
prep_from(epoch-21, million-24)
num(years-27, 10,000-26)
prep_to(million-24, years-27)
partmod(years-27, BP-28)
xcomp(BP-28, covering-29)
det(world-31, the-30)
poss(period-34, world-31)
amod(period-34, recent-33)
dobj(covering-29, period-34)
amod(glaciations-37, repeated-36)
prep_of(period-34, glaciations-37)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ Physician) (, ,) (JJ medical) (NN practitioner))
      (CC or)
      (NP (JJ medical) (NN doctor)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ practices)
                (NP (NN medicine)))
              (CC and)
              (VP (VBZ is)
                (ADJP (VBN concerned)
                  (PP (IN with)
                    (S
                      (VP (VBG maintaining)
                        (CC or)
                        (VBG restoring)
                        (NP (JJ human) (NN health))
                        (PP (IN through)
                          (NP
                            (NP (DT the) (NN study) (, ,) (NN diagnosis) (, ,)
                              (CC and)
                              (NN treatment))
                            (PP (IN of)
                              (NP (NN disease)
                                (CC and)
                                (NN injury)))))))))))))))
    (. .)))

det(practitioner-5, A-1)
amod(practitioner-5, Physician-2)
amod(practitioner-5, medical-4)
nsubj(person-11, practitioner-5)
amod(doctor-8, medical-7)
conj_or(practitioner-5, doctor-8)
nsubj(person-11, doctor-8)
cop(person-11, is-9)
det(person-11, a-10)
root(ROOT-0, person-11)
nsubj(practices-13, person-11)
nsubjpass(concerned-17, person-11)
rcmod(person-11, practices-13)
dobj(practices-13, medicine-14)
auxpass(concerned-17, is-16)
rcmod(person-11, concerned-17)
conj_and(practices-13, concerned-17)
prepc_with(concerned-17, maintaining-19)
prepc_with(concerned-17, restoring-21)
conj_or(maintaining-19, restoring-21)
amod(health-23, human-22)
dobj(maintaining-19, health-23)
det(study-26, the-25)
prep_through(maintaining-19, study-26)
prep_through(maintaining-19, diagnosis-28)
conj_and(study-26, diagnosis-28)
prep_through(maintaining-19, treatment-31)
conj_and(study-26, treatment-31)
prep_of(study-26, disease-33)
prep_of(study-26, injury-35)
conj_and(disease-33, injury-35)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Pound))
      (CC or)
      (NP (NNS pound-mass)))
    (PRN (-LRB- -LRB-)
      (S
        (NP
          (NP (NN abbreviation))
          (: :)
          (NP
            (NP (NN lb))
            (, ,)
            (CC or)
            (ADVP (RB sometimes))
            (PP (IN in)
              (NP (DT the) (NNP United) (NNPS States))))
          (: :))
        (VP (VBZ #)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN mass))
            (VP (VBN used)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ imperial))
                  (, ,)
                  (NP
                    (NP (NNP United) (NNPS States)
                      (ADJP (JJ customary)
                        (CC and)
                        (JJ other))
                      (NNS systems))
                    (PP (IN of)
                      (NP (NN measurement)))))))))))
    (. .)))

det(Pound-2, The-1)
nsubj(unit-21, Pound-2)
conj_or(Pound-2, pound-mass-4)
nsubj(unit-21, pound-mass-4)
nsubj(#-17, abbreviation-6)
dep(abbreviation-6, lb-8)
dep(abbreviation-6, sometimes-11)
conj_or(lb-8, sometimes-11)
det(States-15, the-13)
nn(States-15, United-14)
prep_in(sometimes-11, States-15)
parataxis(unit-21, #-17)
cop(unit-21, is-19)
det(unit-21, a-20)
root(ROOT-0, unit-21)
prep_of(unit-21, mass-23)
partmod(mass-23, used-24)
det(imperial-27, the-26)
prep_in(used-24, imperial-27)
nn(systems-34, United-29)
nn(systems-34, States-30)
amod(systems-34, customary-31)
conj_and(customary-31, other-33)
amod(systems-34, other-33)
appos(imperial-27, systems-34)
prep_of(systems-34, measurement-36)

(ROOT
  (S
    (NP
      (NP (NNS Phosphorus))
      (, ,)
      (NP
        (NP (-LRB- -LRB-) (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
        (PRN (: ‚)
          (FRAG
            (FRAG
              (ADJP (JJ âˆšfÃƒâ))
              (: ‰))
            (: ˆÃ)
            (FRAG
              (FRAG
                (X (SYM ‚))
                (PP (IN â)
                  (NP ($ $) (CD šsfÃƒâ))))
              (: ‰)
              (FRAG
                (FRAG
                  (X (SYM ˆÃ))
                  (: ‚)
                  (NP (NNP Ë)))
                (: ™)
                (FRAG
                  (FRAG (RB rÃƒâ))
                  (: ‰)
                  (FRAG
                    (FRAG
                      (X (SYM ˆÃ))
                      (: ‚)
                      (NP (NNP Ë)))
                    (: ™)
                    (FRAG (RB s))))))))
        (-RRB- -RRB-))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ chemical) (NN element))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (NP
                (NP (DT the) (NN symbol) (NN P))
                (CC and)
                (NP (JJ atomic) (NN number) (CD 15))))))))
    (. .)))

nsubj(element-33, Phosphorus-1)
nn(Ã-7, Ãƒâ-4)
nn(Ã-7, $-5)
appos(Phosphorus-1, Ã-7)
punct(âˆšfÃƒâ-9, ‚-8)
dep(Ã-7, âˆšfÃƒâ-9)
punct(âˆšfÃƒâ-9, ‰-10)
punct(âˆšfÃƒâ-9, ˆÃ-11)
dep(âˆšfÃƒâ-9, ‚-12)
dep(‚-12, â-13)
pobj(â-13, $-14)
num($-14, šsfÃƒâ-15)
punct(‚-12, ‰-16)
dep(Ë-19, ˆÃ-17)
punct(Ë-19, ‚-18)
dep(‚-12, Ë-19)
punct(Ë-19, ™-20)
dep(Ë-19, rÃƒâ-21)
punct(rÃƒâ-21, ‰-22)
dep(Ë-25, ˆÃ-23)
punct(Ë-25, ‚-24)
dep(rÃƒâ-21, Ë-25)
punct(Ë-25, ™-26)
dep(Ë-25, s-27)
cop(element-33, is-30)
det(element-33, the-31)
amod(element-33, chemical-32)
root(ROOT-0, element-33)
nsubj(has-35, element-33)
rcmod(element-33, has-35)
det(P-38, the-36)
nn(P-38, symbol-37)
dobj(has-35, P-38)
amod(number-41, atomic-40)
dobj(has-35, number-41)
conj_and(P-38, number-41)
num(number-41, 15-42)

(ROOT
  (S
    (NP (DT The) (NNP Pythonidae))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP
            (NP (JJ non-venomous) (NNS snakes))
            (VP (VBN found)
              (PP (IN in)
                (NP (NNP Africa) (, ,) (NNP Asia)
                  (CC and)
                  (NNP Australia))))))))
    (. .)))

det(Pythonidae-2, The-1)
nsubj(family-5, Pythonidae-2)
cop(family-5, are-3)
det(family-5, a-4)
root(ROOT-0, family-5)
amod(snakes-8, non-venomous-7)
prep_of(family-5, snakes-8)
partmod(snakes-8, found-9)
prep_in(found-9, Africa-11)
prep_in(found-9, Asia-13)
conj_and(Africa-11, Asia-13)
prep_in(found-9, Australia-15)
conj_and(Africa-11, Australia-15)

(ROOT
  (S
    (NP (DT A) (NNP Palimpsest))
    (VP (VBZ is)
      (NP (DT a) (NN manuscript) (NN page))
      (, ,)
      (SBAR (IN whether)
        (S
          (PP (IN from)
            (NP (NN scroll)
              (CC or)
              (NN book)))
          (NP (DT that))
          (VP (VBZ has)
            (VP (VBN been)
              (VP
                (VP (VBN written)
                  (PRT (RP on)))
                (, ,)
                (VP (VBN scraped)
                  (S
                    (VP (VBG <PRT>)
                      (PRT (RP off))
                      (NP (NNS </PRT>)))))
                (, ,)
                (CC and)
                (VP (VBN used)
                  (ADVP (RB again)))))))))
    (. .)))

det(Palimpsest-2, A-1)
nsubj(page-6, Palimpsest-2)
cop(page-6, is-3)
det(page-6, a-4)
nn(page-6, manuscript-5)
root(ROOT-0, page-6)
complm(written-16, whether-8)
prep_from(written-16, scroll-10)
conj_or(scroll-10, book-12)
prep_from(written-16, book-12)
nsubjpass(written-16, that-13)
nsubjpass(scraped-19, that-13)
nsubjpass(used-25, that-13)
aux(written-16, has-14)
auxpass(written-16, been-15)
ccomp(page-6, written-16)
prt(written-16, on-17)
ccomp(page-6, scraped-19)
conj_and(written-16, scraped-19)
xcomp(scraped-19, <PRT>-20)
prt(<PRT>-20, off-21)
dobj(<PRT>-20, </PRT>-22)
ccomp(page-6, used-25)
conj_and(written-16, used-25)
advmod(used-25, again-26)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Parsec))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (NP (JJ '') (NN parallax))
            (PP (IN of)
              (NP (CD one) (NN arcsecond)))
            ('' ''))
          (, ,)
          (NP (NN symbol) (NN pc)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN length)))
        (, ,)
        (VP (JJ equal)
          (PP (TO to)
            (NP
              (QP (RB just) (IN over) (CD 30) (CD trillion))
              (NNS kilometres))))
        (, ,)
        (CC or)
        (NP
          (QP (RB about) (CD 3.3))
          (JJ light) (NNS years))))
    (. .)))

det(Parsec-2, The-1)
nsubj(unit-16, Parsec-2)
nsubj(equal-20, Parsec-2)
dep(Parsec-2, parallax-5)
num(arcsecond-8, one-7)
prep_of(parallax-5, arcsecond-8)
nn(pc-12, symbol-11)
appos(parallax-5, pc-12)
cop(unit-16, is-14)
det(unit-16, a-15)
root(ROOT-0, unit-16)
prep_of(unit-16, length-18)
conj_or(unit-16, equal-20)
advmod(over-23, just-22)
quantmod(trillion-25, over-23)
number(trillion-25, 30-24)
num(kilometres-26, trillion-25)
prep_to(equal-20, kilometres-26)
quantmod(3.3-30, about-29)
num(years-32, 3.3-30)
amod(years-32, light-31)
conj_or(unit-16, years-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (SINV
    (PP (IN In)
      (NP (NNP geometry) (NNP Polytope)))
    (VP (VBZ means))
    (NP
      (NP (JJ first))
      (, ,)
      (NP
        (NP (DT the) (NN generalization))
        (PP (TO to)
          (NP
            (NP (DT any) (NN dimension))
            (PP (IN of)
              (NP
                (NP
                  (NP (NN polygon))
                  (PP (IN in)
                    (NP (CD two) (NNS dimensions))))
                (, ,)
                (NP
                  (NP (NN polyhedron))
                  (PP (IN in)
                    (NP (CD three) (NNS dimensions))))
                (, ,)
                (CC and)
                (NP
                  (NP (NN polychoron))
                  (PP (IN in)
                    (NP (CD four) (NNS dimensions))))))))))
    (. .)))

nn(Polytope-3, geometry-2)
prep_in(means-4, Polytope-3)
root(ROOT-0, means-4)
nsubj(means-4, first-5)
det(generalization-8, the-7)
appos(first-5, generalization-8)
det(dimension-11, any-10)
prep_to(generalization-8, dimension-11)
prep_of(dimension-11, polygon-13)
num(dimensions-16, two-15)
prep_in(polygon-13, dimensions-16)
prep_of(dimension-11, polyhedron-18)
conj_and(polygon-13, polyhedron-18)
num(dimensions-21, three-20)
prep_in(polyhedron-18, dimensions-21)
prep_of(dimension-11, polychoron-24)
conj_and(polygon-13, polychoron-24)
num(dimensions-27, four-26)
prep_in(polychoron-24, dimensions-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mammals)))
    (, ,)
    (NP (NNP Pregnancy))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN period))
        (PP (IN of)
          (NP (NN reproduction)))
        (SBAR
          (WHPP (IN during)
            (WHNP (WDT which)))
          (S
            (NP (DT a) (NN female))
            (VP (VBZ carries)
              (NP
                (QP (CD one)
                  (CC or)
                  (JJR more))
                (JJ live) (NN offspring))
              (PP (IN from)
                (NP
                  (NP (NN implantation))
                  (PP (IN in)
                    (NP (DT the) (NN uterus)))))
              (PP (IN through)
                (NP (NN gestation))))))))
    (. .)))

prep_in(period-7, mammals-2)
nsubj(period-7, Pregnancy-4)
cop(period-7, is-5)
det(period-7, the-6)
root(ROOT-0, period-7)
prep_of(period-7, reproduction-9)
rel(carries-14, which-11)
det(female-13, a-12)
nsubj(carries-14, female-13)
rcmod(period-7, carries-14)
num(offspring-19, one-15)
conj_or(one-15, more-17)
quantmod(one-15, more-17)
num(offspring-19, more-17)
amod(offspring-19, live-18)
dobj(carries-14, offspring-19)
prep_from(carries-14, implantation-21)
det(uterus-24, the-23)
prep_in(implantation-21, uterus-24)
prep_through(carries-14, gestation-26)

(ROOT
  (S
    (NP (DT A) (NNP Pianist) (-LRB- -LRB-) (NNP \/) (`` `) (NNP piÃƒâ) (NNP ‰) (NNP ˆÃ) (NNP ‚) (NNP Ë) (NNP ™) (NNP nÃƒâ) (NNP ‰) (NNP ˆÃ) (NNP ‚) (NNP Âªst) (NNP \/) (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ plays)
              (NP (DT the) (NN piano)))))))
    (. .)))

det(\/-17, A-1)
nn(\/-17, Pianist-2)
nn(\/-17, \/-4)
nn(\/-17, piÃƒâ-6)
nn(\/-17, ‰-7)
nn(\/-17, ˆÃ-8)
nn(\/-17, ‚-9)
nn(\/-17, Ë-10)
nn(\/-17, ™-11)
nn(\/-17, nÃƒâ-12)
nn(\/-17, ‰-13)
nn(\/-17, ˆÃ-14)
nn(\/-17, ‚-15)
nn(\/-17, Âªst-16)
nsubj(person-21, \/-17)
cop(person-21, is-19)
det(person-21, a-20)
root(ROOT-0, person-21)
nsubj(plays-23, person-21)
rcmod(person-21, plays-23)
det(piano-25, the-24)
dobj(plays-23, piano-25)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (NNP Proverb))
        (PRN (-LRB- -LRB-)
          (PP (IN from)
            (NP (DT the) (JJ Latin) (NN proverbium)))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (NP (DT a)
          (ADJP (JJ byword)
            (CC or)
            (JJ nayword))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a)
            (ADJP (NN simple)
              (CC and)
              (NN concrete))
            (NN saying))
          (VP
            (ADVP (RB popularly))
            (VBN known)
            (CC and)
            (VBN repeated) (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ expresses)
                  (NP
                    (NP (DT a) (NN truth))
                    (, ,)
                    (VP (VBN based)
                      (PP (IN on)
                        (NP (JJ common) (NN sense))))))))))
        (CC or)
        (NP
          (NP (DT the) (JJ practical) (NN experience))
          (PP (IN of)
            (NP (NN humanity))))))
    (. .)))

det(Proverb-2, A-1)
nsubj(saying-22, Proverb-2)
dep(Proverb-2, from-4)
det(proverbium-7, the-5)
amod(proverbium-7, Latin-6)
pobj(from-4, proverbium-7)
advmod(called-11, also-10)
partmod(Proverb-2, called-11)
det(byword-13, a-12)
dobj(called-11, byword-13)
dobj(called-11, nayword-15)
conj_or(byword-13, nayword-15)
cop(saying-22, is-17)
det(saying-22, a-18)
amod(saying-22, simple-19)
conj_and(simple-19, concrete-21)
amod(saying-22, concrete-21)
root(ROOT-0, saying-22)
advmod(known-24, popularly-23)
partmod(saying-22, known-24)
partmod(saying-22, repeated-26)
conj_and(known-24, repeated-26)
nsubj(expresses-29, which-28)
ccomp(known-24, expresses-29)
det(truth-31, a-30)
dobj(expresses-29, truth-31)
partmod(truth-31, based-33)
amod(sense-36, common-35)
prep_on(based-33, sense-36)
det(experience-40, the-38)
amod(experience-40, practical-39)
conj_or(saying-22, experience-40)
prep_of(experience-40, humanity-42)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Perciformes))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN called)
        (NP (DT the) (NNP Percomorphi)
          (CC or)
          (NNP Acanthopteri)))
      (, ,))
    (VP
      (VP (VBP include)
        (NP
          (NP
            (QP (RB about) (CD 40))
            (NN %))
          (PP (IN of)
            (NP (DT all) (JJ bony) (NN fish)))))
      (CC and)
      (VP (VBP are)
        (NP
          (NP (DT the) (JJS largest) (NN order))
          (PP (IN of)
            (NP (NNS vertebrates))))))
    (. .)))

det(Perciformes-2, The-1)
nsubj(include-11, Perciformes-2)
advmod(called-5, also-4)
partmod(Perciformes-2, called-5)
det(Percomorphi-7, the-6)
dobj(called-5, Percomorphi-7)
dobj(called-5, Acanthopteri-9)
conj_or(Percomorphi-7, Acanthopteri-9)
root(ROOT-0, include-11)
quantmod(40-13, about-12)
num(%-14, 40-13)
dobj(include-11, %-14)
det(fish-18, all-16)
amod(fish-18, bony-17)
prep_of(%-14, fish-18)
cop(order-23, are-20)
det(order-23, the-21)
amod(order-23, largest-22)
conj_and(include-11, order-23)
prep_of(order-23, vertebrates-25)

(ROOT
  (S
    (NP
      (NP (NNP Pawpaw))
      (PRN (-LRB- -LRB-)
        (NP (NNP Asimina))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS genus))
        (PP (IN of)
          (NP (CD eight)
            (CC or)
            (CD nine) (NNS species)))
        (PP (IN of)
          (NP
            (NP (JJ small) (NNS trees))
            (PP (IN with)
              (NP (JJ large) (NNS leaves)
                (CC and)
                (NN fruit)))))
        (, ,)
        (ADJP (JJ native)
          (PP (TO to)
            (NP (JJ eastern) (NNP North) (NNP America))))))
    (. .)))

nsubj(genus-7, Pawpaw-1)
appos(Pawpaw-1, Asimina-3)
cop(genus-7, is-5)
det(genus-7, a-6)
root(ROOT-0, genus-7)
nn(species-12, eight-9)
conj_or(eight-9, nine-11)
nn(species-12, nine-11)
prep_of(genus-7, species-12)
amod(trees-15, small-14)
prep_of(genus-7, trees-15)
amod(leaves-18, large-17)
prep_with(trees-15, leaves-18)
prep_with(trees-15, fruit-20)
conj_and(leaves-18, fruit-20)
amod(genus-7, native-22)
amod(America-26, eastern-24)
nn(America-26, North-25)
prep_to(native-22, America-26)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ robust) (NNS australopithecines))
      (, ,)
      (NP
        (NP (NNS members))
        (PP (IN of)
          (NP
            (NP (DT the)
              (ADJP (JJ extinct))
              (NN hominin) (NNS genus) (NN Paranthropus))
            (PRN (-LRB- -LRB-)
              (NP
                (NP
                  (NP
                    (NP (JJ Greek) (NN para) ('' ''))
                    (PP (IN beside))
                    ('' ''))
                  (, ,)
                  (NP (JJ Greek) (NNS anthropos) ('' '')))
                (NP (NN human) ('' '')))
              (-RRB- -RRB-)))))
      (, ,))
    (VP (VBD were)
      (NP
        (NP (JJ bipedal) (NNS hominins))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB probably))
            (VP (VBD descended)
              (PP (IN from)
                (NP
                  (NP (DT the)
                    (ADJP (JJ gracile) (JJ australopithecine))
                    (NNS hominins))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Australopithecus))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(australopithecines-3, The-1)
amod(australopithecines-3, robust-2)
nsubj(hominins-28, australopithecines-3)
appos(australopithecines-3, members-5)
det(Paranthropus-11, the-7)
amod(Paranthropus-11, extinct-8)
nn(Paranthropus-11, hominin-9)
nn(Paranthropus-11, genus-10)
prep_of(members-5, Paranthropus-11)
amod(para-14, Greek-13)
dep(Paranthropus-11, para-14)
prep(para-14, beside-16)
amod(anthropos-20, Greek-19)
appos(para-14, anthropos-20)
dep(para-14, human-22)
cop(hominins-28, were-26)
amod(hominins-28, bipedal-27)
root(ROOT-0, hominins-28)
nsubj(descended-31, hominins-28)
advmod(descended-31, probably-30)
rcmod(hominins-28, descended-31)
det(hominins-36, the-33)
amod(australopithecine-35, gracile-34)
amod(hominins-36, australopithecine-35)
prep_from(descended-31, hominins-36)
appos(hominins-36, Australopithecus-38)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (S
      (NP (NNP Hanyu))
      (VP (VBZ means)
        (NP (DT the) (JJ Chinese) (NN language))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Pinyin))
      (VP (VBZ means)
        (NP (NN spell) (NN sound))
        ('' '')
        (PRN (, ,)
          (CC or)
          (NP
            (NP (DT the) (NN spelling))
            (PP (IN of)
              (NP (DT the) (NN sound)))))))
    (. .)))

nsubj(means-2, Hanyu-1)
root(ROOT-0, means-2)
det(language-5, the-3)
amod(language-5, Chinese-4)
dobj(means-2, language-5)
nsubj(means-9, Pinyin-8)
conj_and(means-2, means-9)
nn(sound-11, spell-10)
dobj(means-9, sound-11)
dep(spelling-16, or-14)
det(spelling-16, the-15)
dep(means-9, spelling-16)
det(sound-19, the-18)
prep_of(spelling-16, sound-19)

(ROOT
  (S
    (NP (DT A) (NNP Protocol))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (NP (NNS guidelines)
            (CC or)
            (NNS rules)))))
    (. .)))

det(Protocol-2, A-1)
nsubj(set-5, Protocol-2)
cop(set-5, is-3)
det(set-5, a-4)
root(ROOT-0, set-5)
prep_of(set-5, guidelines-7)
prep_of(set-5, rules-9)
conj_or(guidelines-7, rules-9)

(ROOT
  (S
    (NP (DT A) (NN Pump))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB move)
                (NP (NNS gases) (, ,) (NNS liquids)
                  (CC or)
                  (NNS slurries))))))))
    (. .)))

det(Pump-2, A-1)
nsubj(device-5, Pump-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
xsubj(move-8, device-5)
partmod(device-5, used-6)
aux(move-8, to-7)
xcomp(used-6, move-8)
dobj(move-8, gases-9)
dobj(move-8, liquids-11)
conj_or(gases-9, liquids-11)
dobj(move-8, slurries-13)
conj_or(gases-9, slurries-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Parish))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP (JJ administrative) (NN subdivision)))))
    (. .)))

det(Parish-2, A-1)
nsubj(type-5, Parish-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
amod(subdivision-8, administrative-7)
prep_of(type-5, subdivision-8)

(ROOT
  (S
    (NP (DT The) (NN PDP-10))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN mainframe) (NN computer))
        (VP (VBN manufactured)
          (PP (IN by)
            (NP
              (NP (NNP Digital) (NNP Equipment) (NNP Corporation))
              (PRN (-LRB- -LRB-)
                (NP (NNP DEC))
                (-RRB- -RRB-))))
          (PP (IN from)
            (NP
              (NP (DT the) (JJ late) (NNS 1960s))
              (PP (IN on) (: ;)
                (NP
                  (NP (DT the) (NN name) (NNS stands))
                  (PP (IN for) ('' '')
                    (NP (NNP Programmed) (NNP Data) (NNP Processor) (NN model) (CD 10))))
                ('' '')))))))
    (. .)))

det(PDP-10-2, The-1)
nsubj(computer-6, PDP-10-2)
cop(computer-6, was-3)
det(computer-6, a-4)
nn(computer-6, mainframe-5)
root(ROOT-0, computer-6)
partmod(computer-6, manufactured-7)
nn(Corporation-11, Digital-9)
nn(Corporation-11, Equipment-10)
agent(manufactured-7, Corporation-11)
abbrev(Corporation-11, DEC-13)
det(1960s-18, the-16)
amod(1960s-18, late-17)
prep_from(manufactured-7, 1960s-18)
det(stands-23, the-21)
nn(stands-23, name-22)
prep_on(1960s-18, stands-23)
nn(model-29, Programmed-26)
nn(model-29, Data-27)
nn(model-29, Processor-28)
prep_for(stands-23, model-29)
num(model-29, 10-30)

(ROOT
  (S
    (NP (DT The) (NN DECSYSTEM-20))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ 36-bit) (NNP DEC) (NNP PDP-10) (NN computer))
        (VP (VBG running)
          (NP (DT the) (NN TOPS-20) (NN operating) (NN system)))))
    (. .)))

det(DECSYSTEM-20-2, The-1)
nsubj(computer-8, DECSYSTEM-20-2)
cop(computer-8, was-3)
det(computer-8, a-4)
amod(computer-8, 36-bit-5)
nn(computer-8, DEC-6)
nn(computer-8, PDP-10-7)
root(ROOT-0, computer-8)
partmod(computer-8, running-9)
det(system-13, the-10)
nn(system-13, TOPS-20-11)
nn(system-13, operating-12)
dobj(running-9, system-13)

(ROOT
  (S
    (NP (DT The) (NNP Perimeter))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN distance))
        (PP (IN around)
          (NP (DT a) (VBN given) (JJ two-dimensional) (NN object)))))
    (. .)))

det(Perimeter-2, The-1)
nsubj(distance-5, Perimeter-2)
cop(distance-5, is-3)
det(distance-5, the-4)
root(ROOT-0, distance-5)
det(object-10, a-7)
amod(object-10, given-8)
amod(object-10, two-dimensional-9)
prep_around(distance-5, object-10)

(ROOT
  (S
    (NP (DT A) (NNP Pentose))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN monosaccharide))
        (PP (IN with)
          (NP (CD five) (NN carbon) (NNS atoms)))))
    (. .)))

det(Pentose-2, A-1)
nsubj(monosaccharide-5, Pentose-2)
cop(monosaccharide-5, is-3)
det(monosaccharide-5, a-4)
root(ROOT-0, monosaccharide-5)
num(atoms-9, five-7)
nn(atoms-9, carbon-8)
prep_with(monosaccharide-5, atoms-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Precambrian))
      (PRN (-LRB- -LRB-)
        (NP (NNP Pre-Cambrian))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ informal) (NN name))
        (PP (IN for)
          (NP
            (NP (DT the) (NN supereon))
            (VP (VBG comprising)
              (NP
                (NP (DT the) (NNS eons))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ geologic) (NN timescale))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD came)
                          (PP (IN before)
                            (NP (DT the) (JJ current) (JJ Phanerozoic) (NN eon))))))))))))))
    (. .)))

det(Precambrian-2, The-1)
nsubj(name-9, Precambrian-2)
appos(Precambrian-2, Pre-Cambrian-4)
cop(name-9, is-6)
det(name-9, an-7)
amod(name-9, informal-8)
root(ROOT-0, name-9)
det(supereon-12, the-11)
prep_for(name-9, supereon-12)
partmod(supereon-12, comprising-13)
det(eons-15, the-14)
dobj(comprising-13, eons-15)
det(timescale-19, the-17)
amod(timescale-19, geologic-18)
prep_of(eons-15, timescale-19)
nsubj(came-21, timescale-19)
rcmod(timescale-19, came-21)
det(eon-26, the-23)
amod(eon-26, current-24)
amod(eon-26, Phanerozoic-25)
prep_before(came-21, eon-26)

(ROOT
  (S
    (NP (DT A) (NNP Polymerase))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN enzyme))
        (SBAR
          (WHNP (WP$ whose)
            (ADJP (JJ central))
            (NN function))
          (S
            (VP (VBZ is)
              (VP (VBN associated)
                (PP (IN with)
                  (NP
                    (NP (NNS polymers))
                    (PP (IN of)
                      (NP
                        (NP (JJ nucleic) (NNS acids))
                        (PP (JJ such) (IN as)
                          (NP (NNP RNA)
                            (CC and)
                            (NNP DNA)))))))))))))
    (. .)))

det(Polymerase-2, A-1)
nsubj(enzyme-5, Polymerase-2)
cop(enzyme-5, is-3)
det(enzyme-5, an-4)
root(ROOT-0, enzyme-5)
poss(function-8, enzyme-5)
amod(function-8, central-7)
nsubjpass(associated-10, function-8)
auxpass(associated-10, is-9)
rcmod(enzyme-5, associated-10)
prep_with(associated-10, polymers-12)
amod(acids-15, nucleic-14)
prep_of(polymers-12, acids-15)
prep_such_as(acids-15, RNA-18)
prep_such_as(acids-15, DNA-20)
conj_and(RNA-18, DNA-20)

(ROOT
  (S
    (NP (DT A) (NNP Primer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN strand))
        (PP (IN of)
          (NP (JJ nucleic) (NN acid)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ serves)
              (PP (IN as)
                (NP
                  (NP (DT a) (VBG starting) (NN point))
                  (PP (IN for)
                    (NP (NN DNA) (NN replication))))))))))
    (. .)))

det(Primer-2, A-1)
nsubj(strand-5, Primer-2)
cop(strand-5, is-3)
det(strand-5, a-4)
root(ROOT-0, strand-5)
nsubj(serves-10, strand-5)
amod(acid-8, nucleic-7)
prep_of(strand-5, acid-8)
rcmod(strand-5, serves-10)
det(point-14, a-12)
amod(point-14, starting-13)
prep_as(serves-10, point-14)
nn(replication-17, DNA-16)
prep_for(point-14, replication-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ digital) (NN imaging)))
    (, ,)
    (NP
      (NP (DT a) (NN Pixel))
      (PRN (-LRB- -LRB-)
        (NP (NN picture) (NN element))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS smallest) (NN piece))
        (PP (IN of)
          (NP
            (NP (NN information))
            (PP (IN in)
              (NP (DT an) (NN image)))))))
    (. .)))

amod(imaging-3, digital-2)
prep_in(piece-14, imaging-3)
det(Pixel-6, a-5)
nsubj(piece-14, Pixel-6)
nn(element-9, picture-8)
appos(Pixel-6, element-9)
cop(piece-14, is-11)
det(piece-14, the-12)
amod(piece-14, smallest-13)
root(ROOT-0, piece-14)
prep_of(piece-14, information-16)
det(image-19, an-18)
prep_in(information-16, image-19)

(ROOT
  (S
    (NP (NNP Per))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ common) (JJ first) (NN name))
        (PP (IN in)
          (NP (NNP Scandinavia)))))
    (. .)))

nsubj(name-6, Per-1)
cop(name-6, is-2)
det(name-6, a-3)
amod(name-6, common-4)
amod(name-6, first-5)
root(ROOT-0, name-6)
prep_in(name-6, Scandinavia-8)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Phosphate))
      (, ,)
      (PP (IN in)
        (NP (JJ inorganic) (NN chemistry)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN salt))
        (PP (IN of)
          (NP (JJ phosphoric) (NN acid)))))
    (. .)))

det(Phosphate-2, A-1)
nsubj(salt-10, Phosphate-2)
amod(chemistry-6, inorganic-5)
prep_in(Phosphate-2, chemistry-6)
cop(salt-10, is-8)
det(salt-10, a-9)
root(ROOT-0, salt-10)
amod(acid-13, phosphoric-12)
prep_of(salt-10, acid-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Predestination))
    (VP (MD may)
      (ADVP (RB sometimes))
      (VP (VB be)
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB refer)
                (PP (TO to)
                  (NP
                    (NP
                      (ADJP (JJ other) (, ,) (JJ materialistic) (, ,) (JJ spiritualist) (, ,) (JJ non-theistic)
                        (CC or)
                        (JJ polytheistic))
                      (NNS ideas))
                    (PP (IN of)
                      (NP
                        (NP (NN determinism))
                        (, ,)
                        (NP (NN destiny) (, ,) (NN fate) (, ,) (NN doom) (, ,)
                          (CC or)
                          (NN adrsta))))))))))))
    (. .)))

nsubjpass(used-5, Predestination-1)
aux(used-5, may-2)
advmod(used-5, sometimes-3)
auxpass(used-5, be-4)
root(ROOT-0, used-5)
aux(refer-7, to-6)
xcomp(used-5, refer-7)
amod(ideas-18, other-9)
conj_or(other-9, materialistic-11)
amod(ideas-18, materialistic-11)
conj_or(other-9, spiritualist-13)
amod(ideas-18, spiritualist-13)
conj_or(other-9, non-theistic-15)
amod(ideas-18, non-theistic-15)
conj_or(other-9, polytheistic-17)
amod(ideas-18, polytheistic-17)
prep_to(refer-7, ideas-18)
prep_of(ideas-18, determinism-20)
appos(determinism-20, destiny-22)
appos(determinism-20, fate-24)
conj_or(destiny-22, fate-24)
appos(determinism-20, doom-26)
conj_or(destiny-22, doom-26)
appos(determinism-20, adrsta-29)
conj_or(destiny-22, adrsta-29)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Priest))
      (CC or)
      (NP (NNS priestess)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (VP (VBG having)
          (NP (DT the) (NN authority)
            (CC or)
            (NN power))
          (S
            (VP (TO to)
              (VP (VB administer)
                (NP (JJ religious) (NNS rites))))))
        (: ;)
        (PP (IN in)
          (NP
            (NP (JJ particular))
            (, ,)
            (NP
              (NP (NNS rites))
              (PP (IN of)
                (NP
                  (NP
                    (QP (JJ sacrifice) (TO to)))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (NN propitiation))
                    (PP (IN of))))))
            (, ,)
            (NP (DT a) (NN deity))
            (CC or)
            (NP (NNS deities))))))
    (. .)))

det(Priest-2, A-1)
nsubj(person-7, Priest-2)
conj_or(Priest-2, priestess-4)
nsubj(person-7, priestess-4)
cop(person-7, is-5)
det(person-7, a-6)
root(ROOT-0, person-7)
partmod(person-7, having-8)
det(authority-10, the-9)
dobj(having-8, authority-10)
dobj(having-8, power-12)
conj_or(authority-10, power-12)
aux(administer-14, to-13)
xcomp(having-8, administer-14)
amod(rites-16, religious-15)
dobj(administer-14, rites-16)
prep_in(person-7, particular-19)
prep_in(person-7, rites-21)
conj_or(particular-19, rites-21)
prep_of(rites-21, sacrifice-23)
dep(sacrifice-23, to-24)
prep_of(rites-21, propitiation-27)
conj_and(sacrifice-23, propitiation-27)
prep(propitiation-27, of-28)
det(deity-31, a-30)
prep_in(person-7, deity-31)
conj_or(particular-19, deity-31)
prep_in(person-7, deities-33)
conj_or(particular-19, deities-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Programmer))
    (VP (VBZ is)
      (NP
        (NP (NN someone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ writes)
              (NP (NN computer) (NN software)))))))
    (. .)))

det(Programmer-2, A-1)
nsubj(someone-4, Programmer-2)
cop(someone-4, is-3)
root(ROOT-0, someone-4)
nsubj(writes-6, someone-4)
rcmod(someone-4, writes-6)
nn(software-8, computer-7)
dobj(writes-6, software-8)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNPS Pixies))
    (VP (VBP are)
      (NP
        (NP (DT an) (JJ American) (JJ alternative) (NN rock) (NN band))
        (VP (VBN formed)
          (PP (IN in)
            (NP
              (NP (NNP Boston) (, ,) (NNP Massachusetts))
              (PP (IN in)
                (NP (CD 1985))))))))
    (. .)))

det(Pixies-2, The-1)
nsubj(band-8, Pixies-2)
cop(band-8, are-3)
det(band-8, an-4)
amod(band-8, American-5)
amod(band-8, alternative-6)
nn(band-8, rock-7)
root(ROOT-0, band-8)
partmod(band-8, formed-9)
nn(Massachusetts-13, Boston-11)
prep_in(formed-9, Massachusetts-13)
prep_in(Massachusetts-13, 1985-15)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Francesco) (NNP Petrarca))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP July) (CD 20) (, ,) (CD 1304))
            (VP (VBN ÃƒÂ)
              (NP
                (NP (NNS cents))
                (SBAR
                  (S
                    (NP (NNP Ã) (NNP ‚))
                    (VP (VBP â)
                      (NP
                        (NP ($ $)
                          (QP (NNS cents)))
                        (SBAR
                          (S
                            (NP (NNP Ã) (NNP ‚))
                            (VP (VBP â)
                              (NP ($ $) (CD ž))
                              (NP (NNP July) (CD 19) (, ,) (CD 1374))))))))))))
          (-RRB- -RRB-)))
      (, ,)
      (VP (VBN known)
        (PP (IN in)
          (NP (NNP English)))
        (PP (IN as)
          (NP (NNP Petrarch))))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT an) (JJ Italian) (NN scholar))
        (, ,)
        (NP (NN poet))
        (, ,)
        (CC and)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (JJS earliest) (NNP Renaissance) (NNS humanists))))))
    (. .)))

nn(Petrarca-2, Francesco-1)
nsubj(scholar-35, Petrarca-2)
dep(Petrarca-2, July-4)
num(July-4, 20-5)
num(July-4, 1304-7)
partmod(July-4, ÃƒÂ-8)
dobj(ÃƒÂ-8, cents-9)
nn(‚-11, Ã-10)
nsubj(â-12, ‚-11)
rcmod(cents-9, â-12)
dobj(â-12, $-13)
num($-13, cents-14)
nn(‚-16, Ã-15)
nsubj(â-17, ‚-16)
rcmod($-13, â-17)
dobj(â-17, $-18)
num($-18, ž-19)
tmod(â-17, July-20)
num(July-20, 19-21)
num(July-20, 1374-23)
partmod(Petrarca-2, known-26)
prep_in(known-26, English-28)
prep_as(known-26, Petrarch-30)
cop(scholar-35, was-32)
det(scholar-35, an-33)
amod(scholar-35, Italian-34)
root(ROOT-0, scholar-35)
conj_and(scholar-35, poet-37)
conj_and(scholar-35, one-40)
det(humanists-45, the-42)
amod(humanists-45, earliest-43)
nn(humanists-45, Renaissance-44)
prep_of(one-40, humanists-45)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (-LRB- -LRB-) (NN poison) (-RRB- -RRB-))
      (PP (IN for)
        (NP (NN use)))
      (PP (IN on)
        (NP (NNS arrows)))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ poisonous))
          (NN substance))
        (VP (VBN produced)
          (PP (IN by)
            (S
              (VP (VBG living)
                (NP (NNS cells)
                  (CC or)
                  (NNS organisms))))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ active)
                (PP (IN at)
                  (NP
                    (ADJP (RB very) (JJ low))
                    (NNS concentrations)))))))))
    (. .)))

nsubj(substance-12, poison-2)
prep_for(poison-2, use-5)
prep_on(poison-2, arrows-7)
cop(substance-12, is-9)
det(substance-12, a-10)
amod(substance-12, poisonous-11)
root(ROOT-0, substance-12)
partmod(substance-12, produced-13)
agent(produced-13, living-15)
dobj(living-15, cells-16)
dobj(living-15, organisms-18)
conj_or(cells-16, organisms-18)
nsubj(active-21, that-19)
cop(active-21, is-20)
rcmod(substance-12, active-21)
advmod(low-24, very-23)
amod(concentrations-25, low-24)
prep_at(active-21, concentrations-25)

(ROOT
  (S
    (NP (NNP The) (NNP Phanerozoic)
      (PRN (-LRB- -LRB-)
        (NP
          (ADVP (RB occasionally))
          (NNP Phanaerozoic))
        (-RRB- -RRB-))
      (NNP Eon))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ current) (NN eon))
          (PP (IN in)
            (NP (DT the) (JJ geologic) (NN timescale))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN one))
          (SBAR
            (WHPP (IN during)
              (WHNP (WDT which)))
            (S
              (NP (JJ abundant) (NN animal) (NN life))
              (VP (VBZ has)
                (VP (VBN existed))))))))
    (. .)))

nn(Eon-7, The-1)
nn(Eon-7, Phanerozoic-2)
advmod(Phanaerozoic-5, occasionally-4)
appos(Eon-7, Phanaerozoic-5)
nsubj(eon-11, Eon-7)
cop(eon-11, is-8)
det(eon-11, the-9)
amod(eon-11, current-10)
root(ROOT-0, eon-11)
det(timescale-15, the-13)
amod(timescale-15, geologic-14)
prep_in(eon-11, timescale-15)
det(one-19, the-18)
conj_and(eon-11, one-19)
rel(existed-26, which-21)
amod(life-24, abundant-22)
nn(life-24, animal-23)
nsubj(existed-26, life-24)
aux(existed-26, has-25)
rcmod(one-19, existed-26)

(ROOT
  (S
    (NP (DT A) (NNP Peroxide))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN compound))
        (VP (VBG containing)
          (NP (DT an) (JJ oxygen-oxygen) (JJ single) (NN bond)))))
    (. .)))

det(Peroxide-2, A-1)
nsubj(compound-5, Peroxide-2)
cop(compound-5, is-3)
det(compound-5, a-4)
root(ROOT-0, compound-5)
partmod(compound-5, containing-6)
det(bond-10, an-7)
amod(bond-10, oxygen-oxygen-8)
amod(bond-10, single-9)
dobj(containing-6, bond-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NNPS Platypus))
      (PRN (-LRB- -LRB-)
        (NP (NNP Ornithorhynchus) (NNS anatinus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ semi-aquatic) (NN mammal) (NN endemic))
        (PP (TO to)
          (NP (JJ eastern) (NNP Australia)))
        (, ,)
        (PP (VBG including)
          (NP (NNP Tasmania)))))
    (. .)))

det(Platypus-2, The-1)
nsubj(endemic-11, Platypus-2)
nn(anatinus-5, Ornithorhynchus-4)
appos(Platypus-2, anatinus-5)
cop(endemic-11, is-7)
det(endemic-11, a-8)
amod(endemic-11, semi-aquatic-9)
nn(endemic-11, mammal-10)
root(ROOT-0, endemic-11)
amod(Australia-14, eastern-13)
prep_to(endemic-11, Australia-14)
prep_including(endemic-11, Tasmania-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NN religion)
        (CC and)
        (NN spirituality)))
    (, ,)
    (NP (DT a) (NNP Pilgrimage))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long) (NN journey)
          (CC or)
          (NN search))
        (PP (IN of)
          (NP (JJ great) (JJ moral) (NN significance)))))
    (. .)))

prep_in(journey-11, religion-2)
conj_and(religion-2, spirituality-4)
prep_in(journey-11, spirituality-4)
det(Pilgrimage-7, a-6)
nsubj(journey-11, Pilgrimage-7)
cop(journey-11, is-8)
det(journey-11, a-9)
amod(journey-11, long-10)
root(ROOT-0, journey-11)
conj_or(journey-11, search-13)
amod(significance-17, great-15)
amod(significance-17, moral-16)
prep_of(journey-11, significance-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Pluot))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP <nowiki>) (NNP plÃƒâˆžÃ) (NNP ‚) (NNP Ï))
          (NP
            (NP
              (QP ($ $) (CD -) (CD ot)))
            (NP (NNP </nowiki>))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tradename))
        (PP (IN for)
          (NP
            (NP (DT a) (NN fruit))
            (VP (VBN developed)
              (PP (IN in)
                (NP (DT the) (JJ late) (JJ 20th) (NN century)))
              (PP (IN by)
                (NP (NNP Floyd) (NNP Zaiger))))))))
    (. .)))

det(Pluot-2, A-1)
nsubj(tradename-15, Pluot-2)
nn(Ï-7, <nowiki>-4)
nn(Ï-7, plÃƒâˆžÃ-5)
nn(Ï-7, ‚-6)
dep(Pluot-2, Ï-7)
dep(Ï-7, $-8)
number($-8, ot-10)
dep($-8, </nowiki>-11)
cop(tradename-15, is-13)
det(tradename-15, a-14)
root(ROOT-0, tradename-15)
det(fruit-18, a-17)
prep_for(tradename-15, fruit-18)
partmod(fruit-18, developed-19)
det(century-24, the-21)
amod(century-24, late-22)
amod(century-24, 20th-23)
prep_in(developed-19, century-24)
nn(Zaiger-27, Floyd-26)
agent(developed-19, Zaiger-27)

(ROOT
  (S
    (PP (IN In)
      (NP (NN astronomy)))
    (, ,)
    (NP (DT a) (NNP Plutino))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ trans-Neptunian) (NN object))
        (PP (IN in)
          (NP
            (NP (CD 2:3) (JJ mean) (NN motion) (NN resonance))
            (PP (IN with)
              (NP (NNP Neptune)))))))
    (. .)))

prep_in(object-9, astronomy-2)
det(Plutino-5, a-4)
nsubj(object-9, Plutino-5)
cop(object-9, is-6)
det(object-9, a-7)
amod(object-9, trans-Neptunian-8)
root(ROOT-0, object-9)
num(resonance-14, 2:3-11)
amod(resonance-14, mean-12)
nn(resonance-14, motion-13)
prep_in(object-9, resonance-14)
prep_with(resonance-14, Neptune-16)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ organic) (NN chemistry)))
    (, ,)
    (NP
      (NP (NNP Phenols))
      (, ,)
      (VP
        (ADVP (RB sometimes))
        (VBN called)
        (NP (NNS phenolics)))
      (, ,))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN class))
        (PP (IN of)
          (NP
            (NP (NN chemical) (NNS compounds))
            (VP (VBG consisting)
              (PP (IN of)
                (NP
                  (NP (DT a) (JJ hydroxyl) (NN group))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP -) (NNP O) (NNP H))
                    (-RRB- -RRB-))
                  (VP (VBN attached)
                    (PP (TO to)
                      (NP (DT an) (JJ aromatic) (NN hydrocarbon) (NN group)))))))))))
    (. .)))

amod(chemistry-3, organic-2)
prep_in(class-13, chemistry-3)
nsubj(class-13, Phenols-5)
advmod(called-8, sometimes-7)
partmod(Phenols-5, called-8)
dobj(called-8, phenolics-9)
cop(class-13, are-11)
det(class-13, a-12)
root(ROOT-0, class-13)
nn(compounds-16, chemical-15)
prep_of(class-13, compounds-16)
partmod(compounds-16, consisting-17)
det(group-21, a-19)
amod(group-21, hydroxyl-20)
prep_of(consisting-17, group-21)
nn(H-25, O-24)
appos(group-21, H-25)
partmod(group-21, attached-27)
det(group-32, an-29)
amod(group-32, aromatic-30)
nn(group-32, hydrocarbon-31)
prep_to(attached-27, group-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN general)))
    (, ,)
    (NP (NNP Polymorphism))
    (VP (VBZ describes)
      (NP
        (NP (JJ multiple) (JJ possible) (NNS states))
        (PP (IN for)
          (NP (DT a) (JJ single) (NN property))))
      (PRN (-LRB- -LRB-)
        (S
          (NP (PRP it))
          (VP
            (VP (VBZ is)
              (VP (VBN said)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ polymorphic)))))))
            (, ,)
            (CC or)
            (VP (VBZ polymorphous))))
        (-RRB- -RRB-)))
    (. .)))

prep_in(describes-5, general-2)
nsubj(describes-5, Polymorphism-4)
root(ROOT-0, describes-5)
amod(states-8, multiple-6)
amod(states-8, possible-7)
dobj(describes-5, states-8)
det(property-12, a-10)
amod(property-12, single-11)
prep_for(states-8, property-12)
nsubjpass(said-16, it-14)
xsubj(polymorphic-19, it-14)
nsubj(polymorphous-22, it-14)
auxpass(said-16, is-15)
parataxis(describes-5, said-16)
aux(polymorphic-19, to-17)
cop(polymorphic-19, be-18)
xcomp(said-16, polymorphic-19)
parataxis(describes-5, polymorphous-22)
conj_or(said-16, polymorphous-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN word))
      (, ,)
      (NP (NNP Pasta))
      (, ,))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB denote)
        (NP
          (NP (NNS dishes))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (NN pasta) (NNS products))
              (VP (VBP are)
                (NP
                  (NP (DT the) (JJ primary) (NN ingredient))
                  (, ,)
                  (VP (VBN served)
                    (PP (IN with)
                      (NP (NN sauce)
                        (CC or)
                        (NNS seasonings)))))))))))
    (. .)))

det(word-2, The-1)
nsubj(denote-8, word-2)
appos(word-2, Pasta-4)
aux(denote-8, can-6)
advmod(denote-8, also-7)
root(ROOT-0, denote-8)
dobj(denote-8, dishes-9)
rel(ingredient-17, which-11)
nn(products-13, pasta-12)
nsubj(ingredient-17, products-13)
cop(ingredient-17, are-14)
det(ingredient-17, the-15)
amod(ingredient-17, primary-16)
rcmod(dishes-9, ingredient-17)
partmod(ingredient-17, served-19)
prep_with(served-19, sauce-21)
prep_with(served-19, seasonings-23)
conj_or(sauce-21, seasonings-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP polymer) (NN chemistry)))
    (, ,)
    (NP (NNP Polymerization))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN process))
        (PP (IN of)
          (S
            (VP
              (VP (VBG reacting)
                (NP (NN monomer) (NNS molecules))
                (PRT (RP together))
                (PP (IN in)
                  (NP (DT a) (NN chemical) (NN reaction)))
                (S
                  (VP (TO to)
                    (VP (VB form)
                      (NP (JJ three-dimensional) (NNS networks))))))
              (CC or)
              (VP (VBG polymer)
                (NP (NNS chains))))))))
    (. .)))

nn(chemistry-3, polymer-2)
prep_in(process-8, chemistry-3)
nsubj(process-8, Polymerization-5)
cop(process-8, is-6)
det(process-8, a-7)
root(ROOT-0, process-8)
prepc_of(process-8, reacting-10)
nn(molecules-12, monomer-11)
dobj(reacting-10, molecules-12)
prt(reacting-10, together-13)
det(reaction-17, a-15)
nn(reaction-17, chemical-16)
prep_in(reacting-10, reaction-17)
aux(form-19, to-18)
xcomp(reacting-10, form-19)
amod(networks-21, three-dimensional-20)
dobj(form-19, networks-21)
prepc_of(process-8, polymer-23)
conj_or(reacting-10, polymer-23)
dobj(polymer-23, chains-24)

(ROOT
  (S
    (NP
      (NP (NNP Pilsner))
      (, ,)
      (ADVP (RB sometimes))
      (NP
        (UCP
          (NP (NNP Pilsener))
          (CC or)
          (ADVP (RB simply)))
        (NNS pils))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pale) (NN lager))
        (, ,)
        (VP (VBN developed)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ 19th) (NN century))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN city))
                  (PP (IN of)
                    (NP
                      (NP (NNP Pilsen) (, ,) (NNP Bohemia))
                      (PRN (-LRB- -LRB-)
                        (NP
                          (NP (NNP PlzeÃƒâˆ) (`` `) (NNP Ã) (NNP ‚) (CD âˆš))
                          (PP (IN in)
                            (NP (DT the) (NNP Czech) (NNP Republic))))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj(lager-12, Pilsner-1)
advmod(Pilsner-1, sometimes-3)
nn(pils-7, Pilsener-4)
advmod(Pilsener-4, simply-6)
conj_or(Pilsener-4, simply-6)
nn(pils-7, simply-6)
dep(Pilsner-1, pils-7)
cop(lager-12, is-9)
det(lager-12, a-10)
amod(lager-12, pale-11)
root(ROOT-0, lager-12)
partmod(lager-12, developed-14)
det(century-18, the-16)
amod(century-18, 19th-17)
prep_in(developed-14, century-18)
det(city-21, the-20)
prep_in(century-18, city-21)
nn(Bohemia-25, Pilsen-23)
prep_of(city-21, Bohemia-25)
nn(‚-30, PlzeÃƒâˆ-27)
nn(‚-30, Ã-29)
dep(Bohemia-25, ‚-30)
num(‚-30, âˆš-31)
det(Republic-35, the-33)
nn(Republic-35, Czech-34)
prep_in(‚-30, Republic-35)

(ROOT
  (S
    (NP (DT A) (NNP Poet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ writes)
              (NP (NN poetry)))))))
    (. .)))

det(Poet-2, A-1)
nsubj(person-5, Poet-2)
cop(person-5, is-3)
det(person-5, a-4)
root(ROOT-0, person-5)
nsubj(writes-7, person-5)
rcmod(person-5, writes-7)
dobj(writes-7, poetry-8)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Pulley))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (NP (DT a) (NN sheave)
            (CC or)
            (NN block)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN wheel))
        (PP (IN with)
          (NP
            (NP (DT a) (NN groove))
            (PP (IN between)
              (NP
                (NP (CD two) (NNS flanges))
                (PP (IN around)
                  (NP (PRP$ its) (NN circumference)))))))))
    (. .)))

det(Pulley-2, A-1)
nsubj(wheel-13, Pulley-2)
advmod(called-5, also-4)
dep(Pulley-2, called-5)
det(sheave-7, a-6)
dobj(called-5, sheave-7)
dobj(called-5, block-9)
conj_or(sheave-7, block-9)
cop(wheel-13, is-11)
det(wheel-13, a-12)
root(ROOT-0, wheel-13)
det(groove-16, a-15)
prep_with(wheel-13, groove-16)
num(flanges-19, two-18)
prep_between(groove-16, flanges-19)
poss(circumference-22, its-21)
prep_around(flanges-19, circumference-22)

(ROOT
  (S
    (NP (DT A) (NNP Prismatoid))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN polyhedron))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT all) (NNS vertices))
            (VP (VBP lie)
              (PP (IN in)
                (NP (CD two) (JJ parallel) (NNS planes))))))))
    (. .)))

det(Prismatoid-2, A-1)
nsubj(polyhedron-5, Prismatoid-2)
cop(polyhedron-5, is-3)
det(polyhedron-5, a-4)
root(ROOT-0, polyhedron-5)
advmod(lie-9, where-6)
det(vertices-8, all-7)
nsubj(lie-9, vertices-8)
rcmod(polyhedron-5, lie-9)
num(planes-13, two-11)
amod(planes-13, parallel-12)
prep_in(lie-9, planes-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geometry)))
    (, ,)
    (NP (DT a) (NNP Pentagon))
    (VP (VBZ is)
      (NP (DT any) (JJ five-sided) (NN polygon)))
    (. .)))

prep_in(polygon-9, geometry-2)
det(Pentagon-5, a-4)
nsubj(polygon-9, Pentagon-5)
cop(polygon-9, is-6)
det(polygon-9, any-7)
amod(polygon-9, five-sided-8)
root(ROOT-0, polygon-9)

(ROOT
  (S
    (NP (DT A) (NNP Palace))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ grand) (NN residence))
        (, ,) (RB especially)
        (NP
          (NP (DT the) (NN home))
          (PP (IN of)
            (NP
              (NP (DT a) (NN head))
              (PP (IN of)
                (NP
                  (NP (NN state))
                  (CC or)
                  (NP (DT some) (JJ other) (JJ high-ranking) (JJ public) (NN figure)))))))))
    (. .)))

det(Palace-2, A-1)
nsubj(residence-6, Palace-2)
cop(residence-6, is-3)
det(residence-6, a-4)
amod(residence-6, grand-5)
root(ROOT-0, residence-6)
advmod(residence-6, especially-8)
det(home-10, the-9)
dep(residence-6, home-10)
det(head-13, a-12)
prep_of(home-10, head-13)
prep_of(head-13, state-15)
det(figure-21, some-17)
amod(figure-21, other-18)
amod(figure-21, high-ranking-19)
amod(figure-21, public-20)
prep_of(head-13, figure-21)
conj_or(state-15, figure-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP
      (NP (NNP Phenetics))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (JJ numerical) (NN taxonomy)
            (CC or)
            (NNS taximetrics))))
      (, ,))
    (VP (VBZ is)
      (NP (DT an) (NN attempt)
        (S
          (VP (TO to)
            (VP (VB classify)
              (NP
                (NP (NNS organisms))
                (VP (VBN based)
                  (PP
                    (PP (IN on)
                      (NP (JJ overall) (NN similarity)))
                    (, ,) (RB usually)
                    (PP (IN in)
                      (NP (NN morphology)
                        (CC or)
                        (JJ other) (NN observable) (NNS traits))))
                  (, ,)
                  (ADVP (RB regardless)
                    (PP (IN of)
                      (NP
                        (NP (PRP$ their) (NN phylogeny))
                        (CC or)
                        (NP (JJ evolutionary) (NN relation))))))))))))
    (. .)))

prep_in(attempt-16, biology-2)
nsubj(attempt-16, Phenetics-4)
advmod(known-7, also-6)
partmod(Phenetics-4, known-7)
amod(taxonomy-10, numerical-9)
prep_as(known-7, taxonomy-10)
prep_as(known-7, taximetrics-12)
conj_or(taxonomy-10, taximetrics-12)
cop(attempt-16, is-14)
det(attempt-16, an-15)
root(ROOT-0, attempt-16)
aux(classify-18, to-17)
infmod(attempt-16, classify-18)
dobj(classify-18, organisms-19)
partmod(organisms-19, based-20)
amod(similarity-23, overall-22)
prep_on(based-20, similarity-23)
advmod(based-20, usually-25)
nn(traits-31, morphology-27)
conj_or(morphology-27, other-29)
nn(traits-31, other-29)
nn(traits-31, observable-30)
prep_in(based-20, traits-31)
poss(phylogeny-36, their-35)
prep_regardless_of(based-20, phylogeny-36)
amod(relation-39, evolutionary-38)
prep_regardless_of(based-20, relation-39)
conj_or(phylogeny-36, relation-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP PlayStation))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP abbreviated) (NNP PS))
          (, ,)
          (NP (NNP PSone))
          (, ,)
          (NP (NNP PS1))
          (, ,)
          (CC or)
          (NP (NNP informally) (IN as) (NNP PSX)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ 32-bit) (JJ fifth) (NN generation) (NN video) (NN game) (NN console))
        (VP (VBN released)
          (PP (IN by)
            (NP
              (NP (NNP Sony) (NNP Computer) (NNP Entertainment))
              (PP (IN in)
                (NP (NNP December) (CD 1994))))))))
    (. .)))

det(PlayStation-2, The-1)
nsubj(console-23, PlayStation-2)
nn(PS-5, abbreviated-4)
dep(PlayStation-2, PS-5)
dep(PlayStation-2, PSone-7)
conj_or(PS-5, PSone-7)
dep(PlayStation-2, PS1-9)
conj_or(PS-5, PS1-9)
nn(PSX-14, informally-12)
amod(PSX-14, as-13)
dep(PlayStation-2, PSX-14)
conj_or(PS-5, PSX-14)
cop(console-23, is-16)
det(console-23, a-17)
amod(console-23, 32-bit-18)
amod(console-23, fifth-19)
nn(console-23, generation-20)
nn(console-23, video-21)
nn(console-23, game-22)
root(ROOT-0, console-23)
partmod(console-23, released-24)
nn(Entertainment-28, Sony-26)
nn(Entertainment-28, Computer-27)
agent(released-24, Entertainment-28)
prep_in(Entertainment-28, December-30)
num(December-30, 1994-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN PDP-1))
      (PRN (-LRB- -LRB-) (`` `)
        (NP (NNP Programmed) (NNP Data) (NNP Processor-1))
        ('' ') (-RRB- -RRB-)))
    (VP
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ first) (NN computer))
          (PP (IN in)
            (NP
              (NP (NNP Digital) (NNP Equipment) (NNP Corporation) (POS 's))
              (NNP PDP) (NN series)))))
      (CC and)
      (VP (VBD was)
        (VP
          (ADVP (RB first))
          (VBN produced)
          (PP (IN in)
            (NP (CD 1960))))))
    (. .)))

det(PDP-1-2, The-1)
nsubj(computer-13, PDP-1-2)
nsubjpass(produced-24, PDP-1-2)
nn(Processor-1-7, Programmed-5)
nn(Processor-1-7, Data-6)
dep(PDP-1-2, Processor-1-7)
cop(computer-13, was-10)
det(computer-13, the-11)
amod(computer-13, first-12)
root(ROOT-0, computer-13)
nn(Corporation-17, Digital-15)
nn(Corporation-17, Equipment-16)
poss(series-20, Corporation-17)
nn(series-20, PDP-19)
prep_in(computer-13, series-20)
auxpass(produced-24, was-22)
advmod(produced-24, first-23)
conj_and(computer-13, produced-24)
prep_in(produced-24, 1960-26)

(ROOT
  (S
    (NP
      (NP (DT A) (NNPS Pilus))
      (PRN (-LRB- -LRB-)
        (ADJP (JJ Latin)
          (PP (IN for)
            (NP
              (NP (`` `) (NN hair) ('' '))
              (: ;)
              (NP (NN plural))
              (: :)
              (NP (NNS pili)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hairlike) (NN appendage))
        (VP (VBN found)
          (PP (IN on)
            (NP
              (NP (DT the) (NN surface))
              (PP (IN of)
                (NP (JJ many) (NNS bacteria))))))))
    (. .)))

det(Pilus-2, A-1)
nsubj(appendage-17, Pilus-2)
dep(Pilus-2, Latin-4)
prep_for(Latin-4, hair-7)
dep(hair-7, plural-10)
dep(hair-7, pili-12)
cop(appendage-17, is-14)
det(appendage-17, a-15)
amod(appendage-17, hairlike-16)
root(ROOT-0, appendage-17)
partmod(appendage-17, found-18)
det(surface-21, the-20)
prep_on(found-18, surface-21)
amod(bacteria-24, many-23)
prep_of(surface-21, bacteria-24)

(ROOT
  (S
    (NP (DT A) (NNP Plasmid))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ extra-chromosomal) (NN DNA) (NN molecule))
        (ADJP (JJ separate)
          (PP (IN from)
            (NP
              (NP (DT the) (JJ chromosomal) (NN DNA))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ capable)
                      (PP (IN of)
                        (S
                          (VP (VBG replicating)
                            (ADVP (RB independently))
                            (PP (IN of)
                              (NP (DT the) (JJ chromosomal) (NN DNA)))))))))))))))
    (. .)))

det(Plasmid-2, A-1)
nsubj(molecule-7, Plasmid-2)
cop(molecule-7, is-3)
det(molecule-7, an-4)
amod(molecule-7, extra-chromosomal-5)
nn(molecule-7, DNA-6)
root(ROOT-0, molecule-7)
amod(molecule-7, separate-8)
det(DNA-12, the-10)
amod(DNA-12, chromosomal-11)
prep_from(separate-8, DNA-12)
nsubj(capable-15, DNA-12)
cop(capable-15, is-14)
rcmod(DNA-12, capable-15)
prepc_of(capable-15, replicating-17)
advmod(replicating-17, independently-18)
det(DNA-22, the-20)
amod(DNA-22, chromosomal-21)
prep_of(replicating-17, DNA-22)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Petabyte))
      (PRN (-LRB- -LRB-)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (DT the) (NNP SI) (NN prefix) (NN peta))
              (: -))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN information)
              (CC or)
              (NN computer) (NN storage))
            (ADJP (JJ equal)
              (PP (TO to)
                (NP (CD one) (NN quadrillion) (NNS bytes))))
            (, ,)
            (CC or)
            (NP (CD 1000) (NNS terabytes))))))
    (. .)))

det(Petabyte-2, A-1)
nsubj(unit-14, Petabyte-2)
dep(Petabyte-2, derived-4)
det(peta-9, the-6)
nn(peta-9, SI-7)
nn(peta-9, prefix-8)
prep_from(derived-4, peta-9)
cop(unit-14, is-12)
det(unit-14, a-13)
root(ROOT-0, unit-14)
nn(storage-19, information-16)
conj_or(information-16, computer-18)
nn(storage-19, computer-18)
prep_of(unit-14, storage-19)
amod(storage-19, equal-20)
num(bytes-24, one-22)
nn(bytes-24, quadrillion-23)
prep_to(equal-20, bytes-24)
num(terabytes-28, 1000-27)
prep_of(unit-14, terabytes-28)
conj_or(storage-19, terabytes-28)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Party))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ social) (NN gathering))
        (PP (IN for)
          (NP (NN celebration)
            (CC and)
            (NN recreation)))))
    (. .)))

det(Party-2, A-1)
nsubj(gathering-6, Party-2)
cop(gathering-6, is-3)
det(gathering-6, a-4)
amod(gathering-6, social-5)
root(ROOT-0, gathering-6)
prep_for(gathering-6, celebration-8)
prep_for(gathering-6, recreation-10)
conj_and(celebration-8, recreation-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (NNP Paraffin))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ common) (NN name))
        (PP (IN for)
          (NP
            (NP (DT the) (JJ alkane) (NNS hydrocarbons))
            (PP (IN with)
              (NP (DT the) (JJ general) (NN formula)))))))
    (. .)))

prep_in(name-8, chemistry-2)
nsubj(name-8, Paraffin-4)
cop(name-8, is-5)
det(name-8, the-6)
amod(name-8, common-7)
root(ROOT-0, name-8)
det(hydrocarbons-12, the-10)
amod(hydrocarbons-12, alkane-11)
prep_for(name-8, hydrocarbons-12)
det(formula-16, the-14)
amod(formula-16, general-15)
prep_with(hydrocarbons-12, formula-16)

(ROOT
  (S
    (NP (DT A) (NNP Pearl))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hard) (, ,) (JJ roundish) (NN object))
        (VP (VBN produced)
          (PP (IN within)
            (NP
              (NP
                (NP (DT the) (JJ soft) (NN tissue))
                (PRN (-LRB- -LRB-)
                  (ADVP (RB specifically))
                  (NP (DT the) (NN mantle))
                  (-RRB- -RRB-)))
              (PP (IN of)
                (NP (DT a) (VBG living) (NN shelled) (NN mollusk))))))))
    (. .)))

det(Pearl-2, A-1)
nsubj(object-8, Pearl-2)
cop(object-8, is-3)
det(object-8, a-4)
amod(object-8, hard-5)
amod(object-8, roundish-7)
root(ROOT-0, object-8)
partmod(object-8, produced-9)
det(tissue-13, the-11)
amod(tissue-13, soft-12)
prep_within(produced-9, tissue-13)
dep(mantle-17, specifically-15)
det(mantle-17, the-16)
appos(tissue-13, mantle-17)
det(mollusk-23, a-20)
amod(mollusk-23, living-21)
nn(mollusk-23, shelled-22)
prep_of(tissue-13, mollusk-23)

(ROOT
  (S
    (NP (DT The) (NNP Proteome))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ entire) (NN complement))
        (PP (IN of)
          (NP
            (NP (NNS proteins))
            (VP (VBN expressed)
              (PP (IN by)
                (NP (DT a) (NN genome) (, ,) (NN cell) (, ,) (NN tissue)
                  (CC or)
                  (NN organism))))))))
    (. .)))

det(Proteome-2, The-1)
nsubj(complement-6, Proteome-2)
cop(complement-6, is-3)
det(complement-6, the-4)
amod(complement-6, entire-5)
root(ROOT-0, complement-6)
prep_of(complement-6, proteins-8)
partmod(proteins-8, expressed-9)
det(genome-12, a-11)
agent(expressed-9, genome-12)
agent(expressed-9, cell-14)
conj_or(genome-12, cell-14)
agent(expressed-9, tissue-16)
conj_or(genome-12, tissue-16)
agent(expressed-9, organism-18)
conj_or(genome-12, organism-18)

(ROOT
  (NP
    (NP (DT The) (NN Pavane) (, ,) (NN pavan) (, ,) (NN paven) (, ,) (NN pavin) (, ,) (NN pavian) (, ,) (NN pavine) (, ,))
    (VP
      (ADVP (CC or))
      (VBN pavyn) (-LRB- -LRB-)
      (NP (PRP It)))
    (. .)))

det(pavine-12, The-1)
nn(pavine-12, Pavane-2)
dep(pavine-12, pavan-4)
dep(pavine-12, paven-6)
dep(pavine-12, pavin-8)
dep(pavine-12, pavian-10)
root(ROOT-0, pavine-12)
advmod(pavyn-15, or-14)
partmod(pavine-12, pavyn-15)
dobj(pavyn-15, It-17)

(ROOT
  (NP
    (NP (NNP pavana) (, ,) (NNP padovana))
    (: ;)
    (NP (NNP Ger))
    (. .)))

nn(padovana-3, pavana-1)
root(ROOT-0, padovana-3)
dep(padovana-3, Ger-5)

(ROOT
  (S
    (NP (NNP Paduana) (NNP -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ slow) (JJ processional) (NN dance) (NN common))
        (PP (IN in)
          (NP
            (NP (NNP Europe))
            (PP (IN during)
              (NP
                (NP (DT the) (JJ 16th) (NN century))
                (PRN (-LRB- -LRB-)
                  (NP (NNP Renaissance))
                  (-RRB- -RRB-))))))))
    (. .)))

nsubj(common-8, Paduana-1)
cop(common-8, is-3)
det(common-8, a-4)
amod(common-8, slow-5)
amod(common-8, processional-6)
nn(common-8, dance-7)
root(ROOT-0, common-8)
prep_in(common-8, Europe-10)
det(century-14, the-12)
amod(century-14, 16th-13)
prep_during(Europe-10, century-14)
appos(century-14, Renaissance-16)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Puritan))
      (PP (IN of)
        (NP (JJ 16th)
          (CC and)
          (JJ 17th) (NN century) (NNS England))))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ Protestant) (NN advocate))
        (PP (IN of) ('' '')
          (NP (NN purity)))
        ('' '')
        (PP (IN of)
          (NP (NN worship)))
        (, ,)
        (NP (NN doctrine))
        (, ,)
        (CC and)
        (NP (JJ personal)
          (CC and)
          (NN group) (NN morality))))
    (. .)))

det(Puritan-2, A-1)
nsubj(advocate-12, Puritan-2)
amod(England-8, 16th-4)
conj_and(16th-4, 17th-6)
amod(England-8, 17th-6)
nn(England-8, century-7)
prep_of(Puritan-2, England-8)
cop(advocate-12, was-9)
det(advocate-12, a-10)
amod(advocate-12, Protestant-11)
root(ROOT-0, advocate-12)
prep_of(advocate-12, purity-15)
conj_and(advocate-12, of-17)
prep_of(advocate-12, worship-18)
conj_and(advocate-12, doctrine-20)
amod(morality-26, personal-23)
conj_and(personal-23, group-25)
amod(morality-26, group-25)
conj_and(advocate-12, morality-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Plough))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ American) (NN spelling))
          (: :)
          (NP
            (NP (NNP plow))
            (: ;)
            (NP
              (NP (DT both) (JJ plaÃƒâ)
                (ADJP
                  (QP ($ $) (CD ¦) (CD Ã)))
                (JJ ‚) (NN â))
              (NP ($ $) (CD ¦)))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tool))
        (VP (VBN used)
          (PP (IN in)
            (S
              (VP (VBG farming)
                (PP (IN for)
                  (NP
                    (NP (JJ initial) (NN cultivation))
                    (PP (IN of)
                      (NP (NN soil)))))
                (PP (IN in)
                  (NP
                    (NP (NN preparation))
                    (PP (IN for)
                      (NP (NN sowing) (NN seed)
                        (CC or)
                        (NN planting)))))))))))
    (. .)))

det(Plough-2, The-1)
nsubj(tool-21, Plough-2)
amod(spelling-5, American-4)
dep(Plough-2, spelling-5)
dep(spelling-5, plow-7)
det(â-15, both-9)
amod(â-15, plaÃƒâ-10)
num(â-15, $-11)
number($-11, ¦-12)
number($-11, Ã-13)
amod(â-15, ‚-14)
dep(plow-7, â-15)
dep(â-15, $-16)
num($-16, ¦-17)
cop(tool-21, is-19)
det(tool-21, a-20)
root(ROOT-0, tool-21)
partmod(tool-21, used-22)
prepc_in(used-22, farming-24)
amod(cultivation-27, initial-26)
prep_for(farming-24, cultivation-27)
prep_of(cultivation-27, soil-29)
prep_in(farming-24, preparation-31)
nn(seed-34, sowing-33)
prep_for(preparation-31, seed-34)
prep_for(preparation-31, planting-36)
conj_or(seed-34, planting-36)

(ROOT
  (S
    (PP (IN Among)
      (NP (JJ other) (NNS things)))
    (, ,)
    (NP (NNP President))
    (NP (NN today))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ common) (NN title))
        (PP (IN for)
          (NP
            (NP (DT the) (NN head))
            (PP (IN of)
              (NP
                (NP (NN state))
                (PP (IN of)
                  (NP (JJS most) (NNS republics))))))))
      (, ,)
      (SBAR (IN whether)
        (S
          (S
            (VP
              (ADVP (RB popularly))
              (VBN elected)))
          (, ,)
          (S
            (VP (VBN chosen)
              (PP (IN by)
                (NP
                  (NP (DT the) (NN legislature))
                  (CC or)
                  (NP (DT a) (JJ special) (JJ electoral) (NN college)))))))))
    (. .)))

amod(things-3, other-2)
prep_among(title-10, things-3)
nsubj(title-10, President-5)
nsubj(title-10, today-6)
cop(title-10, is-7)
det(title-10, a-8)
amod(title-10, common-9)
root(ROOT-0, title-10)
det(head-13, the-12)
prep_for(title-10, head-13)
prep_of(head-13, state-15)
amod(republics-18, most-17)
prep_of(state-15, republics-18)
complm(elected-22, whether-20)
advmod(elected-22, popularly-21)
ccomp(title-10, elected-22)
dep(elected-22, chosen-24)
det(legislature-27, the-26)
prep_by(chosen-24, legislature-27)
det(college-32, a-29)
amod(college-32, special-30)
amod(college-32, electoral-31)
prep_by(chosen-24, college-32)
conj_or(legislature-27, college-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP (NNP Polyphony))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN texture))
          (VP (VBG consisting)
            (PP (IN of)
              (NP
                (NP
                  (QP (CD two)
                    (CC or)
                    (JJR more))
                  (JJ independent) (JJ melodic) (NNS voices))
                (, ,)
                (ADJP (RB as) (VBN opposed))))
            (PP (TO to)
              (NP
                (NP (NN music))
                (PP (IN with)
                  (NP (RB just) (CD one) (NN voice)))))
            (PRN (-LRB- -LRB-)
              (ADVP (RB monophony))
              (-RRB- -RRB-))))
        (CC or)
        (NP
          (NP (NN music))
          (PP (IN with)
            (NP
              (NP (CD one) (JJ dominant) (JJ melodic) (NN voice))
              (VP (VBN accompanied)
                (PP (IN by)
                  (NP (NNS chords)))
                (PRN (-LRB- -LRB-)
                  (ADVP (RB homophony))
                  (-RRB- -RRB-))))))))
    (. .)))

prep_in(texture-7, music-2)
nsubj(texture-7, Polyphony-4)
cop(texture-7, is-5)
det(texture-7, a-6)
root(ROOT-0, texture-7)
partmod(texture-7, consisting-8)
num(voices-15, two-10)
conj_or(two-10, more-12)
quantmod(two-10, more-12)
num(voices-15, more-12)
amod(voices-15, independent-13)
amod(voices-15, melodic-14)
prep_of(consisting-8, voices-15)
advmod(opposed-18, as-17)
amod(voices-15, opposed-18)
prep_to(consisting-8, music-20)
advmod(voice-24, just-22)
num(voice-24, one-23)
prep_with(music-20, voice-24)
dep(consisting-8, monophony-26)
conj_or(texture-7, music-29)
num(voice-34, one-31)
amod(voice-34, dominant-32)
amod(voice-34, melodic-33)
prep_with(music-29, voice-34)
partmod(voice-34, accompanied-35)
agent(accompanied-35, chords-37)
dep(accompanied-35, homophony-39)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Pun))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ paronomasia))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN phrase))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB deliberately))
            (VP (VBZ exploits)
              (NP
                (NP (NN confusion))
                (PP (IN between)
                  (NP
                    (NP (JJ similar-sounding) (NNS words))
                    (PP (IN for)
                      (NP (NNS humorous)
                        (CC or)
                        (NN rhetorical) (NN effect)))))))))))
    (. .)))

det(Pun-2, A-1)
nsubj(phrase-9, Pun-2)
dep(paronomasia-5, or-4)
dep(Pun-2, paronomasia-5)
cop(phrase-9, is-7)
det(phrase-9, a-8)
root(ROOT-0, phrase-9)
nsubj(exploits-12, phrase-9)
advmod(exploits-12, deliberately-11)
rcmod(phrase-9, exploits-12)
dobj(exploits-12, confusion-13)
amod(words-16, similar-sounding-15)
prep_between(confusion-13, words-16)
prep_for(words-16, humorous-18)
nn(effect-21, rhetorical-20)
prep_for(words-16, effect-21)
conj_or(humorous-18, effect-21)

(ROOT
  (S
    (NP (DT A) (NNP Palindrome))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word) (, ,) (NN phrase) (, ,) (NN number)
          (CC or)
          (JJ other) (NN sequence))
        (PP (IN of)
          (NP
            (NP (NNS units))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ has)
                  (NP
                    (NP (DT the) (NN property))
                    (PP (IN of)
                      (S
                        (VP (VBG reading)
                          (NP (DT the) (JJ same))
                          (PP (IN in)
                            (NP
                              (NP (DT either) (NN direction))
                              (PRN (-LRB- -LRB-)
                                (NP
                                  (NP (DT the) (NN adjustment))
                                  (PP (IN of)
                                    (NP (NN punctuation)
                                      (CC and)
                                      (NNS spaces)))
                                  (PP (IN between)
                                    (NP
                                      (NP (NNS words))
                                      (SBAR
                                        (S
                                          (VP (VBZ is)
                                            (ADVP (RB generally))
                                            (VP (VBN permitted))))))))
                                (-RRB- -RRB-)))))))))))))))
    (. .)))

det(Palindrome-2, A-1)
nsubj(sequence-12, Palindrome-2)
cop(sequence-12, is-3)
det(sequence-12, a-4)
nn(number-9, word-5)
conj_or(number-9, phrase-7)
nn(sequence-12, phrase-7)
nn(sequence-12, number-9)
conj_or(number-9, other-11)
nn(sequence-12, other-11)
root(ROOT-0, sequence-12)
prep_of(sequence-12, units-14)
nsubj(has-16, units-14)
rcmod(units-14, has-16)
det(property-18, the-17)
dobj(has-16, property-18)
prepc_of(property-18, reading-20)
det(same-22, the-21)
dobj(reading-20, same-22)
det(direction-25, either-24)
prep_in(reading-20, direction-25)
det(adjustment-28, the-27)
dep(direction-25, adjustment-28)
prep_of(adjustment-28, punctuation-30)
prep_of(adjustment-28, spaces-32)
conj_and(punctuation-30, spaces-32)
prep_between(adjustment-28, words-34)
auxpass(permitted-37, is-35)
advmod(permitted-37, generally-36)
rcmod(words-34, permitted-37)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Titus) (NNPS Maccius) (NNP Plautus))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (JJ c.) (JJ 254ÃƒÂ) (NNS cents))
            (SBAR
              (S
                (NP (NNP Ã) (NNP ‚))
                (VP (VBP â)
                  (NP
                    (NP ($ $)
                      (QP (NNS cents)))
                    (SBAR
                      (S
                        (NP (NNP Ã) (NNP ‚))
                        (VP (VBP â)
                          (NP ($ $) (CD ž184) (CD BCE))))))))))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB commonly))
        (VBN known)
        (PP (IN as)
          (NP (NNP Plautus))))
      (, ,))
    (VP (VBD was)
      (NP (DT a) (NNP Roman) (NN playwright)))
    (. .)))

nn(Plautus-3, Titus-1)
nn(Plautus-3, Maccius-2)
nsubj(playwright-29, Plautus-3)
amod(cents-7, c.-5)
amod(cents-7, 254ÃƒÂ-6)
dep(Plautus-3, cents-7)
nn(‚-9, Ã-8)
nsubj(â-10, ‚-9)
rcmod(cents-7, â-10)
dobj(â-10, $-11)
num($-11, cents-12)
nn(‚-14, Ã-13)
nsubj(â-15, ‚-14)
rcmod($-11, â-15)
dobj(â-15, $-16)
num($-16, ž184-17)
num($-16, BCE-18)
advmod(known-22, commonly-21)
partmod(Plautus-3, known-22)
prep_as(known-22, Plautus-24)
cop(playwright-29, was-26)
det(playwright-29, a-27)
nn(playwright-29, Roman-28)
root(ROOT-0, playwright-29)

(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (NNP Possession))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN control))
        (SBAR
          (S
            (NP (DT a) (NN person))
            (ADVP (RB intentionally))
            (VP (VBZ exercises)
              (PP (IN toward)
                (NP (DT a) (NN thing))))))))
    (. .)))

prep_in(control-7, law-2)
nsubj(control-7, Possession-4)
cop(control-7, is-5)
det(control-7, the-6)
root(ROOT-0, control-7)
dobj(exercises-11, control-7)
det(person-9, a-8)
nsubj(exercises-11, person-9)
advmod(exercises-11, intentionally-10)
rcmod(control-7, exercises-11)
det(thing-14, a-13)
prep_toward(exercises-11, thing-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP
      (NP (NNP Power))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP P)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN rate))
          (SBAR
            (WHPP (IN at)
              (WHNP (WDT which)))
            (S
              (S
                (NP (NN work))
                (VP (VBZ is)
                  (VP (VBN performed))))
              (CC or)
              (S
                (NP (NN energy))
                (VP (VBZ is)
                  (VP (VBN transmitted)))))))
        (, ,)
        (CC or)
        (NP
          (NP (DT the) (NN amount))
          (PP (IN of)
            (NP
              (NP (NN energy))
              (VP (VBN required)
                (CC or)
                (VBN expended)
                (PP (IN for)
                  (NP
                    (NP (DT a) (VBN given) (NN unit))
                    (PP (IN of)
                      (NP (NN time)))))))))))
    (. .)))

prep_in(rate-12, physics-2)
nsubj(rate-12, Power-4)
dep(Power-4, symbol-6)
dep(symbol-6, P-8)
cop(rate-12, is-10)
det(rate-12, the-11)
root(ROOT-0, rate-12)
rel(performed-17, which-14)
nsubjpass(performed-17, work-15)
auxpass(performed-17, is-16)
rcmod(rate-12, performed-17)
nsubjpass(transmitted-21, energy-19)
auxpass(transmitted-21, is-20)
rcmod(rate-12, transmitted-21)
conj_or(performed-17, transmitted-21)
det(amount-25, the-24)
conj_or(rate-12, amount-25)
prep_of(amount-25, energy-27)
partmod(energy-27, required-28)
partmod(energy-27, expended-30)
conj_or(required-28, expended-30)
det(unit-34, a-32)
amod(unit-34, given-33)
prep_for(required-28, unit-34)
prep_of(unit-34, time-36)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Panga))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ common)
            (ADJP (NNP South) (JJ African))
            (NN name))
          (PP (IN for)
            (NP (NNP Pterogymnus) (NNS laniarius))))
        (, ,)
        (NP (DT a) (JJ small) (JJ ocean-dwelling) (NN fish))
        (, ,)
        (ADJP (JJ native)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ south-east) (NNP Atlantic) (NNP Ocean))
              (CC and)
              (NP (JJ south-west)
                (NX (NNP Indian) (NNP Ocean))))))))
    (. .)))

nsubj(name-7, Panga-1)
cop(name-7, is-2)
det(name-7, the-3)
amod(name-7, common-4)
amod(African-6, South-5)
amod(name-7, African-6)
root(ROOT-0, name-7)
nn(laniarius-10, Pterogymnus-9)
prep_for(name-7, laniarius-10)
det(fish-15, a-12)
amod(fish-15, small-13)
amod(fish-15, ocean-dwelling-14)
appos(name-7, fish-15)
amod(name-7, native-17)
det(Ocean-22, the-19)
amod(Ocean-22, south-east-20)
nn(Ocean-22, Atlantic-21)
prep_to(native-17, Ocean-22)
amod(Ocean-26, south-west-24)
nn(Ocean-26, Indian-25)
prep_to(native-17, Ocean-26)
conj_and(Ocean-22, Ocean-26)

(ROOT
  (S
    (NP (DT A) (NNP Pear))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pomaceous) (NN fruit))
        (VP (VBN produced)
          (PP (IN by)
            (NP
              (NP (DT a) (NN tree))
              (PP (IN of)
                (NP (JJ genus) (NNS Pyrus))))))))
    (. .)))

det(Pear-2, A-1)
nsubj(fruit-6, Pear-2)
cop(fruit-6, is-3)
det(fruit-6, a-4)
amod(fruit-6, pomaceous-5)
root(ROOT-0, fruit-6)
partmod(fruit-6, produced-7)
det(tree-10, a-9)
agent(produced-7, tree-10)
amod(Pyrus-13, genus-12)
prep_of(tree-10, Pyrus-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT a) (NNP Password))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word)
          (CC or)
          (NN string))
        (PP (IN of)
          (NP
            (NP (NNS characters))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (VP (VBN entered) (, ,)
                    (ADVP
                      (ADVP (RB often) (RB along))
                      (PP (IN with)
                        (NP (DT a) (NN user) (NN name))))
                    (, ,)
                    (PP (IN into)
                      (NP (DT a) (NN computer) (NN system)
                        (S
                          (VP
                            (VP (TO to)
                              (VP (VB log)
                                (NP
                                  (NP (NNP <PRT>))
                                  (PP (IN in)
                                    (NP (NNP </PRT>))))))
                            (CC or)
                            (VP (TO to)
                              (VP (VB gain)
                                (NP (NN access))
                                (PP (TO to)
                                  (NP (DT some) (NN resource)))))))))))))))))
    (. .)))

prep_in(word-8, computing-2)
det(Password-5, a-4)
nsubj(word-8, Password-5)
cop(word-8, is-6)
det(word-8, a-7)
root(ROOT-0, word-8)
conj_or(word-8, string-10)
prep_of(word-8, characters-12)
nsubjpass(entered-15, characters-12)
auxpass(entered-15, is-14)
rcmod(characters-12, entered-15)
advmod(entered-15, often-17)
det(name-22, a-20)
nn(name-22, user-21)
prep_along_with(entered-15, name-22)
det(system-27, a-25)
nn(system-27, computer-26)
prep_into(entered-15, system-27)
aux(log-29, to-28)
dep(system-27, log-29)
dobj(log-29, <PRT>-30)
prep_in(<PRT>-30, </PRT>-32)
aux(gain-35, to-34)
dep(system-27, gain-35)
conj_or(log-29, gain-35)
dobj(gain-35, access-36)
det(resource-39, some-38)
prep_to(gain-35, resource-39)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (NNP Pathogen))
        (PRN (-LRB- -LRB-)
          (PP (IN from)
            (NP
              (NP (JJ Greek) (NNS pathos))
              (, ,)
              (VP (VBG suffering)
                (NP
                  (NP (JJ \/) (NN emotion))
                  (, ,)
                  (CC and)
                  (NP (NN gene))
                  (, ,))
                (S
                  (VP (TO to)
                    (VP (VB give)
                      (NP (NN birth))
                      (PP (TO to))))))))
          (-RRB- -RRB-)))
      (, ,)
      (NP
        (NP (JJ infectious) (NN agent))
        (, ,)
        (CC or)
        (ADVP (RBR more) (RB commonly))
        (NP (NN germ)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ biological) (NN agent))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ causes)
              (NP (NN disease)
                (CC or)
                (NN illness))
              (PP (TO to)
                (NP (PRP$ its) (NN host))))))))
    (. .)))

det(Pathogen-2, A-1)
nsubj(agent-32, Pathogen-2)
dep(Pathogen-2, from-4)
amod(pathos-6, Greek-5)
pobj(from-4, pathos-6)
partmod(pathos-6, suffering-8)
amod(emotion-10, \/-9)
dobj(suffering-8, emotion-10)
dobj(suffering-8, gene-13)
conj_and(emotion-10, gene-13)
aux(give-16, to-15)
xcomp(suffering-8, give-16)
dobj(give-16, birth-17)
prep(give-16, to-18)
amod(agent-22, infectious-21)
appos(Pathogen-2, agent-22)
advmod(commonly-26, more-25)
appos(Pathogen-2, commonly-26)
advmod(agent-22, commonly-26)
conj_or(agent-22, commonly-26)
appos(Pathogen-2, germ-27)
conj_or(agent-22, germ-27)
cop(agent-32, is-29)
det(agent-32, a-30)
amod(agent-32, biological-31)
root(ROOT-0, agent-32)
nsubj(causes-34, agent-32)
rcmod(agent-32, causes-34)
dobj(causes-34, disease-35)
dobj(causes-34, illness-37)
conj_or(disease-35, illness-37)
poss(host-40, its-39)
prep_to(causes-34, host-40)

(ROOT
  (S
    (NP (DT The) (NN PDP-8))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ first) (JJ successful) (JJ commercial) (NN minicomputer))
        (, ,)
        (VP (VBN produced)
          (PP (IN by)
            (NP
              (NP
                (NP (NNP Digital) (NNP Equipment) (NNP Corporation))
                (PRN (-LRB- -LRB-)
                  (NP (NNP DEC))
                  (-RRB- -RRB-)))
              (PP (IN in)
                (NP (DT the) (NNS 1960s))))))))
    (. .)))

det(PDP-8-2, The-1)
nsubj(minicomputer-8, PDP-8-2)
cop(minicomputer-8, was-3)
det(minicomputer-8, the-4)
amod(minicomputer-8, first-5)
amod(minicomputer-8, successful-6)
amod(minicomputer-8, commercial-7)
root(ROOT-0, minicomputer-8)
partmod(minicomputer-8, produced-10)
nn(Corporation-14, Digital-12)
nn(Corporation-14, Equipment-13)
agent(produced-10, Corporation-14)
abbrev(Corporation-14, DEC-16)
det(1960s-20, the-19)
prep_in(Corporation-14, 1960s-20)

(ROOT
  (S
    (NP
      (NP (NNP Porsche) (NNP SE))
      (, ,)
      (CC or)
      (RB just)
      (NP (NNP Porsche))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ German) (NN manufacturer))
        (PP (IN of)
          (NP
            (NP (NNS automobiles) (NN majority))
            (VP (VBN owned)
              (PP (IN by)
                (NP
                  (NP (NNP Porsche))
                  (CC and)
                  (NP (NNP PiÃƒâˆžÃ) (NNP ‚) (NNP Â))))
              (`` ``)
              (NP (NN ch) (NNS families)))))))
    (. .)))

nn(SE-2, Porsche-1)
nsubj(manufacturer-11, SE-2)
advmod(SE-2, just-5)
conj_or(SE-2, just-5)
nsubj(manufacturer-11, just-5)
dep(SE-2, Porsche-6)
cop(manufacturer-11, is-8)
det(manufacturer-11, a-9)
amod(manufacturer-11, German-10)
root(ROOT-0, manufacturer-11)
nn(majority-14, automobiles-13)
prep_of(manufacturer-11, majority-14)
partmod(majority-14, owned-15)
agent(owned-15, Porsche-17)
nn(Â-21, PiÃƒâˆžÃ-19)
nn(Â-21, ‚-20)
agent(owned-15, Â-21)
conj_and(Porsche-17, Â-21)
nn(families-24, ch-23)
dobj(owned-15, families-24)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Paradox))
      (VP (MD can)
        (VP (VB be)
          (NP
            (NP (DT an)
              (ADJP (RB apparently) (JJ true))
              (NN statement))
            (CC or)
            (NP
              (NP (NN group))
              (PP (IN of)
                (NP
                  (NP (NNS statements))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ leads)
                        (PP (TO to)
                          (NP
                            (NP (DT a) (NN contradiction))
                            (CC or)
                            (NP
                              (NP (DT a) (NN situation))
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ defies)
                                    (NP (NN intuition))))))))))))))))))
    (: ;)
    (CC or)
    (S
      (NP (PRP it))
      (VP (MD can)
        (VP (VB be)
          (NP
            (NP
              (ADJP (, ,) (RB seemingly) (JJ opposite) (, ,))
              (DT an) (JJ apparent) (NN contradiction))
            (SBAR
              (WHNP (WDT that))
              (S
                (ADVP (RB actually))
                (VP (VBZ expresses)
                  (NP
                    (NP (DT a) (JJ non-dual))
                    (NP (NNP truth) (-LRB- -LRB-) (NNP cf))))))))))
    (. .)))

det(Paradox-2, A-1)
nsubj(statement-8, Paradox-2)
aux(statement-8, can-3)
cop(statement-8, be-4)
det(statement-8, an-5)
advmod(true-7, apparently-6)
amod(statement-8, true-7)
root(ROOT-0, statement-8)
conj_or(statement-8, group-10)
prep_of(group-10, statements-12)
nsubj(leads-14, statements-12)
rcmod(statements-12, leads-14)
det(contradiction-17, a-16)
prep_to(leads-14, contradiction-17)
det(situation-20, a-19)
prep_to(leads-14, situation-20)
conj_or(contradiction-17, situation-20)
nsubj(defies-22, situation-20)
rcmod(situation-20, defies-22)
dobj(defies-22, intuition-23)
nsubj(contradiction-35, it-26)
aux(contradiction-35, can-27)
cop(contradiction-35, be-28)
advmod(opposite-31, seemingly-30)
amod(contradiction-35, opposite-31)
det(contradiction-35, an-33)
amod(contradiction-35, apparent-34)
conj_or(statement-8, contradiction-35)
nsubj(expresses-38, contradiction-35)
advmod(expresses-38, actually-37)
rcmod(contradiction-35, expresses-38)
det(non-dual-40, a-39)
dobj(expresses-38, non-dual-40)
iobj(expresses-38, non-dual-40)
nn(cf-43, truth-41)
dobj(expresses-38, cf-43)
dep(non-dual-40, cf-43)

(ROOT
  (S
    (NP (NNP Koan))
    (VP (VBZ -RRB-))
    (. .)))

nsubj(-RRB--2, Koan-1)

(ROOT
  (S
    (NP (DT The) (NN PDP-11))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN series))
        (PP (IN of)
          (NP
            (NP (JJ 16-bit) (NNS minicomputers))
            (VP (VBN sold)
              (PP (IN by)
                (NP
                  (NP (NNP Digital) (NNP Equipment) (NNP Corp.))
                  (PP (IN in)
                    (NP (DT the) (CD 1970s)
                      (CC and)
                      (CD 1980s))))))))))
    (. .)))

det(PDP-11-2, The-1)
nsubj(series-5, PDP-11-2)
cop(series-5, was-3)
det(series-5, a-4)
root(ROOT-0, series-5)
amod(minicomputers-8, 16-bit-7)
prep_of(series-5, minicomputers-8)
partmod(minicomputers-8, sold-9)
nn(Corp.-13, Digital-11)
nn(Corp.-13, Equipment-12)
agent(sold-9, Corp.-13)
dep(1970s-16, the-15)
prep_in(Corp.-13, 1970s-16)
prep_in(Corp.-13, 1980s-18)
conj_and(1970s-16, 1980s-18)

(ROOT
  (S
    (NP (DT A) (NNP Parliament))
    (VP (VBZ is)
      (NP (DT a) (NN legislature))
      (, ,)
      (PP (RB especially) (IN in)
        (NP
          (NP (DT those) (NNS countries))
          (SBAR
            (WHNP
              (WHNP (WP$ whose) (NN system))
              (PP (IN of)
                (NP (NN government))))
            (S
              (VP (VBZ is)
                (VP (VBN based)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNP Westminster) (NN system))
                      (VP (VBN modelled)
                        (PP (IN after)
                          (NP
                            (NP (DT that))
                            (PP (IN of)
                              (NP (DT the) (NNP United) (NNP Kingdom)))))))))))))))
    (. .)))

det(Parliament-2, A-1)
nsubj(legislature-5, Parliament-2)
cop(legislature-5, is-3)
det(legislature-5, a-4)
root(ROOT-0, legislature-5)
advmod(legislature-5, especially-7)
det(countries-10, those-9)
prep_in(legislature-5, countries-10)
poss(system-12, countries-10)
nsubjpass(based-16, system-12)
prep_of(system-12, government-14)
auxpass(based-16, is-15)
rcmod(countries-10, based-16)
det(system-20, the-18)
nn(system-20, Westminster-19)
prep_on(based-16, system-20)
partmod(system-20, modelled-21)
prep_after(modelled-21, that-23)
det(Kingdom-27, the-25)
nn(Kingdom-27, United-26)
prep_of(that-23, Kingdom-27)

(ROOT
  (S
    (NP (DT A) (NNP Profession))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN occupation) (, ,) (NN vocation)
          (CC or)
          (NN career))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (VBN specialized) (NN knowledge))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN subject))
                  (, ,)
                  (NP (NN field))
                  (, ,)
                  (CC or)
                  (NP (NN science)))))
            (VP (VBZ is)
              (VP (VBN applied)))))))
    (. .)))

det(Profession-2, A-1)
nsubj(occupation-5, Profession-2)
cop(occupation-5, is-3)
det(occupation-5, an-4)
root(ROOT-0, occupation-5)
conj_or(occupation-5, vocation-7)
conj_or(occupation-5, career-9)
advmod(applied-22, where-10)
amod(knowledge-12, specialized-11)
nsubjpass(applied-22, knowledge-12)
det(subject-15, a-14)
prep_of(knowledge-12, subject-15)
prep_of(knowledge-12, field-17)
conj_or(subject-15, field-17)
prep_of(knowledge-12, science-20)
conj_or(subject-15, science-20)
auxpass(applied-22, is-21)
rcmod(occupation-5, applied-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Phonograph))
      (, ,)
      (CC or)
      (NP (NN gramophone))
      (, ,))
    (VP (VBD was)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ common))
          (NN device))
        (PP (IN for)
          (S
            (VP (VBG playing)
              (NP (VBN recorded) (NN sound))
              (PP (IN from)
                (NP (DT the) (CD 1870s)))
              (PP (IN through)
                (NP (DT the) (NNS 1980s))))))))
    (. .)))

det(Phonograph-2, The-1)
nsubj(device-11, Phonograph-2)
conj_or(Phonograph-2, gramophone-5)
nsubj(device-11, gramophone-5)
cop(device-11, was-7)
det(device-11, the-8)
advmod(common-10, most-9)
amod(device-11, common-10)
root(ROOT-0, device-11)
prepc_for(device-11, playing-13)
amod(sound-15, recorded-14)
dobj(playing-13, sound-15)
det(1870s-18, the-17)
prep_from(playing-13, 1870s-18)
det(1980s-21, the-20)
prep_through(playing-13, 1980s-21)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ social) (NN anthropology)
        (CC and)
        (NN sociobiology)))
    (, ,)
    (NP
      (NP (NNP Polyandry))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (JJ Greek))
          (: :)
          (NP
            (NP (NN poly))
            (: -)
            (NP
              (ADJP
                (ADJP (JJ many))
                (, ,)
                (ADJP (JJ andros))
                (: -))
              (NN man))))
        (-RRB- -RRB-)))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP
            (NP (DT a) (NN form))
            (PP (IN of)
              (NP (JJ polygamous) (NN marriage))))
          (, ,)
          (CC or)
          (NP
            (NP (JJ other) (JJ sexual) (NN union))
            (, ,)
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (CD one) (NN woman))
                (VP (VBZ is)
                  (VP (VBN married)
                    (PP (TO to)
                      (NP
                        (QP (CD two)
                          (CC or)
                          (JJR more))
                        (NNS husbands)))
                    (PP (IN at)
                      (NP (DT the) (JJ same) (NN time)))))))))))
    (. .)))

amod(anthropology-3, social-2)
prep_in(refers-19, anthropology-3)
conj_and(anthropology-3, sociobiology-5)
prep_in(refers-19, sociobiology-5)
nsubj(refers-19, Polyandry-7)
dep(Polyandry-7, Greek-9)
dep(Greek-9, poly-11)
amod(man-17, many-13)
dep(many-13, andros-15)
dep(poly-11, man-17)
root(ROOT-0, refers-19)
det(form-22, a-21)
prep_to(refers-19, form-22)
amod(marriage-25, polygamous-24)
prep_of(form-22, marriage-25)
amod(union-30, other-28)
amod(union-30, sexual-29)
prep_to(refers-19, union-30)
conj_or(form-22, union-30)
rel(married-37, which-33)
num(woman-35, one-34)
nsubjpass(married-37, woman-35)
auxpass(married-37, is-36)
rcmod(union-30, married-37)
num(husbands-42, two-39)
conj_or(two-39, more-41)
quantmod(two-39, more-41)
num(husbands-42, more-41)
prep_to(married-37, husbands-42)
det(time-46, the-44)
amod(time-46, same-45)
prep_at(married-37, time-46)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNPS Provirus))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN virus) (NN genome))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ has)
              (VP (VBN integrated)
                (NP (PRP itself))
                (PP (IN into)
                  (NP
                    (NP (DT the) (NN DNA))
                    (PP (IN of)
                      (NP (DT a) (NN host) (NN cell)))))))))))
    (. .)))

det(Provirus-2, A-1)
nsubj(genome-6, Provirus-2)
cop(genome-6, is-3)
det(genome-6, a-4)
nn(genome-6, virus-5)
root(ROOT-0, genome-6)
nsubj(integrated-9, genome-6)
aux(integrated-9, has-8)
rcmod(genome-6, integrated-9)
dobj(integrated-9, itself-10)
det(DNA-13, the-12)
prep_into(integrated-9, DNA-13)
det(cell-17, a-15)
nn(cell-17, host-16)
prep_of(DNA-13, cell-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Parade))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (NP (NN march)
            (CC or)
            (NN marchpast)))
        (-RRB- -RRB-)))
    (VP
      (VP
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN procession))
            (PP (IN of)
              (NP (NNS people)))))
        (, ,)
        (VP
          (ADVP (RB usually))
          (VBN organized)
          (PP (IN along)
            (NP
              (NP (DT a) (NN street))
              (, ,)
              (ADVP (RB often)
                (PP (IN in)
                  (NP (NN costume)))))))
        (, ,)
        (CC and)
        (ADVP (RB often))
        (VP (VBN accompanied)
          (PP (IN by)
            (S
              (VP (VBG marching)
                (NP (NNS bands)))))))
      (, ,)
      (VP (VBZ floats))
      (CC or)
      (VP
        (ADVP (RB sometimes) (JJ large))
        (VBZ balloons)))
    (. .)))

det(Parade-2, A-1)
nsubj(procession-12, Parade-2)
nsubj(organized-17, Parade-2)
nsubj(accompanied-28, Parade-2)
nsubj(floats-33, Parade-2)
nsubj(balloons-37, Parade-2)
advmod(called-5, also-4)
dep(Parade-2, called-5)
tmod(called-5, march-6)
tmod(called-5, marchpast-8)
conj_or(march-6, marchpast-8)
cop(procession-12, is-10)
det(procession-12, a-11)
root(ROOT-0, procession-12)
prep_of(procession-12, people-14)
advmod(organized-17, usually-16)
conj_and(procession-12, organized-17)
det(street-20, a-19)
prep_along(organized-17, street-20)
advmod(street-20, often-22)
prep_in(often-22, costume-24)
advmod(procession-12, often-27)
conj_and(procession-12, often-27)
conj_and(procession-12, accompanied-28)
prepc_by(accompanied-28, marching-30)
dobj(marching-30, bands-31)
conj_and(procession-12, floats-33)
advmod(large-36, sometimes-35)
advmod(balloons-37, large-36)
conj_or(procession-12, balloons-37)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Pencil))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN writing)
          (CC or)
          (NN drawing) (NN instrument))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP
                (NP (DT a) (JJ thin) (NN stick))
                (PP (IN of)
                  (NP (NN pigment))))
              (PRN (-LRB- -LRB-)
                (VP
                  (VP
                    (ADVP (RB usually))
                    (VBN graphite))
                  (, ,)
                  (CC but)
                  (VP (MD can)
                    (ADVP (RB also))
                    (VP (VB be)
                      (VP (VBN colored)
                        (NP (NN pigment)
                          (CC or)
                          (NN charcoal))))))
                (-RRB- -RRB-))
              (CC and)
              (NP
                (NP (NN clay))
                (, ,)
                (VP
                  (ADVP (RB usually))
                  (VBN encased)
                  (PP (IN in)
                    (NP (DT a) (JJ thin) (NN wood) (NN cylinder)))
                  (, ,)
                  (SBAR (IN though)
                    (S
                      (NP (NN paper)
                        (CC and)
                        (NN plastic) (NNS sheaths))
                      (VP (VBP are)
                        (ADVP (RB also))
                        (VP (VBN used))))))))))))
    (. .)))

det(Pencil-2, A-1)
nsubj(instrument-8, Pencil-2)
cop(instrument-8, is-3)
det(instrument-8, a-4)
nn(instrument-8, writing-5)
conj_or(writing-5, drawing-7)
nn(instrument-8, drawing-7)
root(ROOT-0, instrument-8)
partmod(instrument-8, consisting-9)
det(stick-13, a-11)
amod(stick-13, thin-12)
prep_of(consisting-9, stick-13)
prep_of(stick-13, pigment-15)
advmod(graphite-18, usually-17)
dep(stick-13, graphite-18)
aux(colored-24, can-21)
advmod(colored-24, also-22)
auxpass(colored-24, be-23)
dep(stick-13, colored-24)
conj_but(graphite-18, colored-24)
dobj(colored-24, pigment-25)
dobj(colored-24, charcoal-27)
conj_or(pigment-25, charcoal-27)
prep_of(consisting-9, clay-30)
conj_and(stick-13, clay-30)
advmod(encased-33, usually-32)
partmod(clay-30, encased-33)
det(cylinder-38, a-35)
amod(cylinder-38, thin-36)
nn(cylinder-38, wood-37)
prep_in(encased-33, cylinder-38)
mark(used-47, though-40)
nn(sheaths-44, paper-41)
conj_and(paper-41, plastic-43)
nn(sheaths-44, plastic-43)
nsubjpass(used-47, sheaths-44)
auxpass(used-47, are-45)
advmod(used-47, also-46)
advcl(encased-33, used-47)

(ROOT
  (S
    (PP
      (ADVP (RB Sometimes))
      (IN in)
      (NP (JJ common) (NN usage)))
    (, ,)
    (NP (DT the) (NN term) (NN Paranoia))
    (VP (VBZ is)
      (ADJP (JJ misused)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP (DT a) (NN phobia)))))))
    (. .)))

advmod(misused-10, Sometimes-1)
amod(usage-4, common-3)
prep_in(misused-10, usage-4)
det(Paranoia-8, the-6)
nn(Paranoia-8, term-7)
nsubj(misused-10, Paranoia-8)
cop(misused-10, is-9)
root(ROOT-0, misused-10)
aux(describe-12, to-11)
xcomp(misused-10, describe-12)
det(phobia-14, a-13)
dobj(describe-12, phobia-14)

(ROOT
  (S
    (NP (DT A) (NNP Phenotype))
    (VP (VBZ is)
      (NP
        (NP (DT any) (JJ observable) (NN characteristic))
        (PP (IN of)
          (NP
            (NP (DT an) (NN organism))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (PRP$ its) (NN morphology) (, ,) (NN development) (, ,) (NN biochemical)
                (CC or)
                (NN physiological) (NNS properties)))
            (, ,)
            (CC or)
            (NP (NN behavior))))))
    (. .)))

det(Phenotype-2, A-1)
nsubj(characteristic-6, Phenotype-2)
cop(characteristic-6, is-3)
det(characteristic-6, any-4)
amod(characteristic-6, observable-5)
root(ROOT-0, characteristic-6)
det(organism-9, an-8)
prep_of(characteristic-6, organism-9)
prep_of(characteristic-6, as-12)
conj_or(organism-9, as-12)
poss(properties-21, its-13)
nn(properties-21, morphology-14)
conj_or(morphology-14, development-16)
nn(properties-21, development-16)
conj_or(morphology-14, biochemical-18)
nn(properties-21, biochemical-18)
conj_or(morphology-14, physiological-20)
nn(properties-21, physiological-20)
prep_such_as(organism-9, properties-21)
prep_of(characteristic-6, behavior-24)
conj_or(organism-9, behavior-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Prefix))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ intergal) (NN portion))
        (PP (IN of)
          (NP
            (NP
              (NP (DT an) (NN object))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (DT a) (NN word))
                  (CC or)
                  (NP (NN term)))
                (-RRB- -RRB-)))
            (PP (IN with)
              (NP
                (NP (DT a)
                  (ADJP (JJ distinct)
                    (CC and)
                    (JJ reused))
                  (NN meaning))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ modifies)
                      (NP
                        (NP (DT the) (NN meaning))
                        (PP (IN of)
                          (NP (DT the) (JJ whole) (NN object)))))))))))))
    (. .)))

det(Prefix-2, A-1)
nsubj(portion-6, Prefix-2)
cop(portion-6, is-3)
det(portion-6, the-4)
amod(portion-6, intergal-5)
root(ROOT-0, portion-6)
det(object-9, an-8)
prep_of(portion-6, object-9)
det(word-12, a-11)
dep(object-9, word-12)
dep(object-9, term-14)
conj_or(word-12, term-14)
det(meaning-21, a-17)
amod(meaning-21, distinct-18)
conj_and(distinct-18, reused-20)
amod(meaning-21, reused-20)
prep_with(object-9, meaning-21)
nsubj(modifies-23, meaning-21)
rcmod(meaning-21, modifies-23)
det(meaning-25, the-24)
dobj(modifies-23, meaning-25)
det(object-29, the-27)
amod(object-29, whole-28)
prep_of(meaning-25, object-29)

(ROOT
  (S
    (NP (DT The) (NNP Pantoum))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP
            (NP (NN poetry))
            (ADJP (JJ similar)
              (PP (TO to)
                (NP (DT a) (NN villanelle))))))))
    (. .)))

det(Pantoum-2, The-1)
nsubj(form-5, Pantoum-2)
cop(form-5, is-3)
det(form-5, a-4)
root(ROOT-0, form-5)
prep_of(form-5, poetry-7)
amod(poetry-7, similar-8)
det(villanelle-11, a-10)
prep_to(similar-8, villanelle-11)

(ROOT
  (S
    (NP (DT A) (NNP Phospholipase))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN enzyme))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ converts)
              (NP (NNS phospholipids))
              (PP (IN into)
                (NP
                  (NP (JJ fatty) (NNS acids))
                  (CC and)
                  (NP (JJ other) (JJ lipophilic) (NNS substances)))))))))
    (. .)))

det(Phospholipase-2, A-1)
nsubj(enzyme-5, Phospholipase-2)
cop(enzyme-5, is-3)
det(enzyme-5, an-4)
root(ROOT-0, enzyme-5)
nsubj(converts-7, enzyme-5)
rcmod(enzyme-5, converts-7)
dobj(converts-7, phospholipids-8)
amod(acids-11, fatty-10)
prep_into(converts-7, acids-11)
amod(substances-15, other-13)
amod(substances-15, lipophilic-14)
prep_into(converts-7, substances-15)
conj_and(acids-11, substances-15)

(ROOT
  (S
    (NP (DT The) (NNPS Picts))
    (VP (VBD were)
      (NP
        (NP (DT a) (NN confederation))
        (PP (IN of)
          (NP
            (NP (NNS tribes))
            (PP (IN in)
              (SBAR
                (WHNP (WP what))
                (S
                  (ADVP (RB later))
                  (VP (VBD was)
                    (S
                      (VP (TO to)
                        (VP (VB become)
                          (NP (JJ central)
                            (CC and)
                            (JJ northern) (NNS Scotland))
                          (PP (IN from)
                            (NP (NNP Roman) (NNS times)))
                          (PP (IN until)
                            (NP (DT the) (JJ 10th) (NN century))))))))))))))
    (. .)))

det(Picts-2, The-1)
nsubj(confederation-5, Picts-2)
cop(confederation-5, were-3)
det(confederation-5, a-4)
root(ROOT-0, confederation-5)
prep_of(confederation-5, tribes-7)
nsubj(was-11, what-9)
advmod(was-11, later-10)
prepc_in(tribes-7, was-11)
aux(Scotland-17, to-12)
cop(Scotland-17, become-13)
amod(Scotland-17, central-14)
conj_and(central-14, northern-16)
amod(Scotland-17, northern-16)
xcomp(was-11, Scotland-17)
nn(times-20, Roman-19)
prep_from(Scotland-17, times-20)
det(century-24, the-22)
amod(century-24, 10th-23)
prep_until(Scotland-17, century-24)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ legal) (NNS terms)))
    (, ,)
    (NP (DT a) (NNP Plea))
    (VP (VBZ is)
      (ADVP (RB simply))
      (NP
        (NP (DT an) (NN answer))
        (PP (TO to)
          (NP
            (NP (DT a) (NN claim))
            (VP (VBN made)
              (PP (IN by)
                (NP
                  (NP (NN someone))
                  (PP (IN in)
                    (NP (DT a) (JJ civil)
                      (CC or)
                      (JJ criminal) (NN case)))))
              (PP (IN under)
                (NP
                  (NP (JJ common) (NN law))
                  (VP (VBG using)
                    (NP (DT the) (NN adversary) (NN system))))))))))
    (. .)))

amod(terms-3, legal-2)
prep_in(answer-10, terms-3)
det(Plea-6, a-5)
nsubj(answer-10, Plea-6)
cop(answer-10, is-7)
advmod(answer-10, simply-8)
det(answer-10, an-9)
root(ROOT-0, answer-10)
det(claim-13, a-12)
prep_to(answer-10, claim-13)
partmod(claim-13, made-14)
agent(made-14, someone-16)
det(case-22, a-18)
amod(case-22, civil-19)
conj_or(civil-19, criminal-21)
amod(case-22, criminal-21)
prep_in(someone-16, case-22)
amod(law-25, common-24)
prep_under(made-14, law-25)
partmod(law-25, using-26)
det(system-29, the-27)
nn(system-29, adversary-28)
dobj(using-26, system-29)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Pentium))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (NNP Intel) (POS 's))
          (JJ single-core) (JJ x86) (NN microprocessor)))
      (PP (VBN based)
        (PP (IN on)
          (NP (DT the) (JJ P5) (JJ fifth-generation) (NN microarchitecture)))))
    (. .)))

nsubj(refers-2, Pentium-1)
root(ROOT-0, refers-2)
poss(microprocessor-8, Intel-4)
amod(microprocessor-8, single-core-6)
amod(microprocessor-8, x86-7)
prep_to(refers-2, microprocessor-8)
prepc_based_on(refers-2, on-10)
det(microarchitecture-14, the-11)
amod(microarchitecture-14, P5-12)
amod(microarchitecture-14, fifth-generation-13)
pobj(refers-2, microarchitecture-14)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP
        (NP (NNP Plaintiff))
        (PRN (-LRB- -LRB-)
          (PP
            (NP
              (NP (NNP Ãƒâﾁ) (NNP „) (NNP Ã) (NNP ‚))
              (CC &)
              (NP (NN nbsp))
              (: ;))
            (IN in)
            (NP (JJ legal) (NN shorthand)))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT a) (NN claimant)
            (CC or)
            (NN complainant))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN party))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ initiates)
              (NP
                (NP (DT a) (NN lawsuit))
                (PRN (-LRB- -LRB-)
                  (VP
                    (ADVP (RB also))
                    (VBN known)
                    (PP (IN as)
                      (NP (DT an) (NN action))))
                  (-RRB- -RRB-))
                (PP (IN before)
                  (NP (DT a) (NN court)))))))))
    (. .)))

nsubj(party-25, Plaintiff-1)
nn(‚-6, Ãƒâﾁ-3)
nn(‚-6, „-4)
nn(‚-6, Ã-5)
npadvmod(in-10, ‚-6)
conj_and(‚-6, nbsp-8)
npadvmod(in-10, nbsp-8)
dep(Plaintiff-1, in-10)
amod(shorthand-12, legal-11)
pobj(in-10, shorthand-12)
advmod(known-16, also-15)
partmod(Plaintiff-1, known-16)
det(claimant-19, a-18)
prep_as(known-16, claimant-19)
prep_as(known-16, complainant-21)
conj_or(claimant-19, complainant-21)
cop(party-25, is-23)
det(party-25, the-24)
root(ROOT-0, party-25)
nsubj(initiates-27, party-25)
rcmod(party-25, initiates-27)
det(lawsuit-29, a-28)
dobj(initiates-27, lawsuit-29)
advmod(known-32, also-31)
dep(lawsuit-29, known-32)
det(action-35, an-34)
prep_as(known-32, action-35)
det(court-39, a-38)
prep_before(lawsuit-29, court-39)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The)
        (NP
          (NP (NNP Punjab)
            (CC or)
            (NNP Panjab))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NNP Urdu))
              (: :)
              (NP (NN audio)))
            (-RRB- -RRB-)))
        (NN province))
      (PP (IN of)
        (NP (NNP Pakistan))))
    (VP
      (VP (VBZ is)
        (PP (RB by) (RB far)
          (NP
            (NP (DT the) (NN country) (POS 's))
            (ADJP (RBS most) (JJ populous)
              (CC and)
              (JJ prosperous))
            (NN region))))
      (CC and)
      (VP (VBZ is)
        (ADVP (RB home))
        (PP (TO to)
          (NP (DT the) (NNP Punjabis)
            (CC and)
            (JJ various) (JJ other) (NNS groups)))))
    (. .)))

det(province-10, The-1)
nn(province-10, Punjab-2)
conj_or(Punjab-2, Panjab-4)
nn(province-10, Panjab-4)
dep(Punjab-2, Urdu-6)
dep(Urdu-6, audio-8)
nsubj(is-13, province-10)
nsubj(is-25, province-10)
prep_of(province-10, Pakistan-12)
root(ROOT-0, is-13)
prep(is-13, by-14)
advmod(by-14, far-15)
det(country-17, the-16)
poss(region-23, country-17)
advmod(populous-20, most-19)
amod(region-23, populous-20)
conj_and(populous-20, prosperous-22)
amod(region-23, prosperous-22)
pobj(by-14, region-23)
conj_and(is-13, is-25)
advmod(is-25, home-26)
det(Punjabis-29, the-28)
prep_to(is-25, Punjabis-29)
amod(groups-33, various-31)
amod(groups-33, other-32)
prep_to(is-25, groups-33)
conj_and(Punjabis-29, groups-33)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Greek) (NN mythology)))
    (, ,)
    (NP (NNP Proteus))
    (VP (VBZ is)
      (NP (DT an) (JJ early) (JJ sea-god) (, ,) (NN one))
      (PP (IN of)
        (NP
          (NP (JJ several) (NNS deities))
          (SBAR
            (WHNP (WP whom))
            (S
              (NP (NNP Homer))
              (VP (VBZ calls)
                (NP
                  (NP (NNP the) ('' '') (NNP Old) (NNP Man))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNP Sea) ('' ''))
                      (, ,)
                      (SBAR
                        (WHNP (WP$ whose) (NN name))
                        (S
                          (VP (VBZ suggests)
                            (NP (NNP the) ('' ''))
                            (ADVP (RB first)))))))))))))
      ('' '') (, ,)
      (SBAR (IN as)
        (S
          (NP (NNS protogonos))
          (VP (VBZ is)
            (NP
              (NP (DT the))
              ('' '')
              (SBAR
                (S
                  (NP
                    (NP (JJ primordial))
                    ('' '')
                    (CC or)
                    (NP (DT the))
                    ('' ''))
                  (VP (VBP firstborn) ('' '')))))))))
    (. .)))

amod(mythology-3, Greek-2)
prep_in(one-11, mythology-3)
nsubj(one-11, Proteus-5)
cop(one-11, is-6)
det(one-11, an-7)
amod(one-11, early-8)
amod(one-11, sea-god-9)
root(ROOT-0, one-11)
amod(deities-14, several-13)
prep_of(one-11, deities-14)
dobj(calls-17, deities-14)
rel(calls-17, whom-15)
nsubj(calls-17, Homer-16)
rcmod(deities-14, calls-17)
nn(Man-21, the-18)
nn(Man-21, Old-20)
dobj(calls-17, Man-21)
det(Sea-24, the-23)
prep_of(Man-21, Sea-24)
poss(name-28, Sea-24)
nsubj(suggests-29, name-28)
rcmod(Sea-24, suggests-29)
dobj(suggests-29, the-30)
advmod(suggests-29, first-32)
mark(the-38, as-35)
nsubj(the-38, protogonos-36)
cop(the-38, is-37)
advcl(one-11, the-38)
dobj(firstborn-45, the-38)
nsubj(firstborn-45, primordial-40)
conj_or(primordial-40, the-43)
nsubj(firstborn-45, the-43)
rcmod(the-38, firstborn-45)

(ROOT
  (S
    (NP (DT A) (NNP Piston))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN component))
        (PP (IN of)
          (S
            (VP (VBG reciprocating)
              (NP (NNS engines) (, ,) (NNS pumps)
                (CC and)
                (NN gas) (NNS compressors)))))))
    (. .)))

det(Piston-2, A-1)
nsubj(component-5, Piston-2)
cop(component-5, is-3)
det(component-5, a-4)
root(ROOT-0, component-5)
prepc_of(component-5, reciprocating-7)
nn(pumps-10, engines-8)
dobj(reciprocating-7, pumps-10)
nn(compressors-13, gas-12)
dobj(reciprocating-7, compressors-13)
conj_and(pumps-10, compressors-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Private))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN soldier))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS lowest) (JJ military) (NN rank))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (NN equivalent))
                (PP (TO to)
                  (NP (NNP NATO) (NNP Rank) (NNPS Grades) (NNP OR-1)))
                (S
                  (VP (TO to)
                    (VP (VB OR-3)
                      (PP (VBG depending)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN force))
                            (VP (VBN served)
                              (PP (IN in))))))))))
              (-RRB- -RRB-))))))
    (. .)))

det(Private-2, A-1)
nsubj(soldier-5, Private-2)
cop(soldier-5, is-3)
det(soldier-5, a-4)
root(ROOT-0, soldier-5)
det(rank-10, the-7)
amod(rank-10, lowest-8)
amod(rank-10, military-9)
prep_of(soldier-5, rank-10)
dep(rank-10, equivalent-12)
nn(OR-1-17, NATO-14)
nn(OR-1-17, Rank-15)
nn(OR-1-17, Grades-16)
prep_to(equivalent-12, OR-1-17)
aux(OR-3-19, to-18)
infmod(equivalent-12, OR-3-19)
prepc_depending_on(OR-3-19, on-21)
det(force-23, the-22)
pobj(OR-3-19, force-23)
partmod(force-23, served-24)
prep(served-24, in-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NN religion)))
    (, ,)
    (NP
      (NP (DT a) (NN Prophet))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ prophetess))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ has)
                (VP (VBN encountered)
                  (NP
                    (NP (DT the) (NN supernatural))
                    (CC or)
                    (NP (DT the) (NN divine)))))
              (CC and)
              (VP (VBZ serves)
                (PP (IN as)
                  (NP
                    (NP (DT an) (NN intermediary))
                    (PP (IN with)
                      (NP (NN humanity)))))))))))
    (. .)))

prep_in(person-12, religion-2)
det(Prophet-5, a-4)
nsubj(person-12, Prophet-5)
dep(prophetess-8, or-7)
dep(Prophet-5, prophetess-8)
cop(person-12, is-10)
det(person-12, a-11)
root(ROOT-0, person-12)
nsubj(encountered-15, person-12)
nsubj(serves-22, person-12)
aux(encountered-15, has-14)
rcmod(person-12, encountered-15)
det(supernatural-17, the-16)
dobj(encountered-15, supernatural-17)
det(divine-20, the-19)
dobj(encountered-15, divine-20)
conj_or(supernatural-17, divine-20)
rcmod(person-12, serves-22)
conj_and(encountered-15, serves-22)
det(intermediary-25, an-24)
prep_as(serves-22, intermediary-25)
prep_with(intermediary-25, humanity-27)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN law) (RB as))
        (VP (VBN practiced)
          (PP (IN in)
            (NP
              (NP (NNS countries))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP follow)
                    (NP (DT the) (JJ English) (NN model))))))))))
    (, ,)
    (NP (DT a) (NN Pleading))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS papers))
            (VP (VBN filed)
              (PP (IN with)
                (NP
                  (NP (DT a) (NN court))
                  (PP (IN in)
                    (NP (DT a) (JJ civil) (NN action)))
                  (, ,)
                  (PP (JJ such) (IN as)
                    (NP
                      (NP (DT a) (NN complaint))
                      (, ,)
                      (NP (DT a) (NN demurrer))
                      (, ,)
                      (CC or)
                      (NP (DT an) (NN answer)))))))))))
    (. .)))

prep_in(one-16, law-2)
advmod(law-2, as-3)
partmod(law-2, practiced-4)
prep_in(practiced-4, countries-6)
nsubj(follow-8, countries-6)
rcmod(countries-6, follow-8)
det(model-11, the-9)
amod(model-11, English-10)
dobj(follow-8, model-11)
det(Pleading-14, a-13)
nsubj(one-16, Pleading-14)
cop(one-16, is-15)
root(ROOT-0, one-16)
det(papers-19, the-18)
prep_of(one-16, papers-19)
partmod(papers-19, filed-20)
det(court-23, a-22)
prep_with(filed-20, court-23)
det(action-27, a-25)
amod(action-27, civil-26)
prep_in(court-23, action-27)
det(complaint-32, a-31)
prep_such_as(court-23, complaint-32)
det(demurrer-35, a-34)
prep_such_as(court-23, demurrer-35)
conj_or(complaint-32, demurrer-35)
det(answer-39, an-38)
prep_such_as(court-23, answer-39)
conj_or(complaint-32, answer-39)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Peptidoglycan))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (NN murein))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNP polymer) (NNP consisting))
        (PP (IN of)
          (NP
            (NP (NNS sugars))
            (CC and)
            (NP (JJ amino) (NNS acids))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ forms)
              (NP (DT a) (JJ mesh-like) (NN layer))
              (PP (IN outside)
                (NP
                  (NP (DT the) (NN plasma) (NN membrane))
                  (PP (IN of)
                    (NP
                      (NP (NN eubacteria))
                      (PRN (-LRB- -LRB-)
                        (NP (JJ cell-wall))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj(consisting-11, Peptidoglycan-1)
advmod(known-4, also-3)
partmod(Peptidoglycan-1, known-4)
prep_as(known-4, murein-6)
cop(consisting-11, is-8)
det(consisting-11, a-9)
nn(consisting-11, polymer-10)
root(ROOT-0, consisting-11)
nsubj(forms-18, consisting-11)
prep_of(consisting-11, sugars-13)
amod(acids-16, amino-15)
prep_of(consisting-11, acids-16)
conj_and(sugars-13, acids-16)
rcmod(consisting-11, forms-18)
det(layer-21, a-19)
amod(layer-21, mesh-like-20)
dobj(forms-18, layer-21)
det(membrane-25, the-23)
nn(membrane-25, plasma-24)
prep_outside(forms-18, membrane-25)
prep_of(membrane-25, eubacteria-27)
dep(eubacteria-27, cell-wall-29)

(ROOT
  (S
    (NP
      (NP (NNP Prohibition))
      (PP (IN of)
        (NP
          (NP (NN alcohol))
          (, ,)
          (VP
            (ADVP (RB often))
            (VBN referred)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB simply))
                  (PP (IN as)
                    (NP (NNP Prohibition)))))))))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (NNP Dry) (NNP Law))))
      (, ,))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ sumptuary) (NN law))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ prohibits)
                (NP (NN alcohol))))))))
    (. .)))

nsubj(refers-18, Prohibition-1)
prep_of(Prohibition-1, alcohol-3)
xsubj(simply-8, alcohol-3)
advmod(referred-6, often-5)
partmod(alcohol-3, referred-6)
aux(simply-8, to-7)
xcomp(referred-6, simply-8)
prep_as(simply-8, Prohibition-10)
advmod(known-13, also-12)
partmod(Prohibition-1, known-13)
nn(Law-16, Dry-15)
prep_as(known-13, Law-16)
root(ROOT-0, refers-18)
det(law-22, a-20)
amod(law-22, sumptuary-21)
prep_to(refers-18, law-22)
nsubj(prohibits-24, law-22)
rcmod(law-22, prohibits-24)
dobj(prohibits-24, alcohol-25)

(ROOT
  (S
    (NP (DT A) (NNP Preservative))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ natural)
          (CC or)
          (JJ synthetic) (NN chemical))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN added)
                (PP (TO to)
                  (NP
                    (NP (NNS products))
                    (PP (JJ such) (IN as)
                      (NP
                        (NP (NNS foods))
                        (, ,)
                        (NP (NNS pharmaceuticals))
                        (, ,)
                        (NP (NNS paints))
                        (, ,)
                        (NP (JJ biological) (NNS samples))
                        (, ,)
                        (NP (NN wood))
                        (, ,)
                        (NP (FW etc.))))))))))))
    (. .)))

det(Preservative-2, A-1)
nsubj(chemical-8, Preservative-2)
cop(chemical-8, is-3)
det(chemical-8, a-4)
amod(chemical-8, natural-5)
conj_or(natural-5, synthetic-7)
amod(chemical-8, synthetic-7)
root(ROOT-0, chemical-8)
nsubjpass(added-11, chemical-8)
auxpass(added-11, is-10)
rcmod(chemical-8, added-11)
prep_to(added-11, products-13)
prep_such_as(products-13, foods-16)
appos(foods-16, pharmaceuticals-18)
appos(foods-16, paints-20)
amod(samples-23, biological-22)
appos(foods-16, samples-23)
appos(foods-16, wood-25)
appos(foods-16, etc.-27)

(ROOT
  (S
    (NP (DT The) (NNP Proteobacteria))
    (VP (VBP are)
      (NP
        (NP
          (NP (DT a) (JJ major) (NN group))
          (PRN (-LRB- -LRB-)
            (NP (NN phylum))
            (-RRB- -RRB-)))
        (PP (IN of)
          (NP (NNS bacteria)))))
    (. .)))

det(Proteobacteria-2, The-1)
nsubj(group-6, Proteobacteria-2)
cop(group-6, are-3)
det(group-6, a-4)
amod(group-6, major-5)
root(ROOT-0, group-6)
appos(group-6, phylum-8)
prep_of(group-6, bacteria-11)

(ROOT
  (S
    (S
      (NP (NNP Pollution))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN introduction))
          (PP (IN of)
            (NP
              (NP (NNS contaminants))
              (PP (IN into)
                (NP (DT an) (NN environment)))))
          (, ,)
          (PP (IN of)
            (SBAR
              (WHNP (WDT whatever))
              (S
                (VP
                  (VP (VBZ predetermined))
                  (CC or)
                  (VP (VBD agreed)
                    (PP (IN upon)
                      (NP
                        (NP (NNS proportions)
                          (CC or)
                          (NN frame))
                        (PP (IN of)
                          (NP (NN reference)))))))))))))
    (: ;)
    (S
      (NP (DT these) (NNS contaminants))
      (VP (VBP cause)
        (NP (NN instability) (, ,) (NN disorder) (, ,) (NN harm)
          (CC or)
          (NN discomfort))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ physical) (NNS systems))
            (CC or)
            (NP (NN living) (NNS organisms))))
        (ADVP (RB therein))))
    (. .)))

nsubj(introduction-4, Pollution-1)
cop(introduction-4, is-2)
det(introduction-4, the-3)
root(ROOT-0, introduction-4)
prep_of(introduction-4, contaminants-6)
det(environment-9, an-8)
prep_into(contaminants-6, environment-9)
nsubj(predetermined-13, whatever-12)
nsubj(agreed-15, whatever-12)
prepc_of(introduction-4, predetermined-13)
prepc_of(introduction-4, agreed-15)
conj_or(predetermined-13, agreed-15)
prep_upon(agreed-15, proportions-17)
prep_upon(agreed-15, frame-19)
conj_or(proportions-17, frame-19)
prep_of(proportions-17, reference-21)
det(contaminants-24, these-23)
nsubj(cause-25, contaminants-24)
parataxis(introduction-4, cause-25)
dobj(cause-25, instability-26)
dobj(cause-25, disorder-28)
conj_or(instability-26, disorder-28)
dobj(cause-25, harm-30)
conj_or(instability-26, harm-30)
dobj(cause-25, discomfort-32)
conj_or(instability-26, discomfort-32)
det(systems-36, the-34)
amod(systems-36, physical-35)
prep_to(cause-25, systems-36)
nn(organisms-39, living-38)
prep_to(cause-25, organisms-39)
conj_or(systems-36, organisms-39)
advmod(cause-25, therein-40)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (DT a) (NNP Promoter))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ regulatory) (NN region))
        (PP (IN of)
          (NP
            (NP (NNP DNA)
              (NX
                (NX
                  (ADJP (RB generally) (VBN located))
                  (NNS upstream))
                (PRN (-LRB- -LRB-)
                  (PP (IN towards)
                    (NP
                      (NP
                        (NP (DT the) (CD 5) (POS '))
                        (NN region))
                      (PP (IN of)
                        (NP (DT the) (NN sense) (NN strand)))))
                  (-RRB- -RRB-))))
            (PP (IN of)
              (NP
                (NP (DT a) (NN gene))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ allows)
                      (NP
                        (NP (NN transcription))
                        (PP (IN of)
                          (NP (DT the) (NN gene)))))))))))))
    (. .)))

prep_in(region-9, biology-2)
det(Promoter-5, a-4)
nsubj(region-9, Promoter-5)
cop(region-9, is-6)
det(region-9, a-7)
amod(region-9, regulatory-8)
root(ROOT-0, region-9)
dep(upstream-14, DNA-11)
advmod(located-13, generally-12)
amod(upstream-14, located-13)
prep_of(region-9, upstream-14)
dep(upstream-14, towards-16)
det(5-18, the-17)
poss(region-20, 5-18)
pobj(towards-16, region-20)
det(strand-24, the-22)
nn(strand-24, sense-23)
prep_of(region-20, strand-24)
det(gene-28, a-27)
prep_of(upstream-14, gene-28)
nsubj(allows-30, gene-28)
rcmod(gene-28, allows-30)
dobj(allows-30, transcription-31)
det(gene-34, the-33)
prep_of(transcription-31, gene-34)

(ROOT
  (S
    (NP (DT A) (NNP Pidgin))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN simplified) (NN language))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ develops)
              (PP (IN as)
                (NP
                  (NP (DT a) (NN means))
                  (PP (IN of)
                    (NP
                      (NP (NN communication))
                      (PP (IN between)
                        (NP
                          (NP
                            (QP (CD two)
                              (CC or)
                              (JJR more))
                            (NNS groups))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBP do) (RB not)
                                (VP (VB have)
                                  (NP
                                    (NP (DT a) (NN language))
                                    (PP (IN in)
                                      (NP (JJ common))))))))
                          (, ,)
                          (PP (IN in)
                            (NP
                              (NP (NNS situations))
                              (PP (JJ such) (IN as)
                                (NP (NN trade))))))))))))))))
    (. .)))

det(Pidgin-2, A-1)
nsubj(language-6, Pidgin-2)
cop(language-6, is-3)
det(language-6, a-4)
amod(language-6, simplified-5)
root(ROOT-0, language-6)
nsubj(develops-8, language-6)
rcmod(language-6, develops-8)
det(means-11, a-10)
prep_as(develops-8, means-11)
prep_of(means-11, communication-13)
num(groups-18, two-15)
conj_or(two-15, more-17)
quantmod(two-15, more-17)
num(groups-18, more-17)
prep_between(communication-13, groups-18)
nsubj(have-22, groups-18)
aux(have-22, do-20)
neg(have-22, not-21)
rcmod(groups-18, have-22)
det(language-24, a-23)
dobj(have-22, language-24)
prep_in(language-24, common-26)
prep_in(groups-18, situations-29)
prep_such_as(situations-29, trade-32)

(ROOT
  (S
    (NP (DT The) (NN PC-FX))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ video) (NN game) (NN console))
        (VP (VBN released)
          (PP (IN in)
            (NP (NNP Japan)))
          (PP (IN on)
            (NP (NNP December) (CD 23)))
          (PP
            (NP (CD 1994))
            (IN by)
            (NP (NNP NEC) (NNP Corporation))))))
    (. .)))

det(PC-FX-2, The-1)
nsubj(console-7, PC-FX-2)
cop(console-7, is-3)
det(console-7, a-4)
amod(console-7, video-5)
nn(console-7, game-6)
root(ROOT-0, console-7)
partmod(console-7, released-8)
prep_in(released-8, Japan-10)
prep_on(released-8, December-12)
num(December-12, 23-13)
npadvmod(released-8, 1994-14)
nn(Corporation-17, NEC-16)
agent(released-8, Corporation-17)

(ROOT
  (S
    (NP (NNP Pong))
    (VP (VBZ is)
      (VP
        (VP (VBN based)
          (PP (IN on)
            (NP
              (NP (DT the) (NN sport))
              (PP (IN of)
                (NP (NN table) (NN tennis)))
              (PRN (-LRB- -LRB-)
                (S
                  (VP
                    (ADVP (CC or))
                    ('' '') (MD ping)
                    (VP (VB pong) ('' ''))))
                (-RRB- -RRB-)))))
        (, ,)
        (CC and)
        (VP (VBN named)
          (PP (IN after)
            (NP
              (NP (DT the) (NN sound))
              (VP (VBN generated)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN circuitry))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (DT the) (NN ball))
                        (VP (VBZ is)
                          (VP (VBN hit)))))))))))))
    (. .)))

nsubjpass(based-3, Pong-1)
nsubjpass(named-19, Pong-1)
auxpass(based-3, is-2)
root(ROOT-0, based-3)
det(sport-6, the-5)
prep_on(based-3, sport-6)
nn(tennis-9, table-8)
prep_of(sport-6, tennis-9)
advmod(ping-13, or-11)
dep(sport-6, ping-13)
dep(ping-13, pong-14)
conj_and(based-3, named-19)
det(sound-22, the-21)
prep_after(named-19, sound-22)
partmod(sound-22, generated-23)
det(circuitry-26, the-25)
agent(generated-23, circuitry-26)
tmod(hit-31, circuitry-26)
advmod(hit-31, when-27)
det(ball-29, the-28)
nsubjpass(hit-31, ball-29)
auxpass(hit-31, is-30)
dep(circuitry-26, hit-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NN Product))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (S
              (VP (VBG multiplying)))))
        (, ,)
        (CC or)
        (NP
          (NP (DT an) (NN expression))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ identifies)
                (S
                  (NP (NNS factors))
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN multiplied)))))))))))
    (. .)))

prep_in(result-8, mathematics-2)
det(Product-5, a-4)
nsubj(result-8, Product-5)
cop(result-8, is-6)
det(result-8, the-7)
root(ROOT-0, result-8)
prepc_of(result-8, multiplying-10)
det(expression-14, an-13)
conj_or(result-8, expression-14)
nsubj(identifies-16, expression-14)
rcmod(expression-14, identifies-16)
nsubjpass(multiplied-20, factors-17)
aux(multiplied-20, to-18)
auxpass(multiplied-20, be-19)
xcomp(identifies-16, multiplied-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)
        (CC and)
        (NN grammar)))
    (, ,)
    (S
      (NP (DT a) (NNP Pronoun))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN pro-form))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ substitutes)
                (PP (IN for)
                  (NP (DT a) (NN noun) (NN phrase)))
                (PRN (-LRB- -LRB-)
                  (PP (VBG including)
                    (NP
                      (NP (DT a) (NN noun) (NN phrase))
                      (VP (VBG consisting)
                        (PP (IN of)
                          (NP (DT a) (JJ single) (NN noun))))))
                  (-RRB- -RRB-))
                (PP (IN with)
                  (CC or)
                  (IN without)
                  (NP (DT a) (NN determiner))))))
          (, ,)
          (PP (JJ such) (IN as)
            (NP (PRP you))))))
    (CC and)
    (S
      (NP (PRP they))
      (PP (IN in)
        (NP (NNP English))))
    (. .)))

prep_in(pro-form-10, linguistics-2)
conj_and(linguistics-2, grammar-4)
prep_in(pro-form-10, grammar-4)
det(Pronoun-7, a-6)
nsubj(pro-form-10, Pronoun-7)
cop(pro-form-10, is-8)
det(pro-form-10, a-9)
root(ROOT-0, pro-form-10)
nsubj(substitutes-12, pro-form-10)
nsubj(substitutes-12', pro-form-10)
rcmod(pro-form-10, substitutes-12)
rcmod(pro-form-10, substitutes-12')
conj_or(substitutes-12, substitutes-12')
det(phrase-16, a-14)
nn(phrase-16, noun-15)
prep_for(substitutes-12, phrase-16)
dep(substitutes-12, including-18)
det(phrase-21, a-19)
nn(phrase-21, noun-20)
pobj(including-18, phrase-21)
partmod(phrase-21, consisting-22)
det(noun-26, a-24)
amod(noun-26, single-25)
prep_of(consisting-22, noun-26)
det(determiner-32, a-31)
prep_with(substitutes-12, determiner-32)
prep_without(substitutes-12', determiner-32)
prep_such_as(pro-form-10, you-36)
conj_and(pro-form-10, they-38)
nsubj(substitutes-12, they-38)
dep(they-38, in-39)
pobj(in-39, English-40)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Christianity)))
    (, ,)
    (NP (NNP Psilanthropism)
      (CC or)
      (NNP Socinianism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ Christological) (NN view))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ believes)
              (SBAR
                (S
                  (NP (NNP Jesus))
                  (VP (VBD was)
                    (ADJP (RB merely) (JJ human))))))))))
    (. .)))

prep_in(view-10, Christianity-2)
nsubj(view-10, Psilanthropism-4)
conj_or(Psilanthropism-4, Socinianism-6)
nsubj(view-10, Socinianism-6)
cop(view-10, is-7)
det(view-10, a-8)
amod(view-10, Christological-9)
root(ROOT-0, view-10)
nsubj(believes-12, view-10)
rcmod(view-10, believes-12)
nsubj(human-16, Jesus-13)
cop(human-16, was-14)
advmod(human-16, merely-15)
ccomp(believes-12, human-16)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Psychiatrist))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (S
            (ADJP (JJ alienist))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN physician))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBZ specializes)
                (PP (IN in)
                  (NP (NN psychiatry))))
              (CC and)
              (VP (VBZ is)
                (VP (VBN certified)
                  (PP (IN in)
                    (S
                      (VP (VBG treating)
                        (NP (JJ mental) (NNS disorders))))))))))))
    (. .)))

det(Psychiatrist-2, A-1)
nsubj(physician-10, Psychiatrist-2)
advmod(called-5, also-4)
dep(Psychiatrist-2, called-5)
acomp(called-5, alienist-6)
cop(physician-10, is-8)
det(physician-10, a-9)
root(ROOT-0, physician-10)
nsubj(specializes-12, physician-10)
nsubjpass(certified-17, physician-10)
rcmod(physician-10, specializes-12)
prep_in(specializes-12, psychiatry-14)
auxpass(certified-17, is-16)
rcmod(physician-10, certified-17)
conj_and(specializes-12, certified-17)
prepc_in(certified-17, treating-19)
amod(disorders-21, mental-20)
dobj(treating-19, disorders-21)

(ROOT
  (S
    (NP (NNP Procyon))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT the) (JJ mammalian) (NNS genus))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT which)))
          (S
            (NP (NNS raccoons))
            (VP (VBP belong))))))
    (. .)))

nsubj(genus-6, Procyon-1)
cop(genus-6, is-2)
advmod(genus-6, also-3)
det(genus-6, the-4)
amod(genus-6, mammalian-5)
root(ROOT-0, genus-6)
rel(belong-10, which-8)
nsubj(belong-10, raccoons-9)
rcmod(genus-6, belong-10)

(ROOT
  (S
    (NP (NNP Plankton))
    (VP (VBZ consists)
      (PP (IN of)
        (NP
          (NP (DT any) (JJ drifting) (NNS organisms))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NNS animals))
              (, ,)
              (NP (NNS plants))
              (, ,)
              (NP (NN archaea))
              (, ,)
              (CC or)
              (NP (NNS bacteria)))
            (-RRB- -RRB-))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP inhabit)
                (NP
                  (NP (DT the) (JJ pelagic) (NN zone))
                  (PP (IN of)
                    (NP (NNS oceans) (, ,) (NNS seas) (, ,)
                      (CC or)
                      (NNS bodies)))
                  (PP (IN of)
                    (NP (JJ fresh) (NN water))))))))))
    (. .)))

nsubj(consists-2, Plankton-1)
root(ROOT-0, consists-2)
det(organisms-6, any-4)
amod(organisms-6, drifting-5)
prep_of(consists-2, organisms-6)
nsubj(inhabit-18, organisms-6)
dep(organisms-6, animals-8)
dep(organisms-6, plants-10)
conj_or(animals-8, plants-10)
dep(organisms-6, archaea-12)
conj_or(animals-8, archaea-12)
dep(organisms-6, bacteria-15)
conj_or(animals-8, bacteria-15)
rcmod(organisms-6, inhabit-18)
det(zone-21, the-19)
amod(zone-21, pelagic-20)
dobj(inhabit-18, zone-21)
prep_of(zone-21, oceans-23)
prep_of(zone-21, seas-25)
conj_or(oceans-23, seas-25)
prep_of(zone-21, bodies-28)
conj_or(oceans-23, bodies-28)
amod(water-31, fresh-30)
prep_of(zone-21, water-31)

(ROOT
  (S
    (PP (IN Among)
      (NP (DT some) (NNS phoneticians)))
    (, ,)
    (NP (NNP Phonation))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (JJ vocal) (NNS folds))
            (VP (VBP produce)
              (NP (JJ certain) (NNS sounds))
              (PP (IN through)
                (NP (JJ quasi-periodic) (NN vibration))))))))
    (. .)))

det(phoneticians-3, some-2)
prep_among(process-8, phoneticians-3)
nsubj(process-8, Phonation-5)
cop(process-8, is-6)
det(process-8, the-7)
root(ROOT-0, process-8)
rel(produce-14, which-10)
det(folds-13, the-11)
amod(folds-13, vocal-12)
nsubj(produce-14, folds-13)
rcmod(process-8, produce-14)
amod(sounds-16, certain-15)
dobj(produce-14, sounds-16)
amod(vibration-19, quasi-periodic-18)
prep_through(produce-14, vibration-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP
        (ADJP (JJ literary)
          (CC and)
          (JJ critical))
        (NN theory)))
    (, ,)
    (NP (NNP Posthumanism)
      (CC or)
      (NNP post-humanism))
    (, ,)
    (S
      (VP (VBG meaning)
        (PP (IN beyond)
          (NP (NN humanism)))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ major) (JJ European) (JJ continental) (NN philosophy))
        (PP (IN of)
          (NP (DT the) (JJ late) (JJ 20th)
            (CC and)
            (JJ early) (JJ 21st) (NNS centuries)))))
    (. .)))

amod(theory-5, literary-2)
conj_and(literary-2, critical-4)
amod(theory-5, critical-4)
prep_in(philosophy-20, theory-5)
nsubj(philosophy-20, Posthumanism-7)
conj_or(Posthumanism-7, post-humanism-9)
nsubj(philosophy-20, post-humanism-9)
partmod(philosophy-20, meaning-11)
prep_beyond(meaning-11, humanism-13)
cop(philosophy-20, is-15)
det(philosophy-20, a-16)
amod(philosophy-20, major-17)
amod(philosophy-20, European-18)
amod(philosophy-20, continental-19)
root(ROOT-0, philosophy-20)
dep(20th-24, the-22)
amod(20th-24, late-23)
prep_of(philosophy-20, 20th-24)
amod(centuries-28, early-26)
amod(centuries-28, 21st-27)
prep_of(philosophy-20, centuries-28)
conj_and(20th-24, centuries-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS mathematics))
        (, ,)
        (NP (NNS statistics))
        (, ,)
        (CC and)
        (NP (DT the) (JJ mathematical) (NNS sciences))))
    (, ,)
    (NP
      (NP (DT a) (NN Parameter))
      (PRN (-LRB- -LRB-)
        (NP (JJ auxiliary) (NN measure))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN quantity))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ defines)
              (NP
                (NP (JJ certain) (NNS characteristics))
                (PP (IN of)
                  (NP (NNS systems)
                    (CC or)
                    (NNS functions)))))))))
    (. .)))

prep_in(quantity-19, mathematics-2)
conj_and(mathematics-2, statistics-4)
prep_in(quantity-19, statistics-4)
det(sciences-9, the-7)
amod(sciences-9, mathematical-8)
conj_and(mathematics-2, sciences-9)
prep_in(quantity-19, sciences-9)
det(Parameter-12, a-11)
nsubj(quantity-19, Parameter-12)
amod(measure-15, auxiliary-14)
appos(Parameter-12, measure-15)
cop(quantity-19, is-17)
det(quantity-19, a-18)
root(ROOT-0, quantity-19)
nsubj(defines-21, quantity-19)
rcmod(quantity-19, defines-21)
amod(characteristics-23, certain-22)
dobj(defines-21, characteristics-23)
prep_of(characteristics-23, systems-25)
prep_of(characteristics-23, functions-27)
conj_or(systems-25, functions-27)

(ROOT
  (S
    (NP (DT A) (NNP Procedure))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN specification))
        (PP (IN of)
          (NP
            (NP (NN series))
            (PP (IN of)
              (NP (NNS actions) (, ,) (NNS acts)
                (CC or)
                (NNS operations)))))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBP have)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN executed)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (JJ same) (NN manner))
                          (PP (IN in)
                            (NP (NN order)))))
                      (S
                        (VP (TO to)
                          (VP
                            (ADVP (RB always))
                            (VB obtain)
                            (NP
                              (NP (DT the) (JJ same) (NN result))
                              (PP (IN in)
                                (NP
                                  (NP (DT the) (JJ same) (NNS circumstances))
                                  (PRN (-LRB- -LRB-)
                                    (PP (IN for)
                                      (NP
                                        (NP (NN example))
                                        (, ,)
                                        (NP (NN emergency) (NNS procedures))))
                                    (-RRB- -RRB-)))))))))))))))))
    (. .)))

det(Procedure-2, A-1)
nsubj(specification-5, Procedure-2)
cop(specification-5, is-3)
det(specification-5, a-4)
root(ROOT-0, specification-5)
nsubj(have-15, specification-5)
prep_of(specification-5, series-7)
prep_of(series-7, actions-9)
prep_of(series-7, acts-11)
conj_or(actions-9, acts-11)
prep_of(series-7, operations-13)
conj_or(actions-9, operations-13)
rcmod(specification-5, have-15)
aux(executed-18, to-16)
auxpass(executed-18, be-17)
xcomp(have-15, executed-18)
det(manner-22, the-20)
amod(manner-22, same-21)
prep_in(executed-18, manner-22)
prep_in(manner-22, order-24)
aux(obtain-27, to-25)
advmod(obtain-27, always-26)
xcomp(executed-18, obtain-27)
det(result-30, the-28)
amod(result-30, same-29)
dobj(obtain-27, result-30)
det(circumstances-34, the-32)
amod(circumstances-34, same-33)
prep_in(result-30, circumstances-34)
dep(circumstances-34, for-36)
pobj(for-36, example-37)
nn(procedures-40, emergency-39)
appos(example-37, procedures-40)

(ROOT
  (S
    (NP (DT A) (NN Pet)
      (CC or)
      (NN companion) (NN animal))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN animal))
        (VP (VBN kept)
          (PP (IN for)
            (NP (NN companionship)
              (CC and)
              (NN enjoyment)))
          (, ,)
          (PP (IN as)
            (NP
              (NP
                (ADJP (VBN opposed)
                  (PP (TO to)
                    (NP
                      (NP (NN livestock))
                      (, ,)
                      (NP (NN laboratory) (NNS animals))
                      (, ,)
                      (NP (JJ working) (NNS animals))
                      (CC or)
                      (NP (NN sport)))))
                (NNS animals))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP are)
                    (VP (VBN kept)
                      (PP (IN for)
                        (NP (JJ economic) (NNS reasons))))))))))))
    (. .)))

det(animal-5, A-1)
nn(animal-5, Pet-2)
conj_or(Pet-2, companion-4)
nn(animal-5, companion-4)
nsubj(animal-8, animal-5)
cop(animal-8, is-6)
det(animal-8, an-7)
root(ROOT-0, animal-8)
partmod(animal-8, kept-9)
prep_for(kept-9, companionship-11)
prep_for(kept-9, enjoyment-13)
conj_and(companionship-11, enjoyment-13)
amod(animals-27, opposed-16)
prep_to(opposed-16, livestock-18)
nn(animals-21, laboratory-20)
prep_to(opposed-16, animals-21)
conj_or(livestock-18, animals-21)
amod(animals-24, working-23)
prep_to(opposed-16, animals-24)
conj_or(livestock-18, animals-24)
prep_to(opposed-16, sport-26)
conj_or(livestock-18, sport-26)
prep_as(kept-9, animals-27)
nsubjpass(kept-31, animals-27)
auxpass(kept-31, are-30)
rcmod(animals-27, kept-31)
amod(reasons-34, economic-33)
prep_for(kept-31, reasons-34)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Photograph))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB often))
          (VBN shortened)
          (PP (TO to)
            (NP (NN photo))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN image))
        (VP (VBN created)
          (PP (IN by)
            (NP
              (NP (NN light))
              (VP (VBG falling)
                (PP (IN on)
                  (NP
                    (NP (DT a) (JJ light-sensitive) (NN surface))
                    (, ,)
                    (NP (RB usually) (JJ photographic) (NN film))
                    (CC or)
                    (NP
                      (NP (DT an) (JJ electronic) (NN imager))
                      (PP (JJ such) (IN as)
                        (NP
                          (NP (DT a) (NNP CCD))
                          (CC or)
                          (NP (DT a) (NNP CMOS) (NN chip)))))))))))))
    (. .)))

det(Photograph-2, A-1)
nsubj(image-11, Photograph-2)
advmod(shortened-5, often-4)
dep(Photograph-2, shortened-5)
prep_to(shortened-5, photo-7)
cop(image-11, is-9)
det(image-11, an-10)
root(ROOT-0, image-11)
partmod(image-11, created-12)
agent(created-12, light-14)
partmod(light-14, falling-15)
det(surface-19, a-17)
amod(surface-19, light-sensitive-18)
prep_on(falling-15, surface-19)
advmod(film-23, usually-21)
amod(film-23, photographic-22)
prep_on(falling-15, film-23)
conj_or(surface-19, film-23)
det(imager-27, an-25)
amod(imager-27, electronic-26)
prep_on(falling-15, imager-27)
conj_or(surface-19, imager-27)
det(CCD-31, a-30)
prep_such_as(imager-27, CCD-31)
det(chip-35, a-33)
nn(chip-35, CMOS-34)
prep_such_as(imager-27, chip-35)
conj_or(CCD-31, chip-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP PowerBook))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN line))
        (PP (IN of)
          (NP (NNP Macintosh) (NN laptop) (NNS computers)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP
                (VP (VBN designed))
                (, ,)
                (VP (VBN manufactured))
                (CC and)
                (VP (VBN sold)
                  (PP (IN by)
                    (NP
                      (NP (NNP Apple) (NNP Computer))
                      (, ,)
                      (NP (NNP Inc.))))
                  (PP (IN from)
                    (NP (CD 1991) (TO to) (CD 2006))))))))))
    (. .)))

det(PowerBook-2, The-1)
nsubj(line-5, PowerBook-2)
cop(line-5, is-3)
det(line-5, a-4)
root(ROOT-0, line-5)
nsubjpass(designed-12, line-5)
nsubjpass(manufactured-14, line-5)
nsubjpass(sold-16, line-5)
nn(computers-9, Macintosh-7)
nn(computers-9, laptop-8)
prep_of(line-5, computers-9)
auxpass(designed-12, was-11)
rcmod(line-5, designed-12)
rcmod(line-5, manufactured-14)
conj_and(designed-12, manufactured-14)
rcmod(line-5, sold-16)
conj_and(designed-12, sold-16)
nn(Computer-19, Apple-18)
prep_by(sold-16, Computer-19)
appos(Computer-19, Inc.-21)
num(2006-25, 1991-23)
dep(2006-25, to-24)
prep_from(sold-16, 2006-25)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN psychology))
        (CC and)
        (NP (DT the) (JJ cognitive) (NNS sciences))))
    (, ,)
    (NP (NNP Perception))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (S
            (VP (VBG attaining)
              (NP
                (NP (NN awareness)
                  (CC or)
                  (NN understanding))
                (PP (IN of)
                  (NP (JJ sensory) (NN information)))))))))
    (. .)))

prep_in(process-11, psychology-2)
det(sciences-6, the-4)
amod(sciences-6, cognitive-5)
conj_and(psychology-2, sciences-6)
prep_in(process-11, sciences-6)
nsubj(process-11, Perception-8)
cop(process-11, is-9)
det(process-11, the-10)
root(ROOT-0, process-11)
prepc_of(process-11, attaining-13)
dobj(attaining-13, awareness-14)
dobj(attaining-13, understanding-16)
conj_or(awareness-14, understanding-16)
amod(information-19, sensory-18)
prep_of(awareness-14, information-19)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ descriptive) (NNS statistics)))
    (, ,)
    (NP (DT a) (NNP Quartile))
    (VP (VBZ is)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP (DT the) (CD three) (NNS values)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBP divide)
              (S
                (NP (DT the) (JJ sorted) (NNS data))
                (VP (VBN set)
                  (PP (IN into)
                    (NP (CD four) (JJ equal) (NNS parts)))))
              (, ,)
              (SBAR (RB so) (IN that)
                (S
                  (NP (DT each) (NN part))
                  (VP (VBZ represents)
                    (NP
                      (NP (CD 1) (JJ \/) (NNS 4th))
                      (PP (IN of)
                        (NP (DT the) (JJ sampled) (NN population))))))))))))
    (. .)))

amod(statistics-3, descriptive-2)
prep_in(any-8, statistics-3)
det(Quartile-6, a-5)
nsubj(any-8, Quartile-6)
cop(any-8, is-7)
root(ROOT-0, any-8)
nsubj(divide-14, any-8)
det(values-12, the-10)
num(values-12, three-11)
prep_of(any-8, values-12)
rcmod(any-8, divide-14)
det(data-17, the-15)
amod(data-17, sorted-16)
nsubj(set-18, data-17)
dep(divide-14, set-18)
num(parts-22, four-20)
amod(parts-22, equal-21)
prep_into(set-18, parts-22)
advmod(represents-28, so-24)
dep(represents-28, that-25)
det(part-27, each-26)
nsubj(represents-28, part-27)
advcl(divide-14, represents-28)
ccomp(divide-14, represents-28)
num(4th-31, 1-29)
amod(4th-31, \/-30)
dobj(represents-28, 4th-31)
det(population-35, the-33)
amod(population-35, sampled-34)
prep_of(4th-31, population-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Quantization))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN procedure))
        (PP (IN for)
          (S
            (VP (VBG constructing)
              (NP (DT a) (NN quantum) (NN field) (NN theory))
              (PP (VBG starting)
                (PP (IN from)
                  (NP (DT a) (JJ classical) (NN field) (NN theory)))))))))
    (. .)))

prep_in(procedure-7, physics-2)
nsubj(procedure-7, Quantization-4)
cop(procedure-7, is-5)
det(procedure-7, a-6)
root(ROOT-0, procedure-7)
prepc_for(procedure-7, constructing-9)
det(theory-13, a-10)
nn(theory-13, quantum-11)
nn(theory-13, field-12)
dobj(constructing-9, theory-13)
prep(constructing-9, starting-14)
pcomp(starting-14, from-15)
det(theory-19, a-16)
amod(theory-19, classical-17)
nn(theory-19, field-18)
prep_from(starting-14, theory-19)

(ROOT
  (S
    (PP (IN By)
      (NP (DT a) (NNP Quantile)))
    (, ,)
    (NP (PRP we))
    (VP (VBP mean)
      (NP
        (NP
          (NP (DT the) (NN fraction))
          (PRN (-LRB- -LRB-)
            (NP
              (QP (CC or)
                (CD percent)))
            (-RRB- -RRB-)))
        (PP (IN of)
          (NP (NNS points))))
      (PP (IN below)
        (NP (DT the) (VBN given) (NN value))))
    (. .)))

det(Quantile-3, a-2)
prep_by(mean-6, Quantile-3)
nsubj(mean-6, we-5)
root(ROOT-0, mean-6)
det(fraction-8, the-7)
dobj(mean-6, fraction-8)
cc(percent-11, or-10)
dep(fraction-8, percent-11)
prep_of(fraction-8, points-14)
det(value-18, the-16)
amod(value-18, given-17)
prep_below(mean-6, value-18)

(ROOT
  (S
    (NP (DT A) (NNP Quotation))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN repetition))
        (PP (IN of)
          (NP
            (NP (CD one) (NN expression))
            (PP (IN as)
              (NP
                (NP (NN part))
                (PP (IN of)
                  (NP (DT another) (NN one))))))))
      (, ,)
      (SBAR
        (ADVP (RB particularly))
        (WHADVP (WRB when))
        (S
          (S
            (NP (DT the) (VBN quoted) (NN expression))
            (VP (VBZ is)
              (ADJP (JJ well-known))))
          (CC or)
          (S
            (ADVP (RB explicitly))
            (VP (VBN attributed)
              (PRN (-LRB- -LRB-)
                (PP (RB as) (IN by)
                  (NP (NN citation)))
                (-RRB- -RRB-))
              (PP (TO to)
                (NP (PRP$ its) (JJ original) (NN source))))))))
    (. .)))

det(Quotation-2, A-1)
nsubj(repetition-5, Quotation-2)
cop(repetition-5, is-3)
det(repetition-5, the-4)
root(ROOT-0, repetition-5)
num(expression-8, one-7)
prep_of(repetition-5, expression-8)
prep_as(expression-8, part-10)
det(one-13, another-12)
prep_of(part-10, one-13)
advmod(well-known-21, particularly-15)
advmod(well-known-21, when-16)
det(expression-19, the-17)
amod(expression-19, quoted-18)
nsubj(well-known-21, expression-19)
nsubj(attributed-24, expression-19)
cop(well-known-21, is-20)
dep(repetition-5, well-known-21)
advmod(attributed-24, explicitly-23)
dep(repetition-5, attributed-24)
conj_or(well-known-21, attributed-24)
advmod(by-27, as-26)
dep(attributed-24, by-27)
pobj(by-27, citation-28)
poss(source-33, its-31)
amod(source-33, original-32)
prep_to(attributed-24, source-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (PP
      (ADVP (RB especially))
      (IN in)
      (NP (JJ abstract) (NN algebra)))
    (, ,)
    (NP (DT a) (NNP Quasigroup))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ algebraic) (NN structure))
        (VP (VBG resembling)
          (NP
            (NP (DT a) (NN group))
            (PP (IN in)
              (NP (DT the) (NN sense))))
          (PP (IN that) ('' '')
            (NP
              (NP (NN division))
              ('' '')
              (SBAR
                (S
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (ADJP (JJ possible))))))))))
    (. .)))

prep_in(structure-14, mathematics-2)
advmod(structure-14, especially-4)
amod(algebra-7, abstract-6)
prep_in(structure-14, algebra-7)
det(Quasigroup-10, a-9)
nsubj(structure-14, Quasigroup-10)
cop(structure-14, is-11)
det(structure-14, an-12)
amod(structure-14, algebraic-13)
root(ROOT-0, structure-14)
partmod(structure-14, resembling-15)
det(group-17, a-16)
attr(resembling-15, group-17)
det(sense-20, the-19)
prep_in(group-17, sense-20)
prep_that(resembling-15, division-23)
cop(possible-27, is-25)
advmod(possible-27, always-26)
rcmod(division-23, possible-27)

(ROOT
  (S
    (NP (DT The) (NNP Quagga))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP (JJ extinct))
          (NNS subspecies))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ plains) (NN zebra))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD was)
                  (ADVP (RB once))
                  (VP (VBN found)
                    (PP (IN in)
                      (NP
                        (NP
                          (NP (JJ great) (NNS numbers))
                          (PP (IN in)
                            (NP
                              (NP (NNP South) (NNP Africa) (POS 's))
                              (NNP Cape) (NNP Province))))
                        (CC and)
                        (NP
                          (NP (DT the) (JJ southern) (NN part))
                          (PP (IN of)
                            (NP (DT the) (NNP Orange) (NNP Free) (NNP State))))))))))))))
    (. .)))

det(Quagga-2, The-1)
nsubj(subspecies-6, Quagga-2)
cop(subspecies-6, is-3)
det(subspecies-6, an-4)
amod(subspecies-6, extinct-5)
root(ROOT-0, subspecies-6)
det(zebra-10, the-8)
amod(zebra-10, plains-9)
prep_of(subspecies-6, zebra-10)
nsubjpass(found-15, zebra-10)
auxpass(found-15, was-13)
advmod(found-15, once-14)
rcmod(zebra-10, found-15)
amod(numbers-18, great-17)
prep_in(found-15, numbers-18)
nn(Africa-21, South-20)
poss(Province-24, Africa-21)
nn(Province-24, Cape-23)
prep_in(numbers-18, Province-24)
det(part-28, the-26)
amod(part-28, southern-27)
prep_in(found-15, part-28)
conj_and(numbers-18, part-28)
det(State-33, the-30)
nn(State-33, Orange-31)
nn(State-33, Free-32)
prep_of(part-28, State-33)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP Grizzly) (NN bear))
        (PRN (-LRB- -LRB-)
          (S
            (NP (NNP Ursus) (NNS arctos))
            (VP (VBZ horribilis)))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT the) (NN silvertip) (NN bear))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subspecies))
        (PP (IN of)
          (NP (JJ brown) (NN bear)))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB generally))
            (VP (VBZ lives)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS uplands))
                  (PP (IN of)
                    (NP (JJ western) (NNP North) (NNP America))))))))))
    (. .)))

det(bear-3, The-1)
nn(bear-3, Grizzly-2)
nsubj(subspecies-19, bear-3)
nn(arctos-6, Ursus-5)
nsubj(horribilis-7, arctos-6)
dep(bear-3, horribilis-7)
advmod(known-11, also-10)
partmod(bear-3, known-11)
det(bear-15, the-13)
nn(bear-15, silvertip-14)
prep_as(known-11, bear-15)
cop(subspecies-19, is-17)
det(subspecies-19, a-18)
root(ROOT-0, subspecies-19)
nsubj(lives-25, subspecies-19)
amod(bear-22, brown-21)
prep_of(subspecies-19, bear-22)
advmod(lives-25, generally-24)
rcmod(subspecies-19, lives-25)
det(uplands-28, the-27)
prep_in(lives-25, uplands-28)
amod(America-32, western-30)
nn(America-32, North-31)
prep_of(uplands-28, America-32)

(ROOT
  (S
    (NP (DT The) (NNP Siberian) (NNP Tiger))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subspecies))
        (PP (IN of)
          (NP (NN tiger)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (VBN endangered)))))))
    (. .)))

det(Tiger-3, The-1)
nn(Tiger-3, Siberian-2)
nsubj(subspecies-6, Tiger-3)
cop(subspecies-6, is-4)
det(subspecies-6, a-5)
root(ROOT-0, subspecies-6)
nsubjpass(endangered-11, subspecies-6)
prep_of(subspecies-6, tiger-8)
auxpass(endangered-11, is-10)
rcmod(subspecies-6, endangered-11)

(ROOT
  (S
    (ADVP (RB Generally))
    (, ,)
    (NP (DT a) (NNP Quoin))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN wedge))
        (, ,)
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB support)
                (CC or)
                (VB anchor)
                (NP (JJ other) (NNS items))))))))
    (. .)))

advmod(wedge-7, Generally-1)
det(Quoin-4, a-3)
nsubj(wedge-7, Quoin-4)
cop(wedge-7, is-5)
det(wedge-7, a-6)
root(ROOT-0, wedge-7)
xsubj(support-11, wedge-7)
partmod(wedge-7, used-9)
aux(support-11, to-10)
xcomp(used-9, support-11)
xcomp(used-9, anchor-13)
conj_or(support-11, anchor-13)
amod(items-15, other-14)
dobj(support-11, items-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Quadrivium))
      (VP (VBN comprised)
        (NP
          (NP (DT the) (CD four) (NNS subjects))
          (, ,)
          (CC or)
          (NP (NNS arts))
          (, ,))))
    (VP (VBD taught)
      (PP (IN in)
        (NP (JJ medieval) (NNS universities)))
      (PP (IN after)
        (NP (DT the) (NN trivium))))
    (. .)))

det(Quadrivium-2, The-1)
nsubj(taught-11, Quadrivium-2)
partmod(Quadrivium-2, comprised-3)
det(subjects-6, the-4)
num(subjects-6, four-5)
dobj(comprised-3, subjects-6)
dobj(comprised-3, arts-9)
conj_or(subjects-6, arts-9)
root(ROOT-0, taught-11)
amod(universities-14, medieval-13)
prep_in(taught-11, universities-14)
det(trivium-17, the-16)
prep_after(taught-11, trivium-17)

(ROOT
  (S
    (NP (NNP Quarantine))
    (VP (VBZ is)
      (NP
        (ADJP (JJ voluntary)
          (CC or)
          (JJ compulsory))
        (NN isolation))
      (, ,)
      (S
        (ADVP (RB typically))
        (VP (TO to)
          (VP
            (VP (VB contain)
              (NP
                (NP (DT the) (NN spread))
                (PP (IN of)
                  (NP
                    (NP (NN something))
                    (VP (VBN considered)
                      (S
                        (ADJP (JJ dangerous)))))))
              (, ,)
              (ADVP (RB often)))
            (CC but)
            (RB not)
            (VP
              (ADVP (RB always))
              (NP (NN disease)))))))
    (. .)))

nsubj(isolation-6, Quarantine-1)
xsubj(contain-10, Quarantine-1)
cop(isolation-6, is-2)
amod(isolation-6, voluntary-3)
conj_or(voluntary-3, compulsory-5)
amod(isolation-6, compulsory-5)
root(ROOT-0, isolation-6)
advmod(contain-10, typically-8)
aux(contain-10, to-9)
xcomp(isolation-6, contain-10)
det(spread-12, the-11)
dobj(contain-10, spread-12)
prep_of(spread-12, something-14)
partmod(something-14, considered-15)
acomp(considered-15, dangerous-16)
advmod(contain-10, often-18)
xcomp(isolation-6, not-20)
conj_but(contain-10, not-20)
neg(contain-10, not-20)
advmod(disease-22, always-21)
dep(contain-10, disease-22)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Quasar))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN contraction))
          (PP (IN of)
            (NP (JJ QUASi-stellAR) (NN radio) (NN source))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT an)
        (ADJP
          (ADJP (RB extremely) (JJ powerful))
          (CC and)
          (ADJP (RB distant) (JJ active)))
        (JJ galactic) (NN nucleus)))
    (. .)))

det(Quasar-2, A-1)
nsubj(nucleus-18, Quasar-2)
dep(Quasar-2, contraction-4)
amod(source-8, QUASi-stellAR-6)
nn(source-8, radio-7)
prep_of(contraction-4, source-8)
cop(nucleus-18, is-10)
det(nucleus-18, an-11)
advmod(powerful-13, extremely-12)
amod(nucleus-18, powerful-13)
advmod(active-16, distant-15)
conj_and(powerful-13, active-16)
amod(nucleus-18, active-16)
amod(nucleus-18, galactic-17)
root(ROOT-0, nucleus-18)

(ROOT
  (S
    (NP (DT A) (NNP Quatrain))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN poem))
        (, ,)
        (CC or)
        (NP
          (NP (DT a) (NN stanza))
          (PP (IN within)
            (NP
              (NP (DT a) (NN poem))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ consists)
                    (ADVP (RB always))
                    (PP (IN of)
                      (NP (CD four) (NNS lines)))))))))))
    (. .)))

det(Quatrain-2, A-1)
nsubj(poem-5, Quatrain-2)
cop(poem-5, is-3)
det(poem-5, a-4)
root(ROOT-0, poem-5)
det(stanza-9, a-8)
conj_or(poem-5, stanza-9)
det(poem-12, a-11)
prep_within(stanza-9, poem-12)
nsubj(consists-15, poem-12)
rcmod(poem-12, consists-15)
advmod(consists-15, always-16)
num(lines-19, four-18)
prep_of(consists-15, lines-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NN Quake))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN first-person) (NN shooter) (NN computer) (NN game))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP (VBN released)
                (PP (IN by)
                  (NP
                    (NP (NNP id) (NNP Software))
                    (PP (IN on)
                      (NP (NNP June) (CD 22) (, ,) (CD 1996)))))))))))
    (. .)))

nsubj(game-7, Quake-1)
cop(game-7, is-2)
det(game-7, a-3)
nn(game-7, first-person-4)
nn(game-7, shooter-5)
nn(game-7, computer-6)
root(ROOT-0, game-7)
nsubjpass(released-10, game-7)
auxpass(released-10, was-9)
rcmod(game-7, released-10)
nn(Software-13, id-12)
agent(released-10, Software-13)
prep_on(Software-13, June-15)
num(June-15, 22-16)
num(June-15, 1996-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP (DT a) (NNP Quine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN program))
        (, ,)
        (NP
          (NP (DT a) (NN form))
          (PP (IN of)
            (NP (NN metaprogram))))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ produces)
              (NP (PRP$ its) (JJ complete) (NN source) (NN code))
              (PP (IN as)
                (NP (PRP$ its) (JJ only) (NN output))))))))
    (. .)))

prep_in(program-8, computing-2)
det(Quine-5, a-4)
nsubj(program-8, Quine-5)
cop(program-8, is-6)
det(program-8, a-7)
root(ROOT-0, program-8)
det(form-11, a-10)
appos(program-8, form-11)
nsubj(produces-16, form-11)
prep_of(form-11, metaprogram-13)
rcmod(program-8, produces-16)
rcmod(form-11, produces-16)
poss(code-20, its-17)
amod(code-20, complete-18)
nn(code-20, source-19)
dobj(produces-16, code-20)
poss(output-24, its-22)
amod(output-24, only-23)
prep_as(produces-16, output-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geometry)))
    (, ,)
    (NP (DT a) (NNP Quadrilateral))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN polygon))
        (PP (IN with)
          (NP
            (NP (CD four) (NNS sides)
              (CC or)
              (NNS edges))
            (CC and)
            (NP (CD four) (NNS vertices)
              (CC or)
              (NNS corners))))))
    (. .)))

prep_in(polygon-8, geometry-2)
det(Quadrilateral-5, a-4)
nsubj(polygon-8, Quadrilateral-5)
cop(polygon-8, is-6)
det(polygon-8, a-7)
root(ROOT-0, polygon-8)
num(sides-11, four-10)
prep_with(polygon-8, sides-11)
prep_with(polygon-8, edges-13)
conj_or(sides-11, edges-13)
num(vertices-16, four-15)
prep_with(polygon-8, vertices-16)
conj_and(sides-11, vertices-16)
conj_and(sides-11, corners-18)
conj_or(vertices-16, corners-18)

(ROOT
  (S
    (S
      (NP (DT A) (NN quantum))
      (VP (VBD bit)))
    (, ,)
    (CC or)
    (S
      (NP (NNP Qubit))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN unit))
          (PP (IN of)
            (NP (NN quantum) (NN information))))))
    (. .)))

det(quantum-2, A-1)
nsubj(bit-3, quantum-2)
root(ROOT-0, bit-3)
nsubj(unit-9, Qubit-6)
cop(unit-9, is-7)
det(unit-9, a-8)
conj_or(bit-3, unit-9)
nn(information-12, quantum-11)
prep_of(unit-9, information-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Quiver))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN container))
        (PP (IN for)
          (NP
            (NP (NNS arrows))
            (, ,)
            (NP (NN crossbow) (NNS bolts))
            (CC or)
            (NP (NN darts))))
        (, ,)
        (PP (JJ such) (IN as)
          (NP
            (NP (DT those))
            (VP (VBN shot)
              (PP (IN from)
                (NP (DT a) (NN bow) (, ,) (NN crossbow)
                  (CC or)
                  (NN blowgun))))))))
    (. .)))

det(Quiver-2, A-1)
nsubj(container-5, Quiver-2)
cop(container-5, is-3)
det(container-5, a-4)
root(ROOT-0, container-5)
prep_for(container-5, arrows-7)
nn(bolts-10, crossbow-9)
prep_for(container-5, bolts-10)
conj_or(arrows-7, bolts-10)
prep_for(container-5, darts-12)
conj_or(arrows-7, darts-12)
prep_such_as(container-5, those-16)
partmod(those-16, shot-17)
det(bow-20, a-19)
prep_from(shot-17, bow-20)
prep_from(shot-17, crossbow-22)
conj_or(bow-20, crossbow-22)
prep_from(shot-17, blowgun-24)
conj_or(bow-20, blowgun-24)

(ROOT
  (S
    (NP (DT A) (NNP Quarrel)
      (CC or)
      (NNP bolt))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN term))
        (PP (IN for)
          (NP
            (NP (DT the) (NN ammunition))
            (VP (VBN used)
              (PP (IN in)
                (NP (DT a) (NN crossbow))))))))
    (. .)))

det(Quarrel-2, A-1)
nsubj(term-7, Quarrel-2)
conj_or(Quarrel-2, bolt-4)
nsubj(term-7, bolt-4)
cop(term-7, is-5)
det(term-7, the-6)
root(ROOT-0, term-7)
det(ammunition-10, the-9)
prep_for(term-7, ammunition-10)
partmod(ammunition-10, used-11)
det(crossbow-14, a-13)
prep_in(used-11, crossbow-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP
      (NP (DT a) (NN Quartet))
      (PRN (-LRB- -LRB-)
        (NP (NN quatuor) (, ,) (NN Quartett) (, ,) (NN quartetto))
        (, ,)
        (NP (NNP cuarteto))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN method))
        (PP (IN of)
          (NP
            (NP
              (NP (NN instrumentation))
              (PRN (-LRB- -LRB-)
                (NP
                  (QP (CC or)
                    (DT a) (NN medium)))
                (-RRB- -RRB-)))
            (, ,)
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB perform)
                    (UCP
                      (NP (DT a) (JJ musical) (NN composition))
                      (, ,)
                      (CC and)
                      (VP (VBG consisting)
                        (PP (IN of)
                          (NP (CD four) (NNS parts)))))))))))))
    (. .)))

prep_in(method-17, music-2)
det(Quartet-5, a-4)
nsubj(method-17, Quartet-5)
nn(quartetto-11, quatuor-7)
dep(quartetto-11, Quartett-9)
appos(Quartet-5, quartetto-11)
dep(quartetto-11, cuarteto-13)
cop(method-17, is-15)
det(method-17, a-16)
root(ROOT-0, method-17)
prep_of(method-17, instrumentation-19)
xsubj(perform-28, instrumentation-19)
cc(medium-23, or-21)
quantmod(medium-23, a-22)
dep(instrumentation-19, medium-23)
partmod(instrumentation-19, used-26)
aux(perform-28, to-27)
xcomp(used-26, perform-28)
det(composition-31, a-29)
amod(composition-31, musical-30)
dobj(perform-28, composition-31)
dobj(perform-28, consisting-34)
conj_and(composition-31, consisting-34)
partmod(composition-31, consisting-34)
num(parts-37, four-36)
prep_of(consisting-34, parts-37)

(ROOT
  (S
    (NP (DT The) (NNP Quasi-War))
    (VP (VBD was)
      (NP
        (NP (DT an) (JJ undeclared) (NN war))
        (VP (VBN fought)
          (ADVP (RB entirely))
          (PP (IN at)
            (NP
              (NP (NN sea))
              (PP (IN between)
                (NP (DT the) (NNP United) (NNPS States)
                  (CC and)
                  (NNP France)))))
          (PP (IN from)
            (NP
              (QP (CD 1798) (TO to) (CD 1800)))))))
    (. .)))

det(Quasi-War-2, The-1)
nsubj(war-6, Quasi-War-2)
cop(war-6, was-3)
det(war-6, an-4)
amod(war-6, undeclared-5)
root(ROOT-0, war-6)
partmod(war-6, fought-7)
advmod(fought-7, entirely-8)
prep_at(fought-7, sea-10)
det(States-14, the-12)
nn(States-14, United-13)
prep_between(sea-10, States-14)
prep_between(sea-10, France-16)
conj_and(States-14, France-16)
number(1800-20, 1798-18)
dep(1800-20, to-19)
prep_from(fought-7, 1800-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS macroeconomics)))
    (, ,)
    (NP (DT a) (NN Recession))
    (VP (VBZ is)
      (ADVP (RB generally))
      (VP (VBN associated)
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN decline))
              (PP (IN in)
                (NP
                  (NP
                    (NP (DT a) (NN country) (POS 's))
                    (JJ real) (JJ gross) (JJ domestic) (NN product))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP GDP))
                    (-RRB- -RRB-)))))
            (, ,)
            (CC or)
            (NP (JJ negative) (JJ real) (JJ economic) (NN growth))))))
    (. .)))

prep_in(associated-8, macroeconomics-2)
det(Recession-5, a-4)
nsubjpass(associated-8, Recession-5)
auxpass(associated-8, is-6)
advmod(associated-8, generally-7)
root(ROOT-0, associated-8)
det(decline-11, a-10)
prep_with(associated-8, decline-11)
det(country-14, a-13)
poss(product-19, country-14)
amod(product-19, real-16)
amod(product-19, gross-17)
amod(product-19, domestic-18)
prep_in(decline-11, product-19)
abbrev(product-19, GDP-21)
amod(growth-28, negative-25)
amod(growth-28, real-26)
amod(growth-28, economic-27)
prep_with(associated-8, growth-28)
conj_or(decline-11, growth-28)

(ROOT
  (S
    (PP (IN In)
      (NP (NN cryptography)))
    (, ,)
    (NP (NNP RSA))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN algorithm))
        (PP (IN for)
          (NP (JJ public-key) (NN cryptography)))))
    (. .)))

prep_in(algorithm-7, cryptography-2)
nsubj(algorithm-7, RSA-4)
cop(algorithm-7, is-5)
det(algorithm-7, an-6)
root(ROOT-0, algorithm-7)
amod(cryptography-10, public-key-9)
prep_for(algorithm-7, cryptography-10)

(ROOT
  (S
    (NP (DT A) (NNP Religion))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (NP (NNS beliefs)
            (CC and)
            (NNS practices)))
        (, ,)
        (RRC
          (ADVP (RB often))
          (VP
            (VP (VBN centered)
              (PP (IN upon)
                (NP (JJ specific)
                  (ADJP (JJ supernatural)
                    (CC and)
                    (JJ moral))
                  (NNS claims)))
              (PP (IN about)
                (NP
                  (NP (NN reality))
                  (, ,)
                  (NP (DT the) (NNS cosmos))
                  (, ,)
                  (CC and)
                  (NP (JJ human) (NN nature)))))
            (, ,)
            (CC and)
            (ADVP (RB often))
            (VP (VBN codified)
              (PP (IN as)
                (NP
                  (NP (NN prayer))
                  (, ,)
                  (NP (NN ritual))
                  (, ,)
                  (CC or)
                  (NP (JJ religious) (NN law)))))))))
    (. .)))

det(Religion-2, A-1)
nsubj(set-5, Religion-2)
cop(set-5, is-3)
det(set-5, a-4)
root(ROOT-0, set-5)
prep_of(set-5, beliefs-7)
prep_of(set-5, practices-9)
conj_and(beliefs-7, practices-9)
advmod(centered-12, often-11)
rcmod(set-5, centered-12)
amod(claims-18, specific-14)
amod(claims-18, supernatural-15)
conj_and(supernatural-15, moral-17)
amod(claims-18, moral-17)
prep_upon(centered-12, claims-18)
prep_about(centered-12, reality-20)
det(cosmos-23, the-22)
prep_about(centered-12, cosmos-23)
conj_and(reality-20, cosmos-23)
amod(nature-27, human-26)
prep_about(centered-12, nature-27)
conj_and(reality-20, nature-27)
rcmod(set-5, often-30)
advmod(centered-12, often-30)
conj_and(centered-12, often-30)
rcmod(set-5, codified-31)
conj_and(centered-12, codified-31)
prep_as(codified-31, prayer-33)
prep_as(codified-31, ritual-35)
conj_or(prayer-33, ritual-35)
amod(law-39, religious-38)
prep_as(codified-31, law-39)
conj_or(prayer-33, law-39)

(ROOT
  (S
    (NP (DT A) (NNP Retronym))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN type))
          (PP (IN of)
            (NP (NN neologism))))
        (VP (VBN coined)
          (PP (IN for)
            (NP
              (NP (DT an) (JJ old) (NN object)
                (CC or)
                (NN concept))
              (SBAR
                (WHNP (WP$ whose)
                  (ADJP (JJ original))
                  (NN name))
                (S
                  (VP (VBZ has)
                    (VP (VBN come)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN used)
                              (PP (IN for)
                                (NP (NN something) (RB else)))))))))))))))
      (, ,)
      (VP (VBZ is)
        (ADJP
          (ADVP (RB no) (RBR longer))
          (JJ unique)))
      (, ,)
      (CC or)
      (VP (VBZ is)
        (ADJP (RB otherwise) (JJ inappropriate)
          (CC or)
          (JJ misleading))))
    (. .)))

det(Retronym-2, A-1)
nsubjpass(coined-8, Retronym-2)
nsubj(unique-30, Retronym-2)
nsubj(inappropriate-35, Retronym-2)
auxpass(coined-8, is-3)
cop(coined-8, is-3)
det(type-5, a-4)
attr(coined-8, type-5)
prep_of(type-5, neologism-7)
root(ROOT-0, coined-8)
det(object-12, an-10)
amod(object-12, old-11)
prep_for(coined-8, object-12)
poss(name-17, object-12)
prep_for(coined-8, concept-14)
conj_or(object-12, concept-14)
poss(name-17, concept-14)
amod(name-17, original-16)
nsubj(come-19, name-17)
aux(come-19, has-18)
rcmod(object-12, come-19)
aux(used-22, to-20)
auxpass(used-22, be-21)
xcomp(come-19, used-22)
prep_for(used-22, something-24)
advmod(something-24, else-25)
cop(unique-30, is-27)
advmod(longer-29, no-28)
advmod(unique-30, longer-29)
conj_or(coined-8, unique-30)
cop(inappropriate-35, is-33)
advmod(inappropriate-35, otherwise-34)
conj_or(coined-8, inappropriate-35)
conj_or(coined-8, misleading-37)
conj_or(inappropriate-35, misleading-37)

(ROOT
  (S
    (NP (NN Today))
    (NP (DT the) (NN term) (NNP Rhetoric))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN at)
            (NP (NNS times)))
          (S
            (VP (TO to)
              (VP (VB refer)
                (ADVP (RB only))
                (PP
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN form))
                      (PP (IN of)
                        (NP (NN argumentation)))))
                  (, ,)
                  (ADVP (RB often))
                  (PP (IN with)
                    (NP (DT the) (JJ pejorative) (NN connotation))))
                (SBAR (IN that)
                  (S
                    (NP (NN rhetoric))
                    (VP (VBZ is)
                      (NP
                        (NP (DT a) (NN means))
                        (PP (IN of)
                          (S
                            (VP (VBG obscuring)
                              (NP (DT the) (NN truth)))))))))))))))
    (. .)))

tmod(used-7, Today-1)
det(Rhetoric-4, the-2)
nn(Rhetoric-4, term-3)
nsubjpass(used-7, Rhetoric-4)
aux(used-7, can-5)
auxpass(used-7, be-6)
root(ROOT-0, used-7)
prep_at(used-7, times-9)
aux(refer-11, to-10)
xcomp(used-7, refer-11)
advmod(refer-11, only-12)
det(form-15, the-14)
prep_to(refer-11, form-15)
prep_of(form-15, argumentation-17)
advmod(refer-11, often-19)
det(connotation-23, the-21)
amod(connotation-23, pejorative-22)
prep_with(refer-11, connotation-23)
complm(means-28, that-24)
nsubj(means-28, rhetoric-25)
cop(means-28, is-26)
det(means-28, a-27)
ccomp(refer-11, means-28)
prepc_of(means-28, obscuring-30)
det(truth-32, the-31)
dobj(obscuring-30, truth-32)

(ROOT
  (S
    (NP (DT A) (NNP Rifle))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN firearm))
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN fired)
                  (PP (IN from)
                    (NP (DT the) (NN shoulder)))))))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT a) (NN barrel))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ has)
                    (NP
                      (NP (DT a) (JJ helical) (NN groove)
                        (CC or)
                        (NN pattern))
                      (PP (IN of)
                        (NP
                          (NP (NNP grooves))
                          (PRN (-LRB- -LRB-)
                            (NP (JJ '') (NN rifling))
                            ('' '') (-RRB- -RRB-))
                          (VP (VBN cut)
                            (PP (IN into)
                              (NP (DT the) (NN barrel) (NNS walls)))))))))))))))
    (. .)))

det(Rifle-2, A-1)
nsubj(firearm-5, Rifle-2)
cop(firearm-5, is-3)
det(firearm-5, a-4)
root(ROOT-0, firearm-5)
xsubj(fired-9, firearm-5)
partmod(firearm-5, designed-6)
aux(fired-9, to-7)
auxpass(fired-9, be-8)
xcomp(designed-6, fired-9)
det(shoulder-12, the-11)
prep_from(fired-9, shoulder-12)
det(barrel-16, a-15)
prep_with(designed-6, barrel-16)
nsubj(has-18, barrel-16)
rcmod(barrel-16, has-18)
det(groove-21, a-19)
amod(groove-21, helical-20)
dobj(has-18, groove-21)
dobj(has-18, pattern-23)
conj_or(groove-21, pattern-23)
prep_of(groove-21, grooves-25)
dep(grooves-25, rifling-28)
partmod(grooves-25, cut-31)
det(walls-35, the-33)
nn(walls-35, barrel-34)
prep_into(cut-31, walls-35)

(ROOT
  (S
    (NP (DT A) (NNP Miniature))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ small-scale) (NN reproduction))
        (, ,)
        (CC or)
        (NP (DT a) (JJ small) (NN variation))))
    (. .)))

det(Miniature-2, A-1)
nsubj(reproduction-6, Miniature-2)
cop(reproduction-6, is-3)
det(reproduction-6, a-4)
amod(reproduction-6, small-scale-5)
root(ROOT-0, reproduction-6)
det(variation-11, a-9)
amod(variation-11, small-10)
conj_or(reproduction-6, variation-11)

(ROOT
  (S
    (NP (NNS Rosales))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (PP (VBG including)
              (NP
                (NP (CD nine) (NNS families))
                (, ,)
                (NP
                  (NP (DT the) (NN type) (NN family))
                  (VP (VBG being)
                    (NP
                      (NP (DT the))
                      (SBAR
                        (S
                          (VP (VBD rose)
                            (NP (NN family) (NN Rosaceae))))))))))))))
    (. .)))

nsubj(order-4, Rosales-1)
cop(order-4, is-2)
det(order-4, an-3)
root(ROOT-0, order-4)
amod(plants-7, flowering-6)
prep_of(order-4, plants-7)
num(families-11, nine-10)
prep_including(plants-7, families-11)
det(family-15, the-13)
nn(family-15, type-14)
appos(families-11, family-15)
cop(the-17, being-16)
partmod(family-15, the-17)
rcmod(the-17, rose-18)
nn(Rosaceae-20, family-19)
dobj(rose-18, Rosaceae-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NN law)))
    (, ,)
    (NP (NNP Rebuttal))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (NN evidence)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN presented)
                (S
                  (VP (TO to)
                    (VP (VB contradict)
                      (CC or)
                      (VB nullify)
                      (NP
                        (NP (JJ other) (NN evidence))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ has)
                              (VP (VBN been)
                                (VP (VBN presented)
                                  (PP (IN by)
                                    (NP (DT an) (JJ adverse) (NN party))))))))))))))))))
    (. .)))

prep_in(form-7, law-2)
nsubj(form-7, Rebuttal-4)
cop(form-7, is-5)
det(form-7, a-6)
root(ROOT-0, form-7)
nsubjpass(presented-12, form-7)
prep_of(form-7, evidence-9)
auxpass(presented-12, is-11)
rcmod(form-7, presented-12)
aux(contradict-14, to-13)
xcomp(presented-12, contradict-14)
xcomp(presented-12, nullify-16)
conj_or(contradict-14, nullify-16)
amod(evidence-18, other-17)
dobj(contradict-14, evidence-18)
nsubjpass(presented-22, evidence-18)
aux(presented-22, has-20)
auxpass(presented-22, been-21)
rcmod(evidence-18, presented-22)
det(party-26, an-24)
amod(party-26, adverse-25)
agent(presented-22, party-26)

(ROOT
  (S
    (NP (DT A) (NN River))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ natural) (NN stream))
        (PP (IN of)
          (NP
            (NP (NN water))
            (, ,)
            (NP (RB usually) (NN freshwater))
            (, ,)))
        (VP (VBG flowing)
          (PP (IN toward)
            (NP
              (NP (DT an) (NN ocean))
              (, ,)
              (NP (DT a) (NN lake))
              (, ,)
              (CC or)
              (NP (DT another) (NN stream)))))))
    (. .)))

det(River-2, A-1)
nsubj(stream-6, River-2)
cop(stream-6, is-3)
det(stream-6, a-4)
amod(stream-6, natural-5)
root(ROOT-0, stream-6)
prep_of(stream-6, water-8)
advmod(freshwater-11, usually-10)
appos(water-8, freshwater-11)
partmod(stream-6, flowing-13)
det(ocean-16, an-15)
prep_toward(flowing-13, ocean-16)
det(lake-19, a-18)
prep_toward(flowing-13, lake-19)
conj_or(ocean-16, lake-19)
det(stream-23, another-22)
prep_toward(flowing-13, stream-23)
conj_or(ocean-16, stream-23)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Research))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT an) (JJ entire) (NN collection))
                (PP (IN of)
                  (NP (NN information))))
              (PP (IN about)
                (NP (DT a) (JJ particular) (NN subject))))))))
    (. .)))

det(Research-3, The-1)
nn(Research-3, term-2)
nsubjpass(used-6, Research-3)
xsubj(describe-8, Research-3)
auxpass(used-6, is-4)
advmod(used-6, also-5)
root(ROOT-0, used-6)
aux(describe-8, to-7)
xcomp(used-6, describe-8)
det(collection-11, an-9)
amod(collection-11, entire-10)
dobj(describe-8, collection-11)
prep_of(collection-11, information-13)
det(subject-17, a-15)
amod(subject-17, particular-16)
prep_about(describe-8, subject-17)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Republic))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN state)
          (CC or)
          (NN country))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (UCP (RB not)
                (S
                  (VP (VBN led)
                    (PP (IN by)
                      (NP (DT a) (JJ hereditary) (NN monarch)))))
                (, ,)
                (CC but)
                (SBAR
                  (WHPP (IN in)
                    (WHNP (WDT which)))
                  (S
                    (NP
                      (NP (DT the) (NNS people))
                      (PRN (-LRB- -LRB-)
                        (CC or)
                        (ADVP (IN at) (JJS least))
                        (NP
                          (NP (DT a) (NN part))
                          (PP (IN of)
                            (NP (PRP$ its) (NNS people))))
                        (-RRB- -RRB-)))
                    (VP (VBP have)
                      (NP
                        (NP (NN impact))
                        (PP (IN on)
                          (NP (PRP$ its) (NN government)))))))))))))
    (. .)))

det(Republic-2, A-1)
nsubj(state-5, Republic-2)
cop(state-5, is-3)
det(state-5, a-4)
root(ROOT-0, state-5)
nsubj(is-9, state-5)
conj_or(state-5, country-7)
nsubj(is-9, country-7)
rcmod(state-5, is-9)
dep(is-9, not-10)
dep(not-10, led-11)
det(monarch-15, a-13)
amod(monarch-15, hereditary-14)
prep_by(led-11, monarch-15)
dep(have-32, in-18)
pobj(in-18, which-19)
det(people-21, the-20)
nsubj(have-32, people-21)
dep(part-27, or-23)
dep(part-27, at-24)
pobj(at-24, least-25)
det(part-27, a-26)
dep(people-21, part-27)
poss(people-30, its-29)
prep_of(part-27, people-30)
dep(is-9, have-32)
conj_but(not-10, have-32)
dobj(have-32, impact-33)
poss(government-36, its-35)
prep_on(impact-33, government-36)

(ROOT
  (S
    (S
      (NP
        (NP (NN Raggamuffin) (NN music))
        (, ,)
        (NP
          (NP (RB usually) (JJ abbreviated))
          (PP (IN as)
            (NP (NNP Ragga))))
        (, ,))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN sub-genre))
          (PP (IN of)
            (NP (JJ dancehall) (NN music)
              (CC or)
              (NN reggae)))
          (, ,)
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (DT the) (NN instrumentation))
              (ADVP (RB primarily))
              (VP (VBZ consists)
                (PP (IN of)
                  (NP (JJ electronic) (NN music)))))))))
    (: ;)
    (S
      (NP (NN sampling))
      (ADVP (RB often))
      (VP (VBZ serves)
        (NP
          (NP (DT a) (JJ prominent) (NN role))
          (PP (IN in)
            (NP (NN raggamuffin) (NN music))))
        (ADVP (RB as) (RB well))))
    (. .)))

nn(music-2, Raggamuffin-1)
nsubj(sub-genre-11, music-2)
advmod(abbreviated-5, usually-4)
appos(music-2, abbreviated-5)
prep_as(abbreviated-5, Ragga-7)
cop(sub-genre-11, is-9)
det(sub-genre-11, a-10)
root(ROOT-0, sub-genre-11)
amod(music-14, dancehall-13)
prep_of(sub-genre-11, music-14)
prep_of(sub-genre-11, reggae-16)
conj_or(music-14, reggae-16)
rel(consists-23, which-19)
det(instrumentation-21, the-20)
nsubj(consists-23, instrumentation-21)
advmod(consists-23, primarily-22)
rcmod(sub-genre-11, consists-23)
amod(music-26, electronic-25)
prep_of(consists-23, music-26)
nsubj(serves-30, sampling-28)
advmod(serves-30, often-29)
parataxis(sub-genre-11, serves-30)
det(role-33, a-31)
amod(role-33, prominent-32)
dobj(serves-30, role-33)
nn(music-36, raggamuffin-35)
prep_in(role-33, music-36)
advmod(well-38, as-37)
mwe(well-38, as-37)
advmod(serves-30, well-38)

(ROOT
  (S
    (NP
      (NP (DT The) (NN term) (NN Race))
      (CC or)
      (NP (JJ racial) (NN group)))
    (ADVP (RB usually))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN concept))
          (PP (IN of)
            (S
              (VP (VBG dividing)
                (NP (NNS humans))
                (PP (IN into)
                  (NP (NNS populations)
                    (CC or)
                    (NNS groups)))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN basis))
                    (PP (IN of)
                      (NP
                        (NP (JJ various) (NNS sets))
                        (PP (IN of)
                          (NP (NNS characteristics)))))))))))))
    (. .)))

det(Race-3, The-1)
nn(Race-3, term-2)
nsubj(refers-8, Race-3)
amod(group-6, racial-5)
conj_or(Race-3, group-6)
nsubj(refers-8, group-6)
advmod(refers-8, usually-7)
root(ROOT-0, refers-8)
det(concept-11, the-10)
prep_to(refers-8, concept-11)
prepc_of(concept-11, dividing-13)
dobj(dividing-13, humans-14)
prep_into(dividing-13, populations-16)
prep_into(dividing-13, groups-18)
conj_or(populations-16, groups-18)
det(basis-21, the-20)
prep_on(dividing-13, basis-21)
amod(sets-24, various-23)
prep_of(basis-21, sets-24)
prep_of(sets-24, characteristics-26)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ everyday) (NN usage)))
    (, ,)
    (NP (NNP Risk))
    (VP (VBZ is)
      (ADVP (RB often))
      (VP (VBN used)
        (ADVP (RB synonymously))
        (PP (IN with)
          (NP
            (NP (DT the) (NN probability))
            (PP (IN of)
              (NP (DT a) (VBN known) (NN loss)))))))
    (. .)))

amod(usage-3, everyday-2)
prep_in(used-8, usage-3)
nsubjpass(used-8, Risk-5)
auxpass(used-8, is-6)
advmod(used-8, often-7)
root(ROOT-0, used-8)
advmod(used-8, synonymously-9)
det(probability-12, the-11)
prep_with(used-8, probability-12)
det(loss-16, a-14)
amod(loss-16, known-15)
prep_of(probability-12, loss-16)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN band) (POS 's))
        (NN signature) (NN song))
      (, ,)
      (NP (DT the) (NNP Rammstein))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN commemoration))
        (PP (IN of)
          (NP
            (NP (DT the) (NN tragedy))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD took)
                  (NP (NN place))
                  (PP (IN at)
                    (NP (DT the) (NNP Ramstein) (NNP Air) (NNP Base))))))))))
    (. .)))

det(band-2, The-1)
poss(song-5, band-2)
nn(song-5, signature-4)
nsubj(commemoration-12, song-5)
det(Rammstein-8, the-7)
appos(song-5, Rammstein-8)
cop(commemoration-12, is-10)
det(commemoration-12, a-11)
root(ROOT-0, commemoration-12)
det(tragedy-15, the-14)
prep_of(commemoration-12, tragedy-15)
nsubj(took-17, tragedy-15)
rcmod(tragedy-15, took-17)
dobj(took-17, place-18)
det(Base-23, the-20)
nn(Base-23, Ramstein-21)
nn(Base-23, Air-22)
prep_at(took-17, Base-23)

(ROOT
  (S
    (NP (NNP The))
    (VP
      (VP (VBZ Rosaceae))
      (CC or)
      (VP (VBD rose)
        (SBAR
          (S
            (NP (NN family))
            (VP (VBZ is)
              (NP
                (NP (DT a) (JJ large) (NN family))
                (PP (IN of)
                  (NP (NNS plants))))
              (, ,)
              (PP (IN with)
                (NP
                  (NP
                    (QP (RB about) (CD 3,000-4) (CD ,000))
                    (NNS species))
                  (PP (IN in)
                    (NP (CD 100-120) (NN genera))))))))))
    (. .)))

nsubj(Rosaceae-2, The-1)
nsubj(rose-4, The-1)
root(ROOT-0, Rosaceae-2)
conj_or(Rosaceae-2, rose-4)
nsubj(family-9, family-5)
cop(family-9, is-6)
det(family-9, a-7)
amod(family-9, large-8)
ccomp(rose-4, family-9)
prep_of(family-9, plants-11)
quantmod(,000-16, about-14)
number(,000-16, 3,000-4-15)
num(species-17, ,000-16)
prep_with(family-9, species-17)
num(genera-20, 100-120-19)
prep_in(species-17, genera-20)

(ROOT
  (S
    (NP (NNP Neuro-linguistic) (NN programming))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN technique))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT an) (JJ undesirable) (NN behavior))
              (CC or)
              (NP (NN trait)))
            (VP (VBZ is)
              (VP (VBG conferred)
                (NP (DT a) (JJ positive) (NN intention))))))))
    (. .)))

nn(programming-2, Neuro-linguistic-1)
nsubj(technique-5, programming-2)
cop(technique-5, is-3)
det(technique-5, a-4)
root(ROOT-0, technique-5)
advmod(conferred-13, where-6)
det(behavior-9, an-7)
amod(behavior-9, undesirable-8)
nsubj(conferred-13, behavior-9)
conj_or(behavior-9, trait-11)
nsubj(conferred-13, trait-11)
aux(conferred-13, is-12)
rcmod(technique-5, conferred-13)
det(intention-16, a-14)
amod(intention-16, positive-15)
dobj(conferred-13, intention-16)

(ROOT
  (S
    (NP (NNP RPG))
    (ADVP (RBS most) (RB commonly))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (JJ Rocket-propelled) (NN grenade))
          (, ,)
          (NP (DT a) (JJ shoulder-launched) (JJ anti-tank) (NN weapon)))))
    (. .)))

nsubj(refers-4, RPG-1)
advmod(commonly-3, most-2)
advmod(refers-4, commonly-3)
root(ROOT-0, refers-4)
amod(grenade-7, Rocket-propelled-6)
prep_to(refers-4, grenade-7)
det(weapon-12, a-9)
amod(weapon-12, shoulder-launched-10)
amod(weapon-12, anti-tank-11)
appos(grenade-7, weapon-12)

(ROOT
  (S
    (NP (DT The) (NN term) (NN Radar))
    (VP (VBD was)
      (VP (VBN coined)
        (PP (IN in)
          (NP (CD 1941)))
        (PP (IN as)
          (NP
            (NP (DT an) (NN acronym))
            (PP (IN for)
              (NP (NNP Radio) (NNP Detection)
                (CC and)
                (NNP Ranging)))))))
    (. .)))

det(Radar-3, The-1)
nn(Radar-3, term-2)
nsubjpass(coined-5, Radar-3)
auxpass(coined-5, was-4)
root(ROOT-0, coined-5)
prep_in(coined-5, 1941-7)
det(acronym-10, an-9)
prep_as(coined-5, acronym-10)
nn(Detection-13, Radio-12)
prep_for(acronym-10, Detection-13)
prep_for(acronym-10, Ranging-15)
conj_and(Detection-13, Ranging-15)

(ROOT
  (S
    (NP (NNP RuneQuest))
    (VP (VBZ is)
      (NP (DT the) (JJ original) (JJ percentile)
        (ADJP (JJ die-based)
          (CC and)
          (JJ skill-based))
        (NN rule) (NN set)))
    (. .)))

nsubj(set-10, RuneQuest-1)
cop(set-10, is-2)
det(set-10, the-3)
amod(set-10, original-4)
amod(set-10, percentile-5)
amod(set-10, die-based-6)
conj_and(die-based-6, skill-based-8)
amod(set-10, skill-based-8)
nn(set-10, rule-9)
root(ROOT-0, set-10)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Rerun))
      (CC or)
      (NP (NN repeat)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN re-airing))
        (PP (IN of)
          (NP
            (NP (DT an) (NN episode))
            (PP (IN of)
              (NP (DT a) (NN media)
                (PRN (-LRB- -LRB-)
                  (NP (RB usually) (NN television))
                  (-RRB- -RRB-))
                (NN program)))))))
    (. .)))

det(Rerun-2, A-1)
nsubj(re-airing-7, Rerun-2)
conj_or(Rerun-2, repeat-4)
nsubj(re-airing-7, repeat-4)
cop(re-airing-7, is-5)
det(re-airing-7, a-6)
root(ROOT-0, re-airing-7)
det(episode-10, an-9)
prep_of(re-airing-7, episode-10)
det(program-18, a-12)
nn(program-18, media-13)
advmod(television-16, usually-15)
appos(program-18, television-16)
prep_of(episode-10, program-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (JJ Ribonucleic) (NN acid))
      (PRN (-LRB- -LRB-)
        (NP (NNP RNA))
        (-RRB- -RRB-)))
    (VP
      (VP (VBZ is)
        (NP (DT a) (JJ nucleic) (NN acid)))
      (CC and)
      (VP (VBZ consists)
        (PP (IN of)
          (NP
            (NP (DT a) (JJ long) (NN chain))
            (PP (IN of)
              (NP (JJ nucleotide) (NNS units)))))))
    (. .)))

amod(acid-2, Ribonucleic-1)
nsubj(acid-9, acid-2)
nsubj(consists-11, acid-2)
abbrev(acid-2, RNA-4)
cop(acid-9, is-6)
det(acid-9, a-7)
amod(acid-9, nucleic-8)
root(ROOT-0, acid-9)
conj_and(acid-9, consists-11)
det(chain-15, a-13)
amod(chain-15, long-14)
prep_of(consists-11, chain-15)
amod(units-18, nucleotide-17)
prep_of(chain-15, units-18)

(ROOT
  (S
    (NP (DT A) (NNP Robot))
    (VP (VBZ is)
      (NP (DT a) (JJ mechanical)
        (CC or)
        (JJ virtual) (NN artificial) (NN agent)))
    (. .)))

det(Robot-2, A-1)
nsubj(mechanical-5, Robot-2)
cop(mechanical-5, is-3)
dep(mechanical-5, a-4)
root(ROOT-0, mechanical-5)
amod(agent-9, virtual-7)
nn(agent-9, artificial-8)
conj_or(mechanical-5, agent-9)

(ROOT
  (S
    (NP (DT A) (NNP Revolver))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ repeating) (NN firearm))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ consists)
                (PP (IN of)
                  (NP (JJ multiple) (NNS chambers)))))))
        (CC and)
        (ADVP (IN at) (JJS least))
        (NP
          (NP (CD one) (NN barrel))
          (PP (IN for)
            (NP (NN firing))))))
    (. .)))

det(Revolver-2, A-1)
nsubj(firearm-6, Revolver-2)
cop(firearm-6, is-3)
det(firearm-6, a-4)
amod(firearm-6, repeating-5)
root(ROOT-0, firearm-6)
nsubj(consists-8, firearm-6)
rcmod(firearm-6, consists-8)
amod(chambers-11, multiple-10)
prep_of(consists-8, chambers-11)
advmod(firearm-6, at-13)
conj_and(firearm-6, at-13)
nsubj(consists-8, at-13)
pobj(at-13, least-14)
num(barrel-16, one-15)
conj_and(firearm-6, barrel-16)
nsubj(consists-8, barrel-16)
prep_for(barrel-16, firing-18)

(ROOT
  (S
    (NP (DT A) (NNPS Retrovirus))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN virus))
        (VP (VBG belonging)
          (PP (TO to)
            (NP (DT the) (JJ viral) (NN family) (NN Retroviridae))))))
    (. .)))

det(Retrovirus-2, A-1)
nsubj(virus-5, Retrovirus-2)
cop(virus-5, is-3)
det(virus-5, any-4)
root(ROOT-0, virus-5)
partmod(virus-5, belonging-6)
det(Retroviridae-11, the-8)
amod(Retroviridae-11, viral-9)
nn(Retroviridae-11, family-10)
prep_to(belonging-6, Retroviridae-11)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Rhein))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ major) (NN river))
          (PP (IN in)
            (NP (NNP Europe))))))
    (. .)))

nsubj(refers-2, Rhein-1)
root(ROOT-0, refers-2)
det(river-6, a-4)
amod(river-6, major-5)
prep_to(refers-2, river-6)
prep_in(river-6, Europe-8)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN history))
        (PP (IN of)
          (NP (NNP England)))))
    (, ,)
    (NP (NNP Recusancy))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN term))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT the) (JJ statutory) (NN offence))
                  (PP (IN of)
                    (S (RB not)
                      (VP
                        (VP (VBG complying)
                          (PP (IN with)))
                        (CC and)
                        (VP (VBG conforming)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NNP Established) (NN church)
                                (CC or)
                                (NN State) (NN religion))
                              (, ,)
                              (NP
                                (NP (DT the) (NN Church))
                                (PP (IN of)
                                  (NP (NNP England)))))))))))))))))
    (. .)))

det(history-3, the-2)
prep_in(term-10, history-3)
prep_of(history-3, England-5)
nsubj(term-10, Recusancy-7)
cop(term-10, was-8)
det(term-10, a-9)
root(ROOT-0, term-10)
xsubj(describe-13, term-10)
partmod(term-10, used-11)
aux(describe-13, to-12)
xcomp(used-11, describe-13)
det(offence-16, the-14)
amod(offence-16, statutory-15)
dobj(describe-13, offence-16)
neg(complying-19, not-18)
prepc_of(offence-16, complying-19)
prep(complying-19, with-20)
prepc_of(offence-16, conforming-22)
conj_and(complying-19, conforming-22)
det(church-26, the-24)
nn(church-26, Established-25)
prep_to(conforming-22, church-26)
nn(religion-29, State-28)
prep_to(conforming-22, religion-29)
conj_or(church-26, religion-29)
det(Church-32, the-31)
appos(church-26, Church-32)
prep_of(Church-32, England-34)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP
      (NP (NNP RÃƒâˆžÃ) (`` ‚) (NNP Â) ('' ¡) (NNP n))
      (PRN (-LRB- -LRB-)
        (NP (JJ '') (NN theft))
        ('' '') (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (NN sea) (NN goddess)))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(goddess-18, mythology-3)
nn(n-9, RÃƒâˆžÃ-5)
punct(n-9, ‚-6)
nn(n-9, Â-7)
punct(n-9, ¡-8)
nsubj(goddess-18, n-9)
dep(n-9, theft-12)
cop(goddess-18, is-15)
det(goddess-18, a-16)
nn(goddess-18, sea-17)
root(ROOT-0, goddess-18)

(ROOT
  (S
    (NP (DT A) (NNP Rapid))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN section))
        (PP (IN of)
          (NP
            (NP (DT a) (NN river))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NN river) (NN bed))
                (VP (VBZ has)
                  (NP
                    (NP (DT a)
                      (ADJP (RB relatively) (JJ steep))
                      (NN gradient))
                    (VP (VBG causing)
                      (NP
                        (NP (DT an) (NN increase))
                        (PP (IN in)
                          (NP (NN water) (NN flow)
                            (CC and)
                            (NN turbulence)))))))))))))
    (. .)))

det(Rapid-2, A-1)
nsubj(section-5, Rapid-2)
cop(section-5, is-3)
det(section-5, a-4)
root(ROOT-0, section-5)
det(river-8, a-7)
prep_of(section-5, river-8)
advmod(has-13, where-9)
det(bed-12, the-10)
nn(bed-12, river-11)
nsubj(has-13, bed-12)
rcmod(river-8, has-13)
det(gradient-17, a-14)
advmod(steep-16, relatively-15)
amod(gradient-17, steep-16)
dobj(has-13, gradient-17)
partmod(gradient-17, causing-18)
det(increase-20, an-19)
dobj(causing-18, increase-20)
nn(flow-23, water-22)
prep_in(increase-20, flow-23)
prep_in(increase-20, turbulence-25)
conj_and(flow-23, turbulence-25)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP MÃƒâˆžÃ) (NNP ‚) (NNP Ï))
        (SBAR
          (S
            (NP
              (ADJP ($ $) (JJ ller))
              (NNP von) (NNP KÃƒâˆžÃ) (NNP ‚) (NNP Â))
            (VP (VBZ ¶)
              (S
                (VP (VBG nigsberg)
                  (PRN (-LRB- -LRB-)
                    (FRAG
                      (NP
                        (NP (NNP June) (CD 6) (, ,) (CD 1436))
                        (NP (CC &)
                          (NN amp)))
                      (: ;)
                      (NP
                        (NP (NN ndash))
                        (: ;)
                        (NP (NNP July) (CD 6) (, ,) (CD 1476))))
                    (-RRB- -RRB-))))))))
      (, ,)
      (VP (VBN known)
        (PP (IN by)
          (NP (PRP$ his) (JJ Latin) (NN pseudonym) (NNS Regiomontanus))))
      (, ,))
    (VP (VBD was)
      (NP (DT an) (JJ important) (JJ German) (NN mathematician) (, ,) (NN astronomer)
        (CC and)
        (NN astrologer)))
    (. .)))

nn(Ï-3, MÃƒâˆžÃ-1)
nn(Ï-3, ‚-2)
dobj(¶-10, Ï-3)
nsubj(mathematician-39, Ï-3)
amod(Â-9, $-4)
dep($-4, ller-5)
nn(Â-9, von-6)
nn(Â-9, KÃƒâˆžÃ-7)
nn(Â-9, ‚-8)
nsubj(¶-10, Â-9)
rcmod(Ï-3, ¶-10)
xcomp(¶-10, nigsberg-11)
dep(nigsberg-11, June-13)
num(June-13, 6-14)
num(June-13, 1436-16)
cc(amp-18, &-17)
dep(June-13, amp-18)
dep(June-13, ndash-20)
dep(ndash-20, July-22)
num(July-22, 6-23)
num(July-22, 1476-25)
partmod(Ï-3, known-28)
poss(Regiomontanus-33, his-30)
amod(Regiomontanus-33, Latin-31)
nn(Regiomontanus-33, pseudonym-32)
agent(known-28, Regiomontanus-33)
cop(mathematician-39, was-35)
det(mathematician-39, an-36)
amod(mathematician-39, important-37)
amod(mathematician-39, German-38)
root(ROOT-0, mathematician-39)
conj_and(mathematician-39, astronomer-41)
conj_and(mathematician-39, astrologer-43)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Revolution))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ Latin) (NN revolutio))
            (, ,) ('' '')
            (NP (DT a) (NN turnaround) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fundamental) (NN change))
        (PP (IN in)
          (NP (NN power)
            (CC or)
            (JJ organizational) (NNS structures)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ takes)
              (NP (NN place))
              (PP (IN in)
                (NP
                  (NP (DT a)
                    (ADJP (RB relatively) (JJ short))
                    (NN period))
                  (PP (IN of)
                    (NP (NN time))))))))))
    (. .)))

det(Revolution-2, A-1)
nsubj(change-17, Revolution-2)
dep(Revolution-2, from-4)
det(revolutio-7, the-5)
amod(revolutio-7, Latin-6)
pobj(from-4, revolutio-7)
det(turnaround-11, a-10)
dep(revolutio-7, turnaround-11)
cop(change-17, is-14)
det(change-17, a-15)
amod(change-17, fundamental-16)
root(ROOT-0, change-17)
nsubj(takes-24, change-17)
nn(structures-22, power-19)
conj_or(power-19, organizational-21)
nn(structures-22, organizational-21)
prep_in(change-17, structures-22)
rcmod(change-17, takes-24)
dobj(takes-24, place-25)
det(period-30, a-27)
advmod(short-29, relatively-28)
amod(period-30, short-29)
prep_in(takes-24, period-30)
prep_of(period-30, time-32)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN ring) (NN theory))
        (, ,)
        (NP
          (NP (DT a) (NN branch))
          (PP (IN of)
            (NP (JJ abstract) (NN algebra))))))
    (, ,)
    (NP (DT an) (NNP Ideal))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN subset))
        (PP (IN of)
          (NP (DT a) (NN ring)))))
    (. .)))

nn(theory-3, ring-2)
prep_in(subset-16, theory-3)
det(branch-6, a-5)
appos(theory-3, branch-6)
amod(algebra-9, abstract-8)
prep_of(branch-6, algebra-9)
det(Ideal-12, an-11)
nsubj(subset-16, Ideal-12)
cop(subset-16, is-13)
det(subset-16, a-14)
amod(subset-16, special-15)
root(ROOT-0, subset-16)
det(ring-19, a-18)
prep_of(subset-16, ring-19)

(ROOT
  (S
    (NP (DT The) (NNP Radian))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP (NN plane) (NN angle)))
        (, ,)
        (VP (JJ equal)
          (PP (TO to)
            (NP
              (ADJP
                (QP (CD 180) (CD \/)))
              (NNP Ãƒâˆ) (NNP ‚) (NNP Ã) (NNP ‚)
              (PRN
                (ADVP (RB â))
                (NP ($ $)
                  (QP (NNS cents))))
              (NNS degrees))))
        (, ,)
        (CC or)
        (NP
          (QP (RB about) (CD 57.2958))
          (NNS degrees))))
    (. .)))

det(Radian-2, The-1)
nsubj(unit-5, Radian-2)
nsubj(equal-10, Radian-2)
cop(unit-5, is-3)
det(unit-5, a-4)
root(ROOT-0, unit-5)
nn(angle-8, plane-7)
prep_of(unit-5, angle-8)
conj_or(unit-5, equal-10)
number(\/-13, 180-12)
num(degrees-21, \/-13)
nn(degrees-21, Ãƒâˆ-14)
nn(degrees-21, ‚-15)
nn(degrees-21, Ã-16)
nn(degrees-21, ‚-17)
dep($-19, â-18)
dep(degrees-21, $-19)
num($-19, cents-20)
prep_to(equal-10, degrees-21)
quantmod(57.2958-25, about-24)
num(degrees-26, 57.2958-25)
conj_or(unit-5, degrees-26)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS telecommunications)))
    (, ,)
    (NP
      (NP (NN RS-232))
      (PRN (-LRB- -LRB-)
        (NP (NNP Recommended) (NNP Standard) (NNP 232))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN standard))
        (PP (IN for)
          (NP
            (NP (JJ serial) (JJ binary) (NN data) (NNS signals))
            (VP (VBG connecting)
              (PP (IN between)
                (NP
                  (NP (DT a) (NNP DTE))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Data) (NNP Terminal) (NNP Equipment))
                    (-RRB- -RRB-))
                  (CC and)
                  (NP (DT a) (NNP DCE))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Data) (NNP Circuit-terminating) (NNP Equipment))
                    (-RRB- -RRB-)))))))))
    (. .)))

prep_in(standard-12, telecommunications-2)
nsubj(standard-12, RS-232-4)
nn(232-8, Recommended-6)
nn(232-8, Standard-7)
appos(RS-232-4, 232-8)
cop(standard-12, is-10)
det(standard-12, a-11)
root(ROOT-0, standard-12)
amod(signals-17, serial-14)
amod(signals-17, binary-15)
nn(signals-17, data-16)
prep_for(standard-12, signals-17)
partmod(signals-17, connecting-18)
det(DTE-21, a-20)
prep_between(connecting-18, DTE-21)
nn(Equipment-25, Data-23)
nn(Equipment-25, Terminal-24)
appos(DTE-21, Equipment-25)
det(DCE-29, a-28)
prep_between(connecting-18, DCE-29)
conj_and(DTE-21, DCE-29)
nn(Equipment-33, Data-31)
nn(Equipment-33, Circuit-terminating-32)
appos(DTE-21, Equipment-33)

(ROOT
  (S
    (NP (DT A) (NNP Relationship))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ specific) (NN connection))
        (PP (IN between)
          (NP (NNS objects) (, ,) (NNS entities) (, ,) (NNS concepts)
            (CC or)
            (NNS people)))))
    (. .)))

det(Relationship-2, A-1)
nsubj(connection-6, Relationship-2)
cop(connection-6, is-3)
det(connection-6, a-4)
amod(connection-6, specific-5)
root(ROOT-0, connection-6)
prep_between(connection-6, objects-8)
prep_between(connection-6, entities-10)
conj_or(objects-8, entities-10)
prep_between(connection-6, concepts-12)
conj_or(objects-8, concepts-12)
prep_between(connection-6, people-14)
conj_or(objects-8, people-14)

(ROOT
  (S
    (NP (NNP RN))
    (VP (VBZ refers)
      (PP (TO to)
        (NP (NNP Registered) (NNP Nurse))))
    (. .)))

nsubj(refers-2, RN-1)
root(ROOT-0, refers-2)
nn(Nurse-5, Registered-4)
prep_to(refers-2, Nurse-5)

(ROOT
  (S
    (NP (NNP RP)
      (CC or)
      (NNP Rp))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (NNP Received) (NNP Pronunciation))
          (CC or)
          (NP (NNP Relief) (NNP pitcher)))))
    (. .)))

nsubj(refers-4, RP-1)
conj_or(RP-1, Rp-3)
nsubj(refers-4, Rp-3)
root(ROOT-0, refers-4)
nn(Pronunciation-7, Received-6)
prep_to(refers-4, Pronunciation-7)
nn(pitcher-10, Relief-9)
prep_to(refers-4, pitcher-10)
conj_or(Pronunciation-7, pitcher-10)

(ROOT
  (S
    (NP
      (NP (NNP Ruth))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Hebrew))
          (: :)
          (NP
            (NP (NNP ÃƒËœÃ) (NNP ‚) (NNP Â) (NNP ¨) (NNP ÃƒËœÃ) (NNP ‚) (NNP ï))
            (NP
              (QP (# #) (CD ¿) (CD ÃƒËœÃ))
              (NNP ‚) (NNP Âª) (NNPS rut))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ common) (JJ female) (JJ given) (NN name))
        (, ,)
        (RRC
          (PP (IN from)
            (NP (NNP Ruth)))
          (NP (DT the) (NN Moabite))
          (PP (IN in)
            (NP
              (NP (DT the) (NN Book))
              (PP (IN of)
                (NP (NNP Ruth)))))
          (, ,)
          (PP
            (ADVP (RB possibly))
            (IN from)
            (NP (DT the) (NNP Hebrew)))))
      (PP (IN for) ('' '')
        (NP (NN companion)))
      ('' ''))
    (. .)))

nsubj(name-24, Ruth-1)
dep(Ruth-1, Hebrew-3)
nn(ï-11, ÃƒËœÃ-5)
nn(ï-11, ‚-6)
nn(ï-11, Â-7)
nn(ï-11, ¨-8)
nn(ï-11, ÃƒËœÃ-9)
nn(ï-11, ‚-10)
dep(Hebrew-3, ï-11)
number(ÃƒËœÃ-14, #-12)
number(ÃƒËœÃ-14, ¿-13)
num(rut-17, ÃƒËœÃ-14)
nn(rut-17, ‚-15)
nn(rut-17, Âª-16)
dep(ï-11, rut-17)
cop(name-24, is-19)
det(name-24, a-20)
amod(name-24, common-21)
amod(name-24, female-22)
amod(name-24, given-23)
root(ROOT-0, name-24)
dep(Moabite-29, from-26)
pobj(from-26, Ruth-27)
det(Moabite-29, the-28)
rcmod(name-24, Moabite-29)
dep(Moabite-29, in-30)
det(Book-32, the-31)
pobj(in-30, Book-32)
prep_of(Book-32, Ruth-34)
advmod(from-37, possibly-36)
dep(Moabite-29, from-37)
det(Hebrew-39, the-38)
pobj(from-37, Hebrew-39)
prep_for(name-24, companion-42)

(ROOT
  (S
    (NP (NNP Railtrack))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN group))
        (PP (IN of)
          (NP
            (NP (NNS companies))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD owned)
                  (NP
                    (NP
                      (NP (DT the) (NN track))
                      (, ,)
                      (NP (NN signalling))
                      (, ,)
                      (NP (NNS tunnels))
                      (, ,)
                      (NP (NNS bridges))
                      (, ,)
                      (NP (NN level) (NNS crossings))
                      (CC and)
                      (NP (DT all)))
                    (CC but)
                    (NP
                      (NP (DT a) (NN handful))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS stations))
                          (PP (IN of)
                            (NP (DT the) (JJ British) (NN railway) (NN system)))))))
                  (PP (IN from)
                    (NP
                      (NP (PRP$ its) (NN formation))
                      (PP (IN in)
                        (NP (NNP April) (CD 1994)))))
                  (PP (IN until)
                    (NP (CD 2002))))))))))
    (. .)))

nsubj(group-4, Railtrack-1)
cop(group-4, was-2)
det(group-4, a-3)
root(ROOT-0, group-4)
prep_of(group-4, companies-6)
nsubj(owned-8, companies-6)
rcmod(companies-6, owned-8)
det(track-10, the-9)
dobj(owned-8, track-10)
dobj(owned-8, signalling-12)
conj_and(track-10, signalling-12)
dobj(owned-8, tunnels-14)
conj_and(track-10, tunnels-14)
dobj(owned-8, bridges-16)
conj_and(track-10, bridges-16)
nn(crossings-19, level-18)
dobj(owned-8, crossings-19)
conj_and(track-10, crossings-19)
dobj(owned-8, all-21)
conj_and(track-10, all-21)
det(handful-24, a-23)
dobj(owned-8, handful-24)
conj_but(track-10, handful-24)
det(stations-27, the-26)
prep_of(handful-24, stations-27)
det(system-32, the-29)
amod(system-32, British-30)
nn(system-32, railway-31)
prep_of(stations-27, system-32)
poss(formation-35, its-34)
prep_from(owned-8, formation-35)
prep_in(formation-35, April-37)
num(April-37, 1994-38)
prep_until(owned-8, 2002-40)

(ROOT
  (S
    (NP (DT A) (NN Roof))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN covering))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ uppermost) (NN part))
            (PP (IN of)
              (NP (DT a) (NN building)))))))
    (. .)))

det(Roof-2, A-1)
nsubj(covering-5, Roof-2)
cop(covering-5, is-3)
det(covering-5, the-4)
root(ROOT-0, covering-5)
det(part-9, the-7)
amod(part-9, uppermost-8)
prep_on(covering-5, part-9)
det(building-12, a-11)
prep_of(part-9, building-12)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (NNP Europe)
            (CC and)
            (NNP North) (NNP America)))))
    (, ,)
    (S
      (NP (NN Raven))
      (VP (VBZ is)
        (VP (VBN used)
          (PP (IN as)
            (NP
              (NP (DT a) (NN synonym))
              (PP (IN for)
                (NP (DT the) (JJ widespread) (JJ Common) (NN Raven))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (RB much))
        (PP (IN of)
          (NP
            (NP (DT the) (NN literature)
              (CC and)
              (NN culture))
            (VP (VBG surrounding)
              (NP (NNS ravens))))))
      (VP (VBZ refers)
        (WHPP (TO to)
          (WHNP (WDT that) (NN species)))))
    (. .)))

prep_in(used-11, most-2)
nn(America-7, Europe-4)
conj_and(Europe-4, North-6)
nn(America-7, North-6)
prep_of(most-2, America-7)
nsubjpass(used-11, Raven-9)
auxpass(used-11, is-10)
root(ROOT-0, used-11)
det(synonym-14, a-13)
prep_as(used-11, synonym-14)
det(Raven-19, the-16)
amod(Raven-19, widespread-17)
amod(Raven-19, Common-18)
prep_for(synonym-14, Raven-19)
nsubj(refers-30, much-22)
det(literature-25, the-24)
prep_of(much-22, literature-25)
prep_of(much-22, culture-27)
conj_and(literature-25, culture-27)
partmod(literature-25, surrounding-28)
dobj(surrounding-28, ravens-29)
conj_and(used-11, refers-30)
det(species-33, that-32)
prep_to(refers-30, species-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Rhombicuboctahedron))
      (, ,)
      (CC or)
      (NP (JJ small) (NN rhombicuboctahedron))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ Archimedean)
          (ADJP (JJ solid)
            (PP (IN with)
              (NP (CD eight))))
          (NN triangular))
        (CC and)
        (NP (JJ eighteen) (JJ square) (NNS faces))))
    (. .)))

det(Rhombicuboctahedron-2, The-1)
nsubj(triangular-14, Rhombicuboctahedron-2)
amod(rhombicuboctahedron-6, small-5)
conj_or(Rhombicuboctahedron-2, rhombicuboctahedron-6)
nsubj(triangular-14, rhombicuboctahedron-6)
cop(triangular-14, is-8)
det(triangular-14, an-9)
amod(triangular-14, Archimedean-10)
amod(triangular-14, solid-11)
prep_with(solid-11, eight-13)
root(ROOT-0, triangular-14)
amod(faces-18, eighteen-16)
amod(faces-18, square-17)
conj_and(triangular-14, faces-18)

(ROOT
  (S
    (S
      (NP (NNP Roswell))
      (VP (VBZ refers)
        (PP (TO to)
          (NP
            (NP (NNS places))
            (PP (IN in)
              (NP
                (NP (DT the) (NNP United) (NNPS States))
                (PP (IN of)
                  (NP
                    (NP (NNP America))
                    (PP (JJ such) (IN as)
                      (NP
                        (NP (NNP Roswell) (, ,) (NNP Georgia))
                        (, ,)
                        (NP
                          (NP (DT a) (NN suburb))
                          (PP (IN of)
                            (NP (NNP Atlanta))))))))))))))
    (: ;)
    (S
      (NP (DT A) (NNP Rhyme))
      (VP
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN repetition))
            (PP (IN of)
              (NP
                (NP
                  (ADJP (JJ identical)
                    (CC or)
                    (JJ similar))
                  (NNS sounds))
                (PP (IN in)
                  (NP
                    (QP (CD two)
                      (CC or)
                      (JJR more))
                    (JJ different) (NNS words)))))))
        (CC and)
        (VP (VBZ is)
          (ADVP (RBS most) (RB often))
          (VP (VBN used)
            (PP (IN in)
              (NP (NN poetry)
                (CC and)
                (NNS songs)))))))
    (. .)))

nsubj(refers-2, Roswell-1)
root(ROOT-0, refers-2)
prep_to(refers-2, places-4)
det(States-8, the-6)
nn(States-8, United-7)
prep_in(places-4, States-8)
prep_of(States-8, America-10)
nn(Georgia-15, Roswell-13)
prep_such_as(America-10, Georgia-15)
det(suburb-18, a-17)
appos(Georgia-15, suburb-18)
prep_of(suburb-18, Atlanta-20)
det(Rhyme-23, A-22)
nsubj(repetition-26, Rhyme-23)
nsubjpass(used-42, Rhyme-23)
cop(repetition-26, is-24)
det(repetition-26, a-25)
parataxis(refers-2, repetition-26)
amod(sounds-31, identical-28)
conj_or(identical-28, similar-30)
amod(sounds-31, similar-30)
prep_of(repetition-26, sounds-31)
num(words-37, two-33)
conj_or(two-33, more-35)
quantmod(two-33, more-35)
num(words-37, more-35)
amod(words-37, different-36)
prep_in(sounds-31, words-37)
auxpass(used-42, is-39)
advmod(often-41, most-40)
advmod(used-42, often-41)
parataxis(refers-2, used-42)
conj_and(repetition-26, used-42)
prep_in(used-42, poetry-44)
prep_in(used-42, songs-46)
conj_and(poetry-44, songs-46)

(ROOT
  (S
    (NP (DT The) (NNP Recorder))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ woodwind) (JJ musical) (NN instrument))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NN family))
              (VP (VBN known)
                (PP (IN as)
                  (NP
                    (NP (JJ fipple) (NNS flutes))
                    (CC or)
                    (NP (JJ internal) (NN duct) (NNS flutes))))))
            (: -)
            (NP
              (NP (JJ whistlelike) (NNS instruments))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP include)
                    (NP (DT the) (NN tin) (NN whistle))))))
            (CC and)
            (NP (NN ocarina))))))
    (. .)))

det(Recorder-2, The-1)
nsubj(instrument-7, Recorder-2)
cop(instrument-7, is-3)
det(instrument-7, a-4)
amod(instrument-7, woodwind-5)
amod(instrument-7, musical-6)
root(ROOT-0, instrument-7)
det(family-10, the-9)
prep_of(instrument-7, family-10)
partmod(family-10, known-11)
amod(flutes-14, fipple-13)
prep_as(known-11, flutes-14)
amod(flutes-18, internal-16)
nn(flutes-18, duct-17)
prep_as(known-11, flutes-18)
conj_or(flutes-14, flutes-18)
amod(instruments-21, whistlelike-20)
prep_of(instrument-7, instruments-21)
conj_and(family-10, instruments-21)
nsubj(include-23, instruments-21)
rcmod(instruments-21, include-23)
det(whistle-26, the-24)
nn(whistle-26, tin-25)
dobj(include-23, whistle-26)
prep_of(instrument-7, ocarina-28)
conj_and(family-10, ocarina-28)

(ROOT
  (S
    (NP (DT A) (NN Rocket)
      (CC or)
      (NN rocket) (NN vehicle))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN missile) (, ,) (NN aircraft)
          (CC or)
          (JJ other) (NN vehicle))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ obtains)
              (NP (NN thrust))
              (PP (IN by)
                (NP
                  (NP (DT the) (NN reaction))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN rocket))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN ejection))
                          (PP (IN of)
                            (NP
                              (NP (JJ fast) (VBG moving) (NN fluid))
                              (PP (IN from)
                                (NP (DT a) (NN rocket) (NN engine))))))))))))))))
    (. .)))

det(vehicle-5, A-1)
nn(vehicle-5, Rocket-2)
conj_or(Rocket-2, rocket-4)
nn(vehicle-5, rocket-4)
nsubj(vehicle-13, vehicle-5)
cop(vehicle-13, is-6)
det(vehicle-13, a-7)
nn(aircraft-10, missile-8)
nn(vehicle-13, aircraft-10)
conj_or(aircraft-10, other-12)
nn(vehicle-13, other-12)
root(ROOT-0, vehicle-13)
nsubj(obtains-15, vehicle-13)
rcmod(vehicle-13, obtains-15)
dobj(obtains-15, thrust-16)
det(reaction-19, the-18)
prep_by(obtains-15, reaction-19)
det(rocket-22, the-21)
prep_of(reaction-19, rocket-22)
det(ejection-25, the-24)
prep_to(rocket-22, ejection-25)
amod(fluid-29, fast-27)
amod(fluid-29, moving-28)
prep_of(ejection-25, fluid-29)
det(engine-33, a-31)
nn(engine-33, rocket-32)
prep_from(fluid-29, engine-33)

(ROOT
  (S
    (NP (NNP Range))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN set))
          (PP (IN of)
            (NP
              (NP (DT all) (NN output) (NNS values))
              (PP (IN of)
                (NP (DT a) (NN function))))))))
    (. .)))

nsubj(refers-2, Range-1)
root(ROOT-0, refers-2)
det(set-5, the-4)
prep_to(refers-2, set-5)
det(values-9, all-7)
nn(values-9, output-8)
prep_of(set-5, values-9)
det(function-12, a-11)
prep_of(values-9, function-12)

(ROOT
  (S
    (NP (NNP Range))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (NN difference))
          (PP (IN between)
            (NP
              (NP (DT the) (JJS highest)
                (CC and)
                (JJS lowest))
              (NP (NN value)))))))
    (. .)))

nsubj(refers-2, Range-1)
root(ROOT-0, refers-2)
det(difference-5, the-4)
prep_to(refers-2, difference-5)
dep(highest-8, the-7)
prep_between(difference-5, highest-8)
prep_between(difference-5, lowest-10)
conj_and(highest-8, lowest-10)
dep(highest-8, value-11)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Ramjet))
      (, ,)
      (VP
        (ADVP (RB sometimes))
        (VBN referred)
        (S
          (VP (TO to)))
        (PP (IN as)
          (NP (DT a) (JJ stovepipe) (NN jet))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (NN jet) (NN engine)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contains)
              (NP (DT no) (JJ major) (VBG moving) (NNS parts)))))))
    (. .)))

det(Ramjet-2, A-1)
xsubj(to-6, Ramjet-2)
nsubj(form-14, Ramjet-2)
advmod(referred-5, sometimes-4)
partmod(Ramjet-2, referred-5)
xcomp(referred-5, to-6)
det(jet-10, a-8)
amod(jet-10, stovepipe-9)
prep_as(referred-5, jet-10)
cop(form-14, is-12)
det(form-14, a-13)
root(ROOT-0, form-14)
nsubj(contains-19, form-14)
nn(engine-17, jet-16)
prep_of(form-14, engine-17)
rcmod(form-14, contains-19)
det(parts-23, no-20)
amod(parts-23, major-21)
amod(parts-23, moving-22)
dobj(contains-19, parts-23)

(ROOT
  (S
    (NP (NNP Robotech))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN story))
          (VP (VBN adapted)
            (PP (IN with)
              (NP (JJ edited) (NN content)))))
        (CC and)
        (NP
          (NP
            (NP (VBN revised) (NN dialogue))
            (PP (IN from)
              (NP
                (NP (DT the) (NN animation))
                (PP (IN of)
                  (NP (CD three) (JJ different) (NNP mecha) (NN anime) (NN series))))))
          (: :)
          (NP
            (NP (DT The) (NNP Super) (NNP Dimension) (NNP Fortress) (NNP Macross))
            (, ,)
            (NP (NNP Super) (NNP Dimension) (NNP Cavalry) (NNP Southern) (NNP Cross))
            (, ,)
            (CC and)
            (NP (NNP Genesis) (NNP Climber) (NNP Mospeada))))))
    (. .)))

nsubj(story-4, Robotech-1)
cop(story-4, is-2)
det(story-4, a-3)
root(ROOT-0, story-4)
partmod(story-4, adapted-5)
amod(content-8, edited-7)
prep_with(adapted-5, content-8)
amod(dialogue-11, revised-10)
conj_and(story-4, dialogue-11)
det(animation-14, the-13)
prep_from(dialogue-11, animation-14)
num(series-20, three-16)
amod(series-20, different-17)
nn(series-20, mecha-18)
nn(series-20, anime-19)
prep_of(animation-14, series-20)
det(Macross-26, The-22)
nn(Macross-26, Super-23)
nn(Macross-26, Dimension-24)
nn(Macross-26, Fortress-25)
dep(dialogue-11, Macross-26)
nn(Cross-32, Super-28)
nn(Cross-32, Dimension-29)
nn(Cross-32, Cavalry-30)
nn(Cross-32, Southern-31)
dep(dialogue-11, Cross-32)
conj_and(Macross-26, Cross-32)
nn(Mospeada-37, Genesis-35)
nn(Mospeada-37, Climber-36)
dep(dialogue-11, Mospeada-37)
conj_and(Macross-26, Mospeada-37)

(ROOT
  (S
    (NP (DT The) (NNP RFPolicy))
    (VP (VBZ states)
      (NP
        (NP (DT a) (NN method))
        (PP (IN of)
          (S
            (VP (VBG contacting)
              (NP (NNS vendors))
              (PP (IN about)
                (NP
                  (NP (NN security) (NNS vulnerabilities))
                  (VP (VBN found)
                    (PP (IN in)
                      (NP (PRP$ their) (NNS products)))))))))))
    (. .)))

det(RFPolicy-2, The-1)
nsubj(states-3, RFPolicy-2)
root(ROOT-0, states-3)
det(method-5, a-4)
dobj(states-3, method-5)
prepc_of(method-5, contacting-7)
dobj(contacting-7, vendors-8)
nn(vulnerabilities-11, security-10)
prep_about(contacting-7, vulnerabilities-11)
partmod(vulnerabilities-11, found-12)
poss(products-15, their-14)
prep_in(found-12, products-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP (NNP Ratatosk))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ red) (NN squirrel))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ runs)
              (S
                (VP (VBG <PRT>)
                  (PRT (RP up))
                  (NP (NNP </PRT>)
                    (CC and)
                    (NNP <PRT>) (IN down) (NNP </PRT>))
                  (PP (IN with)
                    (NP
                      (NP (NNS messages))
                      (PP (IN in)
                        (NP (DT the) (NN world) (NN tree) (NN Yggdrasill)
                          (CC and)
                          (NNS spreads) (NN gossip))))))))))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(squirrel-9, mythology-3)
nsubj(squirrel-9, Ratatosk-5)
cop(squirrel-9, is-6)
det(squirrel-9, a-7)
amod(squirrel-9, red-8)
root(ROOT-0, squirrel-9)
nsubj(runs-11, squirrel-9)
rcmod(squirrel-9, runs-11)
xcomp(runs-11, <PRT>-12)
prt(<PRT>-12, up-13)
nn(</PRT>-18, </PRT>-14)
conj_and(</PRT>-14, <PRT>-16)
nn(</PRT>-18, <PRT>-16)
amod(</PRT>-18, down-17)
dobj(<PRT>-12, </PRT>-18)
prep_with(<PRT>-12, messages-20)
det(Yggdrasill-25, the-22)
nn(Yggdrasill-25, world-23)
nn(Yggdrasill-25, tree-24)
prep_in(messages-20, Yggdrasill-25)
nn(gossip-28, spreads-27)
prep_in(messages-20, gossip-28)
conj_and(Yggdrasill-25, gossip-28)

(ROOT
  (S
    (NP (DT The) (NNP Reel))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ folk) (NN dance) (NN type))
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT the) (JJ accompanying) (NN dance) (NN tune) (NN type))))
    (. .)))

det(Reel-2, The-1)
nsubj(type-7, Reel-2)
cop(type-7, is-3)
det(type-7, a-4)
amod(type-7, folk-5)
nn(type-7, dance-6)
root(ROOT-0, type-7)
det(type-15, the-11)
amod(type-15, accompanying-12)
nn(type-15, dance-13)
nn(type-15, tune-14)
conj_and(type-7, type-15)

(ROOT
  (S
    (NP (DT The) (NNP Reichsmarine))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NNP German) (NNP Navy))
              (PP (IN during)
                (NP (DT the) (NNP Weimar) (NNP Republic))))
            (CC and)
            (NP
              (NP (RB first) (CD two) (NNS years))
              (PP (IN of)
                (NP (NNP Nazi) (NNP Germany))))))))
    (. .)))

det(Reichsmarine-2, The-1)
nsubj(name-5, Reichsmarine-2)
cop(name-5, was-3)
det(name-5, the-4)
root(ROOT-0, name-5)
det(Navy-9, the-7)
nn(Navy-9, German-8)
prep_of(name-5, Navy-9)
det(Republic-13, the-11)
nn(Republic-13, Weimar-12)
prep_during(Navy-9, Republic-13)
advmod(years-17, first-15)
num(years-17, two-16)
prep_of(name-5, years-17)
conj_and(Navy-9, years-17)
nn(Germany-20, Nazi-19)
prep_of(years-17, Germany-20)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Redshirt))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN stock) (NN character))
        (, ,)
        (VP (VBN used)
          (ADVP (RB frequently))
          (PP
            (PP (IN in)
              (NP (NN science) (NN fiction)))
            (CONJP (CC but)
              (RB also))
            (PP (IN in)
              (NP (JJ other) (NNS genres)))))
        (, ,)
        (SBAR
          (WHNP (WP$ whose) (JJ primary) (NN purpose))
          (S
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB die)
                    (ADVP (RB soon))
                    (PP (IN after)
                      (S
                        (VP
                          (VP (VBG being)
                            (VP (VBN introduced)))
                          (, ,)
                          (ADVP (RB thus))
                          (VP (VBG indicating)
                            (NP
                              (NP (DT the) (JJ dangerous) (NNS circumstances))
                              (VP (VBN faced)
                                (PP (IN by)
                                  (NP (DT the) (JJ main) (NNS characters)))))))))))))))))
    (. .)))

det(Redshirt-2, A-1)
nsubj(character-6, Redshirt-2)
cop(character-6, is-3)
det(character-6, a-4)
nn(character-6, stock-5)
root(ROOT-0, character-6)
partmod(character-6, used-8)
advmod(used-8, frequently-9)
nn(fiction-12, science-11)
prep_in(used-8, fiction-12)
amod(genres-17, other-16)
prep_in(used-8, genres-17)
conj_and(fiction-12, genres-17)
poss(purpose-21, whose-19)
amod(purpose-21, primary-20)
nsubj(is-22, purpose-21)
rcmod(character-6, is-22)
aux(die-24, to-23)
xcomp(is-22, die-24)
advmod(die-24, soon-25)
auxpass(introduced-28, being-27)
prepc_after(die-24, introduced-28)
advmod(introduced-28, thus-30)
dep(introduced-28, indicating-31)
det(circumstances-34, the-32)
amod(circumstances-34, dangerous-33)
dobj(indicating-31, circumstances-34)
partmod(circumstances-34, faced-35)
det(characters-39, the-37)
amod(characters-39, main-38)
agent(faced-35, characters-39)

(ROOT
  (S
    (NP (NNP Rent))
    (VP (VBZ is)
      (NP (DT a) (NN rock) (NN musical))
      (, ,)
      (PP (IN with)
        (NP
          (NP (NN music)
            (CC and)
            (NNS lyrics))
          (PP (IN by)
            (NP
              (NP (NNP Jonathan) (NNP Larson))
              (VP (VBN inspired)
                (PP (IN by)
                  (NP
                    (NP (NNP Giacomo) (NNP Puccini) (POS 's))
                    (NNP opera) (NNP La) (NNP BohÃƒâˆžÃ) (NNP ‚) (NNP Â)))
                (S
                  (VP (VBG ¨)
                    (NP (PRP me))))))))))
    (. .)))

nsubj(musical-5, Rent-1)
cop(musical-5, is-2)
det(musical-5, a-3)
nn(musical-5, rock-4)
root(ROOT-0, musical-5)
prep_with(musical-5, music-8)
prep_with(musical-5, lyrics-10)
conj_and(music-8, lyrics-10)
nn(Larson-13, Jonathan-12)
prep_by(music-8, Larson-13)
partmod(Larson-13, inspired-14)
nn(Puccini-17, Giacomo-16)
poss(Â-23, Puccini-17)
nn(Â-23, opera-19)
nn(Â-23, La-20)
nn(Â-23, BohÃƒâˆžÃ-21)
nn(Â-23, ‚-22)
agent(inspired-14, Â-23)
xcomp(inspired-14, ¨-24)
dobj(¨-24, me-25)

(ROOT
  (S
    (NP (DT A) (NNP Restaurant))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ retail) (NN establishment))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ serves)
              (NP (JJ prepared) (NN food))
              (PP (TO to)
                (NP (NNS customers))))))))
    (. .)))

det(Restaurant-2, A-1)
nsubj(establishment-6, Restaurant-2)
cop(establishment-6, is-3)
det(establishment-6, a-4)
amod(establishment-6, retail-5)
root(ROOT-0, establishment-6)
nsubj(serves-8, establishment-6)
rcmod(establishment-6, serves-8)
amod(food-10, prepared-9)
dobj(serves-8, food-10)
prep_to(serves-8, customers-12)

(ROOT
  (S
    (NP (DT A) (NNP Replicant))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ bioengineered)
            (CC or)
            (JJ biorobotic)))
        (VP (VBG being)
          (VP (VBN created)
            (PP (IN in)
              (NP (DT the) (NN film) (NNP Blade) (NNP Runner)))))
        (PRN (-LRB- -LRB-) (CD 1982) (-RRB- -RRB-))))
    (. .)))

det(Replicant-2, A-1)
nsubj(bioengineered-5, Replicant-2)
nsubj(biorobotic-7, Replicant-2)
cop(bioengineered-5, is-3)
det(bioengineered-5, a-4)
root(ROOT-0, bioengineered-5)
conj_or(bioengineered-5, biorobotic-7)
auxpass(created-9, being-8)
partmod(bioengineered-5, created-9)
det(Runner-14, the-11)
nn(Runner-14, film-12)
nn(Runner-14, Blade-13)
prep_in(created-9, Runner-14)
dep(bioengineered-5, 1982-16)

(ROOT
  (S
    (NP (NNP RPN))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN acronym))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ refers)
              (PP (TO to)
                (NP (NNP Radio) (NNPS Philippines) (NNP Network))))))))
    (. .)))

nsubj(acronym-4, RPN-1)
cop(acronym-4, is-2)
det(acronym-4, an-3)
root(ROOT-0, acronym-4)
nsubj(refers-6, acronym-4)
rcmod(acronym-4, refers-6)
nn(Network-10, Radio-8)
nn(Network-10, Philippines-9)
prep_to(refers-6, Network-10)

(ROOT
  (S
    (NP (DT A) (NNP Rose))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ perennial) (NN flowering) (NN shrub)
          (CC or)
          (NN vine))
        (PP (IN of)
          (NP (DT the) (NNP genus) (NNP Rosa))))
      (, ,)
      (PP (IN within)
        (NP
          (NP (DT the) (NN family) (NN rosaceae))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ contains)
                (PP (IN over)
                  (NP (CD 100) (NNS species)))))))))
    (. .)))

det(Rose-2, A-1)
nsubj(shrub-7, Rose-2)
cop(shrub-7, is-3)
det(shrub-7, a-4)
amod(shrub-7, perennial-5)
nn(shrub-7, flowering-6)
root(ROOT-0, shrub-7)
conj_or(shrub-7, vine-9)
det(Rosa-13, the-11)
nn(Rosa-13, genus-12)
prep_of(shrub-7, Rosa-13)
det(rosaceae-18, the-16)
nn(rosaceae-18, family-17)
prep_within(shrub-7, rosaceae-18)
nsubj(contains-21, rosaceae-18)
rcmod(rosaceae-18, contains-21)
num(species-24, 100-23)
prep_over(contains-21, species-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (ADVP (RB Originally))
    (, ,)
    (NP
      (NP (DT the) (NN word))
      (PP (IN for)
        (NP (DT an) (JJ adult) (NN rabbit))))
    (VP (VBD was)
      (ADJP (JJ coney)
        (CC or)
        (JJ cony))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (NNP Rabbit))
          (VP (VBD referred)
            (PP (TO to)
              (NP (DT the) (JJ young) (NNS animals)))))))
    (. .)))

advmod(coney-10, Originally-1)
det(word-4, the-3)
nsubj(coney-10, word-4)
nsubj(cony-12, word-4)
det(rabbit-8, an-6)
amod(rabbit-8, adult-7)
prep_for(word-4, rabbit-8)
cop(coney-10, was-9)
root(ROOT-0, coney-10)
conj_or(coney-10, cony-12)
mark(referred-16, while-14)
nsubj(referred-16, Rabbit-15)
advcl(coney-10, referred-16)
det(animals-20, the-18)
amod(animals-20, young-19)
prep_to(referred-16, animals-20)

(ROOT
  (S
    (NP (DT A) (NNP Relay))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ electrical) (NN switch))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ opens)
              (CC and)
              (VBZ closes)
              (PP (IN under)
                (NP
                  (NP (DT the) (NN control))
                  (PP (IN of)
                    (NP (DT another) (JJ electrical) (NN circuit))))))))))
    (. .)))

det(Relay-2, A-1)
nsubj(switch-6, Relay-2)
cop(switch-6, is-3)
det(switch-6, an-4)
amod(switch-6, electrical-5)
root(ROOT-0, switch-6)
nsubj(opens-8, switch-6)
nsubj(closes-10, switch-6)
rcmod(switch-6, opens-8)
rcmod(switch-6, closes-10)
conj_and(opens-8, closes-10)
det(control-13, the-12)
prep_under(opens-8, control-13)
det(circuit-17, another-15)
amod(circuit-17, electrical-16)
prep_of(control-13, circuit-17)

(ROOT
  (S
    (NP (NNP Sumba))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN island))
          (PP (IN in)
            (NP (NNP Indonesia)))))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNP Lesser) (NNP Sunda) (NNP Islands))))))
    (. .)))

nsubj(island-4, Sumba-1)
cop(island-4, is-2)
det(island-4, an-3)
root(ROOT-0, island-4)
prep_in(island-4, Indonesia-6)
cop(one-10, is-9)
conj_and(island-4, one-10)
det(Islands-15, the-12)
nn(Islands-15, Lesser-13)
nn(Islands-15, Sunda-14)
prep_of(one-10, Islands-15)

(ROOT
  (S
    (NP (DT A) (NNP Set))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN collection))
        (PP (IN of)
          (NP
            (NP (JJ distinct) (NNS objects))
            (, ,)
            (VP (VBN considered)
              (PP (IN as)
                (NP
                  (NP (DT an) (NN object))
                  (PP (IN in)
                    (NP (PRP$ its) (JJ own) (NN right))))))))))
    (. .)))

det(Set-2, A-1)
nsubj(collection-5, Set-2)
cop(collection-5, is-3)
det(collection-5, a-4)
root(ROOT-0, collection-5)
amod(objects-8, distinct-7)
prep_of(collection-5, objects-8)
partmod(objects-8, considered-10)
det(object-13, an-12)
prep_as(considered-10, object-13)
poss(right-17, its-15)
amod(right-17, own-16)
prep_in(object-13, right-17)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NNP Middle) (NNPS Ages))
        (PP (TO to)
          (NP (DT the) (NNP Enlightenment)))))
    (, ,)
    (NP (NNP Science)
      (CC or)
      (NNP scientia))
    (VP (VBD meant)
      (NP (DT any) (JJ systematic) (JJ recorded) (NN knowledge)))
    (. .)))

det(Ages-4, the-2)
nn(Ages-4, Middle-3)
prep_from(meant-12, Ages-4)
det(Enlightenment-7, the-6)
prep_to(Ages-4, Enlightenment-7)
nsubj(meant-12, Science-9)
conj_or(Science-9, scientia-11)
nsubj(meant-12, scientia-11)
root(ROOT-0, meant-12)
det(knowledge-16, any-13)
amod(knowledge-16, systematic-14)
amod(knowledge-16, recorded-15)
dobj(meant-12, knowledge-16)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Statistic))
      (PRN (-LRB- -LRB-)
        (NP (NN singular))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN result))
        (PP (IN of)
          (S
            (VP (VBG applying)
              (NP
                (NP (DT a) (NN function))
                (PRN (-LRB- -LRB-)
                  (NP (JJ statistical) (NN algorithm))
                  (-RRB- -RRB-)))
              (PP (TO to)
                (NP
                  (NP (DT a) (NN set))
                  (PP (IN of)
                    (NP (NNS data))))))))))
    (. .)))

det(Statistic-2, A-1)
nsubj(result-8, Statistic-2)
appos(Statistic-2, singular-4)
cop(result-8, is-6)
det(result-8, the-7)
root(ROOT-0, result-8)
prepc_of(result-8, applying-10)
det(function-12, a-11)
dobj(applying-10, function-12)
amod(algorithm-15, statistical-14)
appos(function-12, algorithm-15)
det(set-19, a-18)
prep_to(applying-10, set-19)
prep_of(set-19, data-21)

(ROOT
  (S
    (NP (NNP Scandinavia))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ historical)
            (CC and)
            (JJ geographical))
          (NN region))
        (VP (VBN centered)
          (PP (IN on)
            (NP
              (NP (DT the) (NNP Scandinavian) (NNP Peninsula))
              (PP (IN in)
                (NP (NNP Northern) (NNP Europe))))))))
    (. .)))

nsubj(region-7, Scandinavia-1)
cop(region-7, is-2)
det(region-7, a-3)
amod(region-7, historical-4)
conj_and(historical-4, geographical-6)
amod(region-7, geographical-6)
root(ROOT-0, region-7)
partmod(region-7, centered-8)
det(Peninsula-12, the-10)
nn(Peninsula-12, Scandinavian-11)
prep_on(centered-8, Peninsula-12)
nn(Europe-15, Northern-14)
prep_in(Peninsula-12, Europe-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Sun))
      (PRN (-LRB- -LRB-)
        (NP (NNP Sol))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN star))
        (PP (IN at)
          (NP
            (NP (DT the) (NN center))
            (PP (IN of)
              (NP (DT the) (NNP Solar) (NNP System)))))))
    (. .)))

det(Sun-2, The-1)
nsubj(star-8, Sun-2)
appos(Sun-2, Sol-4)
cop(star-8, is-6)
det(star-8, the-7)
root(ROOT-0, star-8)
det(center-11, the-10)
prep_at(star-8, center-11)
det(System-15, the-13)
nn(System-15, Solar-14)
prep_of(center-11, System-15)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ Smiley) (, ,) (JJ smiley) (NN face))
      (PRN (, ,)
        (CC or)
        (JJ happy) (NN face) (, ,)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ stylized) (NN representation))
        (PP (IN of)
          (NP
            (NP (DT a) (VBG smiling) (JJ human) (NN face))
            (, ,)
            (VP
              (ADVP (RB commonly))
              (VBN represented)
              (PP (IN as)
                (NP
                  (NP (DT a) (JJ yellow) (NN circle))
                  (PP (IN with)
                    (NP (CD two) (NNS dots)))))
              (S
                (VP (VBG representing)
                  (S
                    (NP
                      (NP (NNS eyes))
                      (CC and)
                      (NP (DT a) (JJ half) (NN circle)))
                    (VP (VBG representing)
                      (NP (DT the) (NN mouth)))))))))))
    (. .)))

det(face-5, The-1)
amod(face-5, Smiley-2)
amod(face-5, smiley-4)
nsubj(representation-14, face-5)
dep(happy-8, or-7)
dep(face-5, happy-8)
dep(happy-8, face-9)
cop(representation-14, is-11)
det(representation-14, a-12)
amod(representation-14, stylized-13)
root(ROOT-0, representation-14)
det(face-19, a-16)
amod(face-19, smiling-17)
amod(face-19, human-18)
prep_of(representation-14, face-19)
advmod(represented-22, commonly-21)
partmod(face-19, represented-22)
det(circle-26, a-24)
amod(circle-26, yellow-25)
prep_as(represented-22, circle-26)
num(dots-29, two-28)
prep_with(circle-26, dots-29)
xcomp(represented-22, representing-30)
nsubj(representing-36, eyes-31)
det(circle-35, a-33)
amod(circle-35, half-34)
conj_and(eyes-31, circle-35)
nsubj(representing-36, circle-35)
dep(representing-30, representing-36)
det(mouth-38, the-37)
dobj(representing-36, mouth-38)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Signature))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (NP
            (NP (JJ Latin) (NN signare))
            (, ,) ('' '')
            (NP (NN sign) ('' ''))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNP handwritten)
          (PRN (-LRB- -LRB-)
            (CC and)
            (ADJP (RB sometimes) (JJ stylized))
            (-RRB- -RRB-))
          (NN depiction))
        (PP (IN of)
          (NP
            (NP
              (NP (NN someone) (POS 's))
              (NN name))
            (, ,)
            (NP
              (NP (NN nickname))
              (CC or)
              (NP (RB even) (DT a) (JJ simple) ('' '') (NN X)))))
        ('' '')
        (SBAR (IN that)
          (S
            (NP (DT a) (NN person))
            (VP (VBZ writes)
              (PP (IN on)
                (NP
                  (NP (NNS documents))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN proof))
                      (PP (IN of)
                        (NP (NN identity)
                          (CC and)
                          (NN intent))))))))))))
    (. .)))

det(Signature-2, A-1)
nsubj(depiction-20, Signature-2)
dep(Signature-2, from-4)
amod(signare-6, Latin-5)
pobj(from-4, signare-6)
dep(signare-6, sign-9)
cop(depiction-20, is-12)
det(depiction-20, a-13)
nn(depiction-20, handwritten-14)
dep(stylized-18, and-16)
advmod(stylized-18, sometimes-17)
dep(depiction-20, stylized-18)
root(ROOT-0, depiction-20)
dobj(writes-37, depiction-20)
poss(name-24, someone-22)
prep_of(depiction-20, name-24)
appos(name-24, nickname-26)
advmod(X-32, even-28)
det(X-32, a-29)
amod(X-32, simple-30)
appos(name-24, X-32)
conj_or(nickname-26, X-32)
dep(writes-37, that-34)
det(person-36, a-35)
nsubj(writes-37, person-36)
dep(depiction-20, writes-37)
prep_on(writes-37, documents-39)
det(proof-42, a-41)
prep_as(documents-39, proof-42)
prep_of(proof-42, identity-44)
prep_of(proof-42, intent-46)
conj_and(identity-44, intent-46)

(ROOT
  (S
    (NP (NNP Sirenia))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (ADJP (RB fully) (JJ aquatic) (, ,) (JJ herbivorous))
            (NNS mammals)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP inhabit)
              (NP
                (NP (NNS rivers))
                (, ,)
                (NP (NNS estuaries))
                (, ,)
                (NP (JJ coastal) (JJ marine) (NNS waters))
                (, ,)
                (NP (NNS swamps))
                (, ,)
                (CC and)
                (NP (JJ marine) (NNS wetlands))))))))
    (. .)))

nsubj(order-4, Sirenia-1)
cop(order-4, is-2)
det(order-4, an-3)
root(ROOT-0, order-4)
nsubj(inhabit-12, order-4)
advmod(herbivorous-9, fully-6)
amod(herbivorous-9, aquatic-7)
amod(mammals-10, herbivorous-9)
prep_of(order-4, mammals-10)
rcmod(order-4, inhabit-12)
dobj(inhabit-12, rivers-13)
dobj(inhabit-12, estuaries-15)
conj_and(rivers-13, estuaries-15)
amod(waters-19, coastal-17)
amod(waters-19, marine-18)
dobj(inhabit-12, waters-19)
conj_and(rivers-13, waters-19)
dobj(inhabit-12, swamps-21)
conj_and(rivers-13, swamps-21)
amod(wetlands-25, marine-24)
dobj(inhabit-12, wetlands-25)
conj_and(rivers-13, wetlands-25)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Henri-Marie) (NNP Beyle))
        (PRN (-LRB- -LRB-)
          (FRAG
            (NP
              (NP (NNP January) (CD 23) (, ,) (CD 1783))
              (NP (CC &)
                (NN amp)))
            (: ;)
            (NP
              (NP (NN ndash))
              (: ;)
              (NP (NNP March) (CD 23) (, ,) (CD 1842))))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RBR better))
        (VBN known)
        (PP (IN by)
          (NP (PRP$ his) (JJ penname) (NN Stendhal))))
      (, ,))
    (VP (VBD was)
      (NP (DT a) (JJ 19th-century) (JJ French) (NN writer)))
    (. .)))

nn(Beyle-2, Henri-Marie-1)
nsubj(writer-30, Beyle-2)
dep(Beyle-2, January-4)
num(January-4, 23-5)
num(January-4, 1783-7)
cc(amp-9, &-8)
dep(January-4, amp-9)
dep(January-4, ndash-11)
dep(ndash-11, March-13)
num(March-13, 23-14)
num(March-13, 1842-16)
advmod(known-20, better-19)
partmod(Beyle-2, known-20)
poss(Stendhal-24, his-22)
amod(Stendhal-24, penname-23)
agent(known-20, Stendhal-24)
cop(writer-30, was-26)
det(writer-30, a-27)
amod(writer-30, 19th-century-28)
amod(writer-30, French-29)
root(ROOT-0, writer-30)

(ROOT
  (S
    (NP (DT A) (NNP Statute))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ formal) (VBN written) (NN enactment))
        (PP (IN of)
          (NP (DT a) (JJ legislative) (NN authority)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ governs)
              (NP
                (NP (DT a) (NN country))
                (, ,)
                (NP (NN state))
                (, ,)
                (NP (NN city))
                (, ,)
                (CC or)
                (NP (NN county))))))))
    (. .)))

det(Statute-2, A-1)
nsubj(enactment-7, Statute-2)
cop(enactment-7, is-3)
det(enactment-7, a-4)
amod(enactment-7, formal-5)
amod(enactment-7, written-6)
root(ROOT-0, enactment-7)
nsubj(governs-13, enactment-7)
det(authority-11, a-9)
amod(authority-11, legislative-10)
prep_of(enactment-7, authority-11)
rcmod(enactment-7, governs-13)
det(country-15, a-14)
dobj(governs-13, country-15)
dobj(governs-13, state-17)
conj_or(country-15, state-17)
dobj(governs-13, city-19)
conj_or(country-15, city-19)
dobj(governs-13, county-22)
conj_or(country-15, county-22)

(ROOT
  (S
    (NP (NNP Satire))
    (VP (VBD were)
      (NP
        (NP
          (NP (DT the) (NNS companions))
          (PP (IN of)
            (NP (NNP Dionysos))))
        (CC and)
        (NP
          (NP (JJ central) (NNS characters))
          (PP (IN of)
            (NP
              (NP (DT the) (NN satyr) (NNS plays))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP Theatre))
                  (PP (IN of)
                    (NP (JJ Ancient) (NNP Greece))))))))))
    (. .)))

nsubj(companions-4, Satire-1)
cop(companions-4, were-2)
det(companions-4, the-3)
root(ROOT-0, companions-4)
prep_of(companions-4, Dionysos-6)
amod(characters-9, central-8)
conj_and(companions-4, characters-9)
det(plays-13, the-11)
nn(plays-13, satyr-12)
prep_of(characters-9, plays-13)
det(Theatre-16, the-15)
prep_of(plays-13, Theatre-16)
amod(Greece-19, Ancient-18)
prep_of(Theatre-16, Greece-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Saxophone))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB commonly))
          (VBN referred)
          (S
            (VP (TO to)
              (VP
                (ADVP (RB simply))
                (PP (IN as)
                  (NP (NN sax)))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ conical-bored) (JJ musical) (NN instrument))
        (VP (VBN considered)
          (NP
            (NP (DT a) (NN member))
            (PP (IN of)
              (NP (DT the) (NN woodwind) (NN family)))))))
    (. .)))

det(Saxophone-2, The-1)
nsubj(instrument-15, Saxophone-2)
advmod(referred-5, commonly-4)
dep(Saxophone-2, referred-5)
aux(simply-7, to-6)
xcomp(referred-5, simply-7)
prep_as(simply-7, sax-9)
cop(instrument-15, is-11)
det(instrument-15, a-12)
amod(instrument-15, conical-bored-13)
amod(instrument-15, musical-14)
root(ROOT-0, instrument-15)
partmod(instrument-15, considered-16)
det(member-18, a-17)
dobj(considered-16, member-18)
det(family-22, the-20)
nn(family-22, woodwind-21)
prep_of(member-18, family-22)

(ROOT
  (NP
    (NP (NNP The))
    (NP (NNP Sackbut) (-LRB- -LRB-) (NNP var))
    (. .)))

root(ROOT-0, The-1)
nn(var-4, Sackbut-2)
dep(The-1, var-4)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Sacbutt))
        (PRN (: ;)
          (NP
            (NP (NNP Sackbutt))
            (: ;)
            (NP (NNP Sagbutt)))
          (: ;))
        (-RRB- -RRB-))
      (, ,)
      (NP
        (NP (DT a) (NN brass) (NN instrument))
        (PP (IN from)
          (NP (DT the) (NNP Renaissance)
            (CC and)
            (NNP Baroque) (NNP Eras))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN ancestor))
        (PP (IN of)
          (NP (DT the) (JJ modern) (NN trombone)))))
    (. .)))

nsubj(ancestor-21, Sacbutt-1)
dep(Sacbutt-1, Sackbutt-3)
dep(Sackbutt-3, Sagbutt-5)
det(instrument-11, a-9)
nn(instrument-11, brass-10)
appos(Sacbutt-1, instrument-11)
det(Eras-17, the-13)
nn(Eras-17, Renaissance-14)
conj_and(Renaissance-14, Baroque-16)
nn(Eras-17, Baroque-16)
prep_from(instrument-11, Eras-17)
cop(ancestor-21, is-19)
det(ancestor-21, the-20)
root(ROOT-0, ancestor-21)
det(trombone-25, the-23)
amod(trombone-25, modern-24)
prep_of(ancestor-21, trombone-25)

(ROOT
  (S
    (NP (DT The) (NNP Saxhorn))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ valved) (NN brass) (NN instrument))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ tapered) (NN bore))
            (CC and)
            (NP (JJ deep) (JJ cup-shaped) (NN mouthpiece))))))
    (. .)))

det(Saxhorn-2, The-1)
nsubj(instrument-7, Saxhorn-2)
cop(instrument-7, is-3)
det(instrument-7, a-4)
amod(instrument-7, valved-5)
nn(instrument-7, brass-6)
root(ROOT-0, instrument-7)
det(bore-11, a-9)
amod(bore-11, tapered-10)
prep_with(instrument-7, bore-11)
amod(mouthpiece-15, deep-13)
amod(mouthpiece-15, cup-shaped-14)
prep_with(instrument-7, mouthpiece-15)
conj_and(bore-11, mouthpiece-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (NN Sex))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN process))
        (PP (IN of)
          (S
            (VP (VBG combining)
              (CC and)
              (VBG mixing)
              (NP (JJ genetic) (NNS traits))))))
      (, ,)
      (S
        (ADVP (RB often))
        (VP (VBG resulting)
          (PP (IN in)
            (NP
              (NP (DT the) (NN specialization))
              (PP (IN of)
                (NP (NNS organisms)))))
          (PP (IN into)
            (NP (JJ male)
              (CC and)
              (JJ female) (NNS types)))
          (PRN (-LRB- -LRB-)
            (CC or)
            (VB sexes) (-RRB- -RRB-)))))
    (. .)))

prep_in(process-7, biology-2)
nsubj(process-7, Sex-4)
cop(process-7, is-5)
det(process-7, a-6)
root(ROOT-0, process-7)
prepc_of(process-7, combining-9)
prepc_of(process-7, mixing-11)
conj_and(combining-9, mixing-11)
amod(traits-13, genetic-12)
dobj(combining-9, traits-13)
advmod(resulting-16, often-15)
partmod(process-7, resulting-16)
xcomp(process-7, resulting-16)
det(specialization-19, the-18)
prep_in(resulting-16, specialization-19)
prep_of(specialization-19, organisms-21)
amod(types-26, male-23)
conj_and(male-23, female-25)
amod(types-26, female-25)
prep_into(resulting-16, types-26)
dep(resulting-16, or-28)
dep(or-28, sexes-29)

(ROOT
  (S
    (NP (DT A) (NNP Star))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ massive) (, ,) (JJ luminous) (NN ball))
        (PP (IN of)
          (NP (NN plasma)))))
    (. .)))

det(Star-2, A-1)
nsubj(ball-8, Star-2)
cop(ball-8, is-3)
det(ball-8, a-4)
amod(ball-8, massive-5)
amod(ball-8, luminous-7)
root(ROOT-0, ball-8)
prep_of(ball-8, plasma-10)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Syllabary))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (NP
            (NP (VBN written) (NNS symbols))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP represent)
                  (PRN (-LRB- -LRB-)
                    (CC or)
                    (VB approximate) (-RRB- -RRB-))
                  (NP (NNS syllables))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBP make)
                        (S
                          (VP (VBG <PRT>)
                            (PRT (RP up))
                            (NP (JJ </PRT>) (NNS words))))))))))))))
    (. .)))

det(Syllabary-2, A-1)
nsubj(set-5, Syllabary-2)
cop(set-5, is-3)
det(set-5, a-4)
root(ROOT-0, set-5)
amod(symbols-8, written-7)
prep_of(set-5, symbols-8)
nsubj(represent-10, symbols-8)
rcmod(symbols-8, represent-10)
dep(represent-10, or-12)
dep(or-12, approximate-13)
dobj(represent-10, syllables-15)
nsubj(make-18, which-17)
dep(represent-10, make-18)
xcomp(make-18, <PRT>-19)
prt(<PRT>-19, up-20)
amod(words-22, </PRT>-21)
dobj(<PRT>-19, words-22)

(ROOT
  (S
    (NP (DT A) (NNP Sea))
    (VP (VBZ is)
      (ADVP (RB either))
      (NP
        (NP
          (NP (DT a) (JJ large) (NN expanse))
          (PP (IN of)
            (NP
              (NP (JJ saline) (NN water))
              (VP (VBN connected)
                (PP (IN with)
                  (NP (DT an) (NN ocean)))))))
        (, ,)
        (CC or)
        (NP
          (NP (DT a)
            (ADJP (JJ large) (, ,) (RB usually) (JJ saline) (, ,))
            (NN lake))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ lacks)
                (NP
                  (NP (DT a) (JJ natural) (NN outlet))
                  (PP (JJ such) (IN as)
                    (NP
                      (NP (DT the) (NNP Caspian) (NNP Sea))
                      (CC and)
                      (NP (DT the) (NNP Dead) (NNP Sea)))))))))))
    (. .)))

det(Sea-2, A-1)
nsubj(expanse-7, Sea-2)
cop(expanse-7, is-3)
advmod(expanse-7, either-4)
det(expanse-7, a-5)
amod(expanse-7, large-6)
root(ROOT-0, expanse-7)
amod(water-10, saline-9)
prep_of(expanse-7, water-10)
partmod(water-10, connected-11)
det(ocean-14, an-13)
prep_with(connected-11, ocean-14)
det(lake-23, a-17)
amod(saline-21, large-18)
advmod(saline-21, usually-20)
amod(lake-23, saline-21)
conj_or(expanse-7, lake-23)
nsubj(lacks-25, lake-23)
rcmod(lake-23, lacks-25)
det(outlet-28, a-26)
amod(outlet-28, natural-27)
dobj(lacks-25, outlet-28)
det(Sea-33, the-31)
nn(Sea-33, Caspian-32)
prep_such_as(outlet-28, Sea-33)
det(Sea-37, the-35)
nn(Sea-37, Dead-36)
prep_such_as(outlet-28, Sea-37)
conj_and(Sea-33, Sea-37)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNS linguistics)))
    (, ,)
    (NP
      (NP (NNP Syntax))
      (PRN (-LRB- -LRB-)
        (PP (IN from)
          (S
            (VP
              (VP (VBG Ancient)
                (NP
                  (NP (JJ Greek) (JJ lang) (NN syn) (NNS -))
                  (, ,) ('' '')
                  (ADVP (RB together) ('' ''))))
              (, ,)
              (CC and)
              (VP (VBG lang)
                (NP (NNP tÃƒâˆžÃ) (NNP ‚) (NNP Â) (NNP ¡))
                (ADVP (RB xis))
                (, ,) ('' ''))
              (NP (NN arrangement) ('' '')))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN study))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS principles)
              (CC and)
              (NNS rules))
            (PP (IN for)
              (S
                (VP (VBG constructing)
                  (NP (NNS sentences))
                  (PP (IN in)
                    (NP (JJ natural) (NNS languages))))))))))
    (. .)))

prep_in(study-31, linguistics-2)
nsubj(study-31, Syntax-4)
dep(Syntax-4, from-6)
pcomp(from-6, Ancient-7)
amod(syn-10, Greek-8)
amod(syn-10, lang-9)
dobj(Ancient-7, syn-10)
advmod(syn-10, together-14)
pcomp(from-6, lang-18)
conj_and(Ancient-7, lang-18)
nn(¡-22, tÃƒâˆžÃ-19)
nn(¡-22, ‚-20)
nn(¡-22, Â-21)
dobj(lang-18, ¡-22)
advmod(lang-18, xis-23)
dobj(Ancient-7, arrangement-26)
cop(study-31, is-29)
det(study-31, the-30)
root(ROOT-0, study-31)
det(principles-34, the-33)
prep_of(study-31, principles-34)
prep_of(study-31, rules-36)
conj_and(principles-34, rules-36)
prepc_for(principles-34, constructing-38)
dobj(constructing-38, sentences-39)
amod(languages-42, natural-41)
prep_in(constructing-38, languages-42)

(ROOT
  (S
    (NP (DT A) (NN Spice))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ dried) (NN seed) (, ,) (NN fruit) (, ,) (NN root) (, ,) (NN bark)
          (CC or)
          (NN vegetative) (NN substance))
        (VP (VBN used)
          (PP
            (PP (IN in)
              (NP
                (NP
                  (ADJP (RB nutritionally) (JJ insignificant))
                  (NNS quantities))
                (PP (IN as)
                  (NP
                    (NP (DT a) (NN food) (NN additive))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN purpose))
                        (PP (IN of)
                          (NP (NN flavoring)))))))))
            (, ,)
            (CC and)
            (ADVP (RB sometimes))
            (PP (IN as)
              (NP (DT a) (NN preservative))))
          (PP (IN by)
            (S
              (VP (VBG killing)
                (CC or)
                (VBG preventing)
                (NP
                  (NP (DT the) (NN growth))
                  (PP (IN of)
                    (NP (JJ harmful) (NNS bacteria))))))))))
    (. .)))

det(Spice-2, A-1)
nsubj(substance-15, Spice-2)
cop(substance-15, is-3)
det(substance-15, a-4)
amod(substance-15, dried-5)
nn(substance-15, seed-6)
conj_or(seed-6, fruit-8)
nn(substance-15, fruit-8)
conj_or(seed-6, root-10)
nn(substance-15, root-10)
conj_or(seed-6, bark-12)
nn(substance-15, bark-12)
conj_or(seed-6, vegetative-14)
nn(substance-15, vegetative-14)
root(ROOT-0, substance-15)
partmod(substance-15, used-16)
partmod(substance-15, used-16')
conj_and(used-16, used-16')
advmod(insignificant-19, nutritionally-18)
amod(quantities-20, insignificant-19)
prep_in(used-16, quantities-20)
det(additive-24, a-22)
nn(additive-24, food-23)
prep_as(quantities-20, additive-24)
det(purpose-27, the-26)
prep_for(additive-24, purpose-27)
prep_of(purpose-27, flavoring-29)
advmod(used-16, sometimes-32)
conj(used-16, sometimes-32)
det(preservative-35, a-34)
prep_as(used-16', preservative-35)
agent(used-16, killing-37)
agent(used-16, preventing-39)
conj_or(killing-37, preventing-39)
det(growth-41, the-40)
dobj(killing-37, growth-41)
amod(bacteria-44, harmful-43)
prep_of(growth-41, bacteria-44)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Siege))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ military) (NN blockade))
        (PP (IN of)
          (NP
            (NP (DT a) (NN city)
              (CC or)
              (NNS fortress))
            (PP (IN with)
              (NP
                (NP (DT the) (NN intent))
                (PP (IN of)
                  (S
                    (VP (VBG conquering)
                      (PP (IN by)
                        (NP (NN attrition)
                          (CC and)
                          (NN \/)
                          (CC or)
                          (NN assault))))))))))))
    (. .)))

det(Siege-2, A-1)
nsubj(blockade-6, Siege-2)
cop(blockade-6, is-3)
det(blockade-6, a-4)
amod(blockade-6, military-5)
root(ROOT-0, blockade-6)
det(city-9, a-8)
prep_of(blockade-6, city-9)
prep_of(blockade-6, fortress-11)
conj_or(city-9, fortress-11)
det(intent-14, the-13)
prep_with(city-9, intent-14)
prepc_of(intent-14, conquering-16)
prep_by(conquering-16, attrition-18)
prep_by(conquering-16, \/-20)
conj_and(attrition-18, \/-20)
prep_by(conquering-16, assault-22)
conj_or(attrition-18, assault-22)

(ROOT
  (S
    (NP (DT The) (NNPS Solanales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (VP (VBN included)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ asterid) (NN group))
                  (PP (IN of)
                    (NP (NNS dicotyledons))))))))))
    (. .)))

det(Solanales-2, The-1)
nsubj(order-5, Solanales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-8, flowering-7)
prep_of(order-5, plants-8)
partmod(plants-8, included-10)
det(group-14, the-12)
amod(group-14, asterid-13)
prep_in(included-10, group-14)
prep_of(group-14, dicotyledons-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP America)))
    (, ,)
    (NP (DT a) (NNP Sideshow))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ extra) (, ,) (JJ secondary) (NN production))
        (VP (VBN associated)
          (PP (IN with)
            (NP
              (NP (DT a) (NN circus))
              (, ,)
              (NP (NN carnival))
              (, ,)
              (NP (NN fair))
              (CC or)
              (NP (JJ other) (JJ such) (NN attraction)))))))
    (. .)))

prep_in(production-11, America-2)
det(Sideshow-5, a-4)
nsubj(production-11, Sideshow-5)
cop(production-11, is-6)
det(production-11, an-7)
amod(production-11, extra-8)
amod(production-11, secondary-10)
root(ROOT-0, production-11)
partmod(production-11, associated-12)
det(circus-15, a-14)
prep_with(associated-12, circus-15)
prep_with(associated-12, carnival-17)
conj_or(circus-15, carnival-17)
prep_with(associated-12, fair-19)
conj_or(circus-15, fair-19)
amod(attraction-23, other-21)
amod(attraction-23, such-22)
prep_with(associated-12, attraction-23)
conj_or(circus-15, attraction-23)

(ROOT
  (S
    (NP
      (NP (NNP Salinity))
      (PP (IN in)
        (NP
          (NP (NNP Australian) (NNP English))
          (CC and)
          (NP (NNP North) (NNP American) (NNP English)))))
    (VP (MD may)
      (ADVP (RB also))
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT the) (NN salt))
            (PP (IN in)
              (NP (NN soil)))))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB see)
              (NP (NN soil) (NN salination))))
          (-RRB- -RRB-))))
    (. .)))

nsubj(refer-11, Salinity-1)
nn(English-4, Australian-3)
prep_in(Salinity-1, English-4)
nn(English-8, North-6)
nn(English-8, American-7)
prep_in(Salinity-1, English-8)
conj_and(English-4, English-8)
aux(refer-11, may-9)
advmod(refer-11, also-10)
root(ROOT-0, refer-11)
det(salt-14, the-13)
prep_to(refer-11, salt-14)
prep_in(salt-14, soil-16)
parataxis(refer-11, see-18)
nn(salination-20, soil-19)
dobj(see-18, salination-20)

(ROOT
  (S
    (NP (DT The) (NNPS Saxifragales))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP (JJ dicotyledon) (VBG flowering) (NNS plants)))))
    (. .)))

det(Saxifragales-2, The-1)
nsubj(order-5, Saxifragales-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
amod(plants-9, dicotyledon-7)
amod(plants-9, flowering-8)
prep_of(order-5, plants-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP CLIÃƒâˆžÃ) (NNP ‚) (NNP â) (NNP ‰) (NNP ˆ))
      (PRN (-LRB- -LRB-)
        (VP (VBN pronounced) ('' '')
          (S
            (VP (VBG KLEE-AY) ('' '')
              (NP (NNP Latin)))))
        (-RRB- -RRB-)))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN series))
        (PP (IN of)
          (NP
            (NP (JJ personal) (JJ digital) (NNS assistants))
            (VP (VBG running)
              (NP
                (NP (DT the) (NNP Palm) (NNP Operating) (NNP System))
                (VP (VBN developed)
                  (CC and)
                  (VBN marketed)
                  (PP (IN by)
                    (NP
                      (NP (NNP Sony))
                      (PP (IN from)
                        (NP (CD 2000) (TO to) (CD 2005))))))))))))
    (. .)))

det(ˆ-6, The-1)
nn(ˆ-6, CLIÃƒâˆžÃ-2)
nn(ˆ-6, ‚-3)
nn(ˆ-6, â-4)
nn(ˆ-6, ‰-5)
nsubj(series-16, ˆ-6)
dep(ˆ-6, pronounced-8)
xcomp(pronounced-8, KLEE-AY-10)
dobj(KLEE-AY-10, Latin-12)
cop(series-16, was-14)
det(series-16, a-15)
root(ROOT-0, series-16)
amod(assistants-20, personal-18)
amod(assistants-20, digital-19)
prep_of(series-16, assistants-20)
partmod(assistants-20, running-21)
det(System-25, the-22)
nn(System-25, Palm-23)
nn(System-25, Operating-24)
dobj(running-21, System-25)
partmod(System-25, developed-26)
partmod(System-25, marketed-28)
conj_and(developed-26, marketed-28)
agent(developed-26, Sony-30)
num(2005-34, 2000-32)
dep(2005-34, to-33)
prep_from(Sony-30, 2005-34)

(ROOT
  (S
    (NP (DT A) (NNP Shire))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ administrative) (NN division))
        (PP (IN of)
          (NP (NNP Great) (NNP Britain)
            (CC and)
            (NNP Australia)))))
    (. .)))

det(Shire-2, A-1)
nsubj(division-6, Shire-2)
cop(division-6, is-3)
det(division-6, an-4)
amod(division-6, administrative-5)
root(ROOT-0, division-6)
nn(Britain-9, Great-8)
prep_of(division-6, Britain-9)
prep_of(division-6, Australia-11)
conj_and(Britain-9, Australia-11)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Scientist))
      (, ,)
      (PP (IN in)
        (NP (DT the) (JJS broadest) (NN sense)))
      (, ,))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP
            (NP (DT any) (NN person))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ engages)
                  (PP (IN in)
                    (NP (DT a) (JJ systematic) (NN activity)))
                  (S
                    (VP (TO to)
                      (VP (VB acquire)
                        (NP (NN knowledge)))))))))
          (CC or)
          (NP
            (NP (DT an) (NN individual))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ engages)
                  (PP (IN in)
                    (NP
                      (NP (JJ such) (NNS practices)
                        (CC and)
                        (NNS traditions))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP are)
                            (VP (VBN linked)
                              (PP (TO to)
                                (NP
                                  (NP (NNS schools))
                                  (PP (IN of)
                                    (NP (NN thought)
                                      (CC or)
                                      (NN philosophy))))))))))))))))))
    (. .)))

det(Scientist-2, A-1)
nsubj(refers-9, Scientist-2)
det(sense-7, the-5)
amod(sense-7, broadest-6)
prep_in(Scientist-2, sense-7)
root(ROOT-0, refers-9)
det(person-12, any-11)
prep_to(refers-9, person-12)
nsubj(engages-14, person-12)
rcmod(person-12, engages-14)
det(activity-18, a-16)
amod(activity-18, systematic-17)
prep_in(engages-14, activity-18)
aux(acquire-20, to-19)
xcomp(engages-14, acquire-20)
dobj(acquire-20, knowledge-21)
det(individual-24, an-23)
prep_to(refers-9, individual-24)
conj_or(person-12, individual-24)
nsubj(engages-26, individual-24)
rcmod(individual-24, engages-26)
amod(practices-29, such-28)
prep_in(engages-26, practices-29)
nsubjpass(linked-34, practices-29)
prep_in(engages-26, traditions-31)
conj_and(practices-29, traditions-31)
nsubjpass(linked-34, traditions-31)
auxpass(linked-34, are-33)
rcmod(practices-29, linked-34)
prep_to(linked-34, schools-36)
prep_of(schools-36, thought-38)
prep_of(schools-36, philosophy-40)
conj_or(thought-38, philosophy-40)

(ROOT
  (S
    (NP (DT A) (NN Ship))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NN vessel))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ floats)
              (PP (IN on)
                (NP (NN water))))))))
    (. .)))

det(Ship-2, A-1)
nsubj(vessel-6, Ship-2)
cop(vessel-6, is-3)
det(vessel-6, a-4)
amod(vessel-6, large-5)
root(ROOT-0, vessel-6)
nsubj(floats-8, vessel-6)
rcmod(vessel-6, floats-8)
prep_on(floats-8, water-10)

(ROOT
  (S
    (NP
      (NP (NNP Standardization))
      (PRN (-LRB- -LRB-)
        (CC or)
        (ADJP (JJ standardisation))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (PP (IN of)
          (S
            (VP (VBG developing)
              (CC and)
              (VBG agreeing)
              (PP (IN upon)
                (NP (JJ technical) (NNS standards))))))))
    (. .)))

nsubj(process-8, Standardization-1)
dep(standardisation-4, or-3)
dep(Standardization-1, standardisation-4)
cop(process-8, is-6)
det(process-8, the-7)
root(ROOT-0, process-8)
prepc_of(process-8, developing-10)
prepc_of(process-8, agreeing-12)
conj_and(developing-10, agreeing-12)
amod(standards-15, technical-14)
prep_upon(developing-10, standards-15)

(ROOT
  (S
    (NP
      (NP (NNP Star) (NNP Trek) (NNP character) (NNP Worf))
      (, ,)
      (VP (VBN played)
        (PP (IN by)
          (NP (NNP Michael) (NNP Dorn))))
      (, ,))
    (VP (VBZ is)
      (NP (DT a) (JJ main) (NN character))
      (, ,)
      (PP
        (ADVP (RB also))
        (IN in)
        (NP
          (NP (DT the) (NNS films))
          (VP (VBN based)
            (PP (IN on)
              (NP (DT The) (NNP Next) (NNP Generation)))))))
    (. .)))

nn(Worf-4, Star-1)
nn(Worf-4, Trek-2)
nn(Worf-4, character-3)
nsubj(character-14, Worf-4)
partmod(Worf-4, played-6)
nn(Dorn-9, Michael-8)
agent(played-6, Dorn-9)
cop(character-14, is-11)
det(character-14, a-12)
amod(character-14, main-13)
root(ROOT-0, character-14)
advmod(character-14, also-16)
det(films-19, the-18)
prep_in(character-14, films-19)
partmod(films-19, based-20)
det(Generation-24, The-22)
nn(Generation-24, Next-23)
prep_on(based-20, Generation-24)

(ROOT
  (S
    (NP (DT The) (NNPS Maquis))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ fictional) (NN group))
        (PP (IN in)
          (NP (DT the) (NNP Star) (NNP Trek) (NN universe)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD were)
              (VP (VBN introduced)
                (PP (IN in)
                  (NP (DT the) (NN television) (NN series)))
                (, ,)
                (S
                  (ADVP (RB first))
                  (VP (VBG appearing)
                    (PP (IN in)
                      (NP (DT the) (JJ second) (NN season) (NN episode) ('' '')))
                    (NP
                      (NP (DT The) (NNP Maquis) (NN Part) (NN I) ('' ''))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD premiered)
                            (PP (IN on)
                              (NP (NNP April) (CD 24) (, ,) (CD 1994)))))))))))))))
    (. .)))

det(Maquis-2, The-1)
nsubj(group-6, Maquis-2)
cop(group-6, were-3)
det(group-6, a-4)
amod(group-6, fictional-5)
root(ROOT-0, group-6)
nsubjpass(introduced-14, group-6)
det(universe-11, the-8)
nn(universe-11, Star-9)
nn(universe-11, Trek-10)
prep_in(group-6, universe-11)
auxpass(introduced-14, were-13)
rcmod(group-6, introduced-14)
det(series-18, the-16)
nn(series-18, television-17)
prep_in(introduced-14, series-18)
advmod(appearing-21, first-20)
xcomp(introduced-14, appearing-21)
det(episode-26, the-23)
amod(episode-26, second-24)
nn(episode-26, season-25)
prep_in(appearing-21, episode-26)
det(I-31, The-28)
nn(I-31, Maquis-29)
nn(I-31, Part-30)
dobj(appearing-21, I-31)
nsubj(premiered-35, I-31)
rcmod(I-31, premiered-35)
prep_on(premiered-35, April-37)
num(April-37, 24-38)
num(April-37, 1994-40)

(ROOT
  (S
    (NP (DT The) (NNP Borg))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ fictional) (NN pseudo-race))
        (PP (IN of)
          (NP
            (NP (NNS cyborgs))
            (VP (VBN depicted)
              (PP (IN in)
                (NP (NNP Star) (NNP Trek))))))))
    (. .)))

det(Borg-2, The-1)
nsubj(pseudo-race-6, Borg-2)
cop(pseudo-race-6, are-3)
det(pseudo-race-6, a-4)
amod(pseudo-race-6, fictional-5)
root(ROOT-0, pseudo-race-6)
prep_of(pseudo-race-6, cyborgs-8)
partmod(cyborgs-8, depicted-9)
nn(Trek-12, Star-11)
prep_in(depicted-9, Trek-12)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNP Star) (NNP Trek) (JJ fictional) (NN universe)))
    (, ,)
    (NP (DT a) (NN VISOR))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (VP (VBN used)
          (PP (IN by)
            (NP (DT the) (JJ blind)))
          (S
            (VP (TO to)
              (VP
                (ADVP (RB artificially))
                (VB provide)
                (NP (PRP them))
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN sense))
                    (PP (IN of)
                      (NP (NN sight)))))))))))
    (. .)))

det(universe-6, the-2)
nn(universe-6, Star-3)
nn(universe-6, Trek-4)
amod(universe-6, fictional-5)
prep_in(device-12, universe-6)
det(VISOR-9, a-8)
nsubj(device-12, VISOR-9)
cop(device-12, is-10)
det(device-12, a-11)
root(ROOT-0, device-12)
xsubj(provide-19, device-12)
partmod(device-12, used-13)
det(blind-16, the-15)
agent(used-13, blind-16)
aux(provide-19, to-17)
advmod(provide-19, artificially-18)
xcomp(used-13, provide-19)
dobj(provide-19, them-20)
det(sense-23, a-22)
prep_with(provide-19, sense-23)
prep_of(sense-23, sight-25)

(ROOT
  (S
    (NP (DT The) (NN word))
    (VP (VBD Secularism)
      (SBAR
        (S
          (NP (PRP itself))
          (VP (VBZ is)
            (ADVP (RB commonly))
            (VP (VBN used)
              (PP (IN as)
                (NP (DT a) (JJ pejorative)))
              (PP (IN by)
                (NP
                  (NP (JJ religious) (NNS conservatives))
                  (PP (IN in)
                    (NP (DT the) (NNP United) (NNPS States))))))))))
    (. .)))

det(word-2, The-1)
nsubj(Secularism-3, word-2)
root(ROOT-0, Secularism-3)
nsubjpass(used-7, itself-4)
auxpass(used-7, is-5)
advmod(used-7, commonly-6)
ccomp(Secularism-3, used-7)
det(pejorative-10, a-9)
prep_as(used-7, pejorative-10)
amod(conservatives-13, religious-12)
agent(used-7, conservatives-13)
det(States-17, the-15)
nn(States-17, United-16)
prep_in(conservatives-13, States-17)

(ROOT
  (S
    (NP (DT A) (NNP Shoe))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN item))
        (PP (IN of)
          (NP (NN footwear)))))
    (. .)))

det(Shoe-2, A-1)
nsubj(item-5, Shoe-2)
cop(item-5, is-3)
det(item-5, an-4)
root(ROOT-0, item-5)
prep_of(item-5, footwear-7)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Skinhead))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN member))
          (PP (IN of)
            (NP
              (NP (DT a) (NN subculture))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBN originated)
                    (PP (IN among)
                      (S
                        (VP (VBG working)
                          (NP (NN class) (NNS youths))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NNP United) (NNP Kingdom))
                              (PP (IN in)
                                (NP (DT the) (JJ late) (NNS 1960s))))))))))))))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (VP (VBN spread)
        (PP (TO to)
          (NP
            (NP (JJ other) (NNS parts))
            (PP (IN of)
              (NP (DT the) (NN world)))))))
    (. .)))

det(Skinhead-2, A-1)
nsubj(member-5, Skinhead-2)
cop(member-5, is-3)
det(member-5, a-4)
root(ROOT-0, member-5)
det(subculture-8, a-7)
prep_of(member-5, subculture-8)
nsubj(originated-10, subculture-8)
rcmod(subculture-8, originated-10)
prepc_among(originated-10, working-12)
nn(youths-14, class-13)
dobj(working-12, youths-14)
det(Kingdom-18, the-16)
nn(Kingdom-18, United-17)
prep_in(working-12, Kingdom-18)
det(1960s-22, the-20)
amod(1960s-22, late-21)
prep_in(Kingdom-18, 1960s-22)
advmod(member-5, then-25)
conj_and(member-5, then-25)
dep(member-5, spread-26)
amod(parts-29, other-28)
prep_to(spread-26, parts-29)
det(world-32, the-31)
prep_of(parts-29, world-32)

(ROOT
  (S
    (NP (DT A) (NNP Snare))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN trap))
            (VP (VBN used)
              (PP (IN for)
                (NP (VBG capturing) (NNS animals))))))))
    (. .)))

det(Snare-2, A-1)
nsubj(kind-5, Snare-2)
cop(kind-5, is-3)
det(kind-5, a-4)
root(ROOT-0, kind-5)
prep_of(kind-5, trap-7)
partmod(trap-7, used-8)
amod(animals-11, capturing-10)
prep_for(used-8, animals-11)

(ROOT
  (S
    (NP (DT The) (NNP Solanaceae))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN family))
        (PP (IN of)
          (NP
            (NP (VBG flowering) (NNS plants))
            (, ,)
            (SBAR
              (WHNP (DT many)
                (WHPP (IN of)
                  (WHNP (WDT which))))
              (S
                (VP (VBP are)
                  (ADJP (JJ edible))
                  (, ,)
                  (SBAR (IN while)
                    (S
                      (NP (NNS others))
                      (VP (VBP are)
                        (ADJP (JJ poisonous))))))))))
        (PRN (-LRB- -LRB-)
          (S
            (NP (DT some))
            (VP (VBP have)
              (NP
                (ADJP (DT both) (JJ edible)
                  (CC and)
                  (JJ toxic))
                (NNS parts))))
          (-RRB- -RRB-))))
    (. .)))

det(Solanaceae-2, The-1)
nsubj(family-5, Solanaceae-2)
cop(family-5, is-3)
det(family-5, a-4)
root(ROOT-0, family-5)
amod(plants-8, flowering-7)
prep_of(family-5, plants-8)
pobj(of-11, plants-8)
dep(of-11, many-10)
nsubj(edible-14, of-11)
cop(edible-14, are-13)
rcmod(plants-8, edible-14)
mark(poisonous-19, while-16)
nsubj(poisonous-19, others-17)
cop(poisonous-19, are-18)
advcl(edible-14, poisonous-19)
nsubj(have-22, some-21)
dep(family-5, have-22)
preconj(edible-24, both-23)
amod(parts-27, edible-24)
conj_and(edible-24, toxic-26)
amod(parts-27, toxic-26)
dobj(have-22, parts-27)

(ROOT
  (S
    (NP (DT A) (NNP Salt))
    (, ,)
    (PP (IN in)
      (NP (NN chemistry)))
    (, ,)
    (VP (VBZ is)
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (DT the) (NN product))
            (VP (VBN formed)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN neutralisation) (NN reaction))
                  (PP (IN of)
                    (NP (NNS acids)
                      (CC and)
                      (NNS bases))))))))))
    (. .)))

det(Salt-2, A-1)
nsubjpass(defined-8, Salt-2)
prep_in(defined-8, chemistry-5)
auxpass(defined-8, is-7)
root(ROOT-0, defined-8)
det(product-11, the-10)
prep_as(defined-8, product-11)
partmod(product-11, formed-12)
det(reaction-16, the-14)
nn(reaction-16, neutralisation-15)
prep_from(formed-12, reaction-16)
prep_of(reaction-16, acids-18)
prep_of(reaction-16, bases-20)
conj_and(acids-18, bases-20)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ descriptive) (NNS statistics)))
    (, ,)
    (NP (DT the) (NNP Range))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN length))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS smallest) (NN interval))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ contains)
                  (NP (PDT all) (DT the) (NNS data)))))))))
    (. .)))

amod(statistics-3, descriptive-2)
prep_in(length-9, statistics-3)
det(Range-6, the-5)
nsubj(length-9, Range-6)
cop(length-9, is-7)
det(length-9, the-8)
root(ROOT-0, length-9)
det(interval-13, the-11)
amod(interval-13, smallest-12)
prep_of(length-9, interval-13)
nsubj(contains-15, interval-13)
rcmod(interval-13, contains-15)
predet(data-18, all-16)
det(data-18, the-17)
dobj(contains-15, data-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (DT the) (NNP Skeleton)
      (CC or)
      (JJ skeletal) (NN system))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ strong) (NN framework))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ supports)
              (NP (DT the) (NN body)))))))
    (. .)))

prep_in(framework-12, biology-2)
det(system-8, the-4)
nn(system-8, Skeleton-5)
conj_or(Skeleton-5, skeletal-7)
nn(system-8, skeletal-7)
nsubj(framework-12, system-8)
cop(framework-12, is-9)
det(framework-12, a-10)
amod(framework-12, strong-11)
root(ROOT-0, framework-12)
nsubj(supports-14, framework-12)
rcmod(framework-12, supports-14)
det(body-16, the-15)
dobj(supports-14, body-16)

(ROOT
  (S
    (NP (DT A) (NNP Sunspot))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN region))
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NNP Sun) (POS 's))
              (NN surface))
            (PRN (-LRB- -LRB-)
              (NP (NN photosphere))
              (-RRB- -RRB-))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is)
                (VP (VBN marked)
                  (PP (IN by)
                    (NP
                      (NP (DT a) (JJR lower) (NN temperature))
                      (PP (IN than)
                        (NP (PRP$ its) (NNS surroundings)))))))
              (CC and)
              (VP (VBZ has)
                (NP
                  (NP (JJ intense) (JJ magnetic) (NN activity))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ inhibits)
                        (NP (NN convection))
                        (, ,)
                        (S
                          (VP (VBG forming)
                            (NP
                              (NP (NNS areas))
                              (PP (IN of)
                                (NP (VBN reduced) (NN surface) (NN temperature))))))))))))))))
    (. .)))

det(Sunspot-2, A-1)
nsubj(region-5, Sunspot-2)
cop(region-5, is-3)
det(region-5, a-4)
root(ROOT-0, region-5)
nsubjpass(marked-16, region-5)
nsubj(has-25, region-5)
det(Sun-8, the-7)
poss(surface-10, Sun-8)
prep_on(region-5, surface-10)
appos(surface-10, photosphere-12)
auxpass(marked-16, is-15)
rcmod(region-5, marked-16)
det(temperature-20, a-18)
amod(temperature-20, lower-19)
agent(marked-16, temperature-20)
poss(surroundings-23, its-22)
prep_than(temperature-20, surroundings-23)
rcmod(region-5, has-25)
conj_and(marked-16, has-25)
amod(activity-28, intense-26)
amod(activity-28, magnetic-27)
dobj(has-25, activity-28)
nsubj(inhibits-31, activity-28)
rcmod(activity-28, inhibits-31)
dobj(inhibits-31, convection-32)
partmod(inhibits-31, forming-34)
xcomp(inhibits-31, forming-34)
dobj(forming-34, areas-35)
amod(temperature-39, reduced-37)
nn(temperature-39, surface-38)
prep_of(areas-35, temperature-39)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ Long) (NN suit))
      (PP (IN in)
        (NP (NNP Sheepshead))))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT a) (NN player))
          (VP (VBZ has)
            (NP
              (NP
                (QP (CD two)
                  (CC or)
                  (JJR more))
                (NNS cards))
              (PP (IN of)
                (NP (DT the) (JJ same)
                  (PRN (-LRB- -LRB-)
                    (NP (NN non-trump))
                    (-RRB- -RRB-))
                  (NN suit))))))))
    (. .)))

det(suit-3, A-1)
amod(suit-3, Long-2)
nsubj(is-6, suit-3)
prep_in(suit-3, Sheepshead-5)
root(ROOT-0, is-6)
advmod(has-10, where-7)
det(player-9, a-8)
nsubj(has-10, player-9)
advcl(is-6, has-10)
num(cards-14, two-11)
conj_or(two-11, more-13)
quantmod(two-11, more-13)
num(cards-14, more-13)
dobj(has-10, cards-14)
det(suit-21, the-16)
amod(suit-21, same-17)
appos(suit-21, non-trump-19)
prep_of(cards-14, suit-21)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN card) (NN game) (NN Sheepshead)))
    (, ,)
    (NP (DT the) (NNP Blind))
    (VP (VBP are)
      (S
        (NP (DT the) (NNS cards))
        (VP (VB face)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NN table)))
          (PP (IN after)
            (NP (DT the) (JJ initial) (NN deal))))))
    (. .)))

det(Sheepshead-5, the-2)
nn(Sheepshead-5, card-3)
nn(Sheepshead-5, game-4)
prep_in(are-9, Sheepshead-5)
det(Blind-8, the-7)
nsubj(are-9, Blind-8)
root(ROOT-0, are-9)
det(cards-11, the-10)
nsubj(face-12, cards-11)
ccomp(are-9, face-12)
prt(face-12, down-13)
det(table-16, the-15)
prep_on(face-12, table-16)
det(deal-20, the-18)
amod(deal-20, initial-19)
prep_after(face-12, deal-20)

(ROOT
  (NP
    (NP
      (NP (DT A) (NNP Spermatozoon))
      (CC or)
      (NP (NNP spermatozoan) (-LRB- -LRB-) (NNP pl)))
    (. .)))

det(Spermatozoon-2, A-1)
root(ROOT-0, Spermatozoon-2)
nn(pl-6, spermatozoan-4)
conj_or(Spermatozoon-2, pl-6)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Shuttlecock))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ high-drag) (NN projectile))
        (VP (VBN used)
          (PP (IN in)
            (NP
              (NP (DT the) (NN sport))
              (PP (IN of)
                (NP (NN badminton))))))))
    (. .)))

det(Shuttlecock-2, A-1)
nsubj(projectile-6, Shuttlecock-2)
cop(projectile-6, is-3)
det(projectile-6, a-4)
amod(projectile-6, high-drag-5)
root(ROOT-0, projectile-6)
partmod(projectile-6, used-7)
det(sport-10, the-9)
prep_in(used-7, sport-10)
prep_of(sport-10, badminton-12)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Supernova))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN plural))
          (: :)
          (NP (NN supernovae)
            (CC or)
            (NNS supernovas)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (JJ stellar) (NN explosion)))
    (. .)))

det(Supernova-2, A-1)
nsubj(explosion-13, Supernova-2)
dep(Supernova-2, plural-4)
dep(plural-4, supernovae-6)
dep(plural-4, supernovas-8)
conj_or(supernovae-6, supernovas-8)
cop(explosion-13, is-10)
det(explosion-13, a-11)
amod(explosion-13, stellar-12)
root(ROOT-0, explosion-13)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN context))
        (PP (IN of)
          (NP (NN spaceflight)))))
    (, ,)
    (NP (DT a) (NNP Satellite))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN object))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN placed)
                  (PP (IN into)
                    (NP (NN orbit)))
                  (PP (IN by)
                    (NP (JJ human) (NN endeavor))))))))))
    (. .)))

det(context-3, the-2)
prep_in(object-11, context-3)
prep_of(context-3, spaceflight-5)
det(Satellite-8, a-7)
nsubj(object-11, Satellite-8)
cop(object-11, is-9)
det(object-11, an-10)
root(ROOT-0, object-11)
nsubjpass(placed-15, object-11)
aux(placed-15, has-13)
auxpass(placed-15, been-14)
rcmod(object-11, placed-15)
prep_into(placed-15, orbit-17)
amod(endeavor-20, human-19)
agent(placed-15, endeavor-20)

(ROOT
  (S
    (NP (DT A) (NNP Spreadsheet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN computer) (NN application))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ simulates)
              (NP (DT a) (NN paper) (NN worksheet)))))))
    (. .)))

det(Spreadsheet-2, A-1)
nsubj(application-6, Spreadsheet-2)
cop(application-6, is-3)
det(application-6, a-4)
nn(application-6, computer-5)
root(ROOT-0, application-6)
nsubj(simulates-8, application-6)
rcmod(application-6, simulates-8)
det(worksheet-11, a-9)
nn(worksheet-11, paper-10)
dobj(simulates-8, worksheet-11)

(ROOT
  (S
    (PP
      (PP (IN In)
        (NP (JJ physical) (NN chemistry)))
      (, ,)
      (CC and)
      (PP (IN in)
        (NP (NN engineering))))
    (, ,)
    (NP (NNP Steam))
    (VP (VBZ refers)
      (S
        (VP (TO to)
          (VP (VB vaporized)
            (NP (NN water))))))
    (. .)))

amod(chemistry-3, physical-2)
prep_in(refers-10, chemistry-3)
prep_in(refers-10', engineering-7)
nsubj(refers-10, Steam-9)
nsubj(refers-10', Steam-9)
xsubj(vaporized-12, Steam-9)
root(ROOT-0, refers-10)
conj_and(refers-10, refers-10')
aux(vaporized-12, to-11)
xcomp(refers-10, vaporized-12)
dobj(vaporized-12, water-13)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN computer) (NN programming))
        (CC and)
        (NP
          (NP (DT some) (NNS branches))
          (PP (IN of)
            (NP (NNS mathematics))))))
    (, ,)
    (NP (DT a) (NNP String))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ ordered) (NN sequence))
        (PP (IN of)
          (NP (NNS symbols)))))
    (. .)))

nn(programming-3, computer-2)
prep_in(sequence-15, programming-3)
det(branches-6, some-5)
conj_and(programming-3, branches-6)
prep_in(sequence-15, branches-6)
prep_of(branches-6, mathematics-8)
det(String-11, a-10)
nsubj(sequence-15, String-11)
cop(sequence-15, is-12)
det(sequence-15, an-13)
amod(sequence-15, ordered-14)
root(ROOT-0, sequence-15)
prep_of(sequence-15, symbols-17)

(ROOT
  (S
    (NP (NNP Satanism))
    (VP (MD can)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT a) (NN number))
            (PP (IN of)
              (NP (NN belief) (NNS systems)))))
        (PP (VBG depending)
          (PP (IN on)
            (NP (DT the) (NN user)
              (CC and)
              (NN context))))))
    (. .)))

nsubj(refer-3, Satanism-1)
aux(refer-3, can-2)
root(ROOT-0, refer-3)
det(number-6, a-5)
prep_to(refer-3, number-6)
nn(systems-9, belief-8)
prep_of(number-6, systems-9)
prepc_depending_on(refer-3, on-11)
det(user-13, the-12)
pobj(refer-3, user-13)
pobj(refer-3, context-15)
conj_and(user-13, context-15)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Semiconductor))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ solid) (NN material))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ has)
                (NP (JJ electrical) (NN conductivity))
                (PP (IN in) (IN between)
                  (NP
                    (NP
                      (NP (DT that))
                      (PP (IN of)
                        (NP (DT a) (NN conductor))))
                    (CC and)
                    (NP
                      (NP (DT that))
                      (PP (IN of)
                        (NP (DT an) (NN insulator))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (MD can)
        (VP (VB vary)
          (PRT (RP over))
          (NP
            (NP (DT that) (JJ wide) (NN range))
            (UCP (DT either)
              (ADVP (RB permanently))
              (CC or)
              (NP (NN dynamically)))))))
    (. .)))

det(Semiconductor-2, A-1)
nsubj(material-6, Semiconductor-2)
cop(material-6, is-3)
det(material-6, a-4)
amod(material-6, solid-5)
root(ROOT-0, material-6)
nsubj(has-8, material-6)
rcmod(material-6, has-8)
amod(conductivity-10, electrical-9)
dobj(has-8, conductivity-10)
dep(has-8, in-11)
prep_between(has-8, that-13)
det(conductor-16, a-15)
prep_of(that-13, conductor-16)
prep_between(has-8, that-18)
conj_and(that-13, that-18)
det(insulator-21, an-20)
prep_of(that-18, insulator-21)
nsubj(vary-25, it-23)
aux(vary-25, can-24)
parataxis(material-6, vary-25)
prt(vary-25, over-26)
det(range-29, that-27)
amod(range-29, wide-28)
dobj(vary-25, range-29)
dep(range-29, either-30)
dep(either-30, permanently-31)
dep(range-29, dynamically-33)
conj_or(either-30, dynamically-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NN Subring))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subset))
        (PP (IN of)
          (NP
            (NP (DT a) (NN ring))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP
                  (VP (VBZ contains)
                    (NP (DT the) (JJ multiplicative) (NN identity)))
                  (CC and)
                  (VP (VBZ is)
                    (NP (PRP itself)))
                  (NP
                    (NP (DT a) (NN ring))
                    (PP (IN under)
                      (NP (DT the) (JJ same) (JJ binary) (NNS operations)))))))))))
    (. .)))

prep_in(subset-8, mathematics-2)
det(Subring-5, a-4)
nsubj(subset-8, Subring-5)
cop(subset-8, is-6)
det(subset-8, a-7)
root(ROOT-0, subset-8)
det(ring-11, a-10)
prep_of(subset-8, ring-11)
nsubj(contains-14, ring-11)
rcmod(ring-11, contains-14)
det(identity-17, the-15)
amod(identity-17, multiplicative-16)
dobj(contains-14, identity-17)
cop(itself-20, is-19)
rcmod(ring-11, itself-20)
conj_and(contains-14, itself-20)
det(ring-22, a-21)
dobj(contains-14, ring-22)
det(operations-27, the-24)
amod(operations-27, same-25)
amod(operations-27, binary-26)
prep_under(ring-22, operations-27)

(ROOT
  (S
    (NP (NNP Structuralism))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN approach))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ human) (NNS sciences))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ attempts)
                  (S
                    (VP (TO to)
                      (VP (VB analyze)
                        (NP
                          (NP (DT a) (JJ specific) (NN field))
                          (PRN (-LRB- -LRB-)
                            (PP (IN for)
                              (NP
                                (NP (NN instance))
                                (, ,)
                                (ADVP (RB mythology))))
                            (-RRB- -RRB-)))
                        (PP (IN as)
                          (NP
                            (NP (DT a) (JJ complex) (NN system))
                            (PP (IN of)
                              (NP (JJ interrelated) (NNS parts)))))))))))))))
    (. .)))

nsubj(approach-4, Structuralism-1)
cop(approach-4, is-2)
det(approach-4, an-3)
root(ROOT-0, approach-4)
det(sciences-8, the-6)
amod(sciences-8, human-7)
prep_to(approach-4, sciences-8)
nsubj(attempts-10, sciences-8)
rcmod(sciences-8, attempts-10)
aux(analyze-12, to-11)
xcomp(attempts-10, analyze-12)
det(field-15, a-13)
amod(field-15, specific-14)
dobj(analyze-12, field-15)
dep(field-15, for-17)
pobj(for-17, instance-18)
advmod(instance-18, mythology-20)
det(system-25, a-23)
amod(system-25, complex-24)
prep_as(analyze-12, system-25)
amod(parts-28, interrelated-27)
prep_of(system-25, parts-28)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ Western) (JJ medieval) (NN legend)))
    (, ,)
    (NP
      (NP
        (NP (DT a) (NNPS Succubus))
        (PRN (-LRB- -LRB-)
          (NP (CD plural) (NNS succubi))
          (-RRB- -RRB-)))
      (CC or)
      (NP
        (NP (NN succuba))
        (PRN (-LRB- -LRB-)
          (NP (NN plural) (NN succubae))
          (-RRB- -RRB-))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN demon))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ takes)
              (S
                (NP
                  (NP (DT the) (NN form))
                  (PP (IN of)
                    (NP (DT a) (JJ beautiful) (NN woman))))
                (VP (TO to)
                  (VP (VB seduce)
                    (NP
                      (NP (NNS men))
                      (, ,)
                      (ADJP (RB especially) (JJ monks))
                      (, ,)
                      (PP (IN in)
                        (NP (NNS dreams)
                          (S
                            (VP (TO to)
                              (VP (VB have)
                                (NP (JJ sexual) (NN intercourse))))))))))))))))
    (. .)))

amod(legend-4, Western-2)
amod(legend-4, medieval-3)
prep_in(demon-20, legend-4)
det(Succubus-7, a-6)
nsubj(demon-20, Succubus-7)
num(succubi-10, plural-9)
appos(Succubus-7, succubi-10)
conj_or(Succubus-7, succuba-13)
nsubj(demon-20, succuba-13)
nn(succubae-16, plural-15)
appos(succuba-13, succubae-16)
cop(demon-20, is-18)
det(demon-20, a-19)
root(ROOT-0, demon-20)
nsubj(takes-23, demon-20)
rcmod(demon-20, takes-23)
det(form-25, the-24)
nsubj(seduce-31, form-25)
det(woman-29, a-27)
amod(woman-29, beautiful-28)
prep_of(form-25, woman-29)
aux(seduce-31, to-30)
xcomp(takes-23, seduce-31)
dobj(seduce-31, men-32)
advmod(monks-35, especially-34)
amod(men-32, monks-35)
prep_in(men-32, dreams-38)
aux(have-40, to-39)
infmod(dreams-38, have-40)
amod(intercourse-42, sexual-41)
dobj(have-40, intercourse-42)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Semigroup))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ algebraic) (NN structure))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN nonempty))
              (VP (VBN set)
                (NP (NNP S))
                (ADVP (RB together))
                (PP (IN with)
                  (NP (DT an) (JJ associative) (NN binary) (NN operation)))))))))
    (. .)))

prep_in(structure-9, mathematics-2)
det(Semigroup-5, a-4)
nsubj(structure-9, Semigroup-5)
cop(structure-9, is-6)
det(structure-9, an-7)
amod(structure-9, algebraic-8)
root(ROOT-0, structure-9)
partmod(structure-9, consisting-10)
det(nonempty-13, a-12)
prep_of(consisting-10, nonempty-13)
partmod(nonempty-13, set-14)
dobj(set-14, S-15)
det(operation-21, an-18)
amod(operation-21, associative-19)
nn(operation-21, binary-20)
prep_together_with(set-14, operation-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Sequence))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ ordered) (NN list))
        (PP (IN of)
          (NP
            (NP (NNS objects))
            (PRN (-LRB- -LRB-)
              (NP
                (QP (CC or)
                  (CD events)))
              (-RRB- -RRB-))))))
    (. .)))

prep_in(list-9, mathematics-2)
det(Sequence-5, a-4)
nsubj(list-9, Sequence-5)
cop(list-9, is-6)
det(list-9, an-7)
amod(list-9, ordered-8)
root(ROOT-0, list-9)
prep_of(list-9, objects-11)
cc(events-14, or-13)
dep(objects-11, events-14)

(ROOT
  (S
    (NP (DT A) (NN Sandpit)
      (CC or)
      (NN sandbox))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ low) (, ,) (JJ wide) (NN container)
          (CC or)
          (JJ shallow) (NN depression))
        (VP (VBN filled)
          (PP (IN with)
            (NP
              (NP (NN sand))
              (SBAR
                (WHPP (IN in)
                  (WHNP (WDT which)))
                (S
                  (NP (NNS children))
                  (VP (MD can)
                    (VP (VB play))))))))))
    (. .)))

det(Sandpit-2, A-1)
nsubj(container-10, Sandpit-2)
conj_or(Sandpit-2, sandbox-4)
nsubj(container-10, sandbox-4)
cop(container-10, is-5)
det(container-10, a-6)
amod(container-10, low-7)
amod(container-10, wide-9)
root(ROOT-0, container-10)
amod(depression-13, shallow-12)
conj_or(container-10, depression-13)
partmod(container-10, filled-14)
prep_with(filled-14, sand-16)
rel(play-21, which-18)
nsubj(play-21, children-19)
aux(play-21, can-20)
rcmod(sand-16, play-21)

(ROOT
  (S
    (NP (DT The) (NNP Saxons)
      (CC or)
      (NNP Saxon) (NNS people))
    (VP (VBD were)
      (NP
        (NP (DT a) (NN confederation))
        (PP (IN of)
          (NP (NNP Old) (NNP Germanic) (NNS tribes)))))
    (. .)))

det(people-5, The-1)
nn(people-5, Saxons-2)
conj_or(Saxons-2, Saxon-4)
nn(people-5, Saxon-4)
nsubj(confederation-8, people-5)
cop(confederation-8, were-6)
det(confederation-8, a-7)
root(ROOT-0, confederation-8)
nn(tribes-12, Old-10)
nn(tribes-12, Germanic-11)
prep_of(confederation-8, tribes-12)

(ROOT
  (S
    (PP (IN In)
      (UCP
        (NP (NNS mathematics))
        (CC and)
        (PP (IN in)
          (NP (NN physics)))))
    (, ,)
    (NP (NNP Separability))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (NNS properties))
          (PP (IN of)
            (NP
              (NP (JJ Separable) (NNS spaces))
              (PP (IN in)
                (NP (NN topology))))))))
    (. .)))

prep_in(refers-8, mathematics-2)
conj_and(mathematics-2, in-4)
prep_in(refers-8, in-4)
prep_in(mathematics-2, physics-5)
nsubj(refers-8, Separability-7)
root(ROOT-0, refers-8)
prep_to(refers-8, properties-10)
amod(spaces-13, Separable-12)
prep_of(properties-10, spaces-13)
prep_in(spaces-13, topology-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Sword))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long-edged) (NN piece))
        (PP (IN of)
          (NP
            (NP (NN metal))
            (, ,)
            (VP
              (VP (VBN used)
                (PP (IN as)
                  (NP (DT a) (NN cutting))))
              (CC and)
              (VP (VBG \/)
                (CC or)
                (VBG thrusting)
                (NP
                  (NP (NN weapon))
                  (PP (IN in)
                    (NP (JJ many) (NNS civilizations))))
                (PP (IN throughout)
                  (NP (DT the) (NN world)))))))))
    (. .)))

det(Sword-2, A-1)
nsubj(piece-6, Sword-2)
cop(piece-6, is-3)
det(piece-6, a-4)
amod(piece-6, long-edged-5)
root(ROOT-0, piece-6)
prep_of(piece-6, metal-8)
dep(metal-8, used-10)
det(cutting-13, a-12)
prep_as(used-10, cutting-13)
dep(metal-8, \/-15)
conj_and(used-10, \/-15)
conj_and(used-10, thrusting-17)
conj_or(\/-15, thrusting-17)
dobj(\/-15, weapon-18)
amod(civilizations-21, many-20)
prep_in(weapon-18, civilizations-21)
det(world-24, the-23)
prep_throughout(\/-15, world-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (PP
      (ADVP (RB specifically))
      (IN in)
      (NP (NN topology)))
    (, ,)
    (NP (DT a) (NNP Surface))
    (VP (VBZ is)
      (NP (DT a) (JJ two-dimensional) (NN manifold)))
    (. .)))

prep_in(manifold-13, mathematics-2)
advmod(manifold-13, specifically-4)
prep_in(manifold-13, topology-6)
det(Surface-9, a-8)
nsubj(manifold-13, Surface-9)
cop(manifold-13, is-10)
det(manifold-13, a-11)
amod(manifold-13, two-dimensional-12)
root(ROOT-0, manifold-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP (NNP Sleipnir))
    (VP (VBZ is)
      (NP
        (NP
          (NP (NNP Odin) (POS 's))
          (JJ magical) (JJ eight-legged) (NN steed))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJS greatest))
          (PP (IN of)
            (NP (DT all) (NNS horses))))))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(steed-11, mythology-3)
nsubj(steed-11, Sleipnir-5)
nsubj(greatest-15, Sleipnir-5)
cop(steed-11, is-6)
poss(steed-11, Odin-7)
amod(steed-11, magical-9)
amod(steed-11, eight-legged-10)
root(ROOT-0, steed-11)
det(greatest-15, the-14)
conj_and(steed-11, greatest-15)
det(horses-18, all-17)
prep_of(greatest-15, horses-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Savate))
    (VP (VBZ is)
      (ADVP (RB perhaps))
      (NP
        (NP (DT the) (JJ only) (NN style))
        (PP (IN of)
          (S
            (VP (VBG kickboxing)
              (PP (IN in)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (DT the) (NNS fighters))
                    (ADVP (RB habitually))
                    (VP (VBP wear)
                      (NP (NNS shoes)))
                    (PRN (-LRB- -LRB-)
                      (VP (VB savate)
                        (S
                          (VP (VBG being)
                            (NP (DT a) (JJ French) (NN word))))
                        (PP (IN for) ('' '')
                          (NP (JJ old) (NN shoe)))
                        ('' ''))
                      (-RRB- -RRB-))))))))))
    (. .)))

nsubj(style-6, Savate-1)
cop(style-6, is-2)
advmod(style-6, perhaps-3)
det(style-6, the-4)
amod(style-6, only-5)
root(ROOT-0, style-6)
prepc_of(style-6, kickboxing-8)
dobj(wear-14, which-10)
det(fighters-12, the-11)
nsubj(wear-14, fighters-12)
advmod(wear-14, habitually-13)
prepc_in(kickboxing-8, wear-14)
dobj(wear-14, shoes-15)
dep(wear-14, savate-17)
cop(word-21, being-18)
det(word-21, a-19)
amod(word-21, French-20)
xcomp(savate-17, word-21)
amod(shoe-25, old-24)
prep_for(savate-17, shoe-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (NNP Scrabble))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word) (NN game))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP
              (QP (CD two) (TO to) (CD four))
              (NNS players))
            (VP (VBP score)
              (NP (NNS points))
              (PP (IN by)
                (S
                  (VP (VBG forming)
                    (NP (NNS words))
                    (PP (IN from)
                      (NP (JJ individual) (JJ lettered) (NNS tiles)))
                    (PP (IN on)
                      (NP
                        (NP (DT a) (NN game) (NN board))
                        (VP (VBN marked)
                          (PP (IN with)
                            (NP (DT a) (JJ 15-by-15) (NN grid))))))))))))))
    (. .)))

nsubj(game-5, Scrabble-1)
cop(game-5, is-2)
det(game-5, a-3)
nn(game-5, word-4)
root(ROOT-0, game-5)
rel(score-12, which-7)
number(four-10, two-8)
dep(four-10, to-9)
num(players-11, four-10)
nsubj(score-12, players-11)
rcmod(game-5, score-12)
dobj(score-12, points-13)
prepc_by(score-12, forming-15)
dobj(forming-15, words-16)
amod(tiles-20, individual-18)
amod(tiles-20, lettered-19)
prep_from(forming-15, tiles-20)
det(board-24, a-22)
nn(board-24, game-23)
prep_on(forming-15, board-24)
partmod(board-24, marked-25)
det(grid-29, a-27)
amod(grid-29, 15-by-15-28)
prep_with(marked-25, grid-29)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN zootomy)
        (CC and)
        (NN dermatology)))
    (, ,)
    (NP (NNP Skin))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS largest) (NN organ))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ integumentary) (NN system))
            (VP (VBN made)
              (S
                (VP (VBG <PRT>)
                  (PRT (RP up))
                  (NP
                    (NP (NNP </PRT>))
                    (PP (IN of)
                      (NP
                        (NP (JJ multiple) (NNS layers))
                        (PP (IN of)
                          (NP (JJ epithelial) (NNS tissues)))))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP guard)
                          (NP (VBG underlying) (NNS muscles)
                            (CC and)
                            (NNS organs)))))))))))))
    (. .)))

prep_in(organ-10, zootomy-2)
conj_and(zootomy-2, dermatology-4)
prep_in(organ-10, dermatology-4)
nsubj(organ-10, Skin-6)
cop(organ-10, is-7)
det(organ-10, the-8)
amod(organ-10, largest-9)
root(ROOT-0, organ-10)
det(system-14, the-12)
amod(system-14, integumentary-13)
prep_of(organ-10, system-14)
partmod(system-14, made-15)
xcomp(made-15, <PRT>-16)
prt(<PRT>-16, up-17)
dobj(<PRT>-16, </PRT>-18)
nsubj(guard-26, </PRT>-18)
amod(layers-21, multiple-20)
prep_of(</PRT>-18, layers-21)
amod(tissues-24, epithelial-23)
prep_of(layers-21, tissues-24)
rcmod(</PRT>-18, guard-26)
amod(muscles-28, underlying-27)
dobj(guard-26, muscles-28)
dobj(guard-26, organs-30)
conj_and(muscles-28, organs-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NN biology)))
    (, ,)
    (NP (DT a) (NNPS Species))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ basic) (NNS units))
            (PP (IN of)
              (NP
                (NP (JJ biological) (NN classification))
                (CC and)
                (NP (DT a) (JJ taxonomic) (NN rank))))))))
    (. .)))

prep_in(one-7, biology-2)
det(Species-5, a-4)
nsubj(one-7, Species-5)
cop(one-7, is-6)
root(ROOT-0, one-7)
det(units-11, the-9)
amod(units-11, basic-10)
prep_of(one-7, units-11)
amod(classification-14, biological-13)
prep_of(units-11, classification-14)
det(rank-18, a-16)
amod(rank-18, taxonomic-17)
prep_of(units-11, rank-18)
conj_and(classification-14, rank-18)

(ROOT
  (S
    (NP (DT A) (NNP Sniper))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN infantry) (NN combatant)
          (CC or)
          (NN serviceman))
        (PRN (-LRB- -LRB-)
          (NP (JJ e.) (NN g.) (NN police) (NN officer))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ specializes)
              (PP (IN in)
                (S
                  (VP (VBG shooting)
                    (PP (IN from)
                      (NP
                        (NP (DT a) (JJ concealed) (NN position))
                        (PP (IN over)
                          (NP
                            (NP (JJR longer) (NNS ranges))
                            (PP (IN than)
                              (NP (JJ regular) (NN infantry))))))
                      (, ,)
                      (ADVP (RB often)))
                    (PP (IN with)
                      (NP (DT a)
                        (ADJP (RB specially) (VBN designed)
                          (CC or)
                          (VBN adapted))
                        (NN sniper) (NN rifle)))))))))))
    (. .)))

det(Sniper-2, A-1)
nsubj(combatant-6, Sniper-2)
cop(combatant-6, is-3)
det(combatant-6, an-4)
nn(combatant-6, infantry-5)
root(ROOT-0, combatant-6)
nsubj(specializes-16, combatant-6)
conj_or(combatant-6, serviceman-8)
nsubj(specializes-16, serviceman-8)
amod(officer-13, e.-10)
nn(officer-13, g.-11)
nn(officer-13, police-12)
appos(combatant-6, officer-13)
rcmod(combatant-6, specializes-16)
prepc_in(specializes-16, shooting-18)
det(position-22, a-20)
amod(position-22, concealed-21)
prep_from(shooting-18, position-22)
amod(ranges-25, longer-24)
prep_over(position-22, ranges-25)
amod(infantry-28, regular-27)
prep_than(ranges-25, infantry-28)
advmod(shooting-18, often-30)
det(rifle-38, a-32)
advmod(designed-34, specially-33)
amod(rifle-38, designed-34)
conj_or(designed-34, adapted-36)
amod(rifle-38, adapted-36)
nn(rifle-38, sniper-37)
prep_with(shooting-18, rifle-38)

(ROOT
  (S
    (NP (DT A) (NNP Sign))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN entity))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ signifies)
              (NP (DT another) (NN entity)))))))
    (. .)))

det(Sign-2, A-1)
nsubj(entity-5, Sign-2)
cop(entity-5, is-3)
det(entity-5, an-4)
root(ROOT-0, entity-5)
nsubj(signifies-7, entity-5)
rcmod(entity-5, signifies-7)
det(entity-9, another-8)
dobj(signifies-7, entity-9)

(ROOT
  (S
    (NP (NN Strike))
    (VP (MD may)
      (VP (VB refer)
        (PP (TO to)
          (NP (DT a) (NN refusal)
            (S
              (VP (TO to)
                (VP (VB work)
                  (CC or)
                  (VB perform))))))))
    (. .)))

nsubj(refer-3, Strike-1)
aux(refer-3, may-2)
root(ROOT-0, refer-3)
det(refusal-6, a-5)
prep_to(refer-3, refusal-6)
aux(work-8, to-7)
infmod(refusal-6, work-8)
infmod(refusal-6, perform-10)
conj_or(work-8, perform-10)

(ROOT
  (S
    (NP (DT A) (NNP State))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ political) (NN association))
        (PP (IN with)
          (NP
            (NP (JJ effective) (NN sovereignty))
            (PP (IN over)
              (NP (DT a) (JJ geographic) (NN area)))))))
    (. .)))

det(State-2, A-1)
nsubj(association-6, State-2)
cop(association-6, is-3)
det(association-6, a-4)
amod(association-6, political-5)
root(ROOT-0, association-6)
amod(sovereignty-9, effective-8)
prep_with(association-6, sovereignty-9)
det(area-13, a-11)
amod(area-13, geographic-12)
prep_over(sovereignty-9, area-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP Sharable) (NNP Content) (NNP Object) (NNP Reference) (NNP Model))
      (PRN (-LRB- -LRB-)
        (NP (NNP SCORM))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN collection))
        (PP (IN of)
          (NP
            (NP (NNS standards)
              (CC and)
              (NNS specifications))
            (PP (IN for)
              (NP (JJ web-based) (NN e-learning)))))))
    (. .)))

nn(Model-5, Sharable-1)
nn(Model-5, Content-2)
nn(Model-5, Object-3)
nn(Model-5, Reference-4)
nsubj(collection-11, Model-5)
abbrev(Model-5, SCORM-7)
cop(collection-11, is-9)
det(collection-11, a-10)
root(ROOT-0, collection-11)
prep_of(collection-11, standards-13)
prep_of(collection-11, specifications-15)
conj_and(standards-13, specifications-15)
amod(e-learning-18, web-based-17)
prep_for(standards-13, e-learning-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN probability) (NN theory)
        (CC and)
        (NNS statistics)))
    (, ,)
    (NP (NNP Skewness))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP
            (NP (DT the) (NN asymmetry))
            (PP (IN of)
              (NP
                (NP (DT the) (NN probability) (NN distribution))
                (PP (IN of)
                  (NP (DT a) (JJ real-valued) (JJ random) (NN variable)))))))))
    (. .)))

nn(theory-3, probability-2)
prep_in(measure-10, theory-3)
conj_and(theory-3, statistics-5)
prep_in(measure-10, statistics-5)
nsubj(measure-10, Skewness-7)
cop(measure-10, is-8)
det(measure-10, a-9)
root(ROOT-0, measure-10)
det(asymmetry-13, the-12)
prep_of(measure-10, asymmetry-13)
det(distribution-17, the-15)
nn(distribution-17, probability-16)
prep_of(asymmetry-13, distribution-17)
det(variable-22, a-19)
amod(variable-22, real-valued-20)
amod(variable-22, random-21)
prep_of(distribution-17, variable-22)

(ROOT
  (S
    (NP (DT A) (NNP Snowboard))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ thin) (, ,)
          (ADJP (JJ hourglass) (JJ shaped))
          (NN board) (NN ridden))
        (PP (IN down)
          (NP
            (NP (DT a) (JJ sloped) (NN section))
            (PP (IN of)
              (NP
                (NP (NN earth))
                (VP (VBN covered)
                  (PP (IN in)
                    (NP (NN snow))))))))))
    (. .)))

det(Snowboard-2, A-1)
nsubj(ridden-10, Snowboard-2)
cop(ridden-10, is-3)
det(ridden-10, a-4)
amod(ridden-10, thin-5)
amod(shaped-8, hourglass-7)
amod(ridden-10, shaped-8)
nn(ridden-10, board-9)
root(ROOT-0, ridden-10)
det(section-14, a-12)
amod(section-14, sloped-13)
prep_down(ridden-10, section-14)
prep_of(section-14, earth-16)
partmod(earth-16, covered-17)
prep_in(covered-17, snow-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NN poetry)))
    (, ,)
    (NP (DT a) (NNP Stanza))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN within)
          (NP (DT a) (JJR larger) (NN poem)))))
    (. .)))

prep_in(unit-8, poetry-2)
det(Stanza-5, a-4)
nsubj(unit-8, Stanza-5)
cop(unit-8, is-6)
det(unit-8, a-7)
root(ROOT-0, unit-8)
det(poem-12, a-10)
amod(poem-12, larger-11)
prep_within(unit-8, poem-12)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NN Switch))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ mechanical) (NN device))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB connect)
                (CC and)
                (VB disconnect)
                (NP (DT a) (NN circuit))
                (PP (IN at)
                  (NP (NN will)))))))))
    (. .)))

det(Switch-2, A-1)
nsubj(device-6, Switch-2)
cop(device-6, is-3)
det(device-6, a-4)
amod(device-6, mechanical-5)
root(ROOT-0, device-6)
xsubj(connect-9, device-6)
partmod(device-6, used-7)
aux(connect-9, to-8)
xcomp(used-7, connect-9)
xcomp(used-7, disconnect-11)
conj_and(connect-9, disconnect-11)
det(circuit-13, a-12)
dobj(connect-9, circuit-13)
prep_at(connect-9, will-15)

(ROOT
  (S
    (NP (DT A) (NNP Sequencer))
    (VP (VBZ is)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB either))
            (VP
              (VP (VBZ generates)
                (CC or)
                (VBZ analyzes)
                (NP (DT a) (NN sequence)))
              (, ,)
              (CC or)
              (VP (VBZ triggers)
                (NP (NNS events))
                (PP (IN in)
                  (NP (JJ timed) (NN fashion)))))))))
    (. .)))

det(Sequencer-2, A-1)
nsubj(something-4, Sequencer-2)
cop(something-4, is-3)
root(ROOT-0, something-4)
nsubj(generates-7, something-4)
nsubj(analyzes-9, something-4)
nsubj(triggers-14, something-4)
advmod(generates-7, either-6)
rcmod(something-4, generates-7)
rcmod(something-4, analyzes-9)
conj_or(generates-7, analyzes-9)
det(sequence-11, a-10)
dobj(generates-7, sequence-11)
rcmod(something-4, triggers-14)
conj_or(generates-7, triggers-14)
dobj(triggers-14, events-15)
amod(fashion-18, timed-17)
prep_in(triggers-14, fashion-18)

(ROOT
  (S
    (NP (DT The) (NNP Soul))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP (JJ many) (JJ religious)
          (CC and)
          (JJ philosophical) (NNS traditions))))
    (, ,)
    (VP (VBZ is)
      (VP
        (NP
          (NP (DT the) (JJ self-aware) (NN essence))
          (, ,)
          (CC or)
          (NP (NN consciousness))
          (, ,))
        (ADJP (JJ unique)
          (PP (TO to)
            (NP
              (NP (DT a) (JJ particular) (NN living))
              (VP (VBG being)))))))
    (. .)))

det(Soul-2, The-1)
nsubj(unique-20, Soul-2)
prepc_according_to(unique-20, to-5)
amod(religious-7, many-6)
pobj(unique-20, religious-7)
amod(traditions-10, philosophical-9)
conj_and(religious-7, traditions-10)
pobj(unique-20, traditions-10)
aux(unique-20, is-12)
det(essence-15, the-13)
amod(essence-15, self-aware-14)
dobj(unique-20, essence-15)
conj_or(essence-15, consciousness-18)
dobj(unique-20, consciousness-18)
root(ROOT-0, unique-20)
det(living-24, a-22)
amod(living-24, particular-23)
prep_to(unique-20, living-24)
partmod(living-24, being-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Steradian))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NN sr)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNP SI) (NN unit))
        (PP (IN of)
          (NP (JJ solid) (NN angle)))))
    (. .)))

det(Steradian-2, The-1)
nsubj(unit-11, Steradian-2)
dep(Steradian-2, symbol-4)
dep(symbol-4, sr-6)
cop(unit-11, is-8)
det(unit-11, the-9)
nn(unit-11, SI-10)
root(ROOT-0, unit-11)
amod(angle-14, solid-13)
prep_of(unit-11, angle-14)

(ROOT
  (S
    (NP
      (NP (NNP Small) (NNP Computer) (NNP System) (NNP Interface))
      (, ,)
      (CC or)
      (NP
        (NP (NNP SCSI))
        (PRN (-LRB- -LRB-)
          (VP (VBN pronounced)
            (S
              (ADJP (JJ skuh-zee))))
          (-RRB- -RRB-)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN set))
        (PP (IN of)
          (S
            (NP
              (NP (NNS standards))
              (PP (IN for)
                (NP (NNP physically))))
            (VP (VBG connecting)
              (CC and)
              (VBG transferring)
              (NP
                (NP (NNS data))
                (PP (IN between)
                  (NP
                    (NP (NNS computers))
                    (CC and)
                    (NP (JJ peripheral) (NNS devices))))))))))
    (. .)))

nn(Interface-4, Small-1)
nn(Interface-4, Computer-2)
nn(Interface-4, System-3)
nsubj(set-15, Interface-4)
conj_or(Interface-4, SCSI-7)
nsubj(set-15, SCSI-7)
dep(SCSI-7, pronounced-9)
acomp(pronounced-9, skuh-zee-10)
cop(set-15, is-13)
det(set-15, a-14)
root(ROOT-0, set-15)
nsubj(connecting-20, standards-17)
nsubj(transferring-22, standards-17)
prep_for(standards-17, physically-19)
prepc_of(set-15, connecting-20)
prepc_of(set-15, transferring-22)
conj_and(connecting-20, transferring-22)
dobj(connecting-20, data-23)
prep_between(data-23, computers-25)
amod(devices-28, peripheral-27)
prep_between(data-23, devices-28)
conj_and(computers-25, devices-28)

(ROOT
  (S
    (NP (DT The) (JJ unqualified) (NN word) (NN Smalltalk))
    (VP (VBZ is)
      (ADVP (RB often))
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB indicate)
              (NP
                (NP (DT the) (NN Smalltalk-80) (NN language))
                (, ,)
                (NP (DT the) (JJ first) (NN version)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP
                          (VP (VBN made)
                            (S
                              (ADJP (RB publicly) (JJ available))))
                          (CC and)
                          (VP (VBN created)
                            (PP (IN in)
                              (NP (CD 1980)))))))))))))))
    (. .)))

det(Smalltalk-4, The-1)
amod(Smalltalk-4, unqualified-2)
nn(Smalltalk-4, word-3)
nsubjpass(used-7, Smalltalk-4)
xsubj(indicate-9, Smalltalk-4)
auxpass(used-7, is-5)
advmod(used-7, often-6)
root(ROOT-0, used-7)
aux(indicate-9, to-8)
xcomp(used-7, indicate-9)
det(language-12, the-10)
nn(language-12, Smalltalk-80-11)
dobj(indicate-9, language-12)
det(version-16, the-14)
amod(version-16, first-15)
appos(language-12, version-16)
aux(made-19, to-17)
auxpass(made-19, be-18)
infmod(version-16, made-19)
advmod(available-21, publicly-20)
acomp(made-19, available-21)
infmod(version-16, created-23)
conj_and(made-19, created-23)
prep_in(created-23, 1980-25)

(ROOT
  (S
    (ADVP (RB Bealtaine))
    (, ,)
    (NP
      (NP (NNP LÃƒâˆžÃ) (NNP ‚) (NNP Âºnasa))
      (CC and)
      (NP (NNP Samhain)))
    (VP (VBP are)
      (ADVP (RB still) (NN today))
      (NP
        (NP (DT the) (NNS names))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS months))
            (PP (IN of)
              (NP (NNP May) (, ,) (NNP August)
                (CC and)
                (NNP November)))))
        (PP (IN in)
          (NP (DT the) (JJ Irish) (NN language)))))
    (. .)))

advmod(names-12, Bealtaine-1)
nn(Âºnasa-5, LÃƒâˆžÃ-3)
nn(Âºnasa-5, ‚-4)
nsubj(names-12, Âºnasa-5)
conj_and(Âºnasa-5, Samhain-7)
nsubj(names-12, Samhain-7)
cop(names-12, are-8)
advmod(names-12, still-9)
dep(still-9, today-10)
det(names-12, the-11)
root(ROOT-0, names-12)
det(months-15, the-14)
prep_of(names-12, months-15)
prep_of(months-15, May-17)
prep_of(months-15, August-19)
conj_and(May-17, August-19)
prep_of(months-15, November-21)
conj_and(May-17, November-21)
det(language-25, the-23)
amod(language-25, Irish-24)
prep_in(names-12, language-25)

(ROOT
  (S
    (NP (DT A) (NN Sling))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ projectile) (NN weapon))
        (VP
          (ADVP (RB typically))
          (VBN used)
          (S
            (VP (TO to)
              (VP (VB throw)
                (NP
                  (NP (DT a) (JJ blunt) (NN projectile))
                  (PP (JJ such) (IN as)
                    (NP (DT a) (NN stone))))))))))
    (. .)))

det(Sling-2, A-1)
nsubj(weapon-6, Sling-2)
cop(weapon-6, is-3)
det(weapon-6, a-4)
amod(weapon-6, projectile-5)
root(ROOT-0, weapon-6)
xsubj(throw-10, weapon-6)
advmod(used-8, typically-7)
partmod(weapon-6, used-8)
aux(throw-10, to-9)
xcomp(used-8, throw-10)
det(projectile-13, a-11)
amod(projectile-13, blunt-12)
dobj(throw-10, projectile-13)
det(stone-17, a-16)
prep_such_as(projectile-13, stone-17)

(ROOT
  (S
    (NP (NNP Shipping))
    (VP (MD can)
      (ADVP (RBR more))
      (ADVP (RB generally))
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (DT the) (NN transport))
            (PP (IN of)
              (NP
                (NP (NN freight))
                (PRN (-LRB- -LRB-)
                  (NP (CD '') (NNS shipments))
                  ('' '') (-RRB- -RRB-))
                (, ,)
                (ADJP (JJ independent))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN mode))
                    (PP (IN of)
                      (NP (NN transport)))))))))))
    (. .)))

nsubj(refer-5, Shipping-1)
aux(refer-5, can-2)
advmod(refer-5, more-3)
advmod(refer-5, generally-4)
root(ROOT-0, refer-5)
det(transport-8, the-7)
prep_to(refer-5, transport-8)
prep_of(transport-8, freight-10)
dep(freight-10, shipments-13)
amod(freight-10, independent-17)
det(mode-20, the-19)
prep_of(freight-10, mode-20)
prep_of(mode-20, transport-22)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN context)))
    (, ,)
    (NP (NNP Spam))
    (VP (VBZ is)
      (ADVP (RB sometimes))
      (VP (VBN perceived)
        (PP (IN as)
          (NP
            (NP (DT a) (NN backronym))
            (PP (IN for)
              (NP
                (NP
                  (ADJP (JJ stupid) (, ,) (JJ pointless) (, ,) (JJ annoying))
                  (NN message))
                (PRN (-LRB- -LRB-)
                  (S
                    (ADVP (RB sometimes))
                    (NP (DT the) (NN A))
                    (VP (VBZ is)
                      (VP (VBN thought)
                        (S
                          (VP (TO to)
                            (VP (VB stand)
                              (PP (IN for)
                                (ADJP (JJ anonymous)))))))))
                  (-RRB- -RRB-))))))))
    (. .)))

det(context-3, this-2)
prep_in(perceived-8, context-3)
nsubjpass(perceived-8, Spam-5)
auxpass(perceived-8, is-6)
advmod(perceived-8, sometimes-7)
root(ROOT-0, perceived-8)
det(backronym-11, a-10)
prep_as(perceived-8, backronym-11)
amod(annoying-17, stupid-13)
amod(annoying-17, pointless-15)
amod(message-18, annoying-17)
prep_for(backronym-11, message-18)
advmod(thought-24, sometimes-20)
det(A-22, the-21)
nsubjpass(thought-24, A-22)
xsubj(stand-26, A-22)
auxpass(thought-24, is-23)
dep(message-18, thought-24)
aux(stand-26, to-25)
xcomp(thought-24, stand-26)
prep_for(stand-26, anonymous-28)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Siddur))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Hebrew))
          (: :)
          (NP
            (NP
              (NP (NNP ÃƒËœÃ) (NNP ‚) (NNP Â) (NNP ¡) (NNP ÃƒËœÃ) (NNP ‚) (NNP Ë) (NNP ™) (NNP ÃƒËœÃ) (NNP ‚) (CD â)
                (ADJP
                  (QP ($ $) (CD žÃƒËœÃ) (CD ‚)))
                (NNS ï))
              (NP
                (QP (# #) (CD ¿) (CD ÃƒËœÃ))
                (NNP ‚) (NNP Â) (NNS ¨)))
            (: ;)
            (NP (NN plural) (NN siddurim))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (DT a) (JJ Jewish) (NN prayer) (NN book))
      (, ,)
      (S
        (VP (VBG containing)
          (NP
            (NP (DT a) (VBN set) (NN order))
            (PP (IN of)
              (NP (JJ daily) (NNS prayers)))))))
    (. .)))

det(Siddur-2, A-1)
nsubj(book-35, Siddur-2)
dep(Siddur-2, Hebrew-4)
nn(ï-20, ÃƒËœÃ-6)
nn(ï-20, ‚-7)
nn(ï-20, Â-8)
nn(ï-20, ¡-9)
nn(ï-20, ÃƒËœÃ-10)
nn(ï-20, ‚-11)
nn(ï-20, Ë-12)
nn(ï-20, ™-13)
nn(ï-20, ÃƒËœÃ-14)
nn(ï-20, ‚-15)
num(ï-20, â-16)
num(ï-20, $-17)
number($-17, žÃƒËœÃ-18)
number($-17, ‚-19)
dep(Hebrew-4, ï-20)
number(ÃƒËœÃ-23, #-21)
number(ÃƒËœÃ-23, ¿-22)
num(¨-26, ÃƒËœÃ-23)
nn(¨-26, ‚-24)
nn(¨-26, Â-25)
dep(ï-20, ¨-26)
nn(siddurim-29, plural-28)
dep(ï-20, siddurim-29)
cop(book-35, is-31)
det(book-35, a-32)
amod(book-35, Jewish-33)
nn(book-35, prayer-34)
root(ROOT-0, book-35)
partmod(book-35, containing-37)
xcomp(book-35, containing-37)
det(order-40, a-38)
amod(order-40, set-39)
dobj(containing-37, order-40)
amod(prayers-43, daily-42)
prep_of(order-40, prayers-43)

(ROOT
  (S
    (S
      (NP (DT The) (NN term) (NN Stuttering))
      (VP (VBZ is)
        (ADVP (RBS most) (RB commonly))
        (VP (VBN associated)
          (PP (IN with)
            (NP (JJ involuntary) (JJ sound) (NN repetition))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP
        (VP
          (VP
            (ADVP (RB also))
            (VBZ encompasses)
            (NP (DT the) (JJ abnormal) (NN hesitation)))
          (CC or)
          (VP (VBG pausing)
            (PP (IN before)
              (NP (NN speech)))))
        (, ,)
        (VP (VBD referred)
          (S
            (VP (TO to)))
          (PP (IN by)
            (NP
              (NP
                (NP (NNS stutterers))
                (PP (IN as)
                  (NP (NNS blocks))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NN prolongation))
                (PP (IN of)
                  (NP (JJ certain) (NNS sounds)))))))
        (, ,)
        (ADVP (RB usually))
        (VP (VBZ vowels))))
    (. .)))

det(Stuttering-3, The-1)
nn(Stuttering-3, term-2)
nsubjpass(associated-7, Stuttering-3)
auxpass(associated-7, is-4)
advmod(commonly-6, most-5)
advmod(associated-7, commonly-6)
root(ROOT-0, associated-7)
amod(repetition-11, involuntary-9)
amod(repetition-11, sound-10)
prep_with(associated-7, repetition-11)
nsubj(encompasses-16, it-14)
nsubj(pausing-21, it-14)
xsubj(to-26, it-14)
advmod(encompasses-16, also-15)
conj_but(associated-7, encompasses-16)
det(hesitation-19, the-17)
amod(hesitation-19, abnormal-18)
dobj(encompasses-16, hesitation-19)
conj_but(associated-7, pausing-21)
conj_or(encompasses-16, pausing-21)
prep_before(pausing-21, speech-23)
dep(encompasses-16, referred-25)
xcomp(referred-25, to-26)
prep_by(referred-25, stutterers-28)
prep_as(stutterers-28, blocks-30)
det(prolongation-34, the-33)
prep_by(referred-25, prolongation-34)
conj_and(stutterers-28, prolongation-34)
amod(sounds-37, certain-36)
prep_of(prolongation-34, sounds-37)
advmod(encompasses-16, usually-39)
dep(encompasses-16, vowels-40)

(ROOT
  (S
    (PP (IN During)
      (NP (DT the) (JJ early) (NNP Middle) (NNPS Ages)))
    (NP (DT the) (NN term) (NN Saxony))
    (VP (VBD referred)
      (PP (TO to)
        (NP
          (NP (DT the) (NN region))
          (ADJP (VBN occupied)
            (PP (IN by)
              (NP
                (NP
                  (NP (NN today) (POS 's))
                  (NNS states))
                (PP (IN of)
                  (NP
                    (NP (NNP Lower) (NNP Saxony))
                    (CC and)
                    (NP (JJ northern) (NNP North) (NNP Rhine-Westphalia))))))))))
    (. .)))

det(Ages-5, the-2)
amod(Ages-5, early-3)
nn(Ages-5, Middle-4)
prep_during(referred-9, Ages-5)
det(Saxony-8, the-6)
nn(Saxony-8, term-7)
nsubj(referred-9, Saxony-8)
root(ROOT-0, referred-9)
det(region-12, the-11)
prep_to(referred-9, region-12)
amod(region-12, occupied-13)
poss(states-17, today-15)
prep_by(occupied-13, states-17)
nn(Saxony-20, Lower-19)
prep_of(states-17, Saxony-20)
amod(Rhine-Westphalia-24, northern-22)
nn(Rhine-Westphalia-24, North-23)
prep_of(states-17, Rhine-Westphalia-24)
conj_and(Saxony-20, Rhine-Westphalia-24)

(ROOT
  (S
    (NP (DT The) (NNPS Sudetes))
    (PRN (-LRB- -LRB-)
      (S
        (NP (NNP suÃƒâ) (NNP $) ('' '') (NNP Ã))
        (VP (VBP ‚)
          (VP (VBG âˆšdiÃƒâ)
            (NP ($ $) (CD '') (NN Ã) (`` ‚) (FW âˆ) ('' †))
            (S
              (VP (VBG tiÃƒâ)
                (NP ($ $) (CD '') (NN Ã) (`` ‚) (FW âˆ) ('' †))
                (X (SYM z)))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mountain) (NN range))
        (PP (IN in)
          (NP (NNP Central) (NNP Europe)))))
    (. .)))

det(Sudetes-2, The-1)
nsubj(range-28, Sudetes-2)
nn(Ã-7, suÃƒâ-4)
nn(Ã-7, $-5)
nsubj(‚-8, Ã-7)
parataxis(range-28, ‚-8)
dep(‚-8, âˆšdiÃƒâ-9)
dep(Ã-12, $-10)
dobj(âˆšdiÃƒâ-9, Ã-12)
punct(Ã-12, ‚-13)
dep(Ã-12, âˆ-14)
punct(Ã-12, †-15)
xcomp(âˆšdiÃƒâ-9, tiÃƒâ-16)
dep(Ã-19, $-17)
dobj(tiÃƒâ-16, Ã-19)
punct(Ã-19, ‚-20)
dep(Ã-19, âˆ-21)
punct(Ã-19, †-22)
dep(tiÃƒâ-16, z-23)
cop(range-28, is-25)
det(range-28, a-26)
nn(range-28, mountain-27)
root(ROOT-0, range-28)
nn(Europe-31, Central-30)
prep_in(range-28, Europe-31)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Slingshot))
      (PRN (-LRB- -LRB-)
        (S
          (ADVP (RB also))
          (VP
            (ADVP (RB sometimes))
            (VBN called)
            (NP
              (NP (DT a) (NN catapult))
              (, ,)
              (NP (NNS shanghai))
              (, ,)
              (CC or)
              (NP (NN katty)))))
        (-RRB- -RRB-)))
    (, ,)
    (VP (VBZ is)
      (NP (DT a) (JJ small) (JJ hand-powered) (NN projectile) (NN weapon)))
    (. .)))

det(Slingshot-2, A-1)
nsubj(weapon-21, Slingshot-2)
advmod(called-6, also-4)
advmod(called-6, sometimes-5)
dep(Slingshot-2, called-6)
det(catapult-8, a-7)
dobj(called-6, catapult-8)
dobj(called-6, shanghai-10)
conj_or(catapult-8, shanghai-10)
dobj(called-6, katty-13)
conj_or(catapult-8, katty-13)
cop(weapon-21, is-16)
det(weapon-21, a-17)
amod(weapon-21, small-18)
amod(weapon-21, hand-powered-19)
nn(weapon-21, projectile-20)
root(ROOT-0, weapon-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Wicca)
        (CC and)
        (NNP Wicca-based) (NNP Neopaganism)))
    (, ,)
    (NP (NNP Skyclad))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB refer)
              (PP (TO to)
                (NP (NN ritual) (NN nudity))))))))
    (. .)))

nn(Neopaganism-5, Wicca-2)
conj_and(Wicca-2, Wicca-based-4)
nn(Neopaganism-5, Wicca-based-4)
prep_in(used-9, Neopaganism-5)
nsubjpass(used-9, Skyclad-7)
xsubj(refer-11, Skyclad-7)
auxpass(used-9, is-8)
root(ROOT-0, used-9)
aux(refer-11, to-10)
xcomp(used-9, refer-11)
nn(nudity-14, ritual-13)
prep_to(refer-11, nudity-14)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Suebi)
        (CC or)
        (NNP Suevi))
      (VP (VBD were)
        (NP
          (NP (DT a) (NN group))
          (PP (IN of)
            (NP (JJ Germanic) (NNS peoples)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD were)
                (ADVP (RB first))
                (VP (VBN mentioned)
                  (PP (IN by)
                    (NP
                      (NP (NNP Julius) (NNP Caesar))
                      (PP (IN in)
                        (NP (NN connection)))))
                  (PP (IN with)
                    (NP
                      (NP (NNP Ariovistus) (POS '))
                      (NN campaign))))))))))
    (, ,)
    (NP (NNP c.) (NNP A) (NNP Ski))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB long) (JJ flat))
          (NN device))
        (VP (VBN worn)
          (PP (IN on)
            (NP
              (NP (DT the) (NNS feet))
              (VP (VBN designed)
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (NP (DT the) (NN wearer) (NN slide))
                      (ADVP (RB smoothly))
                      (PP (IN over)
                        (NP (NN snow))))))))))))
    (. .)))

det(Suebi-2, The-1)
nsubj(group-7, Suebi-2)
conj_or(Suebi-2, Suevi-4)
nsubj(group-7, Suevi-4)
cop(group-7, were-5)
det(group-7, a-6)
nsubjpass(mentioned-14, group-7)
ccomp(device-32, group-7)
amod(peoples-10, Germanic-9)
prep_of(group-7, peoples-10)
auxpass(mentioned-14, were-12)
advmod(mentioned-14, first-13)
rcmod(group-7, mentioned-14)
nn(Caesar-17, Julius-16)
agent(mentioned-14, Caesar-17)
prep_in(Caesar-17, connection-19)
poss(campaign-23, Ariovistus-21)
prep_with(mentioned-14, campaign-23)
nn(Ski-27, c.-25)
nn(Ski-27, A-26)
nsubj(device-32, Ski-27)
cop(device-32, is-28)
det(device-32, a-29)
advmod(flat-31, long-30)
amod(device-32, flat-31)
root(ROOT-0, device-32)
partmod(device-32, worn-33)
det(feet-36, the-35)
prep_on(worn-33, feet-36)
xsubj(help-39, feet-36)
partmod(feet-36, designed-37)
aux(help-39, to-38)
xcomp(designed-37, help-39)
det(slide-42, the-40)
nn(slide-42, wearer-41)
dobj(help-39, slide-42)
advmod(help-39, smoothly-43)
prep_over(help-39, snow-45)

(ROOT
  (S
    (NP (DT A) (NNP Squirrel))
    (VP (VBZ is)
      (NP
        (NP (DT any) (NN one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ many)
              (ADJP (JJ small)
                (CC or)
                (JJ medium-sized))
              (NNS rodents))
            (PP (IN in)
              (NP (DT the) (NN family) (NN Sciuridae)))))))
    (. .)))

det(Squirrel-2, A-1)
nsubj(one-5, Squirrel-2)
cop(one-5, is-3)
det(one-5, any-4)
root(ROOT-0, one-5)
det(rodents-12, the-7)
amod(rodents-12, many-8)
amod(rodents-12, small-9)
conj_or(small-9, medium-sized-11)
amod(rodents-12, medium-sized-11)
prep_of(one-5, rodents-12)
det(Sciuridae-16, the-14)
nn(Sciuridae-16, family-15)
prep_in(rodents-12, Sciuridae-16)

(ROOT
  (S
    (NP (DT A) (NNP Scarecrow))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN device))
          (, ,) (RB traditionally)
          (NP
            (NP (DT a) (JJ human) (NN figure))
            (VP (VBN dressed)
              (PP (IN in)
                (NP (JJ old) (NNS clothes))))))
        (, ,)
        (CC or)
        (NP
          (NP (NN mannequin))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (VP (VBN used)
                  (S
                    (VP (TO to)
                      (VP (VB discourage)
                        (NP
                          (NP (NNS birds))
                          (PP (JJ such) (IN as)
                            (NP
                              (NP (NNS crows))
                              (PP (IN from)
                                (NP (JJ disturbing) (NNS crops))))))))))))))))
    (. .)))

det(Scarecrow-2, A-1)
nsubj(device-5, Scarecrow-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
advmod(device-5, traditionally-7)
det(figure-10, a-8)
amod(figure-10, human-9)
dep(device-5, figure-10)
partmod(figure-10, dressed-11)
amod(clothes-14, old-13)
prep_in(dressed-11, clothes-14)
conj_or(device-5, mannequin-17)
nsubjpass(used-21, mannequin-17)
auxpass(used-21, is-20)
rcmod(mannequin-17, used-21)
aux(discourage-23, to-22)
xcomp(used-21, discourage-23)
dobj(discourage-23, birds-24)
prep_such_as(birds-24, crows-27)
amod(crops-30, disturbing-29)
prep_from(crows-27, crops-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Norse) (NN mythology)))
    (, ,)
    (NP (JJ SkÃƒâˆžÃ) (`` ‚) (NN â) (NN $) (`` ``) (NN rnir))
    (VP (VBZ is)
      (NP
        (NP (NNP Freyr) (POS 's))
        (NN messenger)
        (CC and)
        (NN vassal)))
    (. .)))

nn(mythology-3, Norse-2)
prep_in(messenger-14, mythology-3)
amod(rnir-10, SkÃƒâˆžÃ-5)
punct(rnir-10, ‚-6)
nn(rnir-10, â-7)
nn(rnir-10, $-8)
nsubj(messenger-14, rnir-10)
cop(messenger-14, is-11)
poss(messenger-14, Freyr-12)
root(ROOT-0, messenger-14)
conj_and(messenger-14, vassal-16)

(ROOT
  (S
    (NP (DT A) (NNP Spoonerism))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN play))
        (PP (IN on)
          (NP
            (NP (NNS words))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP
                  (NP (JJ corresponding) (NNS consonants))
                  (, ,)
                  (NP (NNS vowels))
                  (, ,)
                  (CC or)
                  (NP (NNS morphemes)))
                (VP (VBP are)
                  (VP (VBN switched)
                    (PRN (-LRB- -LRB-)
                      (S
                        (VP (VB see)
                          (NP (NNS metathesis))))
                      (-RRB- -RRB-))))))))))
    (. .)))

det(Spoonerism-2, A-1)
nsubj(play-5, Spoonerism-2)
cop(play-5, is-3)
det(play-5, a-4)
root(ROOT-0, play-5)
prep_on(play-5, words-7)
rel(switched-18, which-9)
amod(consonants-11, corresponding-10)
nsubjpass(switched-18, consonants-11)
conj_or(consonants-11, vowels-13)
nsubjpass(switched-18, vowels-13)
conj_or(consonants-11, morphemes-16)
nsubjpass(switched-18, morphemes-16)
auxpass(switched-18, are-17)
rcmod(words-7, switched-18)
parataxis(switched-18, see-20)
dobj(see-20, metathesis-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Senoi))
    (PRN (-LRB- -LRB-)
      (S
        (ADVP (RB also))
        (VP (VBN spelled)
          (S
            (NP (NNP Sengoi)
              (CC and)
              (NNP Sng))
            (`` `)
            (ADJP (JJ oi)))))
      (-RRB- -RRB-))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ Malaysian) (NN hunting)
          (CC and)
          (NN gathering) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD were)
              (VP (VBN reported)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (JJ extensive) (NN use))
                        (PP (IN of)
                          (NP (JJ lucid) (NNS dreaming))))
                      (S
                        (VP (TO to)
                          (VP (VB ensure)
                            (NP
                              (NP (NN happiness))
                              (CC and)
                              (NP (JJ mental) (NN health)))))))))))))))
    (. .)))

det(Senoi-2, The-1)
nsubj(hunting-15, Senoi-2)
advmod(spelled-5, also-4)
parataxis(hunting-15, spelled-5)
dep(oi-10, Sengoi-6)
conj_and(Sengoi-6, Sng-8)
dep(oi-10, Sng-8)
dep(spelled-5, oi-10)
cop(hunting-15, are-12)
det(hunting-15, a-13)
amod(hunting-15, Malaysian-14)
root(ROOT-0, hunting-15)
nsubjpass(reported-21, hunting-15)
nn(people-18, gathering-17)
conj_and(hunting-15, people-18)
nsubjpass(reported-21, people-18)
auxpass(reported-21, were-20)
rcmod(hunting-15, reported-21)
aux(make-23, to-22)
xcomp(reported-21, make-23)
amod(use-25, extensive-24)
dobj(make-23, use-25)
amod(dreaming-28, lucid-27)
prep_of(use-25, dreaming-28)
aux(ensure-30, to-29)
xcomp(make-23, ensure-30)
dobj(ensure-30, happiness-31)
amod(health-34, mental-33)
dobj(ensure-30, health-34)
conj_and(happiness-31, health-34)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (JJ Finnish) (NN mythology)))
      (, ,)
      (NP (DT the) (NNP Sampo))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ magical) (NN artifact))
          (VP (VBN constructed)
            (PP (IN by)
              (NP (NNP Ilmarinen))))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD brought)
                (NP (JJ good) (NN fortune))
                (PP (TO to)
                  (NP (PRP$ its) (NN holder)))))))))
    (: ;)
    (S
      (NP (NN nobody))
      (VP (VBZ knows)
        (SBAR
          (WHADJP (RB exactly) (WP what))
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN supposed)
                (S
                  (VP (TO to)
                    (VP (VB be))))))))))
    (. .)))

amod(mythology-3, Finnish-2)
prep_in(artifact-10, mythology-3)
det(Sampo-6, the-5)
nsubj(artifact-10, Sampo-6)
cop(artifact-10, was-7)
det(artifact-10, a-8)
amod(artifact-10, magical-9)
root(ROOT-0, artifact-10)
partmod(artifact-10, constructed-11)
agent(constructed-11, Ilmarinen-13)
nsubj(brought-15, that-14)
rcmod(artifact-10, brought-15)
amod(fortune-17, good-16)
dobj(brought-15, fortune-17)
poss(holder-20, its-19)
prep_to(brought-15, holder-20)
nsubj(knows-23, nobody-22)
parataxis(artifact-10, knows-23)
dep(supposed-28, exactly-24)
dep(exactly-24, what-25)
nsubjpass(supposed-28, it-26)
xsubj(be-30, it-26)
auxpass(supposed-28, was-27)
ccomp(knows-23, supposed-28)
aux(be-30, to-29)
xcomp(supposed-28, be-30)

(ROOT
  (S
    (NP
      (NP (NNP Specialisation))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN spelled)
        (NP (NNP Specialization)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ important) (NN way))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB generate)
                (NP (JJ propositional) (NN knowledge))
                (, ,)
                (PP (IN by)
                  (S
                    (VP (VBG applying)
                      (NP (JJ general) (NN knowledge)))))
                (PRN (, ,)
                  (PP (JJ such) (IN as)
                    (NP
                      (NP (DT the) (NN theory))
                      (PP (IN of)
                        (NP (NN gravity)))))
                  (, ,)))))))
      (PP (TO to)
        (NP (JJ specific) (NNS instances)))
      (, ,)
      (ADJP (JJ such) (RB as))
      ('' '')
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP release)
            (S
              (NP (DT this) (NN apple))
              (, ,)
              (NP (PRP it))
              (VP (MD will)
                (VP (VB fall)
                  (PP (TO to)
                    (NP (DT the) (NN floor)))))
              ('' ''))))))
    (. .)))

nsubj(such-32, Specialisation-1)
advmod(spelled-4, also-3)
partmod(Specialisation-1, spelled-4)
dobj(spelled-4, Specialization-5)
cop(such-32, is-7)
det(way-10, an-8)
amod(way-10, important-9)
attr(such-32, way-10)
aux(generate-12, to-11)
infmod(way-10, generate-12)
amod(knowledge-14, propositional-13)
dobj(generate-12, knowledge-14)
prepc_by(generate-12, applying-17)
amod(knowledge-19, general-18)
dobj(applying-17, knowledge-19)
det(theory-24, the-23)
prep_such_as(generate-12, theory-24)
prep_of(theory-24, gravity-26)
amod(instances-30, specific-29)
prep_to(such-32, instances-30)
root(ROOT-0, such-32)
advmod(such-32, as-33)
advmod(release-37, when-35)
nsubj(release-37, I-36)
advcl(such-32, release-37)
det(apple-39, this-38)
nsubj(fall-43, apple-39)
nsubj(fall-43, it-41)
aux(fall-43, will-42)
ccomp(release-37, fall-43)
det(floor-46, the-45)
prep_to(fall-43, floor-46)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS genetics)
        (CC and)
        (NN biochemistry)))
    (, ,)
    (NP (NNP Sequencing))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB determine)
            (NP
              (NP
                (NP (DT the) (JJ primary) (NN structure))
                (PRN (-LRB- -LRB-)
                  (CC or)
                  (ADJP (JJ primary) (NN sequence))
                  (-RRB- -RRB-)))
              (PP (IN of)
                (NP (DT an) (JJ unbranched) (NN biopolymer))))))))
    (. .)))

prep_in(means-7, genetics-2)
conj_and(genetics-2, biochemistry-4)
prep_in(means-7, biochemistry-4)
nsubj(means-7, Sequencing-6)
xsubj(determine-9, Sequencing-6)
root(ROOT-0, means-7)
aux(determine-9, to-8)
xcomp(means-7, determine-9)
det(structure-12, the-10)
amod(structure-12, primary-11)
dobj(determine-9, structure-12)
dep(sequence-16, or-14)
dep(sequence-16, primary-15)
dep(structure-12, sequence-16)
det(biopolymer-21, an-19)
amod(biopolymer-21, unbranched-20)
prep_of(structure-12, biopolymer-21)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Supervolcano))
      (CC or)
      (NP (JJ super) (JJ volcanic) (NN eruption)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ volcanic) (NN eruption))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (ADJP
                (ADJP
                  (NP
                    (NP (NNS orders))
                    (PP (IN of)
                      (NP (NN magnitude))))
                  (JJR greater))
                (PP (IN than)
                  (NP
                    (NP (DT any) (NN volcano))
                    (PP (IN in)
                      (NP
                        (NP (JJ historic) (NNS times))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (NNP -RRB-))
                            (: ;)
                            (NP (CD 200) (JJ cubic) (NNS kilometers)))
                          (-RRB- -RRB-))))))))))))
    (. .)))

det(Supervolcano-2, A-1)
nsubj(eruption-10, Supervolcano-2)
amod(eruption-6, super-4)
amod(eruption-6, volcanic-5)
conj_or(Supervolcano-2, eruption-6)
nsubj(eruption-10, eruption-6)
cop(eruption-10, is-7)
det(eruption-10, a-8)
amod(eruption-10, volcanic-9)
root(ROOT-0, eruption-10)
nsubj(greater-16, eruption-10)
cop(greater-16, is-12)
npadvmod(greater-16, orders-13)
prep_of(orders-13, magnitude-15)
rcmod(eruption-10, greater-16)
det(volcano-19, any-18)
prep_than(greater-16, volcano-19)
amod(times-22, historic-21)
prep_in(volcano-19, times-22)
num(kilometers-28, 200-26)
amod(kilometers-28, cubic-27)
dep(-RRB--24, kilometers-28)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Sweetener))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN food) (NN additive))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ adds)
                (NP
                  (NP (DT the) (JJ basic) (NN taste))
                  (PP (IN of)
                    (NP (NN sweetness))))
                (PP (TO to)
                  (NP (DT a) (NN food)))))))))
    (: ;)
    (S
      (NP (JJ artificial) (NNS sweeteners))
      (VP (VBP are)
        (NP (NN sugar) (NNS substitutes))))
    (. .)))

det(Sweetener-2, A-1)
nsubj(additive-6, Sweetener-2)
cop(additive-6, is-3)
det(additive-6, a-4)
nn(additive-6, food-5)
root(ROOT-0, additive-6)
nsubj(adds-8, additive-6)
rcmod(additive-6, adds-8)
det(taste-11, the-9)
amod(taste-11, basic-10)
dobj(adds-8, taste-11)
prep_of(taste-11, sweetness-13)
det(food-16, a-15)
prep_to(adds-8, food-16)
amod(sweeteners-19, artificial-18)
nsubj(substitutes-22, sweeteners-19)
cop(substitutes-22, are-20)
nn(substitutes-22, sugar-21)
parataxis(additive-6, substitutes-22)

(ROOT
  (S
    (NP (NNP Smack))
    (VP (MD may)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (NNP Simplified) (NNP Mandatory) (NNP Access) (NNP Control) (NNP Kernel))
            (, ,)
            (NP (DT a) (NNP Linux) (NN kernel) (NN security) (NN module))))))
    (. .)))

nsubj(refer-3, Smack-1)
aux(refer-3, may-2)
root(ROOT-0, refer-3)
nn(Kernel-9, Simplified-5)
nn(Kernel-9, Mandatory-6)
nn(Kernel-9, Access-7)
nn(Kernel-9, Control-8)
prep_to(refer-3, Kernel-9)
det(module-15, a-11)
nn(module-15, Linux-12)
nn(module-15, kernel-13)
nn(module-15, security-14)
appos(Kernel-9, module-15)

(ROOT
  (S
    (NP (NNP Smelting))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (JJ extractive) (NN metallurgy)))))
    (. .)))

nsubj(form-4, Smelting-1)
cop(form-4, is-2)
det(form-4, a-3)
root(ROOT-0, form-4)
amod(metallurgy-7, extractive-6)
prep_of(form-4, metallurgy-7)

(ROOT
  (S
    (PP (IN In)
      (NP (NN chemistry)))
    (, ,)
    (NP (DT a) (NN Solution))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ homogeneous) (NN mixture))
        (VP (VBN composed)
          (PP (IN of)
            (NP
              (QP (CD two)
                (CC or)
                (JJR more))
              (NNS substances))))))
    (. .)))

prep_in(mixture-9, chemistry-2)
det(Solution-5, a-4)
nsubj(mixture-9, Solution-5)
cop(mixture-9, is-6)
det(mixture-9, a-7)
amod(mixture-9, homogeneous-8)
root(ROOT-0, mixture-9)
partmod(mixture-9, composed-10)
num(substances-15, two-12)
conj_or(two-12, more-14)
quantmod(two-12, more-14)
num(substances-15, more-14)
prep_of(composed-10, substances-15)

(ROOT
  (S
    (PP (IN In)
      (NP (NN geology)))
    (, ,)
    (NP (DT a) (NNP Supercontinent))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS landmass))
        (VP (VBG comprising)
          (ADJP
            (ADJP
              (QP (JJR more) (IN than) (CD one))
              (JJ continental) (NN core))
            (, ,)
            (CC or)
            (ADJP (JJ craton))))))
    (. .)))

prep_in(landmass-8, geology-2)
det(Supercontinent-5, a-4)
nsubj(landmass-8, Supercontinent-5)
cop(landmass-8, is-6)
det(landmass-8, a-7)
root(ROOT-0, landmass-8)
partmod(landmass-8, comprising-9)
mwe(than-11, more-10)
quantmod(one-12, than-11)
dep(core-14, one-12)
dep(core-14, continental-13)
acomp(comprising-9, core-14)
acomp(comprising-9, craton-17)
conj_or(core-14, craton-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Spacetime))
    (VP (VBZ is)
      (NP
        (NP (DT any) (JJ mathematical) (NN model))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ combines)
              (NP (NN space)
                (CC and)
                (NN time))
              (PP (IN into)
                (NP
                  (NP (DT a) (JJ single) (NN construct))
                  (VP (VBN called)
                    (NP (DT the) (JJ spacetime) (NN continuum))))))))))
    (. .)))

prep_in(model-8, physics-2)
nsubj(model-8, Spacetime-4)
cop(model-8, is-5)
det(model-8, any-6)
amod(model-8, mathematical-7)
root(ROOT-0, model-8)
nsubj(combines-10, model-8)
rcmod(model-8, combines-10)
dobj(combines-10, space-11)
dobj(combines-10, time-13)
conj_and(space-11, time-13)
det(construct-17, a-15)
amod(construct-17, single-16)
prep_into(combines-10, construct-17)
partmod(construct-17, called-18)
det(continuum-21, the-19)
amod(continuum-21, spacetime-20)
dobj(called-18, continuum-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NNP Sestina))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (RB also))
          (, ,)
          (NP (NN sextina) (, ,) (NN sestine) (, ,)
            (CC or)
            (NN sextain)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB highly) (JJ structured))
          (NN poem))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (CD six) (JJ six-line) (NNS stanzas))
              (VP (VBN followed)
                (PP (IN by)
                  (NP
                    (NP (DT a) (NN tercet))
                    (PRN (-LRB- -LRB-)
                      (VP (VBN called)
                        (NP (PRP$ its) (NN envoy)
                          (CC or)
                          (NN tornada)))
                      (-RRB- -RRB-)))))))
          (, ,)
          (PP (IN for)
            (NP
              (NP (DT a) (NN total))
              (PP (IN of)
                (NP (JJ thirty-nine) (NNS lines))))))))
    (. .)))

det(Sestina-2, A-1)
nsubj(poem-17, Sestina-2)
dep(Sestina-2, also-4)
appos(also-4, sextina-6)
appos(also-4, sestine-8)
conj_or(sextina-6, sestine-8)
appos(also-4, sextain-11)
conj_or(sextina-6, sextain-11)
cop(poem-17, is-13)
det(poem-17, a-14)
advmod(structured-16, highly-15)
amod(poem-17, structured-16)
root(ROOT-0, poem-17)
partmod(poem-17, consisting-18)
num(stanzas-22, six-20)
amod(stanzas-22, six-line-21)
prep_of(consisting-18, stanzas-22)
partmod(stanzas-22, followed-23)
det(tercet-26, a-25)
agent(followed-23, tercet-26)
dep(tercet-26, called-28)
poss(envoy-30, its-29)
dobj(called-28, envoy-30)
dobj(called-28, tornada-32)
conj_or(envoy-30, tornada-32)
det(total-37, a-36)
prep_for(consisting-18, total-37)
amod(lines-40, thirty-nine-39)
prep_of(total-37, lines-40)

(ROOT
  (S
    (NP (DT A) (NN Song))
    (VP (VBZ is)
      (NP (DT a) (JJ musical) (NN composition)))
    (. .)))

det(Song-2, A-1)
nsubj(composition-6, Song-2)
cop(composition-6, is-3)
det(composition-6, a-4)
amod(composition-6, musical-5)
root(ROOT-0, composition-6)

(ROOT
  (S
    (NP (NNP Islam) (NNP Sharia))
    (PRN (-LRB- -LRB-)
      (S
        (NP
          (NP (NNP Arabic))
          (: :)
          (NP
            (NP (JJ lang) (NNS Ãƒâˆ))
            (`` `)
            (NP (NNP Ã) (NNP ‚)
              (CC &)
              (NNP nbsp)))
          (: ;))
        (VP (VBD arÃƒâ)
          (SBAR
            (S
              (NP (NNP ‰) (NNP ¥) (NNP Ã) (NNP ‚) (NNP Â))
              (`` ``)
              (VP (VB Ãƒâ)
                (NP ($ $) (CD ¦) (NNP Ã) (NNPS ‚) (NNP Â) (NN ¿) (NN ah)))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN body))
        (PP (IN of)
          (NP (JJ Islamic) (JJ religious) (NN law)))))
    (. .)))

nn(Sharia-2, Islam-1)
nsubj(body-32, Sharia-2)
nsubj(arÃƒâ-14, Arabic-4)
amod(Ãƒâˆ-7, lang-6)
dep(Arabic-4, Ãƒâˆ-7)
nn(‚-10, Ã-9)
dep(Ãƒâˆ-7, ‚-10)
dep(Ãƒâˆ-7, nbsp-12)
conj_and(‚-10, nbsp-12)
parataxis(body-32, arÃƒâ-14)
nn(Â-19, ‰-15)
nn(Â-19, ¥-16)
nn(Â-19, Ã-17)
nn(Â-19, ‚-18)
nsubj(Ãƒâ-21, Â-19)
ccomp(arÃƒâ-14, Ãƒâ-21)
dep(ah-28, $-22)
num(ah-28, ¦-23)
nn(ah-28, Ã-24)
nn(ah-28, ‚-25)
nn(ah-28, Â-26)
nn(ah-28, ¿-27)
dobj(Ãƒâ-21, ah-28)
cop(body-32, is-30)
det(body-32, the-31)
root(ROOT-0, body-32)
amod(law-36, Islamic-34)
amod(law-36, religious-35)
prep_of(body-32, law-36)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NNP United) (NNPS States))
        (, ,)
        (NP (NNP Canada))
        (, ,)
        (CC and)
        (NP
          (NP (JJS most))
          (PP (IN of)
            (NP (NNP Western) (NNP Europe))))))
    (NP (DT the) (NN word) (NN Suburb))
    (ADVP (RB usually))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (JJ separate) (NN municipality))
          (, ,)
          (NP (NN borough))
          (, ,)
          (CC or)
          (NP (JJ unincorporated) (NN area))))
      (PP (IN outside)
        (NP
          (NP (DT a) (JJ central) (NN town))
          (CC or)
          (NP (NN city)))))
    (. .)))

det(States-4, the-2)
nn(States-4, United-3)
prep_in(refers-17, States-4)
conj_and(States-4, Canada-6)
prep_in(refers-17, Canada-6)
conj_and(States-4, most-9)
prep_in(refers-17, most-9)
nn(Europe-12, Western-11)
prep_of(most-9, Europe-12)
det(Suburb-15, the-13)
nn(Suburb-15, word-14)
nsubj(refers-17, Suburb-15)
advmod(refers-17, usually-16)
root(ROOT-0, refers-17)
det(municipality-21, a-19)
amod(municipality-21, separate-20)
prep_to(refers-17, municipality-21)
prep_to(refers-17, borough-23)
conj_or(municipality-21, borough-23)
amod(area-27, unincorporated-26)
prep_to(refers-17, area-27)
conj_or(municipality-21, area-27)
det(town-31, a-29)
amod(town-31, central-30)
prep_outside(refers-17, town-31)
prep_outside(refers-17, city-33)
conj_or(town-31, city-33)

(ROOT
  (S
    (NP (DT A) (NN Season))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ major) (NNS divisions))
            (PP (IN of)
              (NP
                (NP (DT the) (NN year))
                (, ,)
                (VP
                  (ADVP (RB generally))
                  (VBN based)
                  (PP (IN on)
                    (NP
                      (NP (JJ yearly) (JJ periodic) (NNS changes))
                      (PP (IN in)
                        (NP (NN weather))))))))))))
    (. .)))

det(Season-2, A-1)
nsubj(one-4, Season-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
det(divisions-8, the-6)
amod(divisions-8, major-7)
prep_of(one-4, divisions-8)
det(year-11, the-10)
prep_of(divisions-8, year-11)
advmod(based-14, generally-13)
partmod(year-11, based-14)
amod(changes-18, yearly-16)
amod(changes-18, periodic-17)
prep_on(based-14, changes-18)
prep_in(changes-18, weather-20)

(ROOT
  (S
    (NP (NNP Sinope))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN city))
          (PP (IN on)
            (NP (DT the) (NNP Black) (NNP Sea)))))
      (, ,)
      (VP
        (ADVP (RB historically))
        (VBN known)
        (PP (IN as)
          (NP (NNP Sinope)))))
    (. .)))

nsubj(refers-2, Sinope-1)
root(ROOT-0, refers-2)
det(city-5, a-4)
prep_to(refers-2, city-5)
det(Sea-9, the-7)
nn(Sea-9, Black-8)
prep_on(city-5, Sea-9)
advmod(known-12, historically-11)
dep(refers-2, known-12)
prep_as(known-12, Sinope-14)

(ROOT
  (S
    (NP (DT A) (NNP Subtitle))
    (VP (MD can)
      (VP (VB refer)
        (PP (TO to)
          (NP
            (NP (NN titling))
            (, ,)
            (NP
              (NP (DT an) (JJ explanatory)
                (CC or)
                (JJ alternate) (NN title))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN book))
                  (, ,)
                  (NP (NN play) (, ,) (NN film) (, ,) (JJ musical) (NN work))
                  (, ,) (FW etc.))))))))
    (. .)))

det(Subtitle-2, A-1)
nsubj(refer-4, Subtitle-2)
aux(refer-4, can-3)
root(ROOT-0, refer-4)
prep_to(refer-4, titling-6)
det(title-12, an-8)
amod(title-12, explanatory-9)
conj_or(explanatory-9, alternate-11)
amod(title-12, alternate-11)
appos(titling-6, title-12)
det(book-15, a-14)
prep_of(title-12, book-15)
nn(work-22, play-17)
dep(work-22, film-19)
amod(work-22, musical-21)
appos(book-15, work-22)
dep(book-15, etc.-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT A) (NN Salute))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN called)
          (NP (NN obeisance)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN gesture))
          (PRN (-LRB- -LRB-)
            (ADVP (RB often))
            (NP (NN hand) (NN gesture))
            (-RRB- -RRB-)))
        (CC or)
        (NP
          (NP (JJ other) (NN action))
          (VP (VBN used)
            (S
              (VP (TO to)
                (VP (VB display)
                  (NP (NN respect)))))))))
    (. .)))

det(Salute-2, A-1)
nsubj(gesture-10, Salute-2)
advmod(called-5, also-4)
dep(Salute-2, called-5)
dobj(called-5, obeisance-6)
cop(gesture-10, is-8)
det(gesture-10, a-9)
root(ROOT-0, gesture-10)
dep(gesture-14, often-12)
nn(gesture-14, hand-13)
appos(gesture-10, gesture-14)
amod(action-18, other-17)
conj_or(gesture-10, action-18)
xsubj(display-21, action-18)
partmod(action-18, used-19)
aux(display-21, to-20)
xcomp(used-19, display-21)
dobj(display-21, respect-22)

(ROOT
  (S
    (NP
      (NP (NNP Scopolamine))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP
            (NP (NN hyoscine))
            (NP (NNP and) ('' '') (NNP Devils) (NNP Breath))))
        ('' ''))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ tropane) (JJ alkaloid) (NN drug))
        (PP (IN with)
          (NP (JJ muscarinic) (NN antagonist) (NNS effects)))))
    (. .)))

nsubj(drug-17, Scopolamine-1)
advmod(known-4, also-3)
partmod(Scopolamine-1, known-4)
prep_as(known-4, hyoscine-6)
nn(Breath-10, and-7)
nn(Breath-10, Devils-9)
dep(hyoscine-6, Breath-10)
cop(drug-17, is-13)
det(drug-17, a-14)
amod(drug-17, tropane-15)
amod(drug-17, alkaloid-16)
root(ROOT-0, drug-17)
amod(effects-21, muscarinic-19)
nn(effects-21, antagonist-20)
prep_with(drug-17, effects-21)

(ROOT
  (S
    (S
      (NP (NNS Slayers))
      (VP (VBZ is)
        (NP (DT a) (NN Dungeons)
          (CC &)
          (NN amp))))
    (: ;) (: ;)
    (S
      (NP
        (NP (JJ Dragons-style) (NN parody))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ follows)
              (NP
                (NP (DT the) (NNS adventures))
                (PP (IN of)
                  (NP (DT the) (JJ young))))))))
      (VP (VBZ sorceress)
        (NP
          (NP (NNP Lina) (NNP Inverse))
          (CC and)
          (NP (PRP$ her) (NNS companions)))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBZ journey)
              (PP (IN through)
                (NP (PRP$ their) (NN world))))))))
    (. .)))

nsubj(Dungeons-4, Slayers-1)
cop(Dungeons-4, is-2)
det(Dungeons-4, a-3)
root(ROOT-0, Dungeons-4)
conj_and(Dungeons-4, amp-6)
amod(parody-10, Dragons-style-9)
nsubj(follows-12, parody-10)
nsubj(sorceress-18, parody-10)
rcmod(parody-10, follows-12)
det(adventures-14, the-13)
dobj(follows-12, adventures-14)
det(young-17, the-16)
prep_of(adventures-14, young-17)
parataxis(Dungeons-4, sorceress-18)
nn(Inverse-20, Lina-19)
dobj(sorceress-18, Inverse-20)
poss(companions-23, her-22)
dobj(sorceress-18, companions-23)
conj_and(Inverse-20, companions-23)
mark(journey-26, as-24)
nsubj(journey-26, they-25)
advcl(sorceress-18, journey-26)
poss(world-29, their-28)
prep_through(journey-26, world-29)

(ROOT
  (S
    (NP (DT The) (NNP Saluki))
    (VP (VBZ is)
      (NP
        (NP (RB perhaps) (DT the)
          (ADJP (JJS oldest) (VBN known))
          (NN breed))
        (PP (IN of)
          (NP (JJ domesticated) (NN dog)))))
    (. .)))

det(Saluki-2, The-1)
nsubj(breed-8, Saluki-2)
cop(breed-8, is-3)
advmod(breed-8, perhaps-4)
det(breed-8, the-5)
dep(known-7, oldest-6)
amod(breed-8, known-7)
root(ROOT-0, breed-8)
amod(dog-11, domesticated-10)
prep_of(breed-8, dog-11)

(ROOT
  (S
    (NP (DT The) (NNP Sloughi))
    (PRN (-LRB- -LRB-)
      (S
        (NP (NNP Ãƒâ) (NNP $) ('' '') (NNP Ã))
        (VP (VBP ‚)
          (ADJP (RB âˆšsluÃƒâ) (JJ $) ('' '')
            (SBAR
              (S
                (NP (NNP Ã) (`` ‚) (NNP âˆ) (`` †) (NNP Ãƒâ) (`` ‰) (NNP ˆÃ) (`` ‚) (NNP Â) (`` ¡) (NNP iÃƒâ) (NNP $) ('' ''))
                (VP (VBP Ã)
                  (NP (`` ‚) (FW â) ('' †))))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN breed))
        (PP (IN of)
          (NP
            (NP (NN dog))
            (, ,)
            (ADVP (RB specifically))
            (NP
              (NP (DT a) (NN member))
              (PP (IN of)
                (NP (DT the) (JJ sighthound) (NN family))))))))
    (. .)))

det(Sloughi-2, The-1)
nsubj(breed-32, Sloughi-2)
nn(Ã-7, Ãƒâ-4)
nn(Ã-7, $-5)
nsubj(‚-8, Ã-7)
parataxis(breed-32, ‚-8)
advmod($-10, âˆšsluÃƒâ-9)
acomp(‚-8, $-10)
nn($-23, Ã-12)
punct($-23, ‚-13)
nn($-23, âˆ-14)
punct($-23, †-15)
nn($-23, Ãƒâ-16)
punct($-23, ‰-17)
nn($-23, ˆÃ-18)
punct($-23, ‚-19)
nn($-23, Â-20)
punct($-23, ¡-21)
nn($-23, iÃƒâ-22)
nsubj(Ã-25, $-23)
dep($-10, Ã-25)
punct(â-27, ‚-26)
dobj(Ã-25, â-27)
punct(â-27, †-28)
cop(breed-32, is-30)
det(breed-32, a-31)
root(ROOT-0, breed-32)
prep_of(breed-32, dog-34)
advmod(dog-34, specifically-36)
det(member-38, a-37)
dep(dog-34, member-38)
det(family-42, the-40)
amod(family-42, sighthound-41)
prep_of(member-38, family-42)

(ROOT
  (S
    (NP (DT A) (NNP Spear))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN pole) (NN weapon))
        (VP (VBN used)
          (PP (IN for)
            (NP (NN hunting)
              (CC and)
              (NN war)))
          (, ,)
          (S
            (VP (VBG consisting)
              (PP
                (PP (IN of)
                  (NP (DT a) (NN shaft)))
                (, ,) (RB usually)
                (PP (IN of)
                  (NP (NN wood))))))
          (, ,)
          (PP (IN with)
            (NP (DT a) (JJ sharpened) (NN head))))))
    (. .)))

det(Spear-2, A-1)
nsubj(weapon-6, Spear-2)
cop(weapon-6, is-3)
det(weapon-6, a-4)
nn(weapon-6, pole-5)
root(ROOT-0, weapon-6)
partmod(weapon-6, used-7)
prep_for(used-7, hunting-9)
prep_for(used-7, war-11)
conj_and(hunting-9, war-11)
xcomp(used-7, consisting-13)
det(shaft-16, a-15)
prep_of(consisting-13, shaft-16)
advmod(consisting-13, usually-18)
prep_of(consisting-13, wood-20)
det(head-25, a-23)
amod(head-25, sharpened-24)
prep_with(used-7, head-25)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Spandrel))
      (PRN (-LRB- -LRB-)
        (ADJP
          (ADJP (RBR less) (RB often) (JJ spandril))
          (CC or)
          (ADJP (JJ splaundrel)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN space))
        (PP
          (PP (IN between)
            (NP (CD two) (NNS arches)))
          (CC or)
          (PP (IN between)
            (NP
              (NP (DT an) (NN arch))
              (CC and)
              (NP (DT a) (JJ rectangular) (NN enclosure)))))))
    (. .)))

det(Spandrel-2, A-1)
nsubj(space-12, Spandrel-2)
advmod(spandril-6, less-4)
advmod(spandril-6, often-5)
dep(Spandrel-2, spandril-6)
dep(Spandrel-2, splaundrel-8)
conj_or(spandril-6, splaundrel-8)
cop(space-12, is-10)
det(space-12, the-11)
root(ROOT-0, space-12)
num(arches-15, two-14)
prep_between(space-12, arches-15)
det(arch-19, an-18)
prep_between(space-12, arch-19)
conj_or(arches-15, arch-19)
det(enclosure-23, a-21)
amod(enclosure-23, rectangular-22)
conj_or(arches-15, enclosure-23)
conj_and(arch-19, enclosure-23)

(ROOT
  (S
    (NP (DT A) (NNP Spinor))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN element))
        (PP (IN of)
          (NP (DT the) (NN spinor) (NN space)))))
    (. .)))

det(Spinor-2, A-1)
nsubj(element-5, Spinor-2)
cop(element-5, is-3)
det(element-5, an-4)
root(ROOT-0, element-5)
det(space-9, the-7)
nn(space-9, spinor-8)
prep_of(element-5, space-9)

(ROOT
  (S
    (NP
      (NP (NNP SIGGRAPH))
      (PRN (-LRB- -LRB-)
        (ADJP (JJ short)
          (PP (IN for)
            (NP
              (NP (NNP Special) (NNP Interest) (NNP Group))
              (PP (IN on)
                (NP (NNP GRAPHics)
                  (CC and)
                  (NNP Interactive) (NNPS Techniques))))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ annual) (NN conference))
            (PP (IN on)
              (NP
                (NP (NN computer) (NNS graphics))
                (PRN (-LRB- -LRB-)
                  (NP (NNP CG))
                  (-RRB- -RRB-))
                (VP (VBN convened)
                  (PP (IN by)
                    (NP (DT the) (NNP ACM) (NNP SIGGRAPH) (NN organization))))))))))
    (. .)))

nsubj(name-16, SIGGRAPH-1)
dep(SIGGRAPH-1, short-3)
nn(Group-7, Special-5)
nn(Group-7, Interest-6)
prep_for(short-3, Group-7)
nn(Techniques-12, GRAPHics-9)
conj_and(GRAPHics-9, Interactive-11)
nn(Techniques-12, Interactive-11)
prep_on(Group-7, Techniques-12)
cop(name-16, is-14)
det(name-16, the-15)
root(ROOT-0, name-16)
det(conference-20, the-18)
amod(conference-20, annual-19)
prep_of(name-16, conference-20)
nn(graphics-23, computer-22)
prep_on(conference-20, graphics-23)
abbrev(graphics-23, CG-25)
partmod(graphics-23, convened-27)
det(organization-32, the-29)
nn(organization-32, ACM-30)
nn(organization-32, SIGGRAPH-31)
agent(convened-27, organization-32)

(ROOT
  (S
    (NP (DT A) (NNP Spectrometer))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ optical) (NN instrument))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB measure)
                (NP
                  (NP (NNS properties))
                  (PP (IN of)
                    (NP (NN light))))
                (PP (IN over)
                  (NP
                    (NP (DT a) (JJ specific) (NN portion))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ electromagnetic) (NN spectrum))
                        (, ,)
                        (VP
                          (ADVP (RB typically))
                          (VBN used)
                          (PP (IN in)
                            (NP (JJ spectroscopic) (NN analysis)))
                          (S
                            (VP (TO to)
                              (VP (VB identify)
                                (NP (NNS materials))))))))))))))))
    (. .)))

det(Spectrometer-2, A-1)
nsubj(instrument-6, Spectrometer-2)
cop(instrument-6, is-3)
det(instrument-6, an-4)
amod(instrument-6, optical-5)
root(ROOT-0, instrument-6)
xsubj(measure-9, instrument-6)
partmod(instrument-6, used-7)
aux(measure-9, to-8)
xcomp(used-7, measure-9)
dobj(measure-9, properties-10)
prep_of(properties-10, light-12)
det(portion-16, a-14)
amod(portion-16, specific-15)
prep_over(measure-9, portion-16)
det(spectrum-20, the-18)
amod(spectrum-20, electromagnetic-19)
prep_of(portion-16, spectrum-20)
xsubj(identify-28, spectrum-20)
advmod(used-23, typically-22)
partmod(spectrum-20, used-23)
amod(analysis-26, spectroscopic-25)
prep_in(used-23, analysis-26)
aux(identify-28, to-27)
xcomp(used-23, identify-28)
dobj(identify-28, materials-29)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Spectrum))
      (PRN (-LRB- -LRB-)
        (NP (RB plural) (NN spectra)
          (CC or)
          (NNS spectrums))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN condition))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ is) (RB not)
                (ADJP (VBN limited)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ specific) (NN set))
                      (PP (IN of)
                        (NP (NNS values)))))))
              (CC but)
              (VP (MD can)
                (VP (VB vary)
                  (ADVP (RB infinitely))
                  (PP (IN within)
                    (NP (DT a) (NN continuum))))))))))
    (. .)))

det(Spectrum-2, A-1)
nsubj(condition-11, Spectrum-2)
advmod(spectra-5, plural-4)
appos(Spectrum-2, spectra-5)
appos(Spectrum-2, spectrums-7)
conj_or(spectra-5, spectrums-7)
cop(condition-11, is-9)
det(condition-11, a-10)
root(ROOT-0, condition-11)
nsubjpass(limited-15, condition-11)
nsubj(vary-24, condition-11)
auxpass(limited-15, is-13)
neg(limited-15, not-14)
rcmod(condition-11, limited-15)
det(set-19, a-17)
amod(set-19, specific-18)
prep_to(limited-15, set-19)
prep_of(set-19, values-21)
aux(vary-24, can-23)
rcmod(condition-11, vary-24)
conj_but(limited-15, vary-24)
advmod(vary-24, infinitely-25)
det(continuum-28, a-27)
prep_within(vary-24, continuum-28)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ fictional) (NN universe))
        (PP (IN of)
          (NP (NNP Star) (NNP Trek)))))
    (, ,)
    (NP (NNP Starfleet))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN defense) (, ,) (NN research) (, ,) (NN diplomacy) (, ,)
          (CC and)
          (NN exploration))
        (NN force)
        (PP (IN of)
          (NP (DT the) (NNP United) (NNP Federation)))
        (PP (IN of)
          (NP
            (NP (NNP Planets))
            (PRN (-LRB- -LRB-)
              (NP (NNP UFP))
              (-RRB- -RRB-))))))
    (. .)))

det(universe-4, the-2)
amod(universe-4, fictional-3)
prep_in(force-20, universe-4)
nn(Trek-7, Star-6)
prep_of(universe-4, Trek-7)
nsubj(force-20, Starfleet-9)
cop(force-20, is-10)
det(defense-12, the-11)
nn(force-20, defense-12)
conj_and(defense-12, research-14)
nn(force-20, research-14)
conj_and(defense-12, diplomacy-16)
nn(force-20, diplomacy-16)
conj_and(defense-12, exploration-19)
nn(force-20, exploration-19)
root(ROOT-0, force-20)
det(Federation-24, the-22)
nn(Federation-24, United-23)
prep_of(force-20, Federation-24)
prep_of(force-20, Planets-26)
abbrev(Planets-26, UFP-28)

(ROOT
  (S
    (NP (DT The) (JJ Italian) (NN word) (NN Sambuca))
    (VP (VBD was)
      (ADVP (RB first))
      (VP (VBN used)
        (PP (IN as)
          (NP
            (NP (DT the) (NN name))
            (PP (IN of)
              (NP
                (NP (DT another) (JJ anise-based) (NN liquor))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD was)
                      (VP (VBN created)
                        (PP (IN in)
                          (NP (NNP Civitavecchia)))
                        (ADVP
                          (NP
                            (QP (RB about) (CD 130))
                            (NNS years))
                          (RB ago))))))))))))
    (. .)))

det(Sambuca-4, The-1)
amod(Sambuca-4, Italian-2)
nn(Sambuca-4, word-3)
nsubjpass(used-7, Sambuca-4)
auxpass(used-7, was-5)
advmod(used-7, first-6)
root(ROOT-0, used-7)
det(name-10, the-9)
prep_as(used-7, name-10)
det(liquor-14, another-12)
amod(liquor-14, anise-based-13)
prep_of(name-10, liquor-14)
nsubjpass(created-17, liquor-14)
auxpass(created-17, was-16)
rcmod(liquor-14, created-17)
prep_in(created-17, Civitavecchia-19)
quantmod(130-21, about-20)
num(years-22, 130-21)
npadvmod(ago-23, years-22)
advmod(created-17, ago-23)

(ROOT
  (S
    (NP (DT A) (NNP Subcontinent))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ large) (NNS landmass))
        (, ,)
        (PP (JJ such) (IN as)
          (NP
            (NP (NNP India))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBZ is)
                    (NP
                      (NP (NN part))
                      (PP (IN of)
                        (NP (DT a) (NN continent)))))
                  (CC but)
                  (VP (VBZ is)
                    (VP (VBN considered)
                      (UCP (DT either)
                        (ADJP (JJ geographically))
                        (CC or)
                        (ADVP (RB politically))
                        (PP (IN as)
                          (NP (DT an) (JJ independent) (NN entity)))))))))))))
    (. .)))

det(Subcontinent-2, A-1)
nsubj(landmass-6, Subcontinent-2)
cop(landmass-6, is-3)
det(landmass-6, a-4)
amod(landmass-6, large-5)
root(ROOT-0, landmass-6)
prep_such_as(landmass-6, India-10)
nsubj(part-14, India-10)
nsubjpass(considered-20, India-10)
cop(part-14, is-13)
rcmod(India-10, part-14)
det(continent-17, a-16)
prep_of(part-14, continent-17)
auxpass(considered-20, is-19)
rcmod(India-10, considered-20)
conj_but(part-14, considered-20)
preconj(geographically-22, either-21)
acomp(considered-20, geographically-22)
acomp(considered-20, politically-24)
advmod(geographically-22, politically-24)
conj_or(geographically-22, politically-24)
acomp(considered-20, as-25)
conj_or(geographically-22, as-25)
det(entity-28, an-26)
amod(entity-28, independent-27)
prep_as(geographically-22, entity-28)

(ROOT
  (S
    (NP (DT A) (NNP Snake))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ elongate) (NN reptile))
        (PP (IN of)
          (NP (DT the) (NN suborder) (NNS Serpentes)))))
    (. .)))

det(Snake-2, A-1)
nsubj(reptile-6, Snake-2)
cop(reptile-6, is-3)
det(reptile-6, an-4)
amod(reptile-6, elongate-5)
root(ROOT-0, reptile-6)
det(Serpentes-10, the-8)
nn(Serpentes-10, suborder-9)
prep_of(reptile-6, Serpentes-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Judaism)))
    (, ,)
    (NP
      (NP
        (NP (NNP shiv))
        (`` `)
        (NP (NN ah)
          (CC or)
          (NN Shiva)))
      (PRN (-LRB- -LRB-)
        (NP (NNP Hebrew)
          (QP (CD Name) (CD 1)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ week-long) (NN period))
        (PP (IN of)
          (NP
            (NP (NN grief)
              (CC and)
              (VBG mourning))
            (PP (IN for)
              (NP
                (NP (DT the) (CD seven) (JJ first-degree) (NNS relatives))
                (: :)
                (NP (NN father) (, ,) (NN mother) (, ,) (NN son) (, ,) (NN daughter) (, ,) (NN brother) (, ,) (NN sister) (, ,)
                  (CC and)
                  (NN spouse))))))))
    (. .)))

prep_in(period-17, Judaism-2)
nsubj(period-17, shiv-4)
dep(shiv-4, ah-6)
dep(shiv-4, Shiva-8)
conj_or(ah-6, Shiva-8)
appos(shiv-4, Hebrew-10)
number(1-12, Name-11)
num(Hebrew-10, 1-12)
cop(period-17, is-14)
det(period-17, the-15)
amod(period-17, week-long-16)
root(ROOT-0, period-17)
prep_of(period-17, grief-19)
prep_of(period-17, mourning-21)
conj_and(grief-19, mourning-21)
det(relatives-26, the-23)
num(relatives-26, seven-24)
amod(relatives-26, first-degree-25)
prep_for(grief-19, relatives-26)
dep(relatives-26, father-28)
dep(relatives-26, mother-30)
conj_and(father-28, mother-30)
dep(relatives-26, son-32)
conj_and(father-28, son-32)
dep(relatives-26, daughter-34)
conj_and(father-28, daughter-34)
dep(relatives-26, brother-36)
conj_and(father-28, brother-36)
dep(relatives-26, sister-38)
conj_and(father-28, sister-38)
dep(relatives-26, spouse-41)
conj_and(father-28, spouse-41)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Screwdriver))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ popular) (NN cocktail))
        (VP (VBN made)
          (PP (IN with)
            (NP (JJ orange) (NN juice)
              (CC and)
              (NN vodka))))))
    (. .)))

det(Screwdriver-2, A-1)
nsubj(cocktail-6, Screwdriver-2)
cop(cocktail-6, is-3)
det(cocktail-6, a-4)
amod(cocktail-6, popular-5)
root(ROOT-0, cocktail-6)
partmod(cocktail-6, made-7)
amod(juice-10, orange-9)
prep_with(made-7, juice-10)
prep_with(made-7, vodka-12)
conj_and(juice-10, vodka-12)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Statite))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (DT a) (NN portmanteau))
          (PP (IN of)
            (NP (NN static)
              (CC and)
              (NN satellite))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ hypothetical) (NN type))
        (PP (IN of)
          (NP (JJ artificial) (NN satellite)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ employs)
              (NP (DT a) (JJ solar) (NN sail)
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB continuously))
                      (VB modify)
                      (NP
                        (NP (PRP$ its) (NN orbit))
                        (PP (IN in)
                          (NP
                            (NP (NNS ways))
                            (SBAR
                              (WHNP (WDT that) (NN gravity))
                              (S
                                (ADVP (RB alone))
                                (VP (MD would) (RB not)
                                  (VP (VB allow)))))))))))))))))
    (. .)))

det(Statite-2, A-1)
nsubj(type-14, Statite-2)
det(portmanteau-5, a-4)
dep(Statite-2, portmanteau-5)
prep_of(portmanteau-5, static-7)
prep_of(portmanteau-5, satellite-9)
conj_and(static-7, satellite-9)
cop(type-14, is-11)
det(type-14, a-12)
amod(type-14, hypothetical-13)
root(ROOT-0, type-14)
nsubj(employs-19, type-14)
amod(satellite-17, artificial-16)
prep_of(type-14, satellite-17)
rcmod(type-14, employs-19)
det(sail-22, a-20)
amod(sail-22, solar-21)
dobj(employs-19, sail-22)
aux(modify-25, to-23)
advmod(modify-25, continuously-24)
infmod(sail-22, modify-25)
poss(orbit-27, its-26)
dobj(modify-25, orbit-27)
prep_in(orbit-27, ways-29)
det(gravity-31, ways-29)
nsubj(allow-35, gravity-31)
advmod(allow-35, alone-32)
aux(allow-35, would-33)
neg(allow-35, not-34)
rcmod(ways-29, allow-35)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NN term) (NN Sonar))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP (VBN used)
        (PP (IN for)
          (NP
            (NP (DT the) (NN equipment))
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB generate)
                    (CC and)
                    (VB receive)
                    (NP (DT the) (NN sound))))))))))
    (. .)))

det(Sonar-3, The-1)
nn(Sonar-3, term-2)
nsubjpass(used-6, Sonar-3)
auxpass(used-6, is-4)
advmod(used-6, also-5)
root(ROOT-0, used-6)
det(equipment-9, the-8)
prep_for(used-6, equipment-9)
xsubj(generate-12, equipment-9)
partmod(equipment-9, used-10)
aux(generate-12, to-11)
xcomp(used-10, generate-12)
xcomp(used-10, receive-14)
conj_and(generate-12, receive-14)
det(sound-16, the-15)
dobj(generate-12, sound-16)

(ROOT
  (S
    (NP (DT The) (NNP StrongARM))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJR faster) (NN version))
        (PP (IN of)
          (NP (DT the) (NNP Advanced) (NNP RISC) (NNPS Machines) (NNP ARM) (NN design)))))
    (. .)))

det(StrongARM-2, The-1)
nsubj(version-6, StrongARM-2)
cop(version-6, is-3)
det(version-6, a-4)
amod(version-6, faster-5)
root(ROOT-0, version-6)
det(design-13, the-8)
nn(design-13, Advanced-9)
nn(design-13, RISC-10)
nn(design-13, Machines-11)
nn(design-13, ARM-12)
prep_of(version-6, design-13)

(ROOT
  (S
    (NP (DT A) (NNP Scabbard))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sheath))
        (PP (IN for)
          (S
            (VP (VBG holding)
              (NP
                (NP (DT a) (NN sword))
                (CC or)
                (NP (JJ other) (JJ large) (NN blade))))))))
    (. .)))

det(Scabbard-2, A-1)
nsubj(sheath-5, Scabbard-2)
cop(sheath-5, is-3)
det(sheath-5, a-4)
root(ROOT-0, sheath-5)
prepc_for(sheath-5, holding-7)
det(sword-9, a-8)
dobj(holding-7, sword-9)
amod(blade-13, other-11)
amod(blade-13, large-12)
dobj(holding-7, blade-13)
conj_or(sword-9, blade-13)

(ROOT
  (S
    (NP (DT A) (NNP Skyscraper))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ tall) (, ,) (RB continuously) (JJ habitable))
        (NN building)))
    (. .)))

det(Skyscraper-2, A-1)
nsubj(building-9, Skyscraper-2)
cop(building-9, is-3)
det(building-9, a-4)
amod(habitable-8, tall-5)
advmod(habitable-8, continuously-7)
amod(building-9, habitable-8)
root(ROOT-0, building-9)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS economics)))
    (, ,)
    (NP (NNP Scarcity))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN problem))
          (PP (IN of)
            (NP (JJ infinite) (JJ human) (NNS needs)))))
      (CC and)
      (VP (VBZ wants))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (NN world))
          (PP (IN of)
            (NP (JJ finite) (NNS resources))))))
    (. .)))

prep_in(problem-7, economics-2)
nsubj(problem-7, Scarcity-4)
nsubj(wants-13, Scarcity-4)
cop(problem-7, is-5)
det(problem-7, the-6)
root(ROOT-0, problem-7)
amod(needs-11, infinite-9)
amod(needs-11, human-10)
prep_of(problem-7, needs-11)
conj_and(problem-7, wants-13)
conj_and(problem-7, in-15)
det(world-17, a-16)
prep_in(problem-7, world-17)
amod(resources-20, finite-19)
prep_of(world-17, resources-20)

(ROOT
  (S
    (NP (NNP Set))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ real-time) (NN card) (NN game))
        (VP
          (VP (VBN designed)
            (PP (IN by)
              (NP (NNP Marsha) (NNP Falco))))
          (CC and)
          (VP (VBN published)
            (PP (IN by)
              (NP
                (NP (NNP Set) (NNPS Enterprises))
                (PP (IN in)
                  (NP (CD 1991)))))))))
    (. .)))

nsubj(game-6, Set-1)
cop(game-6, is-2)
det(game-6, a-3)
amod(game-6, real-time-4)
nn(game-6, card-5)
root(ROOT-0, game-6)
dep(game-6, designed-7)
nn(Falco-10, Marsha-9)
prep_by(designed-7, Falco-10)
dep(game-6, published-12)
conj_and(designed-7, published-12)
nn(Enterprises-15, Set-14)
prep_by(published-12, Enterprises-15)
prep_in(Enterprises-15, 1991-17)

(ROOT
  (S
    (NP (NNP Sienna))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP
            (NP (JJ limonite) (NN clay))
            (ADJP (RBS most) (JJ famous))
            (PP (IN in)
              (NP
                (NP (DT the) (NN production))
                (PP (IN of)
                  (NP (NN oil) (NN paint) (NNS pigments)))))))))
    (. .)))

nsubj(form-4, Sienna-1)
cop(form-4, is-2)
det(form-4, a-3)
root(ROOT-0, form-4)
amod(clay-7, limonite-6)
prep_of(form-4, clay-7)
advmod(famous-9, most-8)
amod(clay-7, famous-9)
det(production-12, the-11)
prep_in(clay-7, production-12)
nn(pigments-16, oil-14)
nn(pigments-16, paint-15)
prep_of(production-12, pigments-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NN medicine)
        (CC and)
        (NN biology)))
    (, ,)
    (NP
      (NP (NNP Scatology))
      (CC or)
      (NP (NN coprology)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN study))
        (PP (IN of)
          (NP (NNS feces)))))
    (. .)))

prep_in(study-11, medicine-2)
conj_and(medicine-2, biology-4)
prep_in(study-11, biology-4)
nsubj(study-11, Scatology-6)
conj_or(Scatology-6, coprology-8)
nsubj(study-11, coprology-8)
cop(study-11, is-9)
det(study-11, the-10)
root(ROOT-0, study-11)
prep_of(study-11, feces-13)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT A) (NNP Stellarator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN device))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB confine)
                (NP (DT a) (JJ hot) (NN plasma))
                (PP (IN with)
                  (NP (JJ magnetic) (NNS fields)))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB sustain)
                        (NP (DT a) (JJ controlled) (JJ nuclear) (NN fusion) (NN reaction))))))))))))
    (. .)))

det(Stellarator-2, A-1)
nsubj(device-5, Stellarator-2)
cop(device-5, is-3)
det(device-5, a-4)
root(ROOT-0, device-5)
xsubj(confine-8, device-5)
partmod(device-5, used-6)
aux(confine-8, to-7)
xcomp(used-6, confine-8)
det(plasma-11, a-9)
amod(plasma-11, hot-10)
dobj(confine-8, plasma-11)
amod(fields-14, magnetic-13)
prep_with(confine-8, fields-14)
mark(sustain-18, in-15)
dep(sustain-18, order-16)
aux(sustain-18, to-17)
purpcl(confine-8, sustain-18)
det(reaction-23, a-19)
amod(reaction-23, controlled-20)
amod(reaction-23, nuclear-21)
nn(reaction-23, fusion-22)
dobj(sustain-18, reaction-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN music)))
    (, ,)
    (NP (NNP Syncopation))
    (VP (VBZ includes)
      (NP
        (NP (DT a) (NN variety))
        (PP (IN of)
          (NP
            (NP (NNS rhythms))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP are)
                  (PP (IN in)
                    (NP (DT some) (NN way)))
                  (ADJP (JJ unexpected)
                    (PP (IN in)
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (VBP deviate)
                            (PP (IN from)
                              (NP
                                (NP (DT the) (JJ strict) (NN succession))
                                (PP (IN of)
                                  (ADVP (RB regularly))
                                  (NP
                                    (NP (JJ spaced)
                                      (ADJP (JJ strong)
                                        (CC and)
                                        (JJ weak))
                                      (NNS beats))
                                    (PP (IN in)
                                      (NP
                                        (NP (DT a) (NN meter))
                                        (PRN (-LRB- -LRB-)
                                          (NP (NN pulse))
                                          (-RRB- -RRB-))))))))))))))))))))
    (. .)))

prep_in(includes-5, music-2)
nsubj(includes-5, Syncopation-4)
root(ROOT-0, includes-5)
det(variety-7, a-6)
dobj(includes-5, variety-7)
prep_of(variety-7, rhythms-9)
nsubj(unexpected-15, rhythms-9)
cop(unexpected-15, are-11)
det(way-14, some-13)
prep_in(unexpected-15, way-14)
rcmod(rhythms-9, unexpected-15)
complm(deviate-19, that-17)
nsubj(deviate-19, they-18)
prepc_in(unexpected-15, deviate-19)
det(succession-23, the-21)
amod(succession-23, strict-22)
prep_from(deviate-19, succession-23)
advmod(succession-23, regularly-25)
pcomp(succession-23, regularly-25)
amod(beats-30, spaced-26)
amod(beats-30, strong-27)
conj_and(strong-27, weak-29)
amod(beats-30, weak-29)
prep_of(succession-23, beats-30)
det(meter-33, a-32)
prep_in(beats-30, meter-33)
appos(meter-33, pulse-35)

(ROOT
  (S
    (NP (DT A) (NN Strategy))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ long) (NN term) (NN plan))
        (PP (IN of)
          (NP
            (NP (NN action))
            (VP (VBN designed)
              (S
                (VP (TO to)
                  (VP (VB achieve)
                    (NP
                      (NP (DT a) (JJ particular) (NN goal))
                      (, ,)
                      (ADVP (RBS most) (RB often)))
                    ('' '')
                    (S
                      (VP (VBG winning)))))))))))
    (. .) ('' '')))

det(Strategy-2, A-1)
nsubj(plan-7, Strategy-2)
cop(plan-7, is-3)
det(plan-7, a-4)
amod(plan-7, long-5)
nn(plan-7, term-6)
root(ROOT-0, plan-7)
prep_of(plan-7, action-9)
xsubj(achieve-12, action-9)
partmod(action-9, designed-10)
aux(achieve-12, to-11)
xcomp(designed-10, achieve-12)
det(goal-15, a-13)
amod(goal-15, particular-14)
dobj(achieve-12, goal-15)
advmod(often-18, most-17)
advmod(goal-15, often-18)
xcomp(achieve-12, winning-20)

(ROOT
  (S
    (NP (NNP Strategy))
    (VP (VBZ is)
      (VP (VBN differentiated)
        (PP (IN from)
          (NP
            (NP (NNS tactics))
            (CC or)
            (NP (JJ immediate) (NNS actions))))
        (PP (IN with)
          (NP
            (NP (NNS resources))
            (PP (IN at)
              (NP (NN hand)))))
        (PP (IN by)
          (NP
            (NP (PRP$ its) (NN nature))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (VP
                    (VP
                      (ADVP (RB extensively))
                      (VBN premeditated))
                    (, ,)
                    (CC and)
                    (ADVP (RB often))
                    (VP
                      (ADVP (RB practically))
                      (VBN rehearsed))))))))))
    (. .)))

nsubjpass(differentiated-3, Strategy-1)
auxpass(differentiated-3, is-2)
root(ROOT-0, differentiated-3)
prep_from(differentiated-3, tactics-5)
amod(actions-8, immediate-7)
prep_from(differentiated-3, actions-8)
conj_or(tactics-5, actions-8)
prep_with(differentiated-3, resources-10)
prep_at(resources-10, hand-12)
poss(nature-15, its-14)
agent(differentiated-3, nature-15)
auxpass(premeditated-19, being-17)
advmod(premeditated-19, extensively-18)
prepc_of(nature-15, premeditated-19)
prepc_of(nature-15, often-22)
advmod(premeditated-19, often-22)
conj_and(premeditated-19, often-22)
advmod(rehearsed-24, practically-23)
prepc_of(nature-15, rehearsed-24)
conj_and(premeditated-19, rehearsed-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Senary) (NN numeral) (NN system))
    (VP (VBZ is)
      (NP (DT a) (JJ base-6) (NN numeral) (NN system)))
    (. .)))

prep_in(system-12, mathematics-2)
det(system-7, a-4)
nn(system-7, Senary-5)
nn(system-7, numeral-6)
nsubj(system-12, system-7)
cop(system-12, is-8)
det(system-12, a-9)
amod(system-12, base-6-10)
nn(system-12, numeral-11)
root(ROOT-0, system-12)

(ROOT
  (S
    (NP (DT The) (NNP Tambourine)
      (CC or)
      (NNP Marine))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN of)
          (NP
            (NP (DT the) (NN percussion) (NN family))
            (VP (VBG consisting)
              (PP (IN of)
                (NP (DT a) (NN frame)))
              (, ,)
              (ADVP (RB often)))))
        (PP (IN of)
          (NP (NN wood)
            (CC or)
            (NN plastic)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNS pairs))
            (PP (IN of)
              (NP (JJ small) (NN metal) (NNS jingles)))
            (, ,)
            (VP (VBN called) ('' '')
              (NP (NNS zils))
              ('' ''))))))
    (. .)))

det(Tambourine-2, The-1)
nsubj(instrument-8, Tambourine-2)
conj_or(Tambourine-2, Marine-4)
nsubj(instrument-8, Marine-4)
cop(instrument-8, is-5)
det(instrument-8, a-6)
amod(instrument-8, musical-7)
root(ROOT-0, instrument-8)
det(family-12, the-10)
nn(family-12, percussion-11)
prep_of(instrument-8, family-12)
partmod(family-12, consisting-13)
det(frame-16, a-15)
prep_of(consisting-13, frame-16)
advmod(consisting-13, often-18)
prep_of(instrument-8, wood-20)
prep_of(instrument-8, plastic-22)
conj_or(wood-20, plastic-22)
prep_with(instrument-8, pairs-25)
amod(jingles-29, small-27)
nn(jingles-29, metal-28)
prep_of(pairs-25, jingles-29)
partmod(pairs-25, called-31)
dobj(called-31, zils-33)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNPS Americas))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS lands))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ Western) (NN hemisphere))
            (CC or)
            (NP (NNP New) (NNP World))))
        (, ,)
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT the) (NN continents))
              (PP (IN of)
                (NP
                  (NP (NNP North) (NNP America))
                  (CC and)
                  (NP (NNP South) (NNP America))))))
          (PP (IN with)
            (NP (PRP$ their) (VBN associated) (NNS islands)
              (CC and)
              (NNS regions))))))
    (. .)))

det(Americas-2, The-1)
nsubj(lands-5, Americas-2)
cop(lands-5, are-3)
det(lands-5, the-4)
root(ROOT-0, lands-5)
det(hemisphere-9, the-7)
amod(hemisphere-9, Western-8)
prep_of(lands-5, hemisphere-9)
nn(World-12, New-11)
prep_of(lands-5, World-12)
conj_or(hemisphere-9, World-12)
partmod(lands-5, consisting-14)
det(continents-17, the-16)
prep_of(consisting-14, continents-17)
nn(America-20, North-19)
prep_of(continents-17, America-20)
nn(America-23, South-22)
prep_of(continents-17, America-23)
conj_and(America-20, America-23)
poss(islands-27, their-25)
amod(islands-27, associated-26)
prep_with(consisting-14, islands-27)
prep_with(consisting-14, regions-29)
conj_and(islands-27, regions-29)

(ROOT
  (S
    (NP (DT The) (NNP Trombone))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN in)
          (NP (DT the) (NN brass) (NN family)))))
    (. .)))

det(Trombone-2, The-1)
nsubj(instrument-6, Trombone-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(family-10, the-8)
nn(family-10, brass-9)
prep_in(instrument-6, family-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN meaning))
      (PP (IN of)
        (NP (DT the) (NN word) (NN Truth))))
    (VP (VBZ extends)
      (PP (IN from)
        (NP
          (NP (NN honesty))
          (, ,)
          (NP (JJ good) (NN faith))
          (, ,)
          (CC and)
          (NP
            (NP (NN sincerity))
            (PP (IN in)
              (NP (NN general)))))
        (, ,)
        (PP (TO to)
          (NP
            (NP (NN agreement))
            (PP (IN with)
              (NP (NN fact)
                (CC or)
                (NN reality))))))
      (PP (IN in)
        (ADJP (JJ particular))))
    (. .)))

det(meaning-2, The-1)
nsubj(extends-7, meaning-2)
det(Truth-6, the-4)
nn(Truth-6, word-5)
prep_of(meaning-2, Truth-6)
root(ROOT-0, extends-7)
prep_from(extends-7, honesty-9)
amod(faith-12, good-11)
prep_from(extends-7, faith-12)
conj_and(honesty-9, faith-12)
prep_from(extends-7, sincerity-15)
conj_and(honesty-9, sincerity-15)
prep_in(sincerity-15, general-17)
prep_to(extends-7, agreement-20)
prep_with(agreement-20, fact-22)
prep_with(agreement-20, reality-24)
conj_or(fact-22, reality-24)
prep_in(extends-7, particular-26)

(ROOT
  (S
    (NP (DT The) (NN word) (NN Topology))
    (VP (VBZ is)
      (VP (VBN used)
        (PP (DT both)
          (PP (IN for)
            (NP
              (NP (DT the) (NN area))
              (PP (IN of)
                (NP (NN study)))))
          (CC and)
          (PP (IN for)
            (NP
              (NP (DT a) (NN family))
              (PP (IN of)
                (NP (NNS sets))))))
        (PP (IN with)
          (NP
            (NP (JJ certain) (NNS properties))
            (VP (VBN described)
              (PP (IN below)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (VP (VBN used)
                        (S
                          (VP (TO to)
                            (VP (VB define)
                              (NP (DT a) (JJ topological) (NN space)))))))))))))))
    (. .)))

det(Topology-3, The-1)
nn(Topology-3, word-2)
nsubjpass(used-5, Topology-3)
auxpass(used-5, is-4)
root(ROOT-0, used-5)
preconj(used-5, both-6)
det(area-9, the-8)
prep_for(used-5, area-9)
prep_of(area-9, study-11)
det(family-15, a-14)
prep_for(used-5, family-15)
conj_and(area-9, family-15)
prep_of(family-15, sets-17)
amod(properties-20, certain-19)
prep_with(used-5, properties-20)
partmod(properties-20, described-21)
nsubjpass(used-25, that-23)
auxpass(used-25, are-24)
prepc_below(described-21, used-25)
aux(define-27, to-26)
xcomp(used-25, define-27)
det(space-30, a-28)
amod(space-30, topological-29)
dobj(define-27, space-30)

(ROOT
  (S
    (NP (DT A) (NNP Troll))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ fearsome) (NN member))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ mythical) (NN race))
            (PP (IN from)
              (NP (NNP Norse) (NN mythology)))))))
    (. .)))

det(Troll-2, A-1)
nsubj(member-6, Troll-2)
cop(member-6, is-3)
det(member-6, a-4)
amod(member-6, fearsome-5)
root(ROOT-0, member-6)
det(race-10, a-8)
amod(race-10, mythical-9)
prep_of(member-6, race-10)
nn(mythology-13, Norse-12)
prep_from(race-10, mythology-13)

(ROOT
  (S
    (NP (DT A) (NNP Tensor))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN object))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ extends)
              (NP
                (NP (DT the) (NN notion))
                (PP (IN of)
                  (NP
                    (NP (NN scalar))
                    (, ,)
                    (NP (NN vector))
                    (, ,)
                    (CC and)
                    (NP (NN matrix))))))))))
    (. .)))

det(Tensor-2, A-1)
nsubj(object-5, Tensor-2)
cop(object-5, is-3)
det(object-5, an-4)
root(ROOT-0, object-5)
nsubj(extends-7, object-5)
rcmod(object-5, extends-7)
det(notion-9, the-8)
dobj(extends-7, notion-9)
prep_of(notion-9, scalar-11)
prep_of(notion-9, vector-13)
conj_and(scalar-11, vector-13)
prep_of(notion-9, matrix-16)
conj_and(scalar-11, matrix-16)

(ROOT
  (S
    (S
      (NP (NN Tarragon)
        (CC or)
        (NN dragon))
      (VP (VBZ 's)))
    (: -)
    (S
      (NP
        (NP (NN wort))
        (PRN (-LRB- -LRB-) (`` `)
          (S
            (NP (NNP Artemisia))
            (VP (VBZ dracunculus)))
          ('' ')
          (NP (CD L.))
          (-RRB- -RRB-)))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ perennial) (NN herb))
          (PP (IN in)
            (NP
              (NP (DT the) (NN family) (NN Asteraceae))
              (VP (VBN related)
                (S
                  (VP (TO to)
                    (VP (VB wormwood))))))))))
    (. .)))

nsubj('s-4, Tarragon-1)
conj_or(Tarragon-1, dragon-3)
nsubj('s-4, dragon-3)
root(ROOT-0, 's-4)
nsubj(herb-17, wort-6)
nsubj(dracunculus-10, Artemisia-9)
appos(wort-6, dracunculus-10)
dep(dracunculus-10, L.-12)
cop(herb-17, is-14)
det(herb-17, a-15)
amod(herb-17, perennial-16)
parataxis('s-4, herb-17)
det(Asteraceae-21, the-19)
nn(Asteraceae-21, family-20)
prep_in(herb-17, Asteraceae-21)
xsubj(wormwood-24, Asteraceae-21)
partmod(Asteraceae-21, related-22)
aux(wormwood-24, to-23)
xcomp(related-22, wormwood-24)

(ROOT
  (S
    (NP (DT A) (NNP Tank))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ tracked) (, ,) (JJ armored) (NN fighting) (NN vehicle))
        (VP (VBN designed)
          (PP (IN for)
            (NP
              (NP
                (NP (JJ front-line) (NN combat)
                  (CC and)
                  (NNS combines))
                (ADJP (JJ strong) (JJ strategic)))
              (CC and)
              (NP (JJ tactical)
                (ADJP (JJ offensive)
                  (CC and)
                  (JJ defensive))
                (NNS capabilities)))))))
    (. .)))

det(Tank-2, A-1)
nsubj(vehicle-9, Tank-2)
cop(vehicle-9, is-3)
det(vehicle-9, a-4)
amod(vehicle-9, tracked-5)
amod(vehicle-9, armored-7)
nn(vehicle-9, fighting-8)
root(ROOT-0, vehicle-9)
partmod(vehicle-9, designed-10)
amod(combat-13, front-line-12)
prep_for(designed-10, combat-13)
prep_for(designed-10, combines-15)
conj_and(combat-13, combines-15)
amod(strategic-17, strong-16)
amod(combat-13, strategic-17)
amod(capabilities-23, tactical-19)
amod(capabilities-23, offensive-20)
conj_and(offensive-20, defensive-22)
amod(capabilities-23, defensive-22)
prep_for(designed-10, capabilities-23)
conj_and(combat-13, capabilities-23)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP (DT The) (NNP Triassic))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ geologic) (NN period)
          (CC and)
          (NN system))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ extends)
              (PP (IN from)
                (NP
                  (QP (RB about) (CD 251) (TO to) (CD 199))
                  (NNS Ma)))
              (PRN (-LRB- -LRB-)
                (ADVP
                  (NP (CD million) (NNS years))
                  (RB ago))
                (-RRB- -RRB-)))))))
    (. .)))

det(Triassic-2, The-1)
nsubj(period-6, Triassic-2)
cop(period-6, is-3)
det(period-6, a-4)
amod(period-6, geologic-5)
root(ROOT-0, period-6)
nsubj(extends-10, period-6)
conj_and(period-6, system-8)
nsubj(extends-10, system-8)
rcmod(period-6, extends-10)
quantmod(199-15, about-12)
number(199-15, 251-13)
dep(199-15, to-14)
num(Ma-16, 199-15)
prep_from(extends-10, Ma-16)
num(years-19, million-18)
npadvmod(ago-20, years-19)
dep(extends-10, ago-20)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS electronics)))
    (, ,)
    (NP (DT a) (NNP Transistor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN semiconductor) (NN device))
        (VP
          (ADVP (RB commonly))
          (VBN used)
          (S
            (VP (TO to)
              (VP (VB amplify)
                (CC or)
                (VB switch)
                (NP (JJ electronic) (NNS signals))))))))
    (. .)))

prep_in(device-9, electronics-2)
det(Transistor-5, a-4)
nsubj(device-9, Transistor-5)
cop(device-9, is-6)
det(device-9, a-7)
nn(device-9, semiconductor-8)
root(ROOT-0, device-9)
xsubj(amplify-13, device-9)
advmod(used-11, commonly-10)
partmod(device-9, used-11)
aux(amplify-13, to-12)
xcomp(used-11, amplify-13)
xcomp(used-11, switch-15)
conj_or(amplify-13, switch-15)
amod(signals-17, electronic-16)
dobj(amplify-13, signals-17)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)
        (CC and)
        (JJ other) (NNS sciences)))
    (, ,)
    (NP (NNP Time))
    (VP (VBZ is)
      (VP (VBN considered)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (JJ few) (JJ fundamental) (NNS quantities))))))
    (. .)))

nn(sciences-5, physics-2)
conj_and(physics-2, other-4)
nn(sciences-5, other-4)
prep_in(considered-9, sciences-5)
nsubjpass(considered-9, Time-7)
auxpass(considered-9, is-8)
root(ROOT-0, considered-9)
dobj(considered-9, one-10)
det(quantities-15, the-12)
amod(quantities-15, few-13)
amod(quantities-15, fundamental-14)
prep_of(one-10, quantities-15)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (JJ current) (NN usage)))
    (, ,)
    (NP (NNP Tifinagh))
    (ADVP (RB often))
    (VP (VBZ refers)
      (PP (TO to)
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNS variants))
            (PP (IN of)))
          (-RRB- -RRB-))
        (NP
          (NP (DT the) (NNP Neo-Tifinagh))
          (VP (VBN developed)
            (PP (IN by)
              (NP
                (NP (DT the) (NN lang))
                (PP (IN in)
                  (NP (DT the) (NNS 1960s)))))
            (, ,)
            (PP (IN with)
              (NP (JJ fixed) (JJ left-to-right) (NN directionality)
                (CC and)
                (NN vowel) (NNS letters)))))))
    (. .)))

amod(usage-3, current-2)
prep_in(refers-7, usage-3)
nsubj(refers-7, Tifinagh-5)
advmod(refers-7, often-6)
root(ROOT-0, refers-7)
dep(refers-7, variants-10)
prep(variants-10, of-11)
det(Neo-Tifinagh-14, the-13)
prep_to(refers-7, Neo-Tifinagh-14)
partmod(Neo-Tifinagh-14, developed-15)
det(lang-18, the-17)
agent(developed-15, lang-18)
det(1960s-21, the-20)
prep_in(lang-18, 1960s-21)
amod(directionality-26, fixed-24)
amod(directionality-26, left-to-right-25)
prep_with(developed-15, directionality-26)
nn(letters-29, vowel-28)
prep_with(developed-15, letters-29)
conj_and(directionality-26, letters-29)

(ROOT
  (S
    (ADVP (RB Originally))
    (, ,)
    (NP (DT a) (NNP Torch))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ portable) (NN source))
        (PP (IN of)
          (NP
            (NP (NN fire))
            (VP (VBN used)
              (PP (IN as)
                (NP
                  (NP
                    (NP (DT a) (NN source))
                    (PP (IN of)
                      (NP (NN light))))
                  (, ,)
                  (ADVP (RB usually))
                  (NP
                    (NP (DT a) (JJ rod-shaped) (NN piece))
                    (PP (IN of)
                      (NP (NN wood))))))
              (PP (IN with)
                (NP
                  (NP
                    (NP (DT a) (NN rag))
                    (VP (VBN soaked)
                      (PP (IN in)
                        (NP (NN pitch)
                          (CC and)
                          (NN \/)))))
                  (CC or)
                  (NP
                    (NP (DT some)
                      (ADJP (JJ other) (JJ flammable))
                      (NN material))
                    (VP (VBN wrapped)
                      (PP (IN around)
                        (NP (CD one) (NN end))))))))))))
    (. .)))

advmod(source-8, Originally-1)
det(Torch-4, a-3)
nsubj(source-8, Torch-4)
cop(source-8, was-5)
det(source-8, a-6)
amod(source-8, portable-7)
root(ROOT-0, source-8)
prep_of(source-8, fire-10)
partmod(fire-10, used-11)
det(source-14, a-13)
prep_as(used-11, source-14)
prep_of(source-14, light-16)
advmod(source-14, usually-18)
det(piece-21, a-19)
amod(piece-21, rod-shaped-20)
dep(source-14, piece-21)
prep_of(piece-21, wood-23)
det(rag-26, a-25)
prep_with(used-11, rag-26)
partmod(rag-26, soaked-27)
prep_in(soaked-27, pitch-29)
prep_in(soaked-27, \/-31)
conj_and(pitch-29, \/-31)
det(material-36, some-33)
amod(flammable-35, other-34)
amod(material-36, flammable-35)
prep_with(used-11, material-36)
conj_or(rag-26, material-36)
partmod(material-36, wrapped-37)
num(end-40, one-39)
prep_around(wrapped-37, end-40)

(ROOT
  (S
    (NP (DT The) (NNP Thyroid))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS largest) (NN endocrine) (NNS glands))
            (PP (IN in)
              (NP (DT the) (NN body)))))))
    (. .)))

det(Thyroid-2, The-1)
nsubj(one-4, Thyroid-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
det(glands-9, the-6)
amod(glands-9, largest-7)
nn(glands-9, endocrine-8)
prep_of(one-4, glands-9)
det(body-12, the-11)
prep_in(glands-9, body-12)

(ROOT
  (S
    (ADVP (RB Originally))
    (NP (NNP Traveller))
    (VP (VBD was)
      (VP (VBN intended)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (NN system))
                (PP (IN for)
                  (NP (VBG playing) (JJ generic) (NN space) (JJ opera) (VBN themed) (NN science) (NN fiction) (NNS adventures)))))))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ same) (NN sense))
            (SBAR (IN that)
              (S
                (NP (NNP Dungeons)
                  (CC &)
                  (NNP amp))
                (: ;)
                (NP (NNP Dragons))
                (VP (VBZ is)
                  (NP
                    (NP (DT a) (NN system))
                    (PP (IN for)
                      (NP (JJ generic) (NN fantasy) (NNS adventures)))))))))))
    (. .)))

advmod(intended-4, Originally-1)
nsubjpass(intended-4, Traveller-2)
xsubj(system-8, Traveller-2)
auxpass(intended-4, was-3)
root(ROOT-0, intended-4)
aux(system-8, to-5)
cop(system-8, be-6)
det(system-8, a-7)
xcomp(intended-4, system-8)
amod(adventures-17, playing-10)
amod(adventures-17, generic-11)
nn(adventures-17, space-12)
amod(adventures-17, opera-13)
amod(adventures-17, themed-14)
nn(adventures-17, science-15)
nn(adventures-17, fiction-16)
prep_for(system-8, adventures-17)
det(sense-22, the-20)
amod(sense-22, same-21)
prep_in(intended-4, sense-22)
complm(system-31, that-23)
nsubj(system-31, Dungeons-24)
conj_and(Dungeons-24, amp-26)
nsubj(system-31, amp-26)
nsubj(system-31, Dragons-28)
cop(system-31, is-29)
det(system-31, a-30)
dep(sense-22, system-31)
amod(adventures-35, generic-33)
nn(adventures-35, fantasy-34)
prep_for(system-31, adventures-35)

(ROOT
  (S
    (NP (DT A) (NNP Tax))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ financial) (NN charge)
          (CC or)
          (JJ other) (NN levy))
        (VP (VBN imposed)
          (PP (IN on)
            (NP
              (NP (DT an) (NN individual))
              (CC or)
              (NP (DT a) (JJ legal) (NN entity))))
          (PP (IN by)
            (NP
              (NP (DT a) (NN state))
              (CC or)
              (NP
                (NP (DT a)
                  (ADJP (JJ functional))
                  (NN equivalent))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN state))
                    (PRN (-LRB- -LRB-)
                      (PP (IN for)
                        (NP
                          (NP (NN example))
                          (, ,)
                          (NP (JJ secessionist) (NNS movements))
                          (CC or)
                          (NP (JJ revolutionary) (NNS movements))))
                      (-RRB- -RRB-))))))))))
    (. .)))

det(Tax-2, A-1)
nsubj(charge-6, Tax-2)
cop(charge-6, is-3)
det(charge-6, a-4)
amod(charge-6, financial-5)
root(ROOT-0, charge-6)
amod(levy-9, other-8)
conj_or(charge-6, levy-9)
partmod(charge-6, imposed-10)
det(individual-13, an-12)
prep_on(imposed-10, individual-13)
det(entity-17, a-15)
amod(entity-17, legal-16)
prep_on(imposed-10, entity-17)
conj_or(individual-13, entity-17)
det(state-20, a-19)
agent(imposed-10, state-20)
det(equivalent-24, a-22)
amod(equivalent-24, functional-23)
agent(imposed-10, equivalent-24)
conj_or(state-20, equivalent-24)
det(state-27, a-26)
prep_of(equivalent-24, state-27)
dep(state-27, for-29)
pobj(for-29, example-30)
amod(movements-33, secessionist-32)
pobj(for-29, movements-33)
conj_or(example-30, movements-33)
amod(movements-36, revolutionary-35)
pobj(for-29, movements-36)
conj_or(example-30, movements-36)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS TARDIS))
      (PRN (-LRB- -LRB-)
        (NP
          (NP
            (NP (NNP Time)
              (CC And)
              (NNP Relative) (NNP Dimension))
            (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))
          (PP (IN In)
            (NP (NNP Space))))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN time) (NN machine)
          (CC and)
          (NN spacecraft))
        (PP (IN in)
          (NP (DT the) (JJ British) (NN science) (NN fiction) (NN television) (NN program) (NN Doctor)))
        (SBAR
          (WHNP (WP Who)))))
    (. .)))

det(TARDIS-2, The-1)
nsubj(machine-17, TARDIS-2)
nn(Dimension-7, Time-4)
conj_and(Time-4, Relative-6)
nn(Dimension-7, Relative-6)
dep(TARDIS-2, Dimension-7)
dep(Dimension-7, s-9)
prep_in(Dimension-7, Space-12)
cop(machine-17, is-14)
det(machine-17, a-15)
nn(machine-17, time-16)
root(ROOT-0, machine-17)
conj_and(machine-17, spacecraft-19)
det(Doctor-27, the-21)
amod(Doctor-27, British-22)
nn(Doctor-27, science-23)
nn(Doctor-27, fiction-24)
nn(Doctor-27, television-25)
nn(Doctor-27, program-26)
prep_in(machine-17, Doctor-27)
rcmod(machine-17, Who-28)

(ROOT
  (S
    (NP (DT The) (NNPS Tetraodontiformes))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN order))
        (PP (IN of)
          (NP
            (NP
              (ADJP (RB highly) (JJ derived))
              (JJ ray-finned) (NN fish))
            (, ,)
            (VP
              (ADVP (RB also))
              (VBN called)
              (NP (DT the) (NNP Plectognathi)))))))
    (. .)))

det(Tetraodontiformes-2, The-1)
nsubj(order-5, Tetraodontiformes-2)
cop(order-5, are-3)
det(order-5, an-4)
root(ROOT-0, order-5)
advmod(derived-8, highly-7)
amod(fish-10, derived-8)
amod(fish-10, ray-finned-9)
prep_of(order-5, fish-10)
advmod(called-13, also-12)
partmod(fish-10, called-13)
det(Plectognathi-15, the-14)
dobj(called-13, Plectognathi-15)

(ROOT
  (S
    (S
      (NP (DT A) (NNPS Thesaurus))
      (VP (VBZ is)
        (ADJP (JJ similar)
          (PP
            (PP (TO to)
              (NP (DT a) (NN dictionary)))
            (, ,)
            (CC but)
            (RB instead)
            (PP (IN of)
              (NP (NNS definitions)
                (CC and)
                (NNS pronunciations)))))))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ contains)
        (NP (NNS synonyms)))
      (CC and)
      (ADVP (RB sometimes))
      (VP (VBZ antonyms)))
    (. .)))

det(Thesaurus-2, A-1)
nsubj(similar-4, Thesaurus-2)
cop(similar-4, is-3)
ccomp(contains-17, similar-4)
prep(similar-4, to-5)
det(dictionary-7, a-6)
pobj(to-5, dictionary-7)
prep(similar-4, instead-10)
advmod(to-5, instead-10)
conj_but(to-5, instead-10)
dep(to-5, of-11)
pobj(of-11, definitions-12)
pobj(of-11, pronunciations-14)
conj_and(definitions-12, pronunciations-14)
nsubj(contains-17, it-16)
nsubj(antonyms-21, it-16)
root(ROOT-0, contains-17)
dobj(contains-17, synonyms-18)
advmod(contains-17, sometimes-20)
conj_and(contains-17, sometimes-20)
conj_and(contains-17, antonyms-21)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Talmud))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NNP Hebrew))
          (: :)
          (NP (NN lang)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN record))
        (PP (IN of)
          (NP
            (NP (JJ rabbinic) (NNS discussions))
            (VP (VBG pertaining)
              (PP (TO to)
                (NP
                  (NP (JJ Jewish) (NN law))
                  (, ,)
                  (NP (NNS ethics))
                  (, ,)
                  (NP (NNS customs))
                  (, ,)
                  (CC and)
                  (NP (NN history)))))))))
    (. .)))

det(Talmud-2, The-1)
nsubj(record-10, Talmud-2)
dep(Talmud-2, Hebrew-4)
dep(Hebrew-4, lang-6)
cop(record-10, is-8)
det(record-10, a-9)
root(ROOT-0, record-10)
amod(discussions-13, rabbinic-12)
prep_of(record-10, discussions-13)
partmod(discussions-13, pertaining-14)
amod(law-17, Jewish-16)
prep_to(pertaining-14, law-17)
prep_to(pertaining-14, ethics-19)
conj_and(law-17, ethics-19)
prep_to(pertaining-14, customs-21)
conj_and(law-17, customs-21)
prep_to(pertaining-14, history-24)
conj_and(law-17, history-24)

(ROOT
  (S
    (NP
      (NP (NNS TWERPS))
      (PRN (-LRB- -LRB-) (`` `)
        (S
          (NP (DT The) (NNP World))
          (VP (VBZ 's)
            (NP (NNP Easiest) (NNP Role-Playing) (NNP System))))
        ('' ') (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ minimalist) (NN role-playing) (NN game))
        (PRN (-LRB- -LRB-)
          (NP (NNP RPG))
          (-RRB- -RRB-))
        (VP
          (VP
            (ADVP (RB originally))
            (VBN created)
            (PP (IN by)
              (NP (NNP Reindeer) (NNPS Games))))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WP$ whose) (JJ sole) (NN product))
              (S
                (VP (VBD was)
                  (NP (DT the) (NNP TWERPS) (NN line)))))
            (-RRB- -RRB-))
          (CC and)
          (VP (VBN distributed)
            (PP (IN by)
              (NP (NNP Gamescience)))))))
    (. .)))

nsubj(game-16, TWERPS-1)
det(World-5, The-4)
nsubj(System-9, World-5)
cop(System-9, 's-6)
nn(System-9, Easiest-7)
nn(System-9, Role-Playing-8)
dep(TWERPS-1, System-9)
cop(game-16, is-12)
det(game-16, a-13)
amod(game-16, minimalist-14)
nn(game-16, role-playing-15)
root(ROOT-0, game-16)
abbrev(game-16, RPG-18)
advmod(created-21, originally-20)
dep(game-16, created-21)
nn(Games-24, Reindeer-23)
prep_by(created-21, Games-24)
poss(product-28, whose-26)
amod(product-28, sole-27)
nsubj(line-32, product-28)
cop(line-32, was-29)
det(line-32, the-30)
nn(line-32, TWERPS-31)
parataxis(created-21, line-32)
parataxis(distributed-35, line-32)
dep(game-16, distributed-35)
conj_and(created-21, distributed-35)
prep_by(distributed-35, Gamescience-37)

(ROOT
  (S
    (NP (DT The) (NNP Trumpet))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ musical) (NN instrument))
        (PP (IN with)
          (NP
            (NP (DT the) (JJS highest) (NN register))
            (PP (IN in)
              (NP (DT the) (NN brass) (NN family)))))))
    (. .)))

det(Trumpet-2, The-1)
nsubj(instrument-6, Trumpet-2)
cop(instrument-6, is-3)
det(instrument-6, a-4)
amod(instrument-6, musical-5)
root(ROOT-0, instrument-6)
det(register-10, the-8)
amod(register-10, highest-9)
prep_with(instrument-6, register-10)
det(family-14, the-12)
nn(family-14, brass-13)
prep_in(register-10, family-14)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Adrian) (NNP Thaws))
        (PRN (-LRB- -LRB-)
          (VP (VBN born)
            (NP (NNP January) (CD 27) (, ,) (CD 1968)))
          (-RRB- -RRB-)))
      (, ,)
      (VP
        (ADVP (RBR better))
        (VBN known)
        (PP (IN as)
          (NP (NNP Tricky))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ English) (NN trip) (NN hop) (NN musician))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ British) (NN music) (NN scene))
            (PRN (-LRB- -LRB-)
              (PP (IN despite)
                (S
                  (VP (VBG loathing)
                    (NP (DT the))
                    ('' '')
                    (NP
                      (NP (NN trip))
                      (NP (NN hop) ('' '') (NN tag))))))
              (-RRB- -RRB-))))))
    (. .)))

nn(Thaws-2, Adrian-1)
nsubj(musician-21, Thaws-2)
dep(Thaws-2, born-4)
tmod(born-4, January-5)
num(January-5, 27-6)
num(January-5, 1968-8)
advmod(known-12, better-11)
partmod(Thaws-2, known-12)
prep_as(known-12, Tricky-14)
cop(musician-21, is-16)
det(musician-21, an-17)
amod(musician-21, English-18)
nn(musician-21, trip-19)
nn(musician-21, hop-20)
root(ROOT-0, musician-21)
det(scene-26, the-23)
amod(scene-26, British-24)
nn(scene-26, music-25)
prep_in(musician-21, scene-26)
dep(scene-26, despite-28)
pcomp(despite-28, loathing-29)
dobj(loathing-29, the-30)
dobj(loathing-29, trip-32)
iobj(loathing-29, trip-32)
nn(tag-35, hop-33)
dobj(loathing-29, tag-35)
dep(trip-32, tag-35)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Tiber))
      (PRN (-LRB- -LRB-)
        (NP (NNP Latin) (NNP Tiberis))
        (, ,)
        (NP (NNP Italian) (NNP Tevere))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ third-longest) (NN river))
        (PP (IN in)
          (NP (NNP Italy))))
      (, ,)
      (S
        (VP
          (VP (VBG rising)
            (PP (IN in)
              (NP
                (NP (DT the) (JJ Apennine) (NNS mountains))
                (PP (IN of)
                  (NP (NNP Tuscany))))))
          (CC and)
          (VP (VBG flowing)
            (NP (CD 406) (NNS kilometres))
            (PP (IN through)
              (NP (NNP Umbria)
                (CC and)
                (NNP Lazio)))
            (PP (TO to)
              (NP (DT the) (NNP Tyrrhenian) (NNP Sea)))))))
    (. .)))

det(Tiber-2, The-1)
nsubj(river-13, Tiber-2)
nn(Tiberis-5, Latin-4)
appos(Tiber-2, Tiberis-5)
nn(Tevere-8, Italian-7)
dep(Tiberis-5, Tevere-8)
cop(river-13, is-10)
det(river-13, the-11)
amod(river-13, third-longest-12)
root(ROOT-0, river-13)
prep_in(river-13, Italy-15)
dep(river-13, rising-17)
det(mountains-21, the-19)
amod(mountains-21, Apennine-20)
prep_in(rising-17, mountains-21)
prep_of(mountains-21, Tuscany-23)
dep(river-13, flowing-25)
conj_and(rising-17, flowing-25)
num(kilometres-27, 406-26)
dobj(flowing-25, kilometres-27)
prep_through(flowing-25, Umbria-29)
prep_through(flowing-25, Lazio-31)
conj_and(Umbria-29, Lazio-31)
det(Sea-35, the-33)
nn(Sea-35, Tyrrhenian-34)
prep_to(flowing-25, Sea-35)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Torr))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN symbol))
          (: :)
          (NP (NNP Torr)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ non-SI) (NN unit))
        (PP (IN of)
          (NP
            (NP (NN pressure))
            (VP (VBN defined)
              (PP (IN as)
                (NP
                  (NP (CD 1) (NNP \/) (CD 760))
                  (PP (IN of)
                    (NP (DT an) (NN atmosphere))))))))))
    (. .)))

det(Torr-2, The-1)
nsubj(unit-11, Torr-2)
dep(Torr-2, symbol-4)
dep(symbol-4, Torr-6)
cop(unit-11, is-8)
det(unit-11, a-9)
amod(unit-11, non-SI-10)
root(ROOT-0, unit-11)
prep_of(unit-11, pressure-13)
partmod(pressure-13, defined-14)
num(\/-17, 1-16)
prep_as(defined-14, \/-17)
num(\/-17, 760-18)
det(atmosphere-21, an-20)
prep_of(\/-17, atmosphere-21)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS thermodynamics))
        (CC and)
        (NP (JJ physical) (NN chemistry))))
    (, ,)
    (NP (NNP Thermochemistry))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN study))
        (PP (IN of)
          (NP
            (NP (DT the) (NN heat))
            (VP (VBN evolved)
              (CC or)
              (VBN absorbed)
              (PP (IN in)
                (NP (NN chemical) (NNS reactions))))))))
    (. .)))

prep_in(study-10, thermodynamics-2)
amod(chemistry-5, physical-4)
conj_and(thermodynamics-2, chemistry-5)
prep_in(study-10, chemistry-5)
nsubj(study-10, Thermochemistry-7)
cop(study-10, is-8)
det(study-10, the-9)
root(ROOT-0, study-10)
det(heat-13, the-12)
prep_of(study-10, heat-13)
partmod(heat-13, evolved-14)
partmod(heat-13, absorbed-16)
conj_or(evolved-14, absorbed-16)
nn(reactions-19, chemical-18)
prep_in(evolved-14, reactions-19)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ Red-eyed) (NNP Tree) (NNP Frog))
      (PRN (-LRB- -LRB-)
        (NP (NNP Litoria) (NNS chloris))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN species))
        (PP (IN of)
          (NP
            (NP (NN tree) (NN frog) (NN native))
            (PP (TO to)
              (NP (JJ eastern) (NNP Australia)))))))
    (. .)))

det(Frog-4, The-1)
amod(Frog-4, Red-eyed-2)
nn(Frog-4, Tree-3)
nsubj(species-11, Frog-4)
nn(chloris-7, Litoria-6)
appos(Frog-4, chloris-7)
cop(species-11, is-9)
det(species-11, a-10)
root(ROOT-0, species-11)
nn(native-15, tree-13)
nn(native-15, frog-14)
prep_of(species-11, native-15)
amod(Australia-18, eastern-17)
prep_to(native-15, Australia-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Downy) (NN emerald))
      (PRN (-LRB- -LRB-)
        (NP (NNP Cordulia) (NNP aenea))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN species))
        (PP (IN of)
          (NP (NN dragonfly)))))
    (. .)))

det(emerald-3, The-1)
nn(emerald-3, Downy-2)
nsubj(species-10, emerald-3)
nn(aenea-6, Cordulia-5)
appos(emerald-3, aenea-6)
cop(species-10, is-8)
det(species-10, a-9)
root(ROOT-0, species-10)
prep_of(species-10, dragonfly-12)

(ROOT
  (S
    (NP (DT A) (NNP Dragonfly))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN type))
        (PP (IN of)
          (NP
            (NP (NN insect))
            (VP (VBG belonging)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN order) (NN Odonata))
                  (, ,)
                  (NP (DT the) (NN suborder) (NN Epiprocta))
                  (CC or)
                  (PRN (, ,)
                    (PP (IN in)
                      (NP (DT the) (JJ strict) (NN sense)))
                    (, ,))
                  (NP (DT the) (NN infraorder) (NN Anisoptera)))))))))
    (. .)))

det(Dragonfly-2, A-1)
nsubj(type-5, Dragonfly-2)
cop(type-5, is-3)
det(type-5, a-4)
root(ROOT-0, type-5)
prep_of(type-5, insect-7)
partmod(insect-7, belonging-8)
det(Odonata-12, the-10)
nn(Odonata-12, order-11)
prep_to(belonging-8, Odonata-12)
det(Epiprocta-16, the-14)
nn(Epiprocta-16, suborder-15)
prep_to(belonging-8, Epiprocta-16)
conj_or(Odonata-12, Epiprocta-16)
dep(Odonata-12, in-19)
det(sense-22, the-20)
amod(sense-22, strict-21)
pobj(in-19, sense-22)
det(Anisoptera-26, the-24)
nn(Anisoptera-26, infraorder-25)
prep_to(belonging-8, Anisoptera-26)
conj_or(Odonata-12, Anisoptera-26)

(ROOT
  (S
    (NP
      (NP (NNP Banksia) (NNP integrifolia))
      (, ,)
      (VP
        (ADVP (RB commonly))
        (VBN known)
        (PP (IN as)
          (NP (NNP Coast) (NNP Banksia))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN species))
        (PP (IN of)
          (NP (NN tree)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ grows)
              (PRT (RP along))
              (NP
                (NP (DT the) (JJ east) (NN coast))
                (PP (IN of)
                  (NP (NNP Australia)))))))))
    (. .)))

nn(integrifolia-2, Banksia-1)
nsubj(species-12, integrifolia-2)
advmod(known-5, commonly-4)
partmod(integrifolia-2, known-5)
nn(Banksia-8, Coast-7)
prep_as(known-5, Banksia-8)
cop(species-12, is-10)
det(species-12, a-11)
root(ROOT-0, species-12)
nsubj(grows-16, species-12)
prep_of(species-12, tree-14)
rcmod(species-12, grows-16)
prt(grows-16, along-17)
det(coast-20, the-18)
amod(coast-20, east-19)
dobj(grows-16, coast-20)
prep_of(coast-20, Australia-22)

(ROOT
  (S
    (NP
      (NP (NNP Aloe) (NNP vera))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT the) (JJ medicinal) (NN aloe))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN species))
        (PP (IN of)
          (NP (JJ succulent) (NN plant)))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB probably))
            (VP (VBN originated)
              (PP (IN in)
                (NP
                  (NP (NNP Northern) (NNP Africa))
                  (, ,)
                  (NP (DT the) (JJ Canary) (NNS islands))
                  (CC and)
                  (NP (NNP Cape) (NNP Verde)))))))))
    (. .)))

nn(vera-2, Aloe-1)
nsubj(species-13, vera-2)
advmod(known-5, also-4)
partmod(vera-2, known-5)
det(aloe-9, the-7)
amod(aloe-9, medicinal-8)
prep_as(known-5, aloe-9)
cop(species-13, is-11)
det(species-13, a-12)
root(ROOT-0, species-13)
nsubj(originated-19, species-13)
amod(plant-16, succulent-15)
prep_of(species-13, plant-16)
advmod(originated-19, probably-18)
rcmod(species-13, originated-19)
nn(Africa-22, Northern-21)
prep_in(originated-19, Africa-22)
det(islands-26, the-24)
amod(islands-26, Canary-25)
prep_in(originated-19, islands-26)
conj_and(Africa-22, islands-26)
nn(Verde-29, Cape-28)
prep_in(originated-19, Verde-29)
conj_and(Africa-22, Verde-29)

(ROOT
  (S
    (S
      (NP (NNP Arctostaphylos) (NNP uva-ursi))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN species))
          (PP (IN of)
            (NP (NNP Arctostaphylos))))))
    (, ,)
    (NP
      (NP (CD one))
      (PP (IN of)
        (NP (JJ several) (JJ related) (NNS species))))
    (VP (VBD referred)
      (PP (TO to))
      (PP (IN as)
        (NP (NN bearberry))))
    (. .)))

nn(uva-ursi-2, Arctostaphylos-1)
nsubj(species-5, uva-ursi-2)
cop(species-5, is-3)
det(species-5, a-4)
ccomp(referred-14, species-5)
prep_of(species-5, Arctostaphylos-7)
nsubj(referred-14, one-9)
amod(species-13, several-11)
amod(species-13, related-12)
prep_of(one-9, species-13)
root(ROOT-0, referred-14)
prep(referred-14, to-15)
prep_as(referred-14, bearberry-17)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ Domestic) (NN goat))
      (PRN (-LRB- -LRB-)
        (S
          (NP (NNP Capra) (NNS aegagrus))
          (VP (VBZ hircus)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subspecies))
        (PP (IN of)
          (NP
            (NP (NN goat))
            (VP (VBN domesticated)
              (PP (IN from)
                (NP
                  (NP (DT the) (JJ wild) (NN goat))
                  (PP (IN of)
                    (NP (JJ southwest) (NNP Asia)
                      (CC and)
                      (NNP Eastern) (NNP Europe))))))))))
    (. .)))

det(goat-3, The-1)
amod(goat-3, Domestic-2)
nsubj(subspecies-11, goat-3)
nn(aegagrus-6, Capra-5)
nsubj(hircus-7, aegagrus-6)
dep(goat-3, hircus-7)
cop(subspecies-11, is-9)
det(subspecies-11, a-10)
root(ROOT-0, subspecies-11)
prep_of(subspecies-11, goat-13)
partmod(goat-13, domesticated-14)
det(goat-18, the-16)
amod(goat-18, wild-17)
prep_from(domesticated-14, goat-18)
amod(Asia-21, southwest-20)
prep_of(goat-18, Asia-21)
nn(Europe-24, Eastern-23)
prep_of(goat-18, Europe-24)
conj_and(Asia-21, Europe-24)

(ROOT
  (S
    (NP (NNP Banksia) (NNP integrifolia))
    (VP (VBZ subsp))
    (. .)))

nn(integrifolia-2, Banksia-1)
nsubj(subsp-3, integrifolia-2)
root(ROOT-0, subsp-3)

(ROOT
  (S
    (NP (NN compar))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subspecies))
        (PP (IN of)
          (NP (NNP Banksia) (NNP integrifolia)))))
    (. .)))

nsubj(subspecies-4, compar-1)
cop(subspecies-4, is-2)
det(subspecies-4, a-3)
root(ROOT-0, subspecies-4)
nn(integrifolia-7, Banksia-6)
prep_of(subspecies-4, integrifolia-7)

(ROOT
  (S
    (NP (NNP Morelia) (NNP spilota) (NNP variegata))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (NNS subspecies))
          (PP (IN of)
            (NP (NN python))))
        (VP (VBN found)
          (PP (IN in)
            (NP (NNP New) (NNP Guinea)
              (CC and)
              (NNP Australia)))))
      (, ,)
      (VP
        (ADJP (JJR smaller))
        (PP (IN than)
          (NP (DT the) (NNP nominate) (NNP subspecies) (NNP Morelia) (NN spilota) (NN spilota))))
      (CC and)
      (VP (VBZ has)
        (NP (DT a)
          (ADJP (RBR more) (JJ restricted))
          (JJ geographic) (NN range))))
    (. .)))

nn(variegata-3, Morelia-1)
nn(variegata-3, spilota-2)
nsubjpass(found-9, variegata-3)
nsubj(smaller-16, variegata-3)
nsubj(has-25, variegata-3)
auxpass(found-9, is-4)
cop(found-9, is-4)
det(subspecies-6, a-5)
attr(found-9, subspecies-6)
prep_of(subspecies-6, python-8)
root(ROOT-0, found-9)
nn(Guinea-12, New-11)
prep_in(found-9, Guinea-12)
prep_in(found-9, Australia-14)
conj_and(Guinea-12, Australia-14)
conj_and(found-9, smaller-16)
det(spilota-23, the-18)
nn(spilota-23, nominate-19)
nn(spilota-23, subspecies-20)
nn(spilota-23, Morelia-21)
nn(spilota-23, spilota-22)
prep_than(smaller-16, spilota-23)
conj_and(found-9, has-25)
det(range-30, a-26)
advmod(restricted-28, more-27)
amod(range-30, restricted-28)
amod(range-30, geographic-29)
dobj(has-25, range-30)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Delmarva) (NN fox) (NN squirrel))
      (, ,)
      (NP (NNP Sciurus) (NN niger) (NNS cinereus))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT an) (VBN endangered) (NNS subspecies))
        (PP (IN of)
          (NP (DT the) (NN fox) (NN squirrel)))))
    (. .)))

det(squirrel-4, The-1)
nn(squirrel-4, Delmarva-2)
nn(squirrel-4, fox-3)
nsubj(subspecies-13, squirrel-4)
nn(cinereus-8, Sciurus-6)
nn(cinereus-8, niger-7)
appos(squirrel-4, cinereus-8)
cop(subspecies-13, is-10)
det(subspecies-13, an-11)
amod(subspecies-13, endangered-12)
root(ROOT-0, subspecies-13)
det(squirrel-17, the-15)
nn(squirrel-17, fox-16)
prep_of(subspecies-13, squirrel-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Vaquita))
      (PRN (-LRB- -LRB-)
        (NP (NNP Phocoena) (NNS sinus))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ rare) (NN species))
        (PP (IN of)
          (NP (NN porpoise)))))
    (. .)))

det(Vaquita-2, The-1)
nsubj(species-10, Vaquita-2)
nn(sinus-5, Phocoena-4)
appos(Vaquita-2, sinus-5)
cop(species-10, is-7)
det(species-10, a-8)
amod(species-10, rare-9)
root(ROOT-0, species-10)
prep_of(species-10, porpoise-12)

(ROOT
  (S
    (NP (JJ French) (NN poetry))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN category))
        (PP (IN of)
          (NP (JJ French) (NN literature)))))
    (. .)))

amod(poetry-2, French-1)
nsubj(category-5, poetry-2)
cop(category-5, is-3)
det(category-5, a-4)
root(ROOT-0, category-5)
amod(literature-8, French-7)
prep_of(category-5, literature-8)

(ROOT
  (S
    (NP (NNP Jeongol))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN category))
        (PP (IN of)
          (NP
            (NP (JJ elaborate) (NNS stews)
              (CC or)
              (NNS casseroles))
            (PP (IN in)
              (NP (JJ Korean) (NN cuisine)))))))
    (. .)))

nsubj(category-4, Jeongol-1)
cop(category-4, is-2)
det(category-4, a-3)
root(ROOT-0, category-4)
amod(stews-7, elaborate-6)
prep_of(category-4, stews-7)
prep_of(category-4, casseroles-9)
conj_or(stews-7, casseroles-9)
amod(cuisine-12, Korean-11)
prep_in(stews-7, cuisine-12)

(ROOT
  (S
    (NP (NNP Polyester))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN category))
        (PP (IN of)
          (NP
            (NP (NNS polymers))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP contain)
                  (NP
                    (NP (DT the)
                      (ADJP (JJ ester) (JJ functional))
                      (NN group))
                    (PP (IN in)
                      (NP (PRP$ their) (JJ main) (NN chain)))))))))))
    (. .)))

nsubj(category-4, Polyester-1)
cop(category-4, is-2)
det(category-4, a-3)
root(ROOT-0, category-4)
prep_of(category-4, polymers-6)
nsubj(contain-8, polymers-6)
rcmod(polymers-6, contain-8)
det(group-12, the-9)
amod(functional-11, ester-10)
amod(group-12, functional-11)
dobj(contain-8, group-12)
poss(chain-16, their-14)
amod(chain-16, main-15)
prep_in(group-12, chain-16)

(ROOT
  (S
    (NP (JJ Documentary) (NN film))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ broad) (NN category))
        (PP (IN of)
          (NP (JJ visual) (NNS expressions)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN based)
                (PP (IN on)
                  (NP (DT the) (NN attempt)))
                (, ,)
                (PP (IN in)
                  (NP
                    (NP (CD one) (NN fashion))
                    (CC or)
                    (NP (DT another))))
                (, ,)
                (S
                  (VP (TO to) ('' '')
                    (VP (VB document) ('' '')
                      (NP (NN reality)))))))))))
    (. .)))

amod(film-2, Documentary-1)
nsubj(category-6, film-2)
cop(category-6, is-3)
det(category-6, a-4)
amod(category-6, broad-5)
root(ROOT-0, category-6)
nsubjpass(based-12, category-6)
amod(expressions-9, visual-8)
prep_of(category-6, expressions-9)
auxpass(based-12, is-11)
rcmod(category-6, based-12)
det(attempt-15, the-14)
prep_on(based-12, attempt-15)
num(fashion-19, one-18)
prep_in(based-12, fashion-19)
prep_in(based-12, another-21)
conj_or(fashion-19, another-21)
aux(document-25, to-23)
xcomp(based-12, document-25)
dobj(document-25, reality-27)

(ROOT
  (S
    (NP (NNP Sigmurethra))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ taxonomic) (NN category))
        (PP (IN of)
          (NP
            (NP (JJ air-breathing) (NN land) (NNS snails)
              (CC and)
              (NNS slugs))
            (, ,)
            (NP (JJ terrestrial) (JJ pulmonate) (JJ gastropod) (NNS molluscs))))))
    (. .)))

nsubj(category-5, Sigmurethra-1)
cop(category-5, is-2)
det(category-5, a-3)
amod(category-5, taxonomic-4)
root(ROOT-0, category-5)
amod(snails-9, air-breathing-7)
nn(snails-9, land-8)
prep_of(category-5, snails-9)
prep_of(category-5, slugs-11)
conj_and(snails-9, slugs-11)
amod(molluscs-16, terrestrial-13)
amod(molluscs-16, pulmonate-14)
amod(molluscs-16, gastropod-15)
appos(snails-9, molluscs-16)

(ROOT
  (S
    (NP (NNP Travel) (NNP photography))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subcategory))
        (PP (IN of)
          (NP
            (NP (NN photography))
            (PP (VBG involving)
              (NP
                (NP (DT the) (NN documentation))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (DT an) (NN area) (POS 's))
                      (NN landscape))
                    (, ,)
                    (NP
                      (NP (NNS people))
                      (, ,)
                      (NP (NNS cultures))
                      (, ,)
                      (NP (NNS customs))
                      (CC and)
                      (NP (NN history)))))))))))
    (. .)))

nn(photography-2, Travel-1)
nsubj(subcategory-5, photography-2)
cop(subcategory-5, is-3)
det(subcategory-5, a-4)
root(ROOT-0, subcategory-5)
prep_of(subcategory-5, photography-7)
det(documentation-10, the-9)
prep_involving(photography-7, documentation-10)
det(area-13, an-12)
poss(landscape-15, area-13)
prep_of(documentation-10, landscape-15)
appos(landscape-15, people-17)
appos(landscape-15, cultures-19)
conj_and(people-17, cultures-19)
appos(landscape-15, customs-21)
conj_and(people-17, customs-21)
appos(landscape-15, history-23)
conj_and(people-17, history-23)

(ROOT
  (S
    (NP (NNP Cholinergic) (NNP urticaria))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN subcategory))
          (PP (IN of)
            (NP (JJ physical) (NN urticaria))))
        (PRN (-LRB- -LRB-)
          (NP (NN aka) (NNS hives))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN skin) (NN rash))
                (VP (VBN brought)
                  (PRT (RP on))
                  (PP (IN by)
                    (NP (DT a) (JJ hypersensitive) (NN reaction)))
                  (PP (TO to)
                    (NP (NN body) (NN heat))))))))))
    (. .)))

nn(urticaria-2, Cholinergic-1)
nsubj(subcategory-5, urticaria-2)
cop(subcategory-5, is-3)
det(subcategory-5, a-4)
root(ROOT-0, subcategory-5)
nsubj(rash-17, subcategory-5)
amod(urticaria-8, physical-7)
prep_of(subcategory-5, urticaria-8)
nn(hives-11, aka-10)
appos(subcategory-5, hives-11)
cop(rash-17, is-14)
det(rash-17, a-15)
nn(rash-17, skin-16)
rcmod(subcategory-5, rash-17)
partmod(rash-17, brought-18)
prt(brought-18, on-19)
det(reaction-23, a-21)
amod(reaction-23, hypersensitive-22)
agent(brought-18, reaction-23)
nn(heat-26, body-25)
prep_to(brought-18, heat-26)

(ROOT
  (S
    (NP (JJ Hydrodynamic) (NN technique))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subcategory))
        (PP (IN of)
          (NP (JJ electroanalytical) (NNS methods)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (JJ analyte) (NN solution))
            (VP (VBZ flows)
              (ADVP (JJ relative)
                (PP (TO to)
                  (NP (DT a) (VBG working) (NN electrode)))))))))
    (. .)))

amod(technique-2, Hydrodynamic-1)
nsubj(subcategory-5, technique-2)
cop(subcategory-5, is-3)
det(subcategory-5, a-4)
root(ROOT-0, subcategory-5)
amod(methods-8, electroanalytical-7)
prep_of(subcategory-5, methods-8)
rel(flows-14, which-10)
det(solution-13, the-11)
amod(solution-13, analyte-12)
nsubj(flows-14, solution-13)
rcmod(subcategory-5, flows-14)
advmod(flows-14, relative-15)
det(electrode-19, a-17)
amod(electrode-19, working-18)
prep_to(relative-15, electrode-19)

(ROOT
  (S
    (NP (NNP Venture) (NN capital))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ broad) (NN subcategory))
        (PP (IN of)
          (NP (JJ private) (NN equity)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ refers)
              (PP (TO to)
                (NP
                  (NP (NN equity) (NNS investments))
                  (VP (VBN made) (, ,)
                    (PP
                      (ADVP (RB typically))
                      (IN in)
                      (NP
                        (ADJP (RBR less) (JJ mature))
                        (NNS companies)))
                    (, ,)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN launch))
                        (, ,)
                        (NP (JJ early) (NN development))
                        (, ,)
                        (CC or)
                        (NP
                          (NP (NN expansion))
                          (PP (IN of)
                            (NP (DT a) (NN business))))))))))))))
    (. .)))

nn(capital-2, Venture-1)
nsubj(subcategory-6, capital-2)
cop(subcategory-6, is-3)
det(subcategory-6, a-4)
amod(subcategory-6, broad-5)
root(ROOT-0, subcategory-6)
nsubj(refers-11, subcategory-6)
amod(equity-9, private-8)
prep_of(subcategory-6, equity-9)
rcmod(subcategory-6, refers-11)
nn(investments-14, equity-13)
prep_to(refers-11, investments-14)
partmod(investments-14, made-15)
advmod(made-15, typically-17)
advmod(mature-20, less-19)
amod(companies-21, mature-20)
prep_in(made-15, companies-21)
det(launch-25, the-24)
prep_for(made-15, launch-25)
amod(development-28, early-27)
prep_for(made-15, development-28)
conj_or(launch-25, development-28)
prep_for(made-15, expansion-31)
conj_or(launch-25, expansion-31)
det(business-34, a-33)
prep_of(expansion-31, business-34)

(ROOT
  (S
    (NP (DT An) (NNP Intercom) (NN telephone))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN kind))
        (PP (IN of)
          (NP (NN telephone)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ controls)
              (NP (DT a) (NN school) (NN intercom) (NN system)))))))
    (. .)))

det(telephone-3, An-1)
nn(telephone-3, Intercom-2)
nsubj(kind-7, telephone-3)
cop(kind-7, is-4)
det(kind-7, a-5)
amod(kind-7, special-6)
root(ROOT-0, kind-7)
nsubj(controls-11, kind-7)
prep_of(kind-7, telephone-9)
rcmod(kind-7, controls-11)
det(system-15, a-12)
nn(system-15, school-13)
nn(system-15, intercom-14)
dobj(controls-11, system-15)

(ROOT
  (S
    (NP (DT A) (NNP Grace) (NN note))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN music) (NN notation))
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB denote)
                    (NP
                      (NP (JJ several) (NNS kinds))
                      (PP (IN of)
                        (NP (JJ musical) (NNS ornaments))))))))))))
    (. .)))

det(note-3, A-1)
nn(note-3, Grace-2)
nsubj(kind-6, note-3)
cop(kind-6, is-4)
det(kind-6, a-5)
root(ROOT-0, kind-6)
nn(notation-9, music-8)
prep_of(kind-6, notation-9)
xsubj(denote-12, notation-9)
partmod(notation-9, used-10)
aux(denote-12, to-11)
xcomp(used-10, denote-12)
amod(kinds-14, several-13)
dobj(denote-12, kinds-14)
amod(ornaments-17, musical-16)
prep_of(kinds-14, ornaments-17)

(ROOT
  (S
    (NP (NNP Fire) (NNP clay))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ specific) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN clay))
            (VP (VBN used)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN manufacture))
                  (PP (IN of)
                    (NP (NNS ceramics) (, ,) (RB especially) (NN fire) (NN brick))))))))))
    (. .)))

nn(clay-2, Fire-1)
nsubj(kind-6, clay-2)
cop(kind-6, is-3)
det(kind-6, a-4)
amod(kind-6, specific-5)
root(ROOT-0, kind-6)
prep_of(kind-6, clay-8)
partmod(clay-8, used-9)
det(manufacture-12, the-11)
prep_in(used-9, manufacture-12)
nn(brick-18, ceramics-14)
advmod(brick-18, especially-16)
nn(brick-18, fire-17)
prep_of(manufacture-12, brick-18)

(ROOT
  (S
    (NP (DT The) (NNP Ohio) (NN class))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN class))
        (PP (IN of)
          (NP
            (NP (JJ nuclear-powered) (NNS submarines))
            (VP (VBN used)
              (PP (IN by)
                (NP (DT the) (NNP United) (NNPS States) (NNP Navy))))))))
    (. .)))

det(class-3, The-1)
nn(class-3, Ohio-2)
nsubj(class-6, class-3)
cop(class-6, is-4)
det(class-6, a-5)
root(ROOT-0, class-6)
amod(submarines-9, nuclear-powered-8)
prep_of(class-6, submarines-9)
partmod(submarines-9, used-10)
det(Navy-15, the-12)
nn(Navy-15, United-13)
nn(Navy-15, States-14)
agent(used-10, Navy-15)

(ROOT
  (S
    (NP
      (NP (DT A) (NN Minicomputer))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN colloquially))
          (, ,)
          (NP (NNS mini)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN class))
        (PP (IN of)
          (NP (JJ multi-user) (NNS computers)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ lies)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ middle) (NN range))
                  (PP (IN of)
                    (NP (DT the) (NN computing) (NN spectrum)))))
              (, ,)
              (PP (IN in)
                (PP (IN between)
                  (NP
                    (NP (DT the) (JJS largest) (JJ multi-user) (NNS systems))
                    (PRN (-LRB- -LRB-)
                      (NP (NN mainframe) (NNS computers))
                      (-RRB- -RRB-))
                    (CC and)
                    (NP (DT the) (JJS smallest) (JJ single-user) (NNS systems))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (NNS microcomputers))
                        (CC or)
                        (NP (JJ personal) (NNS computers)))
                      (-RRB- -RRB-))))))))))
    (. .)))

det(Minicomputer-2, A-1)
nsubj(class-10, Minicomputer-2)
dep(Minicomputer-2, colloquially-4)
appos(colloquially-4, mini-6)
cop(class-10, is-8)
det(class-10, a-9)
root(ROOT-0, class-10)
nsubj(lies-15, class-10)
amod(computers-13, multi-user-12)
prep_of(class-10, computers-13)
rcmod(class-10, lies-15)
det(range-19, the-17)
amod(range-19, middle-18)
prep_in(lies-15, range-19)
det(spectrum-23, the-21)
nn(spectrum-23, computing-22)
prep_of(range-19, spectrum-23)
prep(lies-15, in-25)
pcomp(in-25, between-26)
det(systems-30, the-27)
amod(systems-30, largest-28)
amod(systems-30, multi-user-29)
prep_between(in-25, systems-30)
nn(computers-33, mainframe-32)
appos(systems-30, computers-33)
det(systems-39, the-36)
amod(systems-39, smallest-37)
amod(systems-39, single-user-38)
prep_between(in-25, systems-39)
conj_and(systems-30, systems-39)
dep(systems-30, microcomputers-41)
amod(computers-44, personal-43)
dep(systems-30, computers-44)
conj_or(microcomputers-41, computers-44)

(ROOT
  (S
    (NP (DT A) (NNP Sandwich) (JJ structured) (NN composite))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN class))
        (PP (IN of)
          (NP (JJ composite) (NNS materials)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN fabricated)
                (PP (IN by)
                  (S
                    (VP (VBG attaching)
                      (NP
                        (NP (CD two)
                          (ADJP (JJ thin)
                            (CC but)
                            (JJ stiff))
                          (NNS skins))
                        (PP (TO to)
                          (NP (DT a)
                            (ADJP (JJ lightweight)
                              (CC but)
                              (JJ thick))
                            (NN core)))))))))))))
    (. .)))

det(composite-4, A-1)
nn(composite-4, Sandwich-2)
amod(composite-4, structured-3)
nsubj(class-8, composite-4)
cop(class-8, is-5)
det(class-8, a-6)
amod(class-8, special-7)
root(ROOT-0, class-8)
nsubjpass(fabricated-14, class-8)
amod(materials-11, composite-10)
prep_of(class-8, materials-11)
auxpass(fabricated-14, is-13)
rcmod(class-8, fabricated-14)
agent(fabricated-14, attaching-16)
num(skins-21, two-17)
amod(skins-21, thin-18)
conj_but(thin-18, stiff-20)
amod(skins-21, stiff-20)
dobj(attaching-16, skins-21)
det(core-27, a-23)
amod(core-27, lightweight-24)
conj_but(lightweight-24, thick-26)
amod(core-27, thick-26)
prep_to(skins-21, core-27)

(ROOT
  (S
    (NP (DT A) (NNP Bio-MEMS))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ special) (NN class))
          (PP (IN of)
            (NP (JJ microelectromechanical) (NNS systems))))
        (PRN (-LRB- -LRB-)
          (NP (NNP MEMS))
          (-RRB- -RRB-))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (JJ biological) (NN matter))
            (VP (VBZ is)
              (VP (VBN manipulated)
                (S
                  (VP (TO to)
                    (VP (VB analyze)
                      (CC and)
                      (VB measure)
                      (NP (PRP$ its) (NN activity))
                      (PP (IN under)
                        (NP
                          (NP (DT any) (NN class))
                          (PP (IN of)
                            (NP (JJ scientific) (NN study))))))))))))))
    (. .)))

det(Bio-MEMS-2, A-1)
nsubj(class-6, Bio-MEMS-2)
cop(class-6, is-3)
det(class-6, a-4)
amod(class-6, special-5)
root(ROOT-0, class-6)
amod(systems-9, microelectromechanical-8)
prep_of(class-6, systems-9)
abbrev(class-6, MEMS-11)
advmod(manipulated-17, where-13)
amod(matter-15, biological-14)
nsubjpass(manipulated-17, matter-15)
xsubj(analyze-19, matter-15)
auxpass(manipulated-17, is-16)
rcmod(class-6, manipulated-17)
aux(analyze-19, to-18)
xcomp(manipulated-17, analyze-19)
xcomp(manipulated-17, measure-21)
conj_and(analyze-19, measure-21)
poss(activity-23, its-22)
dobj(analyze-19, activity-23)
det(class-26, any-25)
prep_under(analyze-19, class-26)
amod(study-29, scientific-28)
prep_of(class-26, study-29)

(ROOT
  (S
    (NP (DT A) (NNP Rearrangement) (NN reaction))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ broad) (NN class))
        (PP (IN of)
          (NP (JJ organic) (NNS reactions)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NN carbon) (NN skeleton))
              (PP (IN of)
                (NP (DT a) (NN molecule))))
            (VP (VBZ is)
              (VP (VBN rearranged)
                (S
                  (VP (TO to)
                    (VP (VB give)
                      (NP
                        (NP (DT a) (JJ structural) (NN isomer))
                        (PP (IN of)
                          (NP (DT the) (JJ original) (NN molecule)))))))))))))
    (. .)))

det(reaction-3, A-1)
nn(reaction-3, Rearrangement-2)
nsubj(class-7, reaction-3)
cop(class-7, is-4)
det(class-7, a-5)
amod(class-7, broad-6)
root(ROOT-0, class-7)
amod(reactions-10, organic-9)
prep_of(class-7, reactions-10)
advmod(rearranged-19, where-11)
det(skeleton-14, the-12)
nn(skeleton-14, carbon-13)
nsubjpass(rearranged-19, skeleton-14)
xsubj(give-21, skeleton-14)
det(molecule-17, a-16)
prep_of(skeleton-14, molecule-17)
auxpass(rearranged-19, is-18)
rcmod(class-7, rearranged-19)
aux(give-21, to-20)
xcomp(rearranged-19, give-21)
det(isomer-24, a-22)
amod(isomer-24, structural-23)
dobj(give-21, isomer-24)
det(molecule-28, the-26)
amod(molecule-28, original-27)
prep_of(isomer-24, molecule-28)

(ROOT
  (S
    (NP
      (NP (DT A) (NNP Breakout) (NN clone))
      (PRN (-LRB- -LRB-)
        (VP
          (ADVP (RB also))
          (VBN known)
          (PP (IN as)
            (NP (DT a) (JJ Breakout-style) (NN game))))
        (-RRB- -RRB-)))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (JJ sub-class)
            (PP (IN of)
              (NP (NNP the) ('' ''))))
          (JJ bat-and-ball) ('' '') (NN genre))
        (VP (VBN introduced)
          (PP (IN with)
            (NP
              (NP
                (NP (DT the) (NNP Magnavox) (NNP Odyssey) (POS 's))
                (NN Tennis))
              (CC and)
              (NP
                (NP (NNP Atari) (POS 's))
                (NNP Pong)))))))
    (. .)))

det(clone-3, A-1)
nn(clone-3, Breakout-2)
nsubj(genre-21, clone-3)
advmod(known-6, also-5)
dep(clone-3, known-6)
det(game-10, a-8)
amod(game-10, Breakout-style-9)
prep_as(known-6, game-10)
cop(genre-21, is-13)
det(genre-21, a-14)
amod(genre-21, sub-class-15)
prep_of(sub-class-15, the-17)
amod(genre-21, bat-and-ball-19)
root(ROOT-0, genre-21)
partmod(genre-21, introduced-22)
det(Odyssey-26, the-24)
nn(Odyssey-26, Magnavox-25)
poss(Tennis-28, Odyssey-26)
prep_with(introduced-22, Tennis-28)
poss(Pong-32, Atari-30)
prep_with(introduced-22, Pong-32)
conj_and(Tennis-28, Pong-32)

(ROOT
  (S
    (NP (NNP Texaphyrin))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS sub-class))
        (PP (IN of)
          (NP
            (NP (JJ heterocyclic) (NN macrocycle) (NNS molecules))
            (VP (VBN known)
              (PP (IN as)
                (NP (NNS porphyrins))))))))
    (. .)))

nsubj(sub-class-4, Texaphyrin-1)
cop(sub-class-4, is-2)
det(sub-class-4, a-3)
root(ROOT-0, sub-class-4)
amod(molecules-8, heterocyclic-6)
nn(molecules-8, macrocycle-7)
prep_of(sub-class-4, molecules-8)
partmod(molecules-8, known-9)
prep_as(known-9, porphyrins-11)

(ROOT
  (S
    (NP (NNP Pterygota))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subclass))
        (PP (IN of)
          (NP
            (NP (NNS insects))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ includes)
                  (NP (DT the) (JJ winged) (NNS insects)))))))))
    (. .)))

nsubj(subclass-4, Pterygota-1)
cop(subclass-4, is-2)
det(subclass-4, a-3)
root(ROOT-0, subclass-4)
prep_of(subclass-4, insects-6)
nsubj(includes-8, insects-6)
rcmod(insects-6, includes-8)
det(insects-11, the-9)
amod(insects-11, winged-10)
dobj(includes-8, insects-11)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ computational) (NN complexity) (NN theory)))
    (, ,)
    (NP
      (NP (NNP PLS))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ stands)
            (PP (IN for)
              (NP (NNP Polynomial) (NNP Local) (NNP Search))))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ syntactic) (NNS subclass))
        (PP (IN of)
          (NP (NNP TFNP)))))
    (. .)))

amod(theory-4, computational-2)
nn(theory-4, complexity-3)
prep_in(subclass-18, theory-4)
nsubj(stands-9, PLS-6)
nsubj(subclass-18, PLS-6)
rcmod(PLS-6, stands-9)
nn(Search-13, Polynomial-11)
nn(Search-13, Local-12)
prep_for(stands-9, Search-13)
cop(subclass-18, is-15)
det(subclass-18, a-16)
amod(subclass-18, syntactic-17)
root(ROOT-0, subclass-18)
prep_of(subclass-18, TFNP-20)

(ROOT
  (S
    (NP (NNP Actinistia))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subclass))
        (PP (IN of)
          (NP
            (ADJP (RB mostly) (VBN fossil))
            (JJ lobe-finned) (NNS fishes)))))
    (. .)))

nsubj(subclass-4, Actinistia-1)
cop(subclass-4, is-2)
det(subclass-4, a-3)
root(ROOT-0, subclass-4)
advmod(fossil-7, mostly-6)
amod(fishes-9, fossil-7)
amod(fishes-9, lobe-finned-8)
prep_of(subclass-4, fishes-9)

(ROOT
  (S
    (NP (NNP Agaricomycetidae))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subclass))
        (PP (IN of)
          (NP (NNS mushrooms))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN phylum))
          (PP (IN of)
            (NP (NNP Basidiomycota))))))
    (. .)))

nsubj(subclass-4, Agaricomycetidae-1)
cop(subclass-4, is-2)
det(subclass-4, a-3)
root(ROOT-0, subclass-4)
prep_of(subclass-4, mushrooms-6)
det(phylum-10, the-9)
prep_in(subclass-4, phylum-10)
prep_of(phylum-10, Basidiomycota-12)

(ROOT
  (S
    (NP (NNP Sordariomycetidae))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subclass))
        (PP (IN of)
          (NP (NN sac) (NNS fungi)))))
    (. .)))

nsubj(subclass-4, Sordariomycetidae-1)
cop(subclass-4, is-2)
det(subclass-4, a-3)
root(ROOT-0, subclass-4)
nn(fungi-7, sac-6)
prep_of(subclass-4, fungi-7)

(ROOT
  (S
    (NP (NNP Actinobacteridae))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NNS subclass))
        (PP (IN of)
          (NP (NNS bacteria))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN class))
          (PP (IN of)
            (NP (NNP Actinobacteria))))))
    (. .)))

nsubj(subclass-4, Actinobacteridae-1)
cop(subclass-4, is-2)
det(subclass-4, a-3)
root(ROOT-0, subclass-4)
prep_of(subclass-4, bacteria-6)
det(class-10, the-9)
prep_in(subclass-4, class-10)
prep_of(class-10, Actinobacteria-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP
      (NP (DT a) (NNP Mouse))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN plural) (NNS mouses))
          (, ,)
          (NP (NNS mice))
          (, ,)
          (CC or)
          (NP (NN mouse) (NNS devices)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ pointing) (NN device))
        (SBAR
          (WHNP
            (NP (WDT that) (NNS functions))
            (PP (IN by)
              (S
                (VP (VBG detecting)
                  (NP (JJ two-dimensional) (NN motion))))))
          (S
            (ADJP (JJ relative)
              (PP (TO to)
                (NP (PRP$ its) (JJ supporting) (NN surface))))))))
    (. .)))

prep_in(device-19, computing-2)
det(Mouse-5, a-4)
nsubj(device-19, Mouse-5)
nn(mouses-8, plural-7)
dep(Mouse-5, mouses-8)
dep(Mouse-5, mice-10)
conj_or(mouses-8, mice-10)
nn(devices-14, mouse-13)
dep(Mouse-5, devices-14)
conj_or(mouses-8, devices-14)
cop(device-19, is-16)
det(device-19, a-17)
amod(device-19, pointing-18)
root(ROOT-0, device-19)
dep(functions-21, device-19)
dep(relative-26, functions-21)
prepc_by(functions-21, detecting-23)
amod(motion-25, two-dimensional-24)
dobj(detecting-23, motion-25)
rcmod(device-19, relative-26)
poss(surface-30, its-28)
amod(surface-30, supporting-29)
prep_to(relative-26, surface-30)

(ROOT
  (S
    (NP (DT A) (NNP Republic))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (NN government)))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (S
              (NP
                (NP (DT the) (NN head))
                (PP (IN of)
                  (NP (NN state))))
              (VP (VBZ is) (RB not)
                (NP (DT a) (NN monarch))))
            (CC and)
            (S
              (NP
                (NP (DT the) (NNS people))
                (PRN (-LRB- -LRB-)
                  (CC or)
                  (ADVP (IN at) (JJS least))
                  (NP
                    (NP (DT a) (NN part))
                    (PP (IN of)
                      (NP (PRP$ its) (NNS people))))
                  (-RRB- -RRB-)))
              (VP (VBP have)
                (NP
                  (NP (DT an) (NN impact))
                  (PP (IN on)
                    (NP (PRP$ its) (NN government))))))))))
    (. .)))

det(Republic-2, A-1)
nsubj(form-5, Republic-2)
cop(form-5, is-3)
det(form-5, a-4)
root(ROOT-0, form-5)
prep_of(form-5, government-7)
rel(monarch-17, which-9)
det(head-11, the-10)
nsubj(monarch-17, head-11)
prep_of(head-11, state-13)
cop(monarch-17, is-14)
neg(monarch-17, not-15)
det(monarch-17, a-16)
rcmod(form-5, monarch-17)
det(people-20, the-19)
nsubj(have-31, people-20)
dep(part-26, or-22)
dep(part-26, at-23)
pobj(at-23, least-24)
det(part-26, a-25)
dep(people-20, part-26)
poss(people-29, its-28)
prep_of(part-26, people-29)
rcmod(form-5, have-31)
conj_and(monarch-17, have-31)
det(impact-33, an-32)
dobj(have-31, impact-33)
poss(government-36, its-35)
prep_on(impact-33, government-36)

(ROOT
  (S
    (NP (NNP Radio) (NN frequency) (NN radiation))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subset))
        (PP (IN of)
          (NP
            (NP (JJ electromagnetic) (NN radiation))
            (PP (IN with)
              (NP
                (NP (DT a) (NN wavelength))
                (PP (IN of)
                  (NP
                    (NP (CD 100km) (TO to) (CD 1mm))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (DT a) (NN frequency))
                            (PP (IN of)
                              (NP
                                (NP (CD 3) (NNS KHz))
                                (PP (TO to)
                                  (NP (CD 300) (NNS GHz)))))
                            (, ,)
                            (PRN (-LRB- -LRB-)
                              (NP (CD 1))
                              (-RRB- -RRB-)))
                          (ADVP (RB respectively)))))))))))))
    (. .)))

nn(radiation-3, Radio-1)
nn(radiation-3, frequency-2)
nsubj(subset-6, radiation-3)
cop(subset-6, is-4)
det(subset-6, a-5)
root(ROOT-0, subset-6)
amod(radiation-9, electromagnetic-8)
prep_of(subset-6, radiation-9)
det(wavelength-12, a-11)
prep_with(radiation-9, wavelength-12)
num(1mm-16, 100km-14)
dep(1mm-16, to-15)
prep_of(wavelength-12, 1mm-16)
nsubj(frequency-21, 1mm-16)
cop(frequency-21, is-19)
det(frequency-21, a-20)
rcmod(1mm-16, frequency-21)
num(KHz-24, 3-23)
prep_of(frequency-21, KHz-24)
num(GHz-27, 300-26)
prep_to(KHz-24, GHz-27)
appos(frequency-21, 1-30)
advmod(frequency-21, respectively-32)

(ROOT
  (S
    (S
      (NP (NNP Seinen) (NNP manga))
      (VP (VBZ is)
        (NP
          (NP
            (NP (DT a) (NN subset))
            (PP (IN of)
              (NP (NN manga)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADVP (RB generally))
                  (VP (VBN targeted)
                    (PP (IN at)
                      (NP (DT an) (CD 18))))))))
          (: --)
          (NP
            (NP (CD 30) (NN year))
            (NP (JJ old) (JJ male) (NN audience))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN audience))
      (VP (MD can)
        (VP (VB be)
          (ADJP
            (ADJP (JJR older))
            (PP (IN with)
              (NP
                (NP (DT some) (NNS comics))
                (VP (VBN aimed)
                  (PP (IN at)
                    (NP (NNS businessmen)))
                  (PP (RB well) (IN into)
                    (NP (PRP$ their) (NNS 40s))))))))))
    (. .)))

nn(manga-2, Seinen-1)
nsubj(subset-5, manga-2)
cop(subset-5, is-3)
det(subset-5, a-4)
root(ROOT-0, subset-5)
nsubjpass(targeted-11, subset-5)
prep_of(subset-5, manga-7)
auxpass(targeted-11, is-9)
advmod(targeted-11, generally-10)
rcmod(subset-5, targeted-11)
det(18-14, an-13)
prep_at(targeted-11, 18-14)
num(year-17, 30-16)
dep(subset-5, year-17)
amod(audience-20, old-18)
amod(audience-20, male-19)
dep(year-17, audience-20)
det(audience-24, the-23)
nsubj(older-27, audience-24)
aux(older-27, can-25)
cop(older-27, be-26)
conj_but(subset-5, older-27)
nsubjpass(targeted-11, older-27)
det(comics-30, some-29)
prep_with(older-27, comics-30)
partmod(comics-30, aimed-31)
prep_at(aimed-31, businessmen-33)
advmod(aimed-31, well-34)
poss(40s-37, their-36)
prep_into(aimed-31, 40s-37)

(ROOT
  (S
    (PP (IN In)
      (NP (NN computing)))
    (, ,)
    (NP
      (NP (DT a) (NNP Uniform) (NNP Resource) (NNP Locator))
      (PRN (-LRB- -LRB-)
        (NP (NNP URL))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN subset))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NNP Uniform) (NNP Resource) (NNP Identifier))
              (PRN (-LRB- -LRB-)
                (NP (NNP URI))
                (-RRB- -RRB-))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ specifies)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (DT an) (VBN identified) (NN resource))
                        (VP (VBZ is)
                          (ADJP (JJ available)))))))))
            (CC and)
            (NP
              (NP (DT the) (NN mechanism))
              (PP (IN for)
                (S
                  (VP (VBG retrieving)
                    (NP (PRP it))))))))))
    (. .)))

prep_in(subset-13, computing-2)
det(Locator-7, a-4)
nn(Locator-7, Uniform-5)
nn(Locator-7, Resource-6)
nsubj(subset-13, Locator-7)
abbrev(Locator-7, URL-9)
cop(subset-13, is-11)
det(subset-13, a-12)
root(ROOT-0, subset-13)
det(Identifier-18, the-15)
nn(Identifier-18, Uniform-16)
nn(Identifier-18, Resource-17)
prep_of(subset-13, Identifier-18)
nsubj(specifies-23, Identifier-18)
abbrev(Identifier-18, URI-20)
rcmod(Identifier-18, specifies-23)
advmod(available-29, where-24)
det(resource-27, an-25)
amod(resource-27, identified-26)
nsubj(available-29, resource-27)
cop(available-29, is-28)
advcl(specifies-23, available-29)
det(mechanism-32, the-31)
prep_of(subset-13, mechanism-32)
conj_and(Identifier-18, mechanism-32)
nsubj(specifies-23, mechanism-32)
prepc_for(mechanism-32, retrieving-34)
dobj(retrieving-34, it-35)

(ROOT
  (S
    (NP (NNP Adidas) (NNP Predator))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN range))
        (PP (IN of)
          (NP
            (NP (NN football) (NNS boots))
            (VP (VBN developed)
              (PP (IN by)
                (NP (JJ German) (NN sportswear) (NNS manufacturers) (NNS Adidas))))))))
    (. .)))

nn(Predator-2, Adidas-1)
nsubj(range-5, Predator-2)
cop(range-5, is-3)
det(range-5, a-4)
root(ROOT-0, range-5)
nn(boots-8, football-7)
prep_of(range-5, boots-8)
partmod(boots-8, developed-9)
amod(Adidas-14, German-11)
nn(Adidas-14, sportswear-12)
nn(Adidas-14, manufacturers-13)
agent(developed-9, Adidas-14)

(ROOT
  (S
    (NP (DT A) (NNP Dialect) (NN continuum))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN range))
        (PP (IN of)
          (NP
            (NP (NNS dialects))
            (VP (VBN spoken)
              (PP (IN across)
                (NP
                  (NP (DT a) (JJ large) (JJ geographical) (NN area))
                  (, ,)
                  (S
                    (S
                      (VP (VBG differing)
                        (NP
                          (NP (RB only) (RB slightly))
                          (PP (IN between)
                            (NP
                              (NP (NNS areas))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP are)
                                    (ADJP (RB geographically) (JJ close))))))))))
                    (, ,)
                    (CC and)
                    (ADVP (RB gradually))
                    (S
                      (VP (VBG decreasing)
                        (PP (IN in)
                          (NP (JJ mutual) (NN intelligibility)))
                        (SBAR (IN as)
                          (S
                            (NP (DT the) (NNS distances))
                            (VP (VBP become)
                              (ADJP (JJR greater)))))))))))))))
    (. .)))

det(continuum-3, A-1)
nn(continuum-3, Dialect-2)
nsubj(range-6, continuum-3)
cop(range-6, is-4)
det(range-6, a-5)
root(ROOT-0, range-6)
prep_of(range-6, dialects-8)
partmod(dialects-8, spoken-9)
det(area-14, a-11)
amod(area-14, large-12)
amod(area-14, geographical-13)
prep_across(spoken-9, area-14)
dep(area-14, differing-16)
advmod(slightly-18, only-17)
dobj(differing-16, slightly-18)
prep_between(slightly-18, areas-20)
nsubj(close-24, areas-20)
cop(close-24, are-22)
advmod(close-24, geographically-23)
rcmod(areas-20, close-24)
dep(area-14, gradually-27)
advmod(differing-16, gradually-27)
conj_and(differing-16, gradually-27)
dep(area-14, decreasing-28)
conj_and(differing-16, decreasing-28)
amod(intelligibility-31, mutual-30)
prep_in(decreasing-28, intelligibility-31)
mark(greater-36, as-32)
det(distances-34, the-33)
nsubj(greater-36, distances-34)
cop(greater-36, become-35)
advcl(decreasing-28, greater-36)

(ROOT
  (S
    (NP (JJ Conflict) (NN resolution))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN range))
        (PP (IN of)
          (NP
            (NP (NNS methods))
            (PP (IN for)
              (S
                (VP (VBG alleviating)
                  (CC or)
                  (VBG eliminating)
                  (NP
                    (NP (NNS sources))
                    (PP (IN of)
                      (NP (NN conflict)))))))))))
    (. .)))

amod(resolution-2, Conflict-1)
nsubj(range-5, resolution-2)
cop(range-5, is-3)
det(range-5, a-4)
root(ROOT-0, range-5)
prep_of(range-5, methods-7)
prepc_for(methods-7, alleviating-9)
prepc_for(methods-7, eliminating-11)
conj_or(alleviating-9, eliminating-11)
dobj(alleviating-9, sources-12)
prep_of(sources-12, conflict-14)

(ROOT
  (S
    (NP (NNP Contact) (NNP juggling))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN form))
        (PP (IN of)
          (NP (NN object) (NN manipulation)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ focuses)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN movement))
                  (PP (IN of)
                    (NP
                      (NP (NNS objects))
                      (PP (JJ such) (IN as)
                        (NP
                          (NP (NNS balls))
                          (PP (IN in)
                            (NP (JJ permanent) (NN contact)))))))))
              (PP (IN with)
                (NP (DT the) (NN body))))))))
    (. .)))

nn(juggling-2, Contact-1)
nsubj(form-5, juggling-2)
cop(form-5, is-3)
det(form-5, a-4)
root(ROOT-0, form-5)
nsubj(focuses-10, form-5)
nn(manipulation-8, object-7)
prep_of(form-5, manipulation-8)
rcmod(form-5, focuses-10)
det(movement-13, the-12)
prep_on(focuses-10, movement-13)
prep_of(movement-13, objects-15)
prep_such_as(objects-15, balls-18)
amod(contact-21, permanent-20)
prep_in(balls-18, contact-21)
det(body-24, the-23)
prep_with(focuses-10, body-24)

(ROOT
  (S
    (NP (NNP Advertising) (NN research))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN specialized) (NN form))
        (PP (IN of)
          (NP (NN research)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ works)
              (S
                (VP (TO to)
                  (VP (VB improve)
                    (NP
                      (NP (DT the) (NN effectiveness)
                        (CC and)
                        (NN efficiency))
                      (PP (IN of)
                        (NP (NN advertising))))))))))))
    (. .)))

nn(research-2, Advertising-1)
nsubj(form-6, research-2)
cop(form-6, is-3)
det(form-6, a-4)
amod(form-6, specialized-5)
root(ROOT-0, form-6)
nsubj(works-10, form-6)
prep_of(form-6, research-8)
rcmod(form-6, works-10)
aux(improve-12, to-11)
xcomp(works-10, improve-12)
det(effectiveness-14, the-13)
dobj(improve-12, effectiveness-14)
dobj(improve-12, efficiency-16)
conj_and(effectiveness-14, efficiency-16)
prep_of(effectiveness-14, advertising-18)

(ROOT
  (S
    (NP (JJ Multiple) (NNS morbidities))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ means)
              (NP (JJ co-occurring) (NNS diseases)))))))
    (. .)))

amod(morbidities-2, Multiple-1)
nsubj(term-5, morbidities-2)
cop(term-5, is-3)
det(term-5, a-4)
root(ROOT-0, term-5)
nsubj(means-7, term-5)
rcmod(term-5, means-7)
amod(diseases-9, co-occurring-8)
dobj(means-7, diseases-9)

(ROOT
  (S
    (NP (NNP Personalty))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN taxation) (NN term))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ means)
              (NP (JJ personal) (NN property)))))))
    (. .)))

nsubj(term-5, Personalty-1)
cop(term-5, is-2)
det(term-5, a-3)
nn(term-5, taxation-4)
root(ROOT-0, term-5)
nsubj(means-7, term-5)
rcmod(term-5, means-7)
amod(property-9, personal-8)
dobj(means-7, property-9)

(ROOT
  (S
    (NP (JJ Secondary) (NN school))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP (DT an) (JJ educational) (NN institution))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP
                      (NP (DT the) (JJ final) (NN stage))
                      (PP (IN of)
                        (NP (JJ compulsory) (NN schooling)))
                      (, ,)
                      (VP (VBN known)
                        (PP (IN as)
                          (NP (JJ secondary) (NN education))))
                      (, ,))
                    (VP (VBZ takes)
                      (NP (NN place)))))))))))
    (. .)))

amod(school-2, Secondary-1)
nsubj(term-5, school-2)
cop(term-5, is-3)
det(term-5, a-4)
root(ROOT-0, term-5)
xsubj(describe-8, term-5)
partmod(term-5, used-6)
aux(describe-8, to-7)
xcomp(used-6, describe-8)
det(institution-11, an-9)
amod(institution-11, educational-10)
dobj(describe-8, institution-11)
advmod(takes-25, where-12)
det(stage-15, the-13)
amod(stage-15, final-14)
nsubj(takes-25, stage-15)
amod(schooling-18, compulsory-17)
prep_of(stage-15, schooling-18)
partmod(stage-15, known-20)
amod(education-23, secondary-22)
prep_as(known-20, education-23)
advcl(describe-8, takes-25)
dobj(takes-25, place-26)

(ROOT
  (S
    (NP (NNP World) (NNP Bank))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN term))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (DT an) (JJ international) (JJ financial) (NN institution))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ provides)
                        (NP (JJ leveraged) (NNS loans))
                        (PP (TO to)
                          (NP
                            (NP (VBG developing) (NNS countries))
                            (PP (IN for)
                              (NP (NN capital) (NNS programs)))))))))))))))
    (. .)))

nn(Bank-2, World-1)
nsubj(term-5, Bank-2)
cop(term-5, is-3)
det(term-5, a-4)
root(ROOT-0, term-5)
xsubj(describe-8, term-5)
partmod(term-5, used-6)
aux(describe-8, to-7)
xcomp(used-6, describe-8)
det(institution-12, an-9)
amod(institution-12, international-10)
amod(institution-12, financial-11)
dobj(describe-8, institution-12)
nsubj(provides-14, institution-12)
rcmod(institution-12, provides-14)
amod(loans-16, leveraged-15)
dobj(provides-14, loans-16)
amod(countries-19, developing-18)
prep_to(provides-14, countries-19)
nn(programs-22, capital-21)
prep_for(countries-19, programs-22)

(ROOT
  (S
    (NP (NN Lipstick) (NN lesbian))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN slang) (NN term))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (NP
                  (NP (NN lesbian)
                    (CC and)
                    (NN bisexual) (NNS women))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VB exhibit)
                        (NP (JJ feminine) (NN gender) (NNS attributes))))))))))))
    (. .)))

nn(lesbian-2, Lipstick-1)
nsubj(term-6, lesbian-2)
cop(term-6, is-3)
det(term-6, a-4)
nn(term-6, slang-5)
root(ROOT-0, term-6)
xsubj(describe-9, term-6)
partmod(term-6, used-7)
aux(describe-9, to-8)
xcomp(used-7, describe-9)
nn(women-13, lesbian-10)
conj_and(lesbian-10, bisexual-12)
nn(women-13, bisexual-12)
dobj(describe-9, women-13)
nsubj(exhibit-15, women-13)
rcmod(women-13, exhibit-15)
amod(attributes-18, feminine-16)
nn(attributes-18, gender-17)
dobj(exhibit-15, attributes-18)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ amateur) (NN radio)
        (CC and)
        (NN computing)))
    (, ,)
    (NP (NNP Boat) (NNP anchor))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN slang) (NN term))
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB describe)
                (S
                  (NP
                    (NP (NN something))
                    (ADJP
                      (ADJP (JJ obsolete))
                      (, ,)
                      (ADJP (JJ useless))
                      (, ,)
                      (CC and)
                      (ADJP (JJ cumbersome))
                      (: -)))
                  (ADJP (JJ so-called))))))
          (SBAR (IN because)
            (S
              (ADVP (RB metaphorically))
              (NP (PRP$ its)
                (ADJP (RB only) (JJ productive))
                (NN use))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN thrown)
                        (PP (IN into)
                          (NP
                            (NP (DT the) (NN water))
                            (PP (IN as)
                              (NP (DT a) (NN boat) (NN mooring)))))))))))))))
    (. .)))

amod(radio-3, amateur-2)
prep_in(term-12, radio-3)
conj_and(radio-3, computing-5)
prep_in(term-12, computing-5)
nn(anchor-8, Boat-7)
nsubj(term-12, anchor-8)
cop(term-12, is-9)
det(term-12, a-10)
nn(term-12, slang-11)
root(ROOT-0, term-12)
xsubj(describe-15, term-12)
partmod(term-12, used-13)
aux(describe-15, to-14)
xcomp(used-13, describe-15)
nsubj(so-called-24, something-16)
amod(something-16, obsolete-17)
amod(something-16, useless-19)
conj_and(obsolete-17, useless-19)
amod(something-16, cumbersome-22)
conj_and(obsolete-17, cumbersome-22)
xcomp(describe-15, so-called-24)
mark(is-31, because-25)
advmod(is-31, metaphorically-26)
poss(use-30, its-27)
advmod(productive-29, only-28)
amod(use-30, productive-29)
nsubj(is-31, use-30)
xsubj(thrown-34, use-30)
advcl(used-13, is-31)
aux(thrown-34, to-32)
auxpass(thrown-34, be-33)
xcomp(is-31, thrown-34)
det(water-37, the-36)
prep_into(thrown-34, water-37)
det(mooring-41, a-39)
nn(mooring-41, boat-40)
prep_as(water-37, mooring-41)

(ROOT
  (S
    (NP (DT The) (NNP Sardinian) (NNP Lynx))
    (VP (VBZ is)
      (NP
        (NP (DT an)
          (ADJP (JJ extinct))
          (NNS subspecies))
        (PP (IN of)
          (NP (DT the) (NNP Eurasian) (NNP Lynx)))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB once))
            (VP (MD could)
              (VP (VB be)
                (VP (VBN found)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (JJ Italian) (NN island))
                      (PP (IN of)
                        (NP (NNP Sardinia))))))))))))
    (. .)))

det(Lynx-3, The-1)
nn(Lynx-3, Sardinian-2)
nsubj(subspecies-7, Lynx-3)
cop(subspecies-7, is-4)
det(subspecies-7, an-5)
amod(subspecies-7, extinct-6)
root(ROOT-0, subspecies-7)
nsubjpass(found-16, subspecies-7)
det(Lynx-11, the-9)
nn(Lynx-11, Eurasian-10)
prep_of(subspecies-7, Lynx-11)
advmod(found-16, once-13)
aux(found-16, could-14)
auxpass(found-16, be-15)
rcmod(subspecies-7, found-16)
det(island-20, the-18)
amod(island-20, Italian-19)
prep_on(found-16, island-20)
prep_of(island-20, Sardinia-22)

(ROOT
  (S
    (NP (DT A) (NNP Type) (NNP Ia) (NN supernova))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sub-category))
        (PP (IN of)
          (NP (JJ cataclysmic) (JJ variable) (NNS stars)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ results)
              (PP (IN from)
                (NP
                  (NP (DT the) (JJ violent) (NN explosion))
                  (PP (IN of)
                    (NP (DT a) (JJ white) (NN dwarf) (NN star))))))))))
    (. .)))

det(supernova-4, A-1)
nn(supernova-4, Type-2)
nn(supernova-4, Ia-3)
nsubj(sub-category-7, supernova-4)
cop(sub-category-7, is-5)
det(sub-category-7, a-6)
root(ROOT-0, sub-category-7)
nsubj(results-13, sub-category-7)
amod(stars-11, cataclysmic-9)
amod(stars-11, variable-10)
prep_of(sub-category-7, stars-11)
rcmod(sub-category-7, results-13)
det(explosion-17, the-15)
amod(explosion-17, violent-16)
prep_from(results-13, explosion-17)
det(star-22, a-19)
amod(star-22, white-20)
nn(star-22, dwarf-21)
prep_of(explosion-17, star-22)

(ROOT
  (S
    (NP (NNP Landscape) (NN assessment))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sub-category))
        (PP (IN of)
          (NP
            (NP (JJ environmental) (NN assessment))
            (PRN (-LRB- -LRB-)
              (NP
                (QP (CC or)
                  (CD EIA)))
              (-RRB- -RRB-))
            (VP (VBN concerned)
              (PP (IN with)
                (NP
                  (NP (NN quality) (NN assessment))
                  (PP (IN of)
                    (NP (DT the) (NN landscape))))))))))
    (. .)))

nn(assessment-2, Landscape-1)
nsubj(sub-category-5, assessment-2)
cop(sub-category-5, is-3)
det(sub-category-5, a-4)
root(ROOT-0, sub-category-5)
amod(assessment-8, environmental-7)
prep_of(sub-category-5, assessment-8)
cc(EIA-11, or-10)
dep(assessment-8, EIA-11)
partmod(assessment-8, concerned-13)
nn(assessment-16, quality-15)
prep_with(concerned-13, assessment-16)
det(landscape-19, the-18)
prep_of(assessment-16, landscape-19)

(ROOT
  (S
    (NP (NN Horror-of-personality))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ specific) (NN sub-category))
        (PP (IN of)
          (NP (NN horror)))))
    (. .)))

nsubj(sub-category-5, Horror-of-personality-1)
cop(sub-category-5, is-2)
det(sub-category-5, a-3)
amod(sub-category-5, specific-4)
root(ROOT-0, sub-category-5)
prep_of(sub-category-5, horror-7)

(ROOT
  (S
    (NP (NNP Line) (NNP infantry))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sort))
        (PP (IN of)
          (NP (NN infantry)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBN composed)
              (NP
                (NP (DT the) (NN basis))
                (PP (IN of)
                  (NP (NN land) (NNS armies))))
              (PP (IN since)
                (NP
                  (NP (DT the) (NN beginning))
                  (PP (IN of)
                    (NP (DT the) (NNP XVIII) (NN century)))))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT the) (NNP XIX) (NN century))))))))))
    (. .)))

nn(infantry-2, Line-1)
nsubj(sort-5, infantry-2)
cop(sort-5, is-3)
det(sort-5, a-4)
root(ROOT-0, sort-5)
nsubj(composed-9, sort-5)
prep_of(sort-5, infantry-7)
rcmod(sort-5, composed-9)
det(basis-11, the-10)
dobj(composed-9, basis-11)
nn(armies-14, land-13)
prep_of(basis-11, armies-14)
det(beginning-17, the-16)
prep_since(composed-9, beginning-17)
det(century-21, the-19)
nn(century-21, XVIII-20)
prep_of(beginning-17, century-21)
det(middle-24, the-23)
prep_to(composed-9, middle-24)
det(century-28, the-26)
nn(century-28, XIX-27)
prep_of(middle-24, century-28)

(ROOT
  (S
    (NP (DT A) (NNP Mudpot) (, ,) (NN mud) (NN pool)
      (CC or)
      (NN paint) (NN pot))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sort))
        (PP (IN of)
          (NP (JJ hot) (NN spring)
            (CC or)
            (NN fumarole)))
        (VP (VBG consisting)
          (PP (IN of)
            (NP
              (NP (DT a) (NN pool))
              (PP (IN of)
                (S
                  (VP
                    (ADVP (RB usually))
                    (VBG bubbling)
                    (NP (NN mud))))))))))
    (. .)))

det(pool-5, A-1)
nn(pool-5, Mudpot-2)
dep(pool-5, mud-4)
nsubj(sort-11, pool-5)
nn(pot-8, paint-7)
conj_or(pool-5, pot-8)
nsubj(sort-11, pot-8)
cop(sort-11, is-9)
det(sort-11, a-10)
root(ROOT-0, sort-11)
amod(spring-14, hot-13)
prep_of(sort-11, spring-14)
prep_of(sort-11, fumarole-16)
conj_or(spring-14, fumarole-16)
partmod(sort-11, consisting-17)
det(pool-20, a-19)
prep_of(consisting-17, pool-20)
advmod(bubbling-23, usually-22)
prepc_of(pool-20, bubbling-23)
dobj(bubbling-23, mud-24)

(ROOT
  (S
    (NP (NNP Lempo))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sort))
        (PP (IN of)
          (NP
            (NP (NN fiend))
            (PP (IN from)
              (NP (JJ Finnish) (NN folklore)
                (CC and)
                (NN mythology)))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ appears)
                  (PP (IN in)
                    (NP (DT the) (NNP Kalevala))))))))))
    (. .)))

nsubj(sort-4, Lempo-1)
cop(sort-4, is-2)
det(sort-4, a-3)
root(ROOT-0, sort-4)
prep_of(sort-4, fiend-6)
nsubj(appears-14, fiend-6)
amod(folklore-9, Finnish-8)
prep_from(fiend-6, folklore-9)
prep_from(fiend-6, mythology-11)
conj_and(folklore-9, mythology-11)
rcmod(fiend-6, appears-14)
det(Kalevala-17, the-16)
prep_in(appears-14, Kalevala-17)

(ROOT
  (S
    (NP (DT A) (NNP Nachzehrer))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sort))
        (PP (IN of)
          (NP (JJ German) (NN vampire)))))
    (. .)))

det(Nachzehrer-2, A-1)
nsubj(sort-5, Nachzehrer-2)
cop(sort-5, is-3)
det(sort-5, a-4)
root(ROOT-0, sort-5)
amod(vampire-8, German-7)
prep_of(sort-5, vampire-8)

(ROOT
  (S
    (NP (DT A) (NNP Tirthankar))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN sort))
        (PP (IN of)
          (NP
            (NP (NN arhat))
            (, ,)
            (NP
              (NP (DT a) (NN person))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ has)
                    (ADVP (RB totally))
                    (VP (VBN conquered)
                      (NP
                        (NP (NN base) (NNS sensibilities))
                        (PP (JJ such) (IN as)
                          (NP
                            (NP (NN anger))
                            (, ,)
                            (NP (NN pride) (, ,) (NN deceit) (, ,)
                              (CC or)
                              (NN desire))))))))))))))
    (. .)))

det(Tirthankar-2, A-1)
nsubj(sort-6, Tirthankar-2)
cop(sort-6, is-3)
det(sort-6, a-4)
amod(sort-6, special-5)
root(ROOT-0, sort-6)
prep_of(sort-6, arhat-8)
det(person-11, a-10)
appos(arhat-8, person-11)
nsubj(conquered-15, person-11)
aux(conquered-15, has-13)
advmod(conquered-15, totally-14)
rcmod(person-11, conquered-15)
nn(sensibilities-17, base-16)
dobj(conquered-15, sensibilities-17)
prep_such_as(sensibilities-17, anger-20)
appos(anger-20, pride-22)
appos(anger-20, deceit-24)
conj_or(pride-22, deceit-24)
appos(anger-20, desire-27)
conj_or(pride-22, desire-27)

(ROOT
  (S
    (NP (NNP Grinded) (NNP Tea))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN sort))
        (PP (IN of)
          (NP
            (NP (NNP Hakka) (NN drinking))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP (RB very) (JJ traditional)
                    (PP (IN among)
                      (NP
                        (NP (NNP Hakkas))
                        (PP (IN in)
                          (NP (NNP Mainland) (NNP China)))))))))))))
    (. .)))

nn(Tea-2, Grinded-1)
nsubj(sort-6, Tea-2)
cop(sort-6, is-3)
det(sort-6, a-4)
amod(sort-6, special-5)
root(ROOT-0, sort-6)
nn(drinking-9, Hakka-8)
prep_of(sort-6, drinking-9)
nsubj(traditional-14, drinking-9)
cop(traditional-14, is-12)
advmod(traditional-14, very-13)
rcmod(drinking-9, traditional-14)
prep_among(traditional-14, Hakkas-16)
nn(China-19, Mainland-18)
prep_in(Hakkas-16, China-19)

(ROOT
  (S
    (PP (IN In)
      (NP (NNS mathematics)))
    (, ,)
    (NP (DT a) (NNP Schottky) (NN group))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ special) (NN sort))
        (PP (IN of)
          (NP
            (NP (JJ Kleinian) (NN group))
            (, ,)
            (VP (VBN named)
              (PP (IN after)
                (NP (NNP Friedrich) (NNP Schottky))))))))
    (. .)))

prep_in(sort-10, mathematics-2)
det(group-6, a-4)
nn(group-6, Schottky-5)
nsubj(sort-10, group-6)
cop(sort-10, is-7)
det(sort-10, a-8)
amod(sort-10, special-9)
root(ROOT-0, sort-10)
amod(group-13, Kleinian-12)
prep_of(sort-10, group-13)
partmod(group-13, named-15)
nn(Schottky-18, Friedrich-17)
prep_after(named-15, Schottky-18)

(ROOT
  (S
    (NP (NN Koran) (NN recitation))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ important) (NN kind))
        (PP (IN of)
          (NP (JJ unaccompanied) (JJ religious) (NN performance)))))
    (. .)))

nn(recitation-2, Koran-1)
nsubj(kind-6, recitation-2)
cop(kind-6, is-3)
det(kind-6, an-4)
amod(kind-6, important-5)
root(ROOT-0, kind-6)
amod(performance-10, unaccompanied-8)
amod(performance-10, religious-9)
prep_of(kind-6, performance-10)

(ROOT
  (S
    (NP (DT A) (NNP Serializer))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ important) (NN kind))
        (PP (IN of)
          (NP
            (NP (NN actor))
            (VP (VBN defined)
              (PP (IN by)
                (NP (DT the) (NN property)))
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADVP (RB continually))
                    (ADJP (JJ available)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN arrival))
                          (PP (IN of)
                            (NP (JJ new) (NNS messages))))))))))))))
    (. .)))

det(Serializer-2, A-1)
nsubj(kind-6, Serializer-2)
cop(kind-6, is-3)
det(kind-6, an-4)
amod(kind-6, important-5)
root(ROOT-0, kind-6)
prep_of(kind-6, actor-8)
partmod(actor-8, defined-9)
det(property-12, the-11)
agent(defined-9, property-12)
complm(available-17, that-13)
nsubj(available-17, it-14)
cop(available-17, is-15)
advmod(available-17, continually-16)
ccomp(defined-9, available-17)
det(arrival-20, the-19)
prep_to(available-17, arrival-20)
amod(messages-23, new-22)
prep_of(arrival-20, messages-23)

(ROOT
  (S
    (NP (NNP RAM))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ important))
          (NN kind))
        (PP (IN of)
          (NP (NN memory)))))
    (. .)))

nsubj(kind-6, RAM-1)
cop(kind-6, is-2)
det(kind-6, the-3)
advmod(important-5, most-4)
amod(kind-6, important-5)
root(ROOT-0, kind-6)
prep_of(kind-6, memory-8)

(ROOT
  (S
    (NP (NNP Samba))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ important))
          (NN kind))
        (PP (IN of)
          (NP
            (NP (JJ Brazilian) (NN music))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD had)
                  (NP
                    (NP (PRP$ its) (NN orign))
                    (PP (IN in)
                      (NP (NNP Africa)))))))))))
    (. .)))

nsubj(kind-6, Samba-1)
cop(kind-6, is-2)
det(kind-6, the-3)
advmod(important-5, most-4)
amod(kind-6, important-5)
root(ROOT-0, kind-6)
amod(music-9, Brazilian-8)
prep_of(kind-6, music-9)
nsubj(had-12, music-9)
rcmod(music-9, had-12)
poss(orign-14, its-13)
dobj(had-12, orign-14)
prep_in(orign-14, Africa-16)

(ROOT
  (S
    (S
      (NP (NNP Infectious) (NNP pneumonia))
      (VP (VBZ is)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ important))
            (NN kind))
          (PP (IN of)
            (NP (NN pneumonia))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP (JJ other) (NNS types))))
    (. .)))

nn(pneumonia-2, Infectious-1)
nsubj(kind-7, pneumonia-2)
cop(kind-7, is-3)
det(kind-7, the-4)
advmod(important-6, most-5)
amod(kind-7, important-6)
root(ROOT-0, kind-7)
prep_of(kind-7, pneumonia-9)
expl(are-13, there-12)
conj_but(kind-7, are-13)
amod(types-15, other-14)
nsubj(are-13, types-15)

